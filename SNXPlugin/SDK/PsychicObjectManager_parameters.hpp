#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicObjectManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PsychicObjectSizeParameter_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "UniqueObjectContainerEnemyInfo_structs.hpp"
#include "PsychicObjectID_structs.hpp"
#include "Enum_ui_pk_weight_gauge_button_structs.hpp"
#include "PsychicObjectBulletData_structs.hpp"
#include "UniqueObjectCommonParameter_structs.hpp"
#include "PsychicObjectSoundData2_structs.hpp"
#include "UniqueObjectElectricPoleEffectParameter_structs.hpp"
#include "PsychicGrabPosData_structs.hpp"
#include "PsychicGrabParameterSizeData_structs.hpp"
#include "PsychicGrabParameterData_structs.hpp"
#include "PsychicGrabButtonType_structs.hpp"
#include "PsychicGrabMovementSizeData_structs.hpp"
#include "PsychicObjectAttackParameterData_structs.hpp"
#include "PsychicGrabMovementData_structs.hpp"
#include "PsychicObjectData_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "PsychicObjectCommonParameter_structs.hpp"
#include "UniqueObjectCameraParameter_structs.hpp"
#include "PsychicObjectPhysicParameter_structs.hpp"
#include "SPsychicCaptureMaterial_structs.hpp"
#include "BrainFieldPsyObjData_structs.hpp"


namespace SDK::Params
{

// Function PsychicObjectManager.PsychicObjectManager_C.EnemyInterceptableThrow__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature final
{
public:
	class AActor*                                 Psy_obj_actor_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature) == 0x000008, "Wrong alignment on PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature");
static_assert(sizeof(PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature) == 0x000010, "Wrong size on PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature");
static_assert(offsetof(PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature, Psy_obj_actor_in) == 0x000000, "Member 'PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature::Psy_obj_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature, Target_actor_in) == 0x000008, "Member 'PsychicObjectManager_C_EnemyInterceptableThrow__DelegateSignature::Target_actor_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ExecuteUbergraph_PsychicObjectManager
// 0x0198 (0x0198 - 0x0000)
struct PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_743E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_743F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPsychicBattleType PsychicBattleType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7440[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7441[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7442[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7443[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7444[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7445[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(EPsychicBattleType PsychicBattleType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7446[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue_1;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0100(0x0010)(ReferenceParm, HasGetValueTypeHash)
	EPsychicBattleType                            K2Node_CustomEvent_PsychicBattleType_1;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7447[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDestructibleComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7448[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionChannel                             CallFunc_GetCollisionObjectType_ReturnValue_1;     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7449[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPsychicBattleType                            K2Node_CustomEvent_PsychicBattleType;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744A[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame_1;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager");
static_assert(sizeof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager) == 0x000198, "Wrong size on PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, EntryPoint) == 0x000000, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetHudMain_HudMainGame) == 0x000008, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Array_Index_Variable) == 0x000024, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Loop_Num_Variable_1) == 0x000040, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_Event_EndPlayReason) == 0x00004C, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_SwitchEnum_CmpSuccess) == 0x00004D, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetCollisionObjectType_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetCollisionObjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetDebuggingManager_Manager) == 0x0000E8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_LoadSoftClassActor_ReturnValue_1) == 0x0000F8, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_LoadSoftClassActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000100, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_CustomEvent_PsychicBattleType_1) == 0x000110, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_CustomEvent_PsychicBattleType_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000111, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000118, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetDisplayName_ReturnValue_1) == 0x000128, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000138, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetCollisionObjectType_ReturnValue_1) == 0x000148, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetCollisionObjectType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000150, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000160, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000170, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_CustomEvent_PsychicBattleType) == 0x000180, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_CustomEvent_PsychicBattleType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_GetHudMain_HudMainGame_1) == 0x000188, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_GetHudMain_HudMainGame_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000190, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager, CallFunc_IsValid_ReturnValue_2) == 0x000191, "Member 'PsychicObjectManager_C_ExecuteUbergraph_PsychicObjectManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.OnFinishedPsychicBattle
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_OnFinishedPsychicBattle final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_OnFinishedPsychicBattle) == 0x000001, "Wrong alignment on PsychicObjectManager_C_OnFinishedPsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_OnFinishedPsychicBattle) == 0x000001, "Wrong size on PsychicObjectManager_C_OnFinishedPsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_OnFinishedPsychicBattle, PsychicBattleType) == 0x000000, "Member 'PsychicObjectManager_C_OnFinishedPsychicBattle::PsychicBattleType' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.OnStartPsychicBattle
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_OnStartPsychicBattle final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_OnStartPsychicBattle) == 0x000001, "Wrong alignment on PsychicObjectManager_C_OnStartPsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_OnStartPsychicBattle) == 0x000001, "Wrong size on PsychicObjectManager_C_OnStartPsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_OnStartPsychicBattle, PsychicBattleType) == 0x000000, "Member 'PsychicObjectManager_C_OnStartPsychicBattle::PsychicBattleType' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PsychicObjectManager_C_ReceiveEndPlay");
static_assert(sizeof(PsychicObjectManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on PsychicObjectManager_C_ReceiveEndPlay");
static_assert(offsetof(PsychicObjectManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PsychicObjectManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PsychicObjectManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ReceiveTick) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ReceiveTick");
static_assert(sizeof(PsychicObjectManager_C_ReceiveTick) == 0x000004, "Wrong size on PsychicObjectManager_C_ReceiveTick");
static_assert(offsetof(PsychicObjectManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PsychicObjectManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UserConstructionScript) == 0x000001, "Wrong alignment on PsychicObjectManager_C_UserConstructionScript");
static_assert(sizeof(PsychicObjectManager_C_UserConstructionScript) == 0x000001, "Wrong size on PsychicObjectManager_C_UserConstructionScript");
static_assert(offsetof(PsychicObjectManager_C_UserConstructionScript, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_UserConstructionScript::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AddPsychicObjectInfo
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_AddPsychicObjectInfo final
{
public:
	class AActor*                                 Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_744C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRegNo_return;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_AddPsychicObjectInfo) == 0x000008, "Wrong alignment on PsychicObjectManager_C_AddPsychicObjectInfo");
static_assert(sizeof(PsychicObjectManager_C_AddPsychicObjectInfo) == 0x000028, "Wrong size on PsychicObjectManager_C_AddPsychicObjectInfo");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, Object) == 0x000000, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::Object' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, Temp_int_Variable) == 0x000008, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000010, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddPsychicObjectInfo, CallFunc_SetRegNo_return) == 0x000020, "Member 'PsychicObjectManager_C_AddPsychicObjectInfo::CallFunc_SetRegNo_return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.InitializeBrainField
// 0x0050 (0x0050 - 0x0000)
struct PsychicObjectManager_C_InitializeBrainField final
{
public:
	int32                                         ListLen;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotAngle;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoop;                                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_744D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnGroupNum;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnTime;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TileNum;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_744E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_744F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetBrainFieldUser_User;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_InitializeBrainField) == 0x000008, "Wrong alignment on PsychicObjectManager_C_InitializeBrainField");
static_assert(sizeof(PsychicObjectManager_C_InitializeBrainField) == 0x000050, "Wrong size on PsychicObjectManager_C_InitializeBrainField");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, ListLen) == 0x000000, "Member 'PsychicObjectManager_C_InitializeBrainField::ListLen' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, RotAngle) == 0x000004, "Member 'PsychicObjectManager_C_InitializeBrainField::RotAngle' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, bLoop) == 0x000008, "Member 'PsychicObjectManager_C_InitializeBrainField::bLoop' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, SpawnGroupNum) == 0x00000C, "Member 'PsychicObjectManager_C_InitializeBrainField::SpawnGroupNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, SpawnTime) == 0x000010, "Member 'PsychicObjectManager_C_InitializeBrainField::SpawnTime' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, TileNum) == 0x000014, "Member 'PsychicObjectManager_C_InitializeBrainField::TileNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_GetHudMain_HudMainGame) == 0x000018, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000028, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_GetBrainFieldUser_User) == 0x000038, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_GetBrainFieldUser_User' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000040, "Member 'PsychicObjectManager_C_InitializeBrainField::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PsychicObjectManager_C_InitializeBrainField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitializeBrainField, CallFunc_IsUserIsPlayer_IsPlayer) == 0x00004A, "Member 'PsychicObjectManager_C_InitializeBrainField::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateBrainField
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_UpdateBrainField final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bSpawn;                                            // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7450[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnPsychicObject_IsSpawn;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdateBrainField) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdateBrainField");
static_assert(sizeof(PsychicObjectManager_C_UpdateBrainField) == 0x000030, "Wrong size on PsychicObjectManager_C_UpdateBrainField");
static_assert(offsetof(PsychicObjectManager_C_UpdateBrainField, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_UpdateBrainField::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateBrainField, L_str) == 0x000008, "Member 'PsychicObjectManager_C_UpdateBrainField::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateBrainField, bSpawn) == 0x000018, "Member 'PsychicObjectManager_C_UpdateBrainField::bSpawn' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateBrainField, CallFunc_GetBrainFieldManager_Manager) == 0x000020, "Member 'PsychicObjectManager_C_UpdateBrainField::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateBrainField, CallFunc_IsSpawnPsychicObject_IsSpawn) == 0x000028, "Member 'PsychicObjectManager_C_UpdateBrainField::CallFunc_IsSpawnPsychicObject_IsSpawn' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintPsyObjSpawnList
// 0x0440 (0x0440 - 0x0000)
struct PsychicObjectManager_C_DebugPrintPsyObjSpawnList final
{
public:
	class FString                                 DbStr;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GroupNo;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 SortGroupList;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       SortObjList;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<int32>                                 WorkGroupList;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       WorkObjList;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7451[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7452[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7453[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7454[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_convGroupToRowNameOld_row_name_out;       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_convGroupToRowNameOld_group_out;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_convGroupToRowNameOld_index_out;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7455[0xC];                                     // 0x0104(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7456[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_4;         // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_5;         // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7457[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_6;         // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7458[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7459[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745A[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745B[0x3];                                     // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_2;                         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745C[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_7;         // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_8;         // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745D[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745E[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745F[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7460[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7461[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7462[0x4];                                     // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7463[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0428(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList) == 0x000010, "Wrong alignment on PsychicObjectManager_C_DebugPrintPsyObjSpawnList");
static_assert(sizeof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList) == 0x000440, "Wrong size on PsychicObjectManager_C_DebugPrintPsyObjSpawnList");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, DbStr) == 0x000000, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::DbStr' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Param_Index) == 0x000010, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, GroupNo) == 0x000014, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::GroupNo' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, SortGroupList) == 0x000018, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::SortGroupList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, SortObjList) == 0x000028, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::SortObjList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, WorkGroupList) == 0x000038, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::WorkGroupList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, WorkObjList) == 0x000048, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::WorkObjList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Array_Index_Variable) == 0x000060, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_bool_Variable) == 0x000064, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Loop_Counter_Variable_1) == 0x000068, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Array_Index_Variable_1) == 0x000070, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Variable) == 0x000074, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00007C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BooleanAND_ReturnValue) == 0x00007D, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue_3) == 0x000084, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Array_Index_Variable_2) == 0x000088, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Get_Item) == 0x000090, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_X) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Y) == 0x0000AC, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_convGroupToRowNameOld_row_name_out) == 0x0000BC, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_convGroupToRowNameOld_row_name_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_convGroupToRowNameOld_group_out) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_convGroupToRowNameOld_group_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_convGroupToRowNameOld_index_out) == 0x0000C4, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_convGroupToRowNameOld_index_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_IntToString_ReturnValue) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Length_ReturnValue_2) == 0x000100, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakTransform_Location) == 0x000144, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakTransform_Rotation) == 0x000150, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakTransform_Scale) == 0x00015C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_X_1) == 0x000168, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Y_1) == 0x00016C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Z_1) == 0x000170, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakRotator_Roll) == 0x000174, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakRotator_Pitch) == 0x000178, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakRotator_Yaw) == 0x00017C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000190, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_4) == 0x0001C0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_5) == 0x0001D0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_X_2) == 0x0001E0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Y_2) == 0x0001E4, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_BreakVector_Z_2) == 0x0001E8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_GetObjectClass_ReturnValue) == 0x0001F0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_6) == 0x0001F8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_GetClassDisplayName_ReturnValue) == 0x000208, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Len_ReturnValue) == 0x000218, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Subtract_IntInt_ReturnValue) == 0x00021C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_GetSubstring_ReturnValue) == 0x000220, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Add_ReturnValue) == 0x000230, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000238, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000248, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Length_ReturnValue_3) == 0x000258, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000260, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000270, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000278, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Length_ReturnValue_4) == 0x000288, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Less_IntInt_ReturnValue_2) == 0x00028C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Add_ReturnValue_1) == 0x000298, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00029C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0002A0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_7) == 0x0002A8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Conv_FloatToString_ReturnValue_8) == 0x0002B8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Conv_FloatToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002C8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002D8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0002E0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0002F0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000300, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue_4) == 0x000310, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000318, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000328, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000338, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, Temp_int_Variable_1) == 0x000348, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000350, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000360, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000370, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000380, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Array_Add_ReturnValue_2) == 0x000390, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000398, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0003A8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003B8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0003C0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0003D0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0003E0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003F0, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0003F8, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_FTrunc_ReturnValue) == 0x000408, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000410, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000420, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_FTrunc_ReturnValue_1) == 0x000424, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_GetAllActorsOfClass_OutActors) == 0x000428, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Multiply_IntInt_ReturnValue) == 0x000438, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintPsyObjSpawnList, CallFunc_Add_IntInt_ReturnValue_5) == 0x00043C, "Member 'PsychicObjectManager_C_DebugPrintPsyObjSpawnList::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.calcSpawnWorldTransformOld
// 0x0180 (0x0180 - 0x0000)
struct PsychicObjectManager_C_CalcSpawnWorldTransformOld final
{
public:
	struct FTransform                             Local_transform_in;                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         Tile_no_in;                                        // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotAngle_in;                                       // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7464[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             World_transform_out;                               // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                         RandDegree;                                        // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7465[0x8];                                     // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CalcSpawnWorldTransformOld) == 0x000010, "Wrong alignment on PsychicObjectManager_C_CalcSpawnWorldTransformOld");
static_assert(sizeof(PsychicObjectManager_C_CalcSpawnWorldTransformOld) == 0x000180, "Wrong size on PsychicObjectManager_C_CalcSpawnWorldTransformOld");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, Local_transform_in) == 0x000000, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::Local_transform_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, Tile_no_in) == 0x000030, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::Tile_no_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, RotAngle_in) == 0x000034, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::RotAngle_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, World_transform_out) == 0x000040, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::World_transform_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, RandDegree) == 0x000070, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::RandDegree' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakTransform_Location) == 0x000074, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakTransform_Scale) == 0x00008C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_X) == 0x00009C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000AC, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000B0, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_MakeRotator_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_ComposeRotators_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000F4, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Divide_IntInt_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Percent_IntInt_ReturnValue) == 0x0000FC, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000100, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000104, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_IntInt_ReturnValue) == 0x000108, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00010C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000110, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000114, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000118, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00011C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000120, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000124, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000128, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x00012C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_Add_VectorVector_ReturnValue) == 0x00013C, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CalcSpawnWorldTransformOld, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'PsychicObjectManager_C_CalcSpawnWorldTransformOld::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.convGroupToRowNameOld
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_ConvGroupToRowNameOld final
{
public:
	int32                                         Group_in;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowName_in;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Row_name_out;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Group_out;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_out;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ConvGroupToRowNameOld) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ConvGroupToRowNameOld");
static_assert(sizeof(PsychicObjectManager_C_ConvGroupToRowNameOld) == 0x000028, "Wrong size on PsychicObjectManager_C_ConvGroupToRowNameOld");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, Group_in) == 0x000000, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::Group_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, Index_in) == 0x000004, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::Index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, RowName_in) == 0x000008, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::RowName_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, Row_name_out) == 0x00000C, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::Row_name_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, Group_out) == 0x000010, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::Group_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, Index_out) == 0x000014, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::Index_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvGroupToRowNameOld, CallFunc_Divide_IntInt_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_ConvGroupToRowNameOld::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateEmission
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_UpdateEmission final
{
public:
	float                                         EmiisonRate;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7466[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7467[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_UpdateEmission) == 0x000004, "Wrong alignment on PsychicObjectManager_C_UpdateEmission");
static_assert(sizeof(PsychicObjectManager_C_UpdateEmission) == 0x000020, "Wrong size on PsychicObjectManager_C_UpdateEmission");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, EmiisonRate) == 0x000000, "Member 'PsychicObjectManager_C_UpdateEmission::EmiisonRate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000011, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEmission, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_UpdateEmission::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetEmission
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetEmission final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetEmission) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetEmission");
static_assert(sizeof(PsychicObjectManager_C_SetEmission) == 0x000001, "Wrong size on PsychicObjectManager_C_SetEmission");
static_assert(offsetof(PsychicObjectManager_C_SetEmission, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetEmission::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetMainPlayer
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_SetMainPlayer final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetMainPlayer) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetMainPlayer");
static_assert(sizeof(PsychicObjectManager_C_SetMainPlayer) == 0x000020, "Wrong size on PsychicObjectManager_C_SetMainPlayer");
static_assert(offsetof(PsychicObjectManager_C_SetMainPlayer, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'PsychicObjectManager_C_SetMainPlayer::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetMainPlayer, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_SetMainPlayer::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetMainPlayer, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000010, "Member 'PsychicObjectManager_C_SetMainPlayer::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetMainPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PsychicObjectManager_C_SetMainPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetSparePsyObjOld
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_GetSparePsyObjOld final
{
public:
	EPsychicGrabButtonType                        button_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7468[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_out;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               PsyObj;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Random;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetSparePsyObjOld) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetSparePsyObjOld");
static_assert(sizeof(PsychicObjectManager_C_GetSparePsyObjOld) == 0x000020, "Wrong size on PsychicObjectManager_C_GetSparePsyObjOld");
static_assert(offsetof(PsychicObjectManager_C_GetSparePsyObjOld, button_type_in) == 0x000000, "Member 'PsychicObjectManager_C_GetSparePsyObjOld::button_type_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetSparePsyObjOld, Psy_obj_out) == 0x000008, "Member 'PsychicObjectManager_C_GetSparePsyObjOld::Psy_obj_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetSparePsyObjOld, PsyObj) == 0x000010, "Member 'PsychicObjectManager_C_GetSparePsyObjOld::PsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetSparePsyObjOld, Random) == 0x000018, "Member 'PsychicObjectManager_C_GetSparePsyObjOld::Random' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SpawnSparePsyObjOld
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_SpawnSparePsyObjOld final
{
public:
	EPsychicGrabButtonType                        button_type_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7469[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_746A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBrainFieldPsyObjData>          CurrentList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SpawnSparePsyObjOld) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SpawnSparePsyObjOld");
static_assert(sizeof(PsychicObjectManager_C_SpawnSparePsyObjOld) == 0x000020, "Wrong size on PsychicObjectManager_C_SpawnSparePsyObjOld");
static_assert(offsetof(PsychicObjectManager_C_SpawnSparePsyObjOld, button_type_in) == 0x000000, "Member 'PsychicObjectManager_C_SpawnSparePsyObjOld::button_type_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SpawnSparePsyObjOld, Index_in) == 0x000004, "Member 'PsychicObjectManager_C_SpawnSparePsyObjOld::Index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SpawnSparePsyObjOld, Return) == 0x000008, "Member 'PsychicObjectManager_C_SpawnSparePsyObjOld::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SpawnSparePsyObjOld, CurrentList) == 0x000010, "Member 'PsychicObjectManager_C_SpawnSparePsyObjOld::CurrentList' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintSpareData
// 0x0268 (0x0268 - 0x0000)
struct PsychicObjectManager_C_DebugPrintSpareData final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_746B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBrainFieldPsyObjData                  CallFunc_Array_Get_Item;                           // 0x0030(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_746C[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_746D[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_746E[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBrainFieldPsyObjData                  CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_746F[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_1; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7470[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBrainFieldPsyObjData                  CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_2; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7471[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_2; // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7472[0x6];                                     // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_2;        // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugPrintSpareData) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugPrintSpareData");
static_assert(sizeof(PsychicObjectManager_C_DebugPrintSpareData) == 0x000268, "Wrong size on PsychicObjectManager_C_DebugPrintSpareData");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Get_Item) == 0x000030, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_bSuccess) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, Temp_int_Loop_Counter_Variable_2) == 0x0000BC, "Member 'PsychicObjectManager_C_DebugPrintSpareData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_GetClassDisplayName_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000138, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000148, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000158, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1) == 0x000168, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_1) == 0x000178, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_bSuccess_1) == 0x000180, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000181, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000188, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000198, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0001D8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001E8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0001F8, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000208, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000218, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_2) == 0x000228, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Array_Length_ReturnValue_2) == 0x000230, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_2) == 0x000238, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, K2Node_ClassDynamicCast_bSuccess_2) == 0x000240, "Member 'PsychicObjectManager_C_DebugPrintSpareData::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Less_IntInt_ReturnValue_2) == 0x000241, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_GetClassDisplayName_ReturnValue_2) == 0x000248, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_GetClassDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintSpareData, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000258, "Member 'PsychicObjectManager_C_DebugPrintSpareData::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsSparePsyObjReadyOld
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_IsSparePsyObjReadyOld final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsSparePsyObjReadyOld) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsSparePsyObjReadyOld");
static_assert(sizeof(PsychicObjectManager_C_IsSparePsyObjReadyOld) == 0x000002, "Wrong size on PsychicObjectManager_C_IsSparePsyObjReadyOld");
static_assert(offsetof(PsychicObjectManager_C_IsSparePsyObjReadyOld, Return) == 0x000000, "Member 'PsychicObjectManager_C_IsSparePsyObjReadyOld::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_IsSparePsyObjReadyOld, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'PsychicObjectManager_C_IsSparePsyObjReadyOld::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AreaChangeRestorePsychicObject
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_AreaChangeRestorePsychicObject final
{
public:
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_AreaChangeRestorePsychicObject) == 0x000001, "Wrong alignment on PsychicObjectManager_C_AreaChangeRestorePsychicObject");
static_assert(sizeof(PsychicObjectManager_C_AreaChangeRestorePsychicObject) == 0x000001, "Wrong size on PsychicObjectManager_C_AreaChangeRestorePsychicObject");
static_assert(offsetof(PsychicObjectManager_C_AreaChangeRestorePsychicObject, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_AreaChangeRestorePsychicObject::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AreaChangeStartPsychicObject
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_AreaChangeStartPsychicObject final
{
public:
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_AreaChangeStartPsychicObject) == 0x000001, "Wrong alignment on PsychicObjectManager_C_AreaChangeStartPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_AreaChangeStartPsychicObject) == 0x000002, "Wrong size on PsychicObjectManager_C_AreaChangeStartPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_AreaChangeStartPsychicObject, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_AreaChangeStartPsychicObject::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AreaChangeStartPsychicObject, CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1) == 0x000001, "Member 'PsychicObjectManager_C_AreaChangeStartPsychicObject::CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispSpareList
// 0x0140 (0x0140 - 0x0000)
struct PsychicObjectManager_C_DebugDispSpareList final
{
public:
	class FString                                 WorkStr;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7473[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7474[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7475[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7476[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7477[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7478[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_2;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDispSpareList) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDispSpareList");
static_assert(sizeof(PsychicObjectManager_C_DebugDispSpareList) == 0x000140, "Wrong size on PsychicObjectManager_C_DebugDispSpareList");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, WorkStr) == 0x000000, "Member 'PsychicObjectManager_C_DebugDispSpareList::WorkStr' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_IsValid_ReturnValue_2) == 0x000035, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_GetDisplayName_ReturnValue_1) == 0x000038, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_GetDisplayName_ReturnValue_2) == 0x000048, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Loop_Counter_Variable_2) == 0x00005C, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, Temp_int_Array_Index_Variable_2) == 0x000068, "Member 'PsychicObjectManager_C_DebugDispSpareList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000100, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Get_Item) == 0x000110, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Array_Length_ReturnValue_2) == 0x000138, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispSpareList, CallFunc_Less_IntInt_ReturnValue_2) == 0x00013C, "Member 'PsychicObjectManager_C_DebugDispSpareList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicCaptureMaterialParameter
// 0x02A8 (0x02A8 - 0x0000)
struct PsychicObjectManager_C_GetPsychicCaptureMaterialParameter final
{
public:
	E_SASKind                                     Sas_kind_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7479[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               Material_param;                                    // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_747A[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_747B[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Normal; // 0x00B8(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Fire;  // 0x0158(0x00A0)(HasGetValueTypeHash)
	struct FSPsychicCaptureMaterial               CallFunc_GetPsychicCaptureMaterialParameter_Electric; // 0x01F8(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_747C[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetPsychicCaptureMaterialParameter");
static_assert(sizeof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter) == 0x0002A8, "Wrong size on PsychicObjectManager_C_GetPsychicCaptureMaterialParameter");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, Sas_kind_in) == 0x000000, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, Material_param) == 0x000008, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::Material_param' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, Param_Index) == 0x0000A8, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, K2Node_SwitchEnum_CmpSuccess) == 0x0000AC, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_GetPsychicCaptureMaterialParameter_Normal) == 0x0000B8, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_GetPsychicCaptureMaterialParameter_Normal' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_GetPsychicCaptureMaterialParameter_Fire) == 0x000158, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_GetPsychicCaptureMaterialParameter_Fire' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_GetPsychicCaptureMaterialParameter_Electric) == 0x0001F8, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_GetPsychicCaptureMaterialParameter_Electric' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000298, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_Array_Add_ReturnValue) == 0x00029C, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_Array_Add_ReturnValue_1) == 0x0002A0, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicCaptureMaterialParameter, CallFunc_Array_Add_ReturnValue_2) == 0x0002A4, "Member 'PsychicObjectManager_C_GetPsychicCaptureMaterialParameter::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUserParamTransferObject
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_GetUserParamTransferObject final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Psy_obj_id;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_747D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<PsychicObjectID::EPsychicObjectID>     TempList;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<PsychicObjectID::EPsychicObjectID>     K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTransferObject_objectId;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTransferObject_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	PsychicObjectID::EPsychicObjectID             CallFunc_convTempIDToPsyObjID_psy_obj_id_out;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_747E[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_convTempIDToPsyObjID_temp_id_out;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetUserParamTransferObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetUserParamTransferObject");
static_assert(sizeof(PsychicObjectManager_C_GetUserParamTransferObject) == 0x000038, "Wrong size on PsychicObjectManager_C_GetUserParamTransferObject");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, Item_id_in) == 0x000000, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::Item_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, Psy_obj_id) == 0x000001, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::Psy_obj_id' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, L_index) == 0x000004, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, TempList) == 0x000008, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::TempList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, K2Node_MakeArray_Array) == 0x000018, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, CallFunc_GetTransferObject_objectId) == 0x00002C, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::CallFunc_GetTransferObject_objectId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, CallFunc_GetTransferObject_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::CallFunc_GetTransferObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, CallFunc_convTempIDToPsyObjID_psy_obj_id_out) == 0x000031, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::CallFunc_convTempIDToPsyObjID_psy_obj_id_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUserParamTransferObject, CallFunc_convTempIDToPsyObjID_temp_id_out) == 0x000034, "Member 'PsychicObjectManager_C_GetUserParamTransferObject::CallFunc_convTempIDToPsyObjID_temp_id_out' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.InitTransferObject
// 0x00F0 (0x00F0 - 0x0000)
struct PsychicObjectManager_C_InitTransferObject final
{
public:
	BattlePrototype::EPsychicObjectID             L_transferObj;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_747F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_psyObjId;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EConsumeItemID>                        L_TransferItemList;                                // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	TArray<EConsumeItemID>                        K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTransferObject_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7480[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7481[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             CallFunc_convTempIDToPsyObjID_psy_obj_id_out;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7482[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_convTempIDToPsyObjID_temp_id_out;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_convPsyObjIDtoSoftClass_psy_obj_soft_class; // 0x0090(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7483[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTransferObject_objectId;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTransferObject_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7484[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7485[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_InitTransferObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_InitTransferObject");
static_assert(sizeof(PsychicObjectManager_C_InitTransferObject) == 0x0000F0, "Wrong size on PsychicObjectManager_C_InitTransferObject");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, L_transferObj) == 0x000000, "Member 'PsychicObjectManager_C_InitTransferObject::L_transferObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, L_psyObjId) == 0x000004, "Member 'PsychicObjectManager_C_InitTransferObject::L_psyObjId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_InitTransferObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, L_TransferItemList) == 0x000010, "Member 'PsychicObjectManager_C_InitTransferObject::L_TransferItemList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, K2Node_MakeArray_Array) == 0x000050, "Member 'PsychicObjectManager_C_InitTransferObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'PsychicObjectManager_C_InitTransferObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000068, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'PsychicObjectManager_C_InitTransferObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_SetTransferObject_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_SetTransferObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'PsychicObjectManager_C_InitTransferObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_convTempIDToPsyObjID_psy_obj_id_out) == 0x000088, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_convTempIDToPsyObjID_psy_obj_id_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_convTempIDToPsyObjID_temp_id_out) == 0x00008C, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_convTempIDToPsyObjID_temp_id_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_convPsyObjIDtoSoftClass_psy_obj_soft_class) == 0x000090, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_convPsyObjIDtoSoftClass_psy_obj_soft_class' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0000B8, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_GetTransferObject_objectId) == 0x0000C8, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_GetTransferObject_objectId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_GetTransferObject_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_GetTransferObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000E0, "Member 'PsychicObjectManager_C_InitTransferObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'PsychicObjectManager_C_InitTransferObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitTransferObject, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'PsychicObjectManager_C_InitTransferObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ClearTransferObject
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_ClearTransferObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7486[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7487[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ClearTransferObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ClearTransferObject");
static_assert(sizeof(PsychicObjectManager_C_ClearTransferObject) == 0x000028, "Wrong size on PsychicObjectManager_C_ClearTransferObject");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_ClearTransferObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_ClearTransferObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_ClearTransferObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_ClearTransferObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_ClearTransferObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ClearTransferObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_ClearTransferObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearTransferObject, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_ClearTransferObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UseTransferObject
// 0x00E0 (0x00E0 - 0x0000)
struct PsychicObjectManager_C_UseTransferObject final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7488[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_checkObj;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7489[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         I_tempId;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        L_player;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyEmptyUnique_return;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748A[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_748B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748C[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748D[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTransferObject_objectId;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTransferObject_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_748E[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UseTransferObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_UseTransferObject");
static_assert(sizeof(PsychicObjectManager_C_UseTransferObject) == 0x0000E0, "Wrong size on PsychicObjectManager_C_UseTransferObject");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, Item_id_in) == 0x000000, "Member 'PsychicObjectManager_C_UseTransferObject::Item_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, L_index) == 0x000004, "Member 'PsychicObjectManager_C_UseTransferObject::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, L_checkObj) == 0x000008, "Member 'PsychicObjectManager_C_UseTransferObject::L_checkObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, I_tempId) == 0x00000C, "Member 'PsychicObjectManager_C_UseTransferObject::I_tempId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, L_player) == 0x000010, "Member 'PsychicObjectManager_C_UseTransferObject::L_player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, L_psyObj) == 0x000018, "Member 'PsychicObjectManager_C_UseTransferObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_IsAnyEmptyUnique_return) == 0x000021, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_IsAnyEmptyUnique_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_GetPlayer_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000040, "Member 'PsychicObjectManager_C_UseTransferObject::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PsychicObjectManager_C_UseTransferObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_BreakTransform_Location) == 0x000080, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B0, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Array_Find_ReturnValue_1) == 0x0000C0, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000C4, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_GetTransferObject_objectId) == 0x0000C8, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_GetTransferObject_objectId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_GetTransferObject_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_GetTransferObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UseTransferObject, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D4, "Member 'PsychicObjectManager_C_UseTransferObject::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.convTransferItemIDToIndex
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_ConvTransferItemIDToIndex final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_748F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ConvTransferItemIDToIndex) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ConvTransferItemIDToIndex");
static_assert(sizeof(PsychicObjectManager_C_ConvTransferItemIDToIndex) == 0x000010, "Wrong size on PsychicObjectManager_C_ConvTransferItemIDToIndex");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToIndex, Item_id_in) == 0x000000, "Member 'PsychicObjectManager_C_ConvTransferItemIDToIndex::Item_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToIndex, Param_Index) == 0x000004, "Member 'PsychicObjectManager_C_ConvTransferItemIDToIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToIndex, L_index) == 0x000008, "Member 'PsychicObjectManager_C_ConvTransferItemIDToIndex::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToIndex, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'PsychicObjectManager_C_ConvTransferItemIDToIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.convTempIDToPsyObjID
// 0x00A8 (0x00A8 - 0x0000)
struct PsychicObjectManager_C_ConvTempIDToPsyObjID final
{
public:
	int32                                         Temp_id_in;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Psy_obj_id_in;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Psy_obj_id_out;                                    // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7490[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_id_out;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7491[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_27;                              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_29;                              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_30;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_31;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_32;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_33;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_1;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_2;                              // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_3;                              // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_4;                              // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_5;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_6;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_7;                              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable_8;                              // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             K2Node_Select_Default_1;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ConvTempIDToPsyObjID) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ConvTempIDToPsyObjID");
static_assert(sizeof(PsychicObjectManager_C_ConvTempIDToPsyObjID) == 0x0000A8, "Wrong size on PsychicObjectManager_C_ConvTempIDToPsyObjID");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_id_in) == 0x000000, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Psy_obj_id_in) == 0x000004, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Psy_obj_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Psy_obj_id_out) == 0x000005, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Psy_obj_id_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_id_out) == 0x000008, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_id_out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable) == 0x000010, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_1) == 0x000014, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_2) == 0x000018, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_3) == 0x00001C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_4) == 0x000020, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_5) == 0x000024, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_6) == 0x000028, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_7) == 0x00002C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_8) == 0x000030, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_9) == 0x000034, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_10) == 0x000038, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_11) == 0x00003C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_12) == 0x000040, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_13) == 0x000044, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_14) == 0x000048, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_15) == 0x00004C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_16) == 0x000050, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_17) == 0x000054, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_18) == 0x000058, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_19) == 0x00005C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_20) == 0x000060, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_21) == 0x000064, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_22) == 0x000068, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_23) == 0x00006C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_24) == 0x000070, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_25) == 0x000074, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_26) == 0x000078, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_27) == 0x00007C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_28) == 0x000080, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_29) == 0x000084, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_30) == 0x000088, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_30' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_31) == 0x00008C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_31' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_32) == 0x000090, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_32' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_int_Variable_33) == 0x000094, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_int_Variable_33' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, K2Node_Select_Default) == 0x000098, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_1) == 0x00009C, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_2) == 0x00009D, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_3) == 0x00009E, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_4) == 0x00009F, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_5) == 0x0000A0, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_6) == 0x0000A1, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_7) == 0x0000A2, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, Temp_byte_Variable_8) == 0x0000A3, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTempIDToPsyObjID, K2Node_Select_Default_1) == 0x0000A4, "Member 'PsychicObjectManager_C_ConvTempIDToPsyObjID::K2Node_Select_Default_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.convPsyObjIDtoSoftClass
// 0x0588 (0x0588 - 0x0000)
struct PsychicObjectManager_C_ConvPsyObjIDtoSoftClass final
{
public:
	PsychicObjectID::EPsychicObjectID             Psy_obj_id_in;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7492[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Psy_obj_soft_class;                                // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	PsychicObjectID::EPsychicObjectID             Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7493[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_1;                         // 0x0060(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_2;                         // 0x0088(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_3;                         // 0x00B0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_4;                         // 0x00D8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_5;                         // 0x0100(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_6;                         // 0x0128(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_7;                         // 0x0150(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_8;                         // 0x0178(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_9;                         // 0x01A0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_10;                        // 0x01C8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_11;                        // 0x01F0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_12;                        // 0x0218(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_13;                        // 0x0240(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_14;                        // 0x0268(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_15;                        // 0x0290(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_16;                        // 0x02B8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_17;                        // 0x02E0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_18;                        // 0x0308(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_19;                        // 0x0330(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_20;                        // 0x0358(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_21;                        // 0x0380(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_22;                        // 0x03A8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_23;                        // 0x03D0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_24;                        // 0x03F8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_25;                        // 0x0420(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_26;                        // 0x0448(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_27;                        // 0x0470(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_28;                        // 0x0498(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_29;                        // 0x04C0(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_30;                        // 0x04E8(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_31;                        // 0x0510(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Temp_softclass_Variable_32;                        // 0x0538(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   K2Node_Select_Default;                             // 0x0560(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ConvPsyObjIDtoSoftClass");
static_assert(sizeof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass) == 0x000588, "Wrong size on PsychicObjectManager_C_ConvPsyObjIDtoSoftClass");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Psy_obj_id_in) == 0x000000, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Psy_obj_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Psy_obj_soft_class) == 0x000008, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Psy_obj_soft_class' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_byte_Variable) == 0x000030, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable) == 0x000038, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_1) == 0x000060, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_2) == 0x000088, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_3) == 0x0000B0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_4) == 0x0000D8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_5) == 0x000100, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_6) == 0x000128, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_7) == 0x000150, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_8) == 0x000178, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_9) == 0x0001A0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_10) == 0x0001C8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_11) == 0x0001F0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_12) == 0x000218, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_13) == 0x000240, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_14) == 0x000268, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_15) == 0x000290, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_16) == 0x0002B8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_17) == 0x0002E0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_18) == 0x000308, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_19) == 0x000330, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_20) == 0x000358, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_21) == 0x000380, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_22) == 0x0003A8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_23) == 0x0003D0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_23' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_24) == 0x0003F8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_24' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_25) == 0x000420, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_25' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_26) == 0x000448, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_26' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_27) == 0x000470, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_27' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_28) == 0x000498, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_28' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_29) == 0x0004C0, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_29' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_30) == 0x0004E8, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_30' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_31) == 0x000510, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_31' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, Temp_softclass_Variable_32) == 0x000538, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::Temp_softclass_Variable_32' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvPsyObjIDtoSoftClass, K2Node_Select_Default) == 0x000560, "Member 'PsychicObjectManager_C_ConvPsyObjIDtoSoftClass::K2Node_Select_Default' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.convTransferItemIDToName
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_ConvTransferItemIDToName final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7494[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Item_name;                                         // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ConvTransferItemIDToName) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ConvTransferItemIDToName");
static_assert(sizeof(PsychicObjectManager_C_ConvTransferItemIDToName) == 0x000010, "Wrong size on PsychicObjectManager_C_ConvTransferItemIDToName");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToName, Item_id_in) == 0x000000, "Member 'PsychicObjectManager_C_ConvTransferItemIDToName::Item_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToName, Item_name) == 0x000004, "Member 'PsychicObjectManager_C_ConvTransferItemIDToName::Item_name' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ConvTransferItemIDToName, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'PsychicObjectManager_C_ConvTransferItemIDToName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispTransferObject
// 0x00B0 (0x00B0 - 0x0000)
struct PsychicObjectManager_C_DebugDispTransferObject final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7495[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7496[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDispTransferObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDispTransferObject");
static_assert(sizeof(PsychicObjectManager_C_DebugDispTransferObject) == 0x0000B0, "Wrong size on PsychicObjectManager_C_DebugDispTransferObject");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, Str) == 0x000000, "Member 'PsychicObjectManager_C_DebugDispTransferObject::Str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_DebugDispTransferObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PsychicObjectManager_C_DebugDispTransferObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDispTransferObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000098, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispTransferObject, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'PsychicObjectManager_C_DebugDispTransferObject::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CreatePsychicCluster
// 0x0070 (0x0070 - 0x0000)
struct PsychicObjectManager_C_CreatePsychicCluster final
{
public:
	class ABP_PsychicObjectBasic_C*               Psychic_object_in;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       Cluster_list;                                      // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         CansSpawnNum;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_SpawnNum;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   L_spawnSoftClass;                                  // 0x0020(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       L_list;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7497[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScalesSpawnNum;                                    // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FireNumSpawnNum;                                   // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_CreatePsychicCluster) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CreatePsychicCluster");
static_assert(sizeof(PsychicObjectManager_C_CreatePsychicCluster) == 0x000070, "Wrong size on PsychicObjectManager_C_CreatePsychicCluster");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, Psychic_object_in) == 0x000000, "Member 'PsychicObjectManager_C_CreatePsychicCluster::Psychic_object_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, Cluster_list) == 0x000008, "Member 'PsychicObjectManager_C_CreatePsychicCluster::Cluster_list' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, CansSpawnNum) == 0x000018, "Member 'PsychicObjectManager_C_CreatePsychicCluster::CansSpawnNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, L_SpawnNum) == 0x00001C, "Member 'PsychicObjectManager_C_CreatePsychicCluster::L_SpawnNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, L_spawnSoftClass) == 0x000020, "Member 'PsychicObjectManager_C_CreatePsychicCluster::L_spawnSoftClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, L_list) == 0x000048, "Member 'PsychicObjectManager_C_CreatePsychicCluster::L_list' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, L_index) == 0x000058, "Member 'PsychicObjectManager_C_CreatePsychicCluster::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, L_psyObj) == 0x000060, "Member 'PsychicObjectManager_C_CreatePsychicCluster::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, ScalesSpawnNum) == 0x000068, "Member 'PsychicObjectManager_C_CreatePsychicCluster::ScalesSpawnNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicCluster, FireNumSpawnNum) == 0x00006C, "Member 'PsychicObjectManager_C_CreatePsychicCluster::FireNumSpawnNum' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CreateEnemyPsychicObject
// 0x0100 (0x0100 - 0x0000)
struct PsychicObjectManager_C_CreateEnemyPsychicObject final
{
public:
	class ARSBattleCharacter_C*                   Enemy_owner_in;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           Object_list_in;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FName                                   List_name;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Drop_type_in;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7498[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_obj;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       L_emOwner;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7499[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749A[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749C[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749D[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749E[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CreateEnemyPsychicObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_CreateEnemyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_CreateEnemyPsychicObject) == 0x000100, "Wrong size on PsychicObjectManager_C_CreateEnemyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Enemy_owner_in) == 0x000000, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Enemy_owner_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Object_list_in) == 0x000008, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Object_list_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, List_name) == 0x000018, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::List_name' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Drop_type_in) == 0x000020, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Drop_type_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, L_obj) == 0x000028, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::L_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, L_emOwner) == 0x000030, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::L_emOwner' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Temp_int_Array_Index_Variable) == 0x000074, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Temp_int_Loop_Num_Variable) == 0x000078, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_GetDisplayName_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Conv_NameToString_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000B8, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000E8, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateEnemyPsychicObject, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'PsychicObjectManager_C_CreateEnemyPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetEnemyPsychicObject
// 0x00F8 (0x00F8 - 0x0000)
struct PsychicObjectManager_C_GetEnemyPsychicObject final
{
public:
	class ARSBattleCharacter_C*                   Owner_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   List_name;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Random_obj;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     Sas_kind_in;                                       // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_749F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Em_psy_obj;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         I_idx;                                             // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_random;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_objNum;                                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       L_freeObjList;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A1[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EPsychicObjectSizeType>                K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A2[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPsychicObjectSizeType>                CallFunc_GetAvailableRegisterSizeArraySafety_size_array; // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetAvailableRegisterSizeArraySafety_safety; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A3[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyPsychicObjectOccupied_occupied;    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A4[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A5[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A6[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetEnemyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetEnemyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_GetEnemyPsychicObject) == 0x0000F8, "Wrong size on PsychicObjectManager_C_GetEnemyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Owner_in) == 0x000000, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Owner_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, List_name) == 0x000008, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::List_name' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Random_obj) == 0x000010, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Random_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Sas_kind_in) == 0x000011, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Sas_kind_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Em_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Em_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, I_idx) == 0x000020, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::I_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, L_random) == 0x000024, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::L_random' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, L_objNum) == 0x000028, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::L_objNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, L_psyObj) == 0x000030, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, L_freeObjList) == 0x000038, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::L_freeObjList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Temp_int_Array_Index_Variable) == 0x000050, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, Temp_int_Loop_Num_Variable) == 0x000054, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj) == 0x000060, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, K2Node_MakeArray_Array) == 0x000068, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_GetAvailableRegisterSizeArraySafety_size_array) == 0x000080, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_GetAvailableRegisterSizeArraySafety_size_array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_GetAvailableRegisterSizeArraySafety_safety) == 0x000090, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_GetAvailableRegisterSizeArraySafety_safety' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000091, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000092, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_IsEnemyPsychicObjectOccupied_occupied) == 0x0000A8, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_IsEnemyPsychicObjectOccupied_occupied' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D2, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D3, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_RandomInteger_ReturnValue) == 0x0000E4, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetEnemyPsychicObject, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'PsychicObjectManager_C_GetEnemyPsychicObject::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DestroyEnemyPsychicObject
// 0x0090 (0x0090 - 0x0000)
struct PsychicObjectManager_C_DestroyEnemyPsychicObject final
{
public:
	class ARSBattleCharacter_C*                   Em_owner_in;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   List_name;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_checkIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_lastIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_ownerName;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A8[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A9[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AA[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DestroyEnemyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DestroyEnemyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_DestroyEnemyPsychicObject) == 0x000090, "Wrong size on PsychicObjectManager_C_DestroyEnemyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, Em_owner_in) == 0x000000, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::Em_owner_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, List_name) == 0x000008, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::List_name' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, L_checkIndex) == 0x000010, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::L_checkIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, L_lastIndex) == 0x000014, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::L_lastIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, L_psyObj) == 0x000018, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, L_ownerName) == 0x000020, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::L_ownerName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, Temp_int_Variable) == 0x000030, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, Temp_int_Variable_1) == 0x000058, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Array_Get_Item) == 0x000078, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000089, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00008A, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyEnemyPsychicObject, CallFunc_Array_LastIndex_ReturnValue) == 0x00008C, "Member 'PsychicObjectManager_C_DestroyEnemyPsychicObject::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateEnemyPsychicObject
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_UpdateEnemyPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AB[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AC[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AD[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AE[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74AF[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_UpdateEnemyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdateEnemyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_UpdateEnemyPsychicObject) == 0x000030, "Wrong size on PsychicObjectManager_C_UpdateEnemyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_Array_RemoveItem_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateEnemyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_UpdateEnemyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDisplayEnemyPsychicObject
// 0x0120 (0x0120 - 0x0000)
struct PsychicObjectManager_C_DebugDisplayEnemyPsychicObject final
{
public:
	struct FVector                                L_posPly;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_workObj;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_workName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74B1[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B2[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyPsychicObjectOccupied_occupied;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74B3[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B4[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDisplayEnemyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject) == 0x000120, "Wrong size on PsychicObjectManager_C_DebugDisplayEnemyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, L_posPly) == 0x000000, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::L_posPly' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, L_workObj) == 0x000010, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::L_workObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, L_workName) == 0x000018, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::L_workName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, L_str) == 0x000028, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, Temp_int_Array_Index_Variable) == 0x000038, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_GetMeshBoundCentrePos_pos) == 0x000064, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_IsEnemyPsychicObjectOccupied_occupied) == 0x000070, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_IsEnemyPsychicObjectOccupied_occupied' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_IsActorTickEnabled_ReturnValue) == 0x000071, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_SelectString_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Conv_BoolToString_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_GetDisplayName_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000108, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDisplayEnemyPsychicObject, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000118, "Member 'PsychicObjectManager_C_DebugDisplayEnemyPsychicObject::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugStartTestLevelSequence
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_DebugStartTestLevelSequence final
{
public:
	class ARSBattleCharacter_C*                   Enemy_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugStartTestLevelSequence) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugStartTestLevelSequence");
static_assert(sizeof(PsychicObjectManager_C_DebugStartTestLevelSequence) == 0x000010, "Wrong size on PsychicObjectManager_C_DebugStartTestLevelSequence");
static_assert(offsetof(PsychicObjectManager_C_DebugStartTestLevelSequence, Enemy_in) == 0x000000, "Member 'PsychicObjectManager_C_DebugStartTestLevelSequence::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugStartTestLevelSequence, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_DebugStartTestLevelSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugUpdateTestLevelSequence
// 0x00A0 (0x00A0 - 0x0000)
struct PsychicObjectManager_C_DebugUpdateTestLevelSequence final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74B5[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74B6[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74B7[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B8[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetEnemyPsychicObject_em_psy_obj;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B9[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugUpdateTestLevelSequence) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugUpdateTestLevelSequence");
static_assert(sizeof(PsychicObjectManager_C_DebugUpdateTestLevelSequence) == 0x0000A0, "Wrong size on PsychicObjectManager_C_DebugUpdateTestLevelSequence");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, Temp_int_Variable) == 0x000000, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, Temp_int_Variable_1) == 0x000004, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsOver_ReturnValue) == 0x000009, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsValid_ReturnValue_2) == 0x000018, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, Temp_int_Variable_2) == 0x000020, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, Temp_int_Variable_3) == 0x000028, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsValid_ReturnValue_3) == 0x00002C, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_IsOver_ReturnValue_1) == 0x00002D, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_BreakVector_X) == 0x000048, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_BreakVector_Y) == 0x00004C, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_BreakVector_Z) == 0x000050, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_GetEnemyPsychicObject_em_psy_obj) == 0x000058, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_GetEnemyPsychicObject_em_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_GetRate_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Conv_FloatToString_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, K2Node_MakeArray_Array) == 0x000088, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, CallFunc_Add_IntInt_ReturnValue_3) == 0x000098, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugUpdateTestLevelSequence, K2Node_SwitchInteger_CmpSuccess) == 0x00009C, "Member 'PsychicObjectManager_C_DebugUpdateTestLevelSequence::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.LoadDataTable
// 0x06B0 (0x06B0 - 0x0000)
struct PsychicObjectManager_C_LoadDataTable final
{
public:
	TArray<class FName>                           L_workRowNameList;                                 // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           L_captureRowNameList;                              // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           L_numberRowNameList;                               // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           L_sizeRowNameList;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74BA[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74BB[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74BC[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_3;       // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74BD[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_4;       // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74BE[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectAttackParameterData      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0108(0x0168)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74BF[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectCommonParameter          CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0278(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C0[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCCollisionCommonInfo                 CallFunc_CollisionCommonInfoToC_Out;               // 0x03F0(0x0070)()
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C1[0x3];                                     // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueObjectCameraParameter           CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0478(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C2[0x3];                                     // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C3[0x3];                                     // 0x04B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74C4[0x4];                                     // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSizeParameter            CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x04D0(0x0138)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C5[0x3];                                     // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C6[0x3];                                     // 0x0611(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C7[0x7];                                     // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueObjectCommonParameter           CallFunc_GetDataTableRowFromName_OutRow_4;         // 0x0628(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_4;    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C8[0x3];                                     // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectPhysicParameter          CallFunc_GetDataTableRowFromName_OutRow_5;         // 0x0664(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_5;    // 0x06A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74C9[0x3];                                     // 0x06A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_LoadDataTable) == 0x000008, "Wrong alignment on PsychicObjectManager_C_LoadDataTable");
static_assert(sizeof(PsychicObjectManager_C_LoadDataTable) == 0x0006B0, "Wrong size on PsychicObjectManager_C_LoadDataTable");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, L_workRowNameList) == 0x000000, "Member 'PsychicObjectManager_C_LoadDataTable::L_workRowNameList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, L_captureRowNameList) == 0x000010, "Member 'PsychicObjectManager_C_LoadDataTable::L_captureRowNameList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, L_numberRowNameList) == 0x000020, "Member 'PsychicObjectManager_C_LoadDataTable::L_numberRowNameList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, L_sizeRowNameList) == 0x000030, "Member 'PsychicObjectManager_C_LoadDataTable::L_sizeRowNameList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, K2Node_MakeArray_Array) == 0x000040, "Member 'PsychicObjectManager_C_LoadDataTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, K2Node_MakeArray_Array_1) == 0x000050, "Member 'PsychicObjectManager_C_LoadDataTable::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Array_Index_Variable) == 0x000064, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, K2Node_MakeArray_Array_2) == 0x000068, "Member 'PsychicObjectManager_C_LoadDataTable::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000080, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000098, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x0000B0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Num_Variable_1) == 0x0000C0, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowNames_OutRowNames_3) == 0x0000C8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowNames_OutRowNames_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowNames_OutRowNames_4) == 0x0000E0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowNames_OutRowNames_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Counter_Variable_1) == 0x0000F4, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Num_Variable_2) == 0x000100, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Array_Index_Variable_2) == 0x000104, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000108, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000270, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000278, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0003E8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue) == 0x0003EC, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_CollisionCommonInfoToC_Out) == 0x0003F0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_CollisionCommonInfoToC_Out' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue_1) == 0x000460, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Counter_Variable_2) == 0x000464, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Less_IntInt_ReturnValue_1) == 0x000468, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Add_IntInt_ReturnValue_2) == 0x00046C, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Num_Variable_3) == 0x000470, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Array_Index_Variable_3) == 0x000474, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000478, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0004B0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Counter_Variable_3) == 0x0004B4, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004B8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Add_IntInt_ReturnValue_3) == 0x0004BC, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue_2) == 0x0004C0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Counter_Variable_4) == 0x0004C4, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Length_ReturnValue_3) == 0x0004C8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0004D0, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000608, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue_3) == 0x00060C, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Less_IntInt_ReturnValue_3) == 0x000610, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Add_IntInt_ReturnValue_4) == 0x000614, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Loop_Num_Variable_4) == 0x000618, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, Temp_int_Array_Index_Variable_4) == 0x00061C, "Member 'PsychicObjectManager_C_LoadDataTable::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Less_IntInt_ReturnValue_4) == 0x000620, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow_4) == 0x000628, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue_4) == 0x000658, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue_4) == 0x00065C, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Length_ReturnValue_4) == 0x000660, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_OutRow_5) == 0x000664, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_OutRow_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_GetDataTableRowFromName_ReturnValue_5) == 0x0006A4, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_GetDataTableRowFromName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTable, CallFunc_Array_Add_ReturnValue_5) == 0x0006A8, "Member 'PsychicObjectManager_C_LoadDataTable::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectParameter
// 0x0118 (0x0118 - 0x0000)
struct PsychicObjectManager_C_SetPsychicObjectParameter final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_idx;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectSizeType                        L_eftSize;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74CA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PsychicObjectComponent_C*           L_psyObjComp;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_size;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74CB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PsychicComponentMain_C*             L_psyCompMain;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74CC[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74CD[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74CE[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74CF[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FPsychicObjectData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D0[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicObjectParameter) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicObjectParameter");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicObjectParameter) == 0x000118, "Wrong size on PsychicObjectManager_C_SetPsychicObjectParameter");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, L_idx) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, L_eftSize) == 0x00000C, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::L_eftSize' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, L_psyObjComp) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::L_psyObjComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, L_size) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::L_size' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, L_psyCompMain) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::L_psyCompMain' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Array_Find_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000074, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00007C, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_GetEnumeratorName_ReturnValue) == 0x000084, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_RightChop_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C8, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectParameter, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000108, "Member 'PsychicObjectManager_C_SetPsychicObjectParameter::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabMovementData
// 0x00B0 (0x00B0 - 0x0000)
struct PsychicObjectManager_C_GetGrabMovementData final
{
public:
	struct FPsychicGrabMovementData               Grab_movement_data;                                // 0x0000(0x00B0)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetGrabMovementData) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetGrabMovementData");
static_assert(sizeof(PsychicObjectManager_C_GetGrabMovementData) == 0x0000B0, "Wrong size on PsychicObjectManager_C_GetGrabMovementData");
static_assert(offsetof(PsychicObjectManager_C_GetGrabMovementData, Grab_movement_data) == 0x000000, "Member 'PsychicObjectManager_C_GetGrabMovementData::Grab_movement_data' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabMovementSizeData
// 0x00C0 (0x00C0 - 0x0000)
struct PsychicObjectManager_C_GetGrabMovementSizeData final
{
public:
	EPsychicObjectSizeType                        Obj_size_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicGrabMovementSizeData           Grab_movement_size_data;                           // 0x0008(0x00B0)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetGrabMovementSizeData) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetGrabMovementSizeData");
static_assert(sizeof(PsychicObjectManager_C_GetGrabMovementSizeData) == 0x0000C0, "Wrong size on PsychicObjectManager_C_GetGrabMovementSizeData");
static_assert(offsetof(PsychicObjectManager_C_GetGrabMovementSizeData, Obj_size_in) == 0x000000, "Member 'PsychicObjectManager_C_GetGrabMovementSizeData::Obj_size_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabMovementSizeData, Grab_movement_size_data) == 0x000008, "Member 'PsychicObjectManager_C_GetGrabMovementSizeData::Grab_movement_size_data' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabMovementSizeData, L_index) == 0x0000B8, "Member 'PsychicObjectManager_C_GetGrabMovementSizeData::L_index' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabParameterData
// 0x0034 (0x0034 - 0x0000)
struct PsychicObjectManager_C_GetGrabParameterData final
{
public:
	struct FPsychicGrabParameterData              Grab_parameter_data;                               // 0x0000(0x0034)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetGrabParameterData) == 0x000004, "Wrong alignment on PsychicObjectManager_C_GetGrabParameterData");
static_assert(sizeof(PsychicObjectManager_C_GetGrabParameterData) == 0x000034, "Wrong size on PsychicObjectManager_C_GetGrabParameterData");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterData, Grab_parameter_data) == 0x000000, "Member 'PsychicObjectManager_C_GetGrabParameterData::Grab_parameter_data' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabParameterSizeData
// 0x0024 (0x0024 - 0x0000)
struct PsychicObjectManager_C_GetGrabParameterSizeData final
{
public:
	EPsychicObjectSizeType                        Obj_size_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicGrabParameterSizeData          Grab_parameter_size_data;                          // 0x0004(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetGrabParameterSizeData) == 0x000004, "Wrong alignment on PsychicObjectManager_C_GetGrabParameterSizeData");
static_assert(sizeof(PsychicObjectManager_C_GetGrabParameterSizeData) == 0x000024, "Wrong size on PsychicObjectManager_C_GetGrabParameterSizeData");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterSizeData, Obj_size_in) == 0x000000, "Member 'PsychicObjectManager_C_GetGrabParameterSizeData::Obj_size_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterSizeData, Grab_parameter_size_data) == 0x000004, "Member 'PsychicObjectManager_C_GetGrabParameterSizeData::Grab_parameter_size_data' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterSizeData, L_index) == 0x000018, "Member 'PsychicObjectManager_C_GetGrabParameterSizeData::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterSizeData, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_GetGrabParameterSizeData::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabParameterSizeData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_GetGrabParameterSizeData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetGrabPosData
// 0x0044 (0x0044 - 0x0000)
struct PsychicObjectManager_C_GetGrabPosData final
{
public:
	int32                                         Grab_index_in;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicGrabPosData                    Grab_pos_data;                                     // 0x0004(0x003C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetGrabPosData) == 0x000004, "Wrong alignment on PsychicObjectManager_C_GetGrabPosData");
static_assert(sizeof(PsychicObjectManager_C_GetGrabPosData) == 0x000044, "Wrong size on PsychicObjectManager_C_GetGrabPosData");
static_assert(offsetof(PsychicObjectManager_C_GetGrabPosData, Grab_index_in) == 0x000000, "Member 'PsychicObjectManager_C_GetGrabPosData::Grab_index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabPosData, Grab_pos_data) == 0x000004, "Member 'PsychicObjectManager_C_GetGrabPosData::Grab_pos_data' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetGrabPosData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_GetGrabPosData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackParameter
// 0x0300 (0x0300 - 0x0000)
struct PsychicObjectManager_C_GetAttackParameter final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCCollisionCommonInfo                 Common_info;                                       // 0x0008(0x0070)(Parm, OutParm)
	struct FHCSkillCommonInfo                     Skill_info;                                        // 0x0078(0x00F0)(Parm, OutParm)
	BattlePrototype::EPsychicObjectID             L_spStartIdx;                                      // 0x0168(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bUnqObj;                                         // 0x0169(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D3[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_idx;                                             // 0x016C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_attackIdx;                                       // 0x0170(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_buttonIdx;                                       // 0x0174(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sizeIdx;                                         // 0x0178(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D4[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCCollisionCommonInfo                 CallFunc_GetUniqueObjectAttackParameter_OutCommonInto; // 0x0180(0x0070)()
	struct FHCSkillCommonInfo                     CallFunc_GetUniqueObjectAttackParameter_OutSkillInfo; // 0x01F0(0x00F0)()
	bool                                          CallFunc_GetUniqueObjectAttackParameter_ReturnValue; // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D5[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAttackParameterIndex_attack_index;     // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetAttackParameter) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAttackParameter");
static_assert(sizeof(PsychicObjectManager_C_GetAttackParameter) == 0x000300, "Wrong size on PsychicObjectManager_C_GetAttackParameter");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetAttackParameter::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, Common_info) == 0x000008, "Member 'PsychicObjectManager_C_GetAttackParameter::Common_info' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, Skill_info) == 0x000078, "Member 'PsychicObjectManager_C_GetAttackParameter::Skill_info' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_spStartIdx) == 0x000168, "Member 'PsychicObjectManager_C_GetAttackParameter::L_spStartIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_bUnqObj) == 0x000169, "Member 'PsychicObjectManager_C_GetAttackParameter::L_bUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_idx) == 0x00016C, "Member 'PsychicObjectManager_C_GetAttackParameter::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_attackIdx) == 0x000170, "Member 'PsychicObjectManager_C_GetAttackParameter::L_attackIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_buttonIdx) == 0x000174, "Member 'PsychicObjectManager_C_GetAttackParameter::L_buttonIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, L_sizeIdx) == 0x000178, "Member 'PsychicObjectManager_C_GetAttackParameter::L_sizeIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_IsValid_ReturnValue) == 0x00017C, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_GetUniqueObjectAttackParameter_OutCommonInto) == 0x000180, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_GetUniqueObjectAttackParameter_OutCommonInto' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_GetUniqueObjectAttackParameter_OutSkillInfo) == 0x0001F0, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_GetUniqueObjectAttackParameter_OutSkillInfo' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_GetUniqueObjectAttackParameter_ReturnValue) == 0x0002E0, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_GetUniqueObjectAttackParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_GetAttackParameterIndex_attack_index) == 0x0002E4, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_GetAttackParameterIndex_attack_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x0002E8, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002F8, "Member 'PsychicObjectManager_C_GetAttackParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectTickRadius
// 0x000C (0x000C - 0x0000)
struct PsychicObjectManager_C_SetPsychicObjectTickRadius final
{
public:
	float                                         Radius_in;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicObjectTickRadius) == 0x000004, "Wrong alignment on PsychicObjectManager_C_SetPsychicObjectTickRadius");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicObjectTickRadius) == 0x00000C, "Wrong size on PsychicObjectManager_C_SetPsychicObjectTickRadius");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectTickRadius, Radius_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicObjectTickRadius::Radius_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectTickRadius, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_SetPsychicObjectTickRadius::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectTickRadius, CallFunc_Square_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicObjectTickRadius::CallFunc_Square_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsyObjRespawn
// 0x0060 (0x0060 - 0x0000)
struct PsychicObjectManager_C_SetPsyObjRespawn final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bUnique;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D7[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74D8[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74D9[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74DA[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsyObjRespawn) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsyObjRespawn");
static_assert(sizeof(PsychicObjectManager_C_SetPsyObjRespawn) == 0x000060, "Wrong size on PsychicObjectManager_C_SetPsyObjRespawn");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, L_bUnique) == 0x000008, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::L_bUnique' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000018, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_IsMissionActive_ReturnValue) == 0x000021, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue_1) == 0x000029, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue_2) == 0x00002A, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Array_Add_ReturnValue_1) == 0x00002C, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue_3) == 0x000031, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue_4) == 0x000032, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_BooleanOR_ReturnValue_5) == 0x000033, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Array_Add_ReturnValue_2) == 0x000038, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000040, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000051, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_IsValid_ReturnValue_2) == 0x000052, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Array_Add_ReturnValue_3) == 0x000058, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjRespawn, CallFunc_Array_Add_ReturnValue_4) == 0x00005C, "Member 'PsychicObjectManager_C_SetPsyObjRespawn::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsyObjRespawn
// 0x01A8 (0x01A8 - 0x0000)
struct PsychicObjectManager_C_UpdatePsyObjRespawn final
{
public:
	bool                                          L_bSkipBrainFieldCheck;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bInstant;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_bReplace;                                        // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74DB[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_nextRespawn;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bUnqObj;                                         // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74DC[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_deltaSec;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74DD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_objName;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                L_objVector;                                       // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74DE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74DF[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E0[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E1[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E2[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicObjectBaseInterface_C> CallFunc_IsPsychicObjectActive_self_CastInput;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectActive_IsActive;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E3[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRespawnRestrictRadius_radius;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E4[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E5[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E6[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E7[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E8[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74E9[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74EA[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicObjectBaseInterface_C> K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface; // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74EB[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74EC[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74ED[0x2];                                     // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74EE[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74EF[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_4;            // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F0[0x2];                                     // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F1[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F2[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_5;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsyObjRespawn) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdatePsyObjRespawn");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsyObjRespawn) == 0x0001A8, "Wrong size on PsychicObjectManager_C_UpdatePsyObjRespawn");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_bSkipBrainFieldCheck) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_bSkipBrainFieldCheck' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_bInstant) == 0x000001, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_bInstant' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_bReplace) == 0x000002, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_bReplace' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_index) == 0x000004, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_nextRespawn) == 0x000008, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_nextRespawn' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_bUnqObj) == 0x00000C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_bUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_deltaSec) == 0x000010, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_deltaSec' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_objName) == 0x000018, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_objName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_objVector) == 0x000028, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_objVector' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, L_psyObj) == 0x000038, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00004C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Array_Index_Variable) == 0x000050, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Not_PreBool_ReturnValue_1) == 0x000054, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_IsPsychicObjectActive_self_CastInput) == 0x000060, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_IsPsychicObjectActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_IsPsychicObjectActive_IsActive) == 0x000070, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_IsPsychicObjectActive_IsActive' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetBrainFieldManager_Manager) == 0x000078, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanOR_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_InBranField_InBrainDield) == 0x000082, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Not_PreBool_ReturnValue_2) == 0x000083, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Loop_Num_Variable_1) == 0x000084, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetRespawnRestrictRadius_radius) == 0x000088, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetRespawnRestrictRadius_radius' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Square_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue) == 0x000094, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Add_ReturnValue_1) == 0x0000A0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_VSizeSquared_ReturnValue) == 0x0000A4, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0000AC, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Add_ReturnValue_2) == 0x0000B0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Add_ReturnValue_3) == 0x0000B4, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0000B8, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Length_ReturnValue_1) == 0x0000BC, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Length_ReturnValue_2) == 0x0000C4, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0000D9, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanOR_ReturnValue_1) == 0x0000DA, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000DC, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetCameraLocation_ReturnValue) == 0x0000E4, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x0000F0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface) == 0x0000F8, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00010C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000118, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_IsValid_ReturnValue_2) == 0x000124, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BreakVector_X) == 0x000128, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BreakVector_Y) == 0x00012C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BreakVector_Z) == 0x000130, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_MakeVector_ReturnValue) == 0x000134, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Length_ReturnValue_3) == 0x000140, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000144, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanAND_ReturnValue_1) == 0x000145, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Normal_ReturnValue) == 0x000148, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000158, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, Temp_int_Loop_Counter_Variable_1) == 0x000160, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetCameraRotation_ReturnValue) == 0x000164, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_GetForwardVector_ReturnValue) == 0x000170, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x00017C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Dot_VectorVector_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanAND_ReturnValue_2) == 0x000184, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue_4) == 0x000185, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000188, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00018C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000198, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00019C, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_Less_FloatFloat_ReturnValue_5) == 0x0001A0, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_Less_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsyObjRespawn, CallFunc_BooleanOR_ReturnValue_2) == 0x0001A1, "Member 'PsychicObjectManager_C_UpdatePsyObjRespawn::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispPsyObjRespawn
// 0x01C0 (0x01C0 - 0x0000)
struct PsychicObjectManager_C_DebugDispPsyObjRespawn final
{
public:
	class FString                                 L_str2;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F4[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F5[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F6[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDispPsyObjRespawn) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDispPsyObjRespawn");
static_assert(sizeof(PsychicObjectManager_C_DebugDispPsyObjRespawn) == 0x0001C0, "Wrong size on PsychicObjectManager_C_DebugDispPsyObjRespawn");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, L_str2) == 0x000000, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::L_str2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, L_str) == 0x000010, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Array_Index_Variable) == 0x000024, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Conv_FloatToString_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000068, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000090, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000100, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000110, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000120, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000130, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000140, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Array_Get_Item_1) == 0x000158, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_GetDisplayName_ReturnValue_1) == 0x000160, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000170, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Conv_BoolToString_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000190, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsyObjRespawn, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugDispPsyObjRespawn::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CreatePsychicBullet
// 0x01F0 (0x01F0 - 0x0000)
struct PsychicObjectManager_C_CreatePsychicBullet final
{
public:
	BattlePrototype::EPsychicObjectID             Psy_obj_id_in;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bul_magazine;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bul_max;                                           // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_BulletDataIndex;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_idx;                                             // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_bulletObj;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_listIdx;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_listlen;                                         // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_count;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           L_softList;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	BattlePrototype::EPsychicObjectID             L_objId;                                           // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74F9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           bulletSoftClassList;                               // 0x0050(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicBulletDataIndex_index;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetPsychicBulletData_index;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74FA[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74FB[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74FC[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74FD[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74FE[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74FF[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7500[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetUnqObjClass_id;                        // 0x0120(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7501[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectBulletData               K2Node_MakeStruct_PsychicObjectBulletData;         // 0x0150(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7502[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectBulletData               K2Node_MakeStruct_PsychicObjectBulletData_1;       // 0x01A0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_CreatePsychicBullet) == 0x000010, "Wrong alignment on PsychicObjectManager_C_CreatePsychicBullet");
static_assert(sizeof(PsychicObjectManager_C_CreatePsychicBullet) == 0x0001F0, "Wrong size on PsychicObjectManager_C_CreatePsychicBullet");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, Psy_obj_id_in) == 0x000000, "Member 'PsychicObjectManager_C_CreatePsychicBullet::Psy_obj_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, Psy_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_CreatePsychicBullet::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, bul_magazine) == 0x000010, "Member 'PsychicObjectManager_C_CreatePsychicBullet::bul_magazine' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, bul_max) == 0x000014, "Member 'PsychicObjectManager_C_CreatePsychicBullet::bul_max' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_BulletDataIndex) == 0x000018, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_BulletDataIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_idx) == 0x00001C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_bulletObj) == 0x000020, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_bulletObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_listIdx) == 0x000028, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_listIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_listlen) == 0x00002C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_listlen' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_count) == 0x000030, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_count' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_softList) == 0x000038, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_softList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, L_objId) == 0x000048, "Member 'PsychicObjectManager_C_CreatePsychicBullet::L_objId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, bulletSoftClassList) == 0x000050, "Member 'PsychicObjectManager_C_CreatePsychicBullet::bulletSoftClassList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_IsValid_ReturnValue) == 0x000062, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_IsValid_ReturnValue_1) == 0x000063, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_GetPsychicBulletDataIndex_index) == 0x000068, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_GetPsychicBulletDataIndex_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_SetPsychicBulletData_index) == 0x00006C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_SetPsychicBulletData_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000071, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B4, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0000B8, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0000F0, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000108, "Member 'PsychicObjectManager_C_CreatePsychicBullet::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'PsychicObjectManager_C_CreatePsychicBullet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, Temp_int_Variable) == 0x000114, "Member 'PsychicObjectManager_C_CreatePsychicBullet::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000118, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_GetUnqObjClass_id) == 0x000120, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_GetUnqObjClass_id' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Add_ReturnValue_1) == 0x000148, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_MakeLiteralByte_ReturnValue) == 0x00014C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, K2Node_MakeStruct_PsychicObjectBulletData) == 0x000150, "Member 'PsychicObjectManager_C_CreatePsychicBullet::K2Node_MakeStruct_PsychicObjectBulletData' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Greater_IntInt_ReturnValue) == 0x000198, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Length_ReturnValue_1) == 0x00019C, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, K2Node_MakeStruct_PsychicObjectBulletData_1) == 0x0001A0, "Member 'PsychicObjectManager_C_CreatePsychicBullet::K2Node_MakeStruct_PsychicObjectBulletData_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreatePsychicBullet, CallFunc_Array_Add_ReturnValue_2) == 0x0001E8, "Member 'PsychicObjectManager_C_CreatePsychicBullet::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicBullet
// 0x0068 (0x0068 - 0x0000)
struct PsychicObjectManager_C_UpdatePsychicBullet final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7503[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7504[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectActiveC_ReturnValue;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7505[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7506[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsychicBullet) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdatePsychicBullet");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsychicBullet) == 0x000068, "Wrong size on PsychicObjectManager_C_UpdatePsychicBullet");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, L_index) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000018, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_bool_True_if_break_was_hit_Variable) == 0x000029, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_IsPsychicObjectActiveC_ReturnValue) == 0x00002A, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_IsPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Not_PreBool_ReturnValue) == 0x00002B, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_Less_IntInt_ReturnValue_2) == 0x000061, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicBullet, CallFunc_IsValid_ReturnValue) == 0x000063, "Member 'PsychicObjectManager_C_UpdatePsychicBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicBullet
// 0x0048 (0x0048 - 0x0000)
struct PsychicObjectManager_C_GetPsychicBullet final
{
public:
	BattlePrototype::EPsychicObjectID             Psy_obj_id_in;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7507[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Psy_bullet;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_psyBulletIndex;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7508[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicBulletDataIndex_index;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7509[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750A[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetPsychicBullet) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetPsychicBullet");
static_assert(sizeof(PsychicObjectManager_C_GetPsychicBullet) == 0x000048, "Wrong size on PsychicObjectManager_C_GetPsychicBullet");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, Psy_obj_id_in) == 0x000000, "Member 'PsychicObjectManager_C_GetPsychicBullet::Psy_obj_id_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, Parent_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_GetPsychicBullet::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, Psy_bullet) == 0x000010, "Member 'PsychicObjectManager_C_GetPsychicBullet::Psy_bullet' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, L_psyBulletIndex) == 0x000018, "Member 'PsychicObjectManager_C_GetPsychicBullet::L_psyBulletIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, L_psyObj) == 0x000020, "Member 'PsychicObjectManager_C_GetPsychicBullet::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_GetPsychicBulletDataIndex_index) == 0x000028, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_GetPsychicBulletDataIndex_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_Array_Get_Item) == 0x000030, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBullet, CallFunc_Array_RemoveItem_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_GetPsychicBullet::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ResetPsychicBullet
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_ResetPsychicBullet final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_bullet_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PsychicObjectBaseInterface_C> CallFunc_SetPsychicObjectActive_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetVisibilityPsyObj_return;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ResetPsychicBullet) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ResetPsychicBullet");
static_assert(sizeof(PsychicObjectManager_C_ResetPsychicBullet) == 0x000020, "Wrong size on PsychicObjectManager_C_ResetPsychicBullet");
static_assert(offsetof(PsychicObjectManager_C_ResetPsychicBullet, Psy_bullet_in) == 0x000000, "Member 'PsychicObjectManager_C_ResetPsychicBullet::Psy_bullet_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetPsychicBullet, CallFunc_SetPsychicObjectActive_self_CastInput) == 0x000008, "Member 'PsychicObjectManager_C_ResetPsychicBullet::CallFunc_SetPsychicObjectActive_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetPsychicBullet, CallFunc_SetVisibilityPsyObj_return) == 0x000018, "Member 'PsychicObjectManager_C_ResetPsychicBullet::CallFunc_SetVisibilityPsyObj_return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDispPsychicBullet
// 0x01E0 (0x01E0 - 0x0000)
struct PsychicObjectManager_C_DebugDispPsychicBullet final
{
public:
	struct FPsychicObjectBulletData               L_data;                                            // 0x0000(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750B[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_750C[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_750D[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_750E[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_750F[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDispPsychicBullet) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDispPsychicBullet");
static_assert(sizeof(PsychicObjectManager_C_DebugDispPsychicBullet) == 0x0001E0, "Wrong size on PsychicObjectManager_C_DebugDispPsychicBullet");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, L_data) == 0x000000, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::L_data' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, L_str) == 0x000048, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000088, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000098, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Array_Length_ReturnValue_3) == 0x0000AC, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, Temp_int_Array_Index_Variable) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000118, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000140, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000150, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Less_IntInt_ReturnValue) == 0x000160, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000168, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000178, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000190, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001C0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDispPsychicBullet, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0001D0, "Member 'PsychicObjectManager_C_DebugDispPsychicBullet::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectHidden
// 0x0058 (0x0058 - 0x0000)
struct PsychicObjectManager_C_SetPsychicObjectHidden final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7510[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7511[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7512[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7513[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7514[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7515[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicObjectHidden) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicObjectHidden");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicObjectHidden) == 0x000058, "Wrong size on PsychicObjectManager_C_SetPsychicObjectHidden");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, Temp_int_Variable) == 0x000030, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectHidden, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_SetPsychicObjectHidden::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateFocusPsychicObject
// 0x0248 (0x0248 - 0x0000)
struct PsychicObjectManager_C_UpdateFocusPsychicObject final
{
public:
	bool                                          L_bBrainField;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7516[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickAttackObjectBase_C*       L_focusOnUnqMap;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_focusOnUnqPsy;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickAttackObjectBase_C*       L_focusOffUnqMap;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_focusOffUnqPsy;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_oldObj;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          L_oldMap;                                          // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          L_oldPsy;                                          // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          L_newUnq;                                          // 0x002B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          L_newUnqMap;                                       // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          L_newUnqPsy;                                       // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7517[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickAttackObjectBase_C*       L_unqMap;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_unqPsy;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_unqObj;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 L_nrlObj;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPsychicObjectFocusResult              L_result;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                L_dirRoot;                                         // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posRoot;                                         // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerAnimControllerComponent*         CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotifyInputPsychic_ReturnValue;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseHologram_bUse;                       // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotifyInputAttack_ReturnValue;          // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseHologram_bUse_1;                     // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result;                    // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IPlayerInterface>      CallFunc_IsOnReadySAS_self_CastInput;              // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadySAS_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActionStatus_Result_1;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7518[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_IsOnReadySAS_self_CastInput_1;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadySAS_ReturnValue_1;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7519[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerAnimControllerComponent*         CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue_1; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNotifyInputPsychic_ReturnValue_1;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpen_bOpen;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotifyInputAttack_ReturnValue_1;        // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpen_bOpen_1;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExceptionallyAllowTriggerEffect_allow;    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExceptionallyAllowTriggerEffect_allow_1;  // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerActionKind                             CallFunc_GetCurrentActionState_Kind;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue;      // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInCapture_Capturing;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue;         // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_1;       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_2;       // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_3;       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable;                  // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionPsychic_ReturnValue;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751A[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainCrashManager_C*                CallFunc_GetBrainCrashManager_Manager;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable_1;                // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return_1;           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnableInputPsychicCombo_self_CastInput; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableInputPsychicCombo_bEnable;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionPsychic_ReturnValue_1;      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751B[0x2];                                     // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicGauge_Value;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751C[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicGauge_Value_1;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcPsychicCost_Cost_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751D[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> CallFunc_GetPsychicObjectSize_self_CastInput;      // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        CallFunc_GetPsychicObjectSize_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue_1;    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751E[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> CallFunc_GetPsychicObjectSize_self_CastInput_1;    // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        CallFunc_GetPsychicObjectSize_ReturnValue_1;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IPsychicObjectInterface> CallFunc_GetPsychicObjectSize_self_CastInput_2;    // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        CallFunc_GetPsychicObjectSize_ReturnValue_2;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue_2;    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_4;       // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue_3;    // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_5;       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751F[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7520[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentChargeRate_Rate;                // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7521[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickAttackObjectBase_C*       K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_6;       // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTriggerInputStatus_ReturnValue_7;       // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x01A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x01A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return_2;           // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadyCombinationVision_ReturnValue;   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7522[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainCrashAccessEnable_Return;          // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOnReadyCombinationVision_ReturnValue_1; // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectState                           CallFunc_GetPsychicObjectState_return_3;           // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x01BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7523[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickAttackObjectBase_C*       K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base_1; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7524[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusSearchEnable_ReturnValue;          // 0x01E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusSearchPause_ReturnValue;           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7525[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectFocusResult              CallFunc_GetFocusPsychicObject_result;             // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7526[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectFocusResult              K2Node_MakeStruct_PsychicObjectFocusResult;        // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7527[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableBattleActionFlag_ReturnValue;    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x022B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        K2Node_Select_Default;                             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x022E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x022F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isCapturing_return;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7528[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic_1;    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdateFocusPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdateFocusPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_UpdateFocusPsychicObject) == 0x000248, "Wrong size on PsychicObjectManager_C_UpdateFocusPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_bBrainField) == 0x000000, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_bBrainField' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_focusOnUnqMap) == 0x000008, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_focusOnUnqMap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_focusOnUnqPsy) == 0x000010, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_focusOnUnqPsy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_focusOffUnqMap) == 0x000018, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_focusOffUnqMap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_focusOffUnqPsy) == 0x000020, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_focusOffUnqPsy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_oldObj) == 0x000028, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_oldObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_oldMap) == 0x000029, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_oldMap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_oldPsy) == 0x00002A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_oldPsy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_newUnq) == 0x00002B, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_newUnq' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_newUnqMap) == 0x00002C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_newUnqMap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_newUnqPsy) == 0x00002D, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_newUnqPsy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_unqMap) == 0x000030, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_unqMap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_unqPsy) == 0x000038, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_unqPsy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_unqObj) == 0x000040, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_unqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_nrlObj) == 0x000048, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_nrlObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_result) == 0x000050, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_result' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_dirRoot) == 0x000060, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_dirRoot' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, L_posRoot) == 0x00006C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::L_posRoot' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsNotifyInputPsychic_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsNotifyInputPsychic_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsUseHologram_bUse) == 0x000082, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsUseHologram_bUse' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsNotifyInputAttack_ReturnValue) == 0x000083, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsNotifyInputAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanAND_ReturnValue) == 0x000084, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000085, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsUseHologram_bUse_1) == 0x000086, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsUseHologram_bUse_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsActionStatus_Result) == 0x000087, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsActionStatus_Result' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadySAS_self_CastInput) == 0x000088, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadySAS_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadySAS_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadySAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsActionStatus_Result_1) == 0x000099, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsActionStatus_Result_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue) == 0x00009A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadySAS_self_CastInput_1) == 0x0000A0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadySAS_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadySAS_ReturnValue_1) == 0x0000B0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadySAS_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue_1) == 0x0000B8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPlayerAnimControllerComponentFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsNotifyInputPsychic_ReturnValue_1) == 0x0000C0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsNotifyInputPsychic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsContentsOpen_bOpen) == 0x0000C1, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsContentsOpen_bOpen' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsNotifyInputAttack_ReturnValue_1) == 0x0000C3, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsNotifyInputAttack_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C4, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsContentsOpen_bOpen_1) == 0x0000C5, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsContentsOpen_bOpen_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_ExceptionallyAllowTriggerEffect_allow) == 0x0000C6, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_ExceptionallyAllowTriggerEffect_allow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_ExceptionallyAllowTriggerEffect_allow_1) == 0x0000C7, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_ExceptionallyAllowTriggerEffect_allow_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetCurrentActionState_Kind) == 0x0000C8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetCurrentActionState_Kind' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C9, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetComboAttackInputKind_ReturnValue) == 0x0000CA, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetComboAttackInputKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000CB, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CC, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000CD, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000CE, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0000CF, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D2, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_3) == 0x0000D3, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsInCapture_Capturing) == 0x0000D4, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsInCapture_Capturing' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_4) == 0x0000D5, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x0000D6, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue) == 0x0000D7, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_1) == 0x0000D8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_2) == 0x0000D9, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_3) == 0x0000DA, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsDisableAction_bEnable) == 0x0000DB, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsDisableAction_bEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsEnableActionPsychic_ReturnValue) == 0x0000DC, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsEnableActionPsychic_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetBrainCrashManager_Manager) == 0x0000E0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetBrainCrashManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_3) == 0x0000E8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectState_return) == 0x0000E9, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0000EA, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsDisableAction_bEnable_1) == 0x0000EB, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsDisableAction_bEnable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_4) == 0x0000EC, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectState_return_1) == 0x0000ED, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0000EE, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_5) == 0x0000EF, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsEnableInputPsychicCombo_self_CastInput) == 0x0000F0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsEnableInputPsychicCombo_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsEnableInputPsychicCombo_bEnable) == 0x000100, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsEnableInputPsychicCombo_bEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsEnableActionPsychic_ReturnValue_1) == 0x000101, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsEnableActionPsychic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_CalcPsychicCost_Cost) == 0x000104, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_CalcPsychicCost_Cost' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicGauge_Value) == 0x000108, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicGauge_Value' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00010C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicGauge_Value_1) == 0x000110, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicGauge_Value_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_CalcPsychicCost_Cost_1) == 0x000114, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_CalcPsychicCost_Cost_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000118, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsFlying_ReturnValue) == 0x000119, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsFalling_ReturnValue) == 0x00011A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_5) == 0x00011B, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_self_CastInput) == 0x000120, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_ReturnValue) == 0x000130, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetComboAttackInputKind_ReturnValue_1) == 0x000131, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetComboAttackInputKind_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_self_CastInput_1) == 0x000138, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_ReturnValue_1) == 0x000148, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000149, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_SwitchEnum_CmpSuccess) == 0x00014A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00014B, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00014C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00014D, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00014E, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_6) == 0x00014F, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_self_CastInput_2) == 0x000150, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectSize_ReturnValue_2) == 0x000160, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_7) == 0x000161, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_8) == 0x000162, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_9) == 0x000163, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetComboAttackInputKind_ReturnValue_2) == 0x000164, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetComboAttackInputKind_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x000165, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x000166, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x000167, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_10) == 0x000168, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_11) == 0x000169, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_4) == 0x00016A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetComboAttackInputKind_ReturnValue_3) == 0x00016B, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetComboAttackInputKind_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x00016C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x00016D, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x00016E, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_12) == 0x00016F, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_5) == 0x000170, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_13) == 0x000171, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetBrainFieldManager_Manager) == 0x000178, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000180, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_6) == 0x000188, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_InBranField_InBrainDield) == 0x000189, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_7) == 0x00018A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetCurrentChargeRate_Rate) == 0x00018C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetCurrentChargeRate_Rate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000190, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base) == 0x000198, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_8) == 0x0001A1, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_9) == 0x0001A2, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_6) == 0x0001A3, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsTriggerInputStatus_ReturnValue_7) == 0x0001A4, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsTriggerInputStatus_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_10) == 0x0001A5, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_11) == 0x0001A6, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_12) == 0x0001A7, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectState_return_2) == 0x0001A8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectState_return_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x0001A9, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x0001AA, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanOR_ReturnValue_14) == 0x0001AB, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadyCombinationVision_ReturnValue) == 0x0001AC, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadyCombinationVision_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetEnemyManager_Manager) == 0x0001B0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_13) == 0x0001B8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsBrainCrashAccessEnable_Return) == 0x0001B9, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsBrainCrashAccessEnable_Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_14) == 0x0001BA, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsOnReadyCombinationVision_ReturnValue_1) == 0x0001BB, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsOnReadyCombinationVision_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPsychicObjectState_return_3) == 0x0001BC, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPsychicObjectState_return_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x0001BD, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_15) == 0x0001BE, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_16) == 0x0001BF, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_17) == 0x0001C0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_18) == 0x0001C1, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base_1) == 0x0001C8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_AsBP_Map_Gimmick_Attack_Object_Base_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0001D8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_bSuccess_2) == 0x0001E0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_19) == 0x0001E1, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001E2, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0001E3, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanAND_ReturnValue_2) == 0x0001E4, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_BooleanAND_ReturnValue_3) == 0x0001E5, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0001E6, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsFocusSearchEnable_ReturnValue) == 0x0001E7, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsFocusSearchEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsFocusSearchPause_ReturnValue) == 0x0001E8, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsFocusSearchPause_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetFocusPsychicObject_result) == 0x0001F0, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetFocusPsychicObject_result' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_Not_PreBool_ReturnValue_2) == 0x000200, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_MakeStruct_PsychicObjectFocusResult) == 0x000208, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_MakeStruct_PsychicObjectFocusResult' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_Not_PreBool_ReturnValue_3) == 0x000218, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_GetPlayerManager_PlayerManager) == 0x000220, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_20) == 0x000228, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsDisableBattleActionFlag_ReturnValue) == 0x000229, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsDisableBattleActionFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, Temp_bool_Variable) == 0x00022A, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00022B, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_Select_Default) == 0x00022C, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_SwitchEnum_CmpSuccess_1) == 0x00022D, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_21) == 0x00022E, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_IsValid_ReturnValue_22) == 0x00022F, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_isCapturing_return) == 0x000230, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_isCapturing_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic_1) == 0x000238, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, K2Node_DynamicCast_bSuccess_3) == 0x000240, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateFocusPsychicObject, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x000241, "Member 'PsychicObjectManager_C_UpdateFocusPsychicObject::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CaptureFocusObject
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_CaptureFocusObject final
{
public:
	class ARsBattleHero_C*                        Capture_owner_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unique_obj_in;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Air_in;                                            // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7529[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CaptureFocusObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CaptureFocusObject");
static_assert(sizeof(PsychicObjectManager_C_CaptureFocusObject) == 0x000028, "Wrong size on PsychicObjectManager_C_CaptureFocusObject");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Capture_owner_in) == 0x000000, "Member 'PsychicObjectManager_C_CaptureFocusObject::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Unique_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_CaptureFocusObject::Unique_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Combo_in) == 0x000009, "Member 'PsychicObjectManager_C_CaptureFocusObject::Combo_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Npc_in) == 0x00000A, "Member 'PsychicObjectManager_C_CaptureFocusObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Enemy_in) == 0x00000B, "Member 'PsychicObjectManager_C_CaptureFocusObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Air_in) == 0x00000C, "Member 'PsychicObjectManager_C_CaptureFocusObject::Air_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, Return) == 0x00000D, "Member 'PsychicObjectManager_C_CaptureFocusObject::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_CaptureFocusObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, CallFunc_GetPsychicObject_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_CaptureFocusObject::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_CaptureFocusObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CaptureFocusObject, CallFunc_SetPsychicObjectCapture_return) == 0x000021, "Member 'PsychicObjectManager_C_CaptureFocusObject::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AttackCaptureObject
// 0x0080 (0x0080 - 0x0000)
struct PsychicObjectManager_C_AttackCaptureObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direct_drop_in;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752A[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Copy_count_in;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Unique_object;                                     // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bUnqObj;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj_1;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752D[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752E[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue_1;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_AttackCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_AttackCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_AttackCaptureObject) == 0x000080, "Wrong size on PsychicObjectManager_C_AttackCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_AttackCaptureObject::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Target_actor_in) == 0x000008, "Member 'PsychicObjectManager_C_AttackCaptureObject::Target_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Direct_drop_in) == 0x000010, "Member 'PsychicObjectManager_C_AttackCaptureObject::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Npc_in) == 0x000011, "Member 'PsychicObjectManager_C_AttackCaptureObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Enemy_in) == 0x000012, "Member 'PsychicObjectManager_C_AttackCaptureObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Copy_count_in) == 0x000014, "Member 'PsychicObjectManager_C_AttackCaptureObject::Copy_count_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Return) == 0x000018, "Member 'PsychicObjectManager_C_AttackCaptureObject::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, Unique_object) == 0x000020, "Member 'PsychicObjectManager_C_AttackCaptureObject::Unique_object' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, L_bUnqObj) == 0x000028, "Member 'PsychicObjectManager_C_AttackCaptureObject::L_bUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, L_psyObj) == 0x000030, "Member 'PsychicObjectManager_C_AttackCaptureObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_GetPsychicObject_psy_obj) == 0x000038, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_GetPsychicObject_psy_obj_1) == 0x000040, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_GetPsychicObject_psy_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000050, "Member 'PsychicObjectManager_C_AttackCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PsychicObjectManager_C_AttackCaptureObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000061, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000068, "Member 'PsychicObjectManager_C_AttackCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'PsychicObjectManager_C_AttackCaptureObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue_1) == 0x000079, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_SetPsychicObjectAttack_return) == 0x00007A, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCaptureObject, CallFunc_IsValid_ReturnValue_2) == 0x00007B, "Member 'PsychicObjectManager_C_AttackCaptureObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CancelCaptureObject
// 0x0048 (0x0048 - 0x0000)
struct PsychicObjectManager_C_CancelCaptureObject final
{
public:
	bool                                          Npc_in;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_752F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7530[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7531[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CancelCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CancelCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_CancelCaptureObject) == 0x000048, "Wrong size on PsychicObjectManager_C_CancelCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, Npc_in) == 0x000000, "Member 'PsychicObjectManager_C_CancelCaptureObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, Enemy_in) == 0x000001, "Member 'PsychicObjectManager_C_CancelCaptureObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CancelCaptureObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_SetPsychicObjectCapture_return) == 0x000010, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_GetPsychicObject_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_GetPsychicObject_psy_obj_1) == 0x000020, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_GetPsychicObject_psy_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000030, "Member 'PsychicObjectManager_C_CancelCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PsychicObjectManager_C_CancelCaptureObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000041, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCaptureObject, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'PsychicObjectManager_C_CancelCaptureObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AttackComboCaptureObject
// 0x0078 (0x0078 - 0x0000)
struct PsychicObjectManager_C_AttackComboCaptureObject final
{
public:
	class AActor*                                 Target_actor_in;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attack_level_in;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attack_index_in;                                   // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Attract_time_in;                                   // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7532[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          Anim_seq_in;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Air_combo_in;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_direct_shot_in;                              // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Copy_count_in;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7533[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Combo_obj;                                         // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7534[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue_1;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7535[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_AttackComboCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_AttackComboCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_AttackComboCaptureObject) == 0x000078, "Wrong size on PsychicObjectManager_C_AttackComboCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Target_actor_in) == 0x000000, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Target_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Attack_level_in) == 0x000008, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Attack_level_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Attack_index_in) == 0x00000C, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Attack_index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Attract_time_in) == 0x000010, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Attract_time_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Anim_seq_in) == 0x000018, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Anim_seq_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Air_combo_in) == 0x000020, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Air_combo_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Enemy_direct_shot_in) == 0x000021, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Enemy_direct_shot_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Npc_in) == 0x000022, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Enemy_in) == 0x000023, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Copy_count_in) == 0x000024, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Copy_count_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Return) == 0x000028, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, Combo_obj) == 0x000030, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::Combo_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, L_psyObj) == 0x000038, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000040, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000051, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000058, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue_1) == 0x000069, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_Less_IntInt_ReturnValue) == 0x00006A, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_IsValid_ReturnValue) == 0x00006B, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_SetPsychicObjectAttack_return) == 0x00006C, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackComboCaptureObject, CallFunc_GetPsychicObject_psy_obj) == 0x000070, "Member 'PsychicObjectManager_C_AttackComboCaptureObject::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateAnimObject
// 0x0080 (0x0080 - 0x0000)
struct PsychicObjectManager_C_UpdateAnimObject final
{
public:
	class APsychicAnimObject_C*                   L_animObj;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7536[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7537[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7538[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdateAnimObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_UpdateAnimObject");
static_assert(sizeof(PsychicObjectManager_C_UpdateAnimObject) == 0x000080, "Wrong size on PsychicObjectManager_C_UpdateAnimObject");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, L_animObj) == 0x000000, "Member 'PsychicObjectManager_C_UpdateAnimObject::L_animObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'PsychicObjectManager_C_UpdateAnimObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, Temp_int_Array_Index_Variable) == 0x000060, "Member 'PsychicObjectManager_C_UpdateAnimObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, Temp_int_Loop_Num_Variable) == 0x000064, "Member 'PsychicObjectManager_C_UpdateAnimObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x000069, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateAnimObject, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_UpdateAnimObject::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAnimObject
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_GetAnimObject final
{
public:
	class APsychicAnimObject_C*                   Anim_obj;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicAnimObject_C*                   L_animObj;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7539[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckOccupied_return;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_753A[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_753B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetAnimObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAnimObject");
static_assert(sizeof(PsychicObjectManager_C_GetAnimObject) == 0x000038, "Wrong size on PsychicObjectManager_C_GetAnimObject");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, Anim_obj) == 0x000000, "Member 'PsychicObjectManager_C_GetAnimObject::Anim_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, L_animObj) == 0x000008, "Member 'PsychicObjectManager_C_GetAnimObject::L_animObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'PsychicObjectManager_C_GetAnimObject::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PsychicObjectManager_C_GetAnimObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_CheckOccupied_return) == 0x000019, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_CheckOccupied_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_GetAnimObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_Array_Get_Item) == 0x000028, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAnimObject, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'PsychicObjectManager_C_GetAnimObject::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DeleteAnimObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_DeleteAnimObject final
{
public:
	class APsychicAnimObject_C*                   Anim_obj_in;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_753C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DeleteAnimObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DeleteAnimObject");
static_assert(sizeof(PsychicObjectManager_C_DeleteAnimObject) == 0x000010, "Wrong size on PsychicObjectManager_C_DeleteAnimObject");
static_assert(offsetof(PsychicObjectManager_C_DeleteAnimObject, Anim_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_DeleteAnimObject::Anim_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteAnimObject, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_DeleteAnimObject::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteAnimObject, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_DeleteAnimObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ClearAnimObjectList
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_ClearAnimObjectList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_753D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ClearAnimObjectList) == 0x000004, "Wrong alignment on PsychicObjectManager_C_ClearAnimObjectList");
static_assert(sizeof(PsychicObjectManager_C_ClearAnimObjectList) == 0x000018, "Wrong size on PsychicObjectManager_C_ClearAnimObjectList");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PsychicObjectManager_C_ClearAnimObjectList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'PsychicObjectManager_C_ClearAnimObjectList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PsychicObjectManager_C_ClearAnimObjectList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_ClearAnimObjectList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_ClearAnimObjectList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearAnimObjectList, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_ClearAnimObjectList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueObjectMontageOld
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_GetUniqueObjectMontageOld final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueMontageIndex              Montage_index_in;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left_in;                                           // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_753E[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           L_montage;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetUniqueObjectMontageOld) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetUniqueObjectMontageOld");
static_assert(sizeof(PsychicObjectManager_C_GetUniqueObjectMontageOld) == 0x000018, "Wrong size on PsychicObjectManager_C_GetUniqueObjectMontageOld");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectMontageOld, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetUniqueObjectMontageOld::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectMontageOld, Montage_index_in) == 0x000008, "Member 'PsychicObjectManager_C_GetUniqueObjectMontageOld::Montage_index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectMontageOld, Left_in) == 0x000009, "Member 'PsychicObjectManager_C_GetUniqueObjectMontageOld::Left_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectMontageOld, L_montage) == 0x000010, "Member 'PsychicObjectManager_C_GetUniqueObjectMontageOld::L_montage' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawEaseCurve
// 0x0188 (0x0188 - 0x0000)
struct PsychicObjectManager_C_DebugDrawEaseCurve final
{
public:
	struct FVector                                L_point;                                           // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_pointPrev;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_height;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_length;                                          // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posCen;                                          // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_753F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             L_player;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7540[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7541[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawEaseCurve) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawEaseCurve");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawEaseCurve) == 0x000188, "Wrong size on PsychicObjectManager_C_DebugDrawEaseCurve");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_point) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_point' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_pointPrev) == 0x00000C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_pointPrev' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_height) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_height' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_length) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_length' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_posCen) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_posCen' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, L_player) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::L_player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, Temp_int_Variable) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X) == 0x000064, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z) == 0x00006C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X_1) == 0x000074, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z_1) == 0x00007C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000084, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Ease_ReturnValue) == 0x00008C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue) == 0x000094, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000A4, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X_2) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y_2) == 0x0000AC, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z_2) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000BC, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_1) == 0x0000C4, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_2) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000DC, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X_3) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y_3) == 0x0000E4, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z_3) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x0000EC, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x0000F4, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_3) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00010C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_GetForwardVector_ReturnValue) == 0x000118, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_4) == 0x000124, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X_4) == 0x000130, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y_4) == 0x000134, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z_4) == 0x000138, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_5) == 0x00013C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000148, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000150, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_VectorVector_ReturnValue) == 0x00015C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_X_5) == 0x000168, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Y_5) == 0x00016C, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_BreakVector_Z_5) == 0x000170, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000174, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawEaseCurve, CallFunc_MakeVector_ReturnValue_6) == 0x000178, "Member 'PsychicObjectManager_C_DebugDrawEaseCurve::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetElectricPoleDataTable
// 0x00D0 (0x00D0 - 0x0000)
struct PsychicObjectManager_C_GetElectricPoleDataTable final
{
public:
	TArray<struct FUniqueObjectElectricPoleEffectParameter> Param_ElectricPoleEffectList;                      // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	class UDataTable*                             L_dataTable;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UDataTable>              ElectricPoleSoftDataTable;                         // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7542[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7543[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7544[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueObjectElectricPoleEffectParameter CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7545[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetElectricPoleDataTable) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetElectricPoleDataTable");
static_assert(sizeof(PsychicObjectManager_C_GetElectricPoleDataTable) == 0x0000D0, "Wrong size on PsychicObjectManager_C_GetElectricPoleDataTable");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, Param_ElectricPoleEffectList) == 0x000000, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::Param_ElectricPoleEffectList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, L_dataTable) == 0x000010, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::L_dataTable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, ElectricPoleSoftDataTable) == 0x000018, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::ElectricPoleSoftDataTable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, Temp_int_Array_Index_Variable) == 0x000040, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_LoadSoftObject_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, K2Node_DynamicCast_AsData_Table) == 0x000058, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000068, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetElectricPoleDataTable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_GetElectricPoleDataTable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectInput
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetUniqueObjectInput final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetUniqueObjectInput) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetUniqueObjectInput");
static_assert(sizeof(PsychicObjectManager_C_SetUniqueObjectInput) == 0x000001, "Wrong size on PsychicObjectManager_C_SetUniqueObjectInput");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectInput, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetUniqueObjectInput::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectInput
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_IsUniqueObjectInput final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsUniqueObjectInput) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsUniqueObjectInput");
static_assert(sizeof(PsychicObjectManager_C_IsUniqueObjectInput) == 0x000001, "Wrong size on PsychicObjectManager_C_IsUniqueObjectInput");
static_assert(offsetof(PsychicObjectManager_C_IsUniqueObjectInput, Return) == 0x000000, "Member 'PsychicObjectManager_C_IsUniqueObjectInput::Return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueInputObject
// 0x0008 (0x0008 - 0x0000)
struct PsychicObjectManager_C_SetUniqueInputObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Unq_input_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetUniqueInputObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetUniqueInputObject");
static_assert(sizeof(PsychicObjectManager_C_SetUniqueInputObject) == 0x000008, "Wrong size on PsychicObjectManager_C_SetUniqueInputObject");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueInputObject, Unq_input_in) == 0x000000, "Member 'PsychicObjectManager_C_SetUniqueInputObject::Unq_input_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackObjectOld
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_GetAttackObjectOld final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetAttackObjectOld) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAttackObjectOld");
static_assert(sizeof(PsychicObjectManager_C_GetAttackObjectOld) == 0x000010, "Wrong size on PsychicObjectManager_C_GetAttackObjectOld");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObjectOld, Psy_obj) == 0x000000, "Member 'PsychicObjectManager_C_GetAttackObjectOld::Psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObjectOld, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_GetAttackObjectOld::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusSearch
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_SetFocusSearch final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusSearchEnable_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetFocusSearch) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetFocusSearch");
static_assert(sizeof(PsychicObjectManager_C_SetFocusSearch) == 0x000002, "Wrong size on PsychicObjectManager_C_SetFocusSearch");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearch, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetFocusSearch::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearch, CallFunc_IsFocusSearchEnable_ReturnValue) == 0x000001, "Member 'PsychicObjectManager_C_SetFocusSearch::CallFunc_IsFocusSearchEnable_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsyObjDtSound
// 0x00E0 (0x00E0 - 0x0000)
struct PsychicObjectManager_C_SetPsyObjDtSound final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bLoad;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7546[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PsychicObjectComponent_C*           L_psyObjComp;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PsychicComponentMain_C*             L_psyCompMain;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7547[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7548[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7549[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754A[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsyObjDtSound) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsyObjDtSound");
static_assert(sizeof(PsychicObjectManager_C_SetPsyObjDtSound) == 0x0000E0, "Wrong size on PsychicObjectManager_C_SetPsyObjDtSound");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, L_bLoad) == 0x000008, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::L_bLoad' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, L_index) == 0x00000C, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, L_psyObjComp) == 0x000010, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::L_psyObjComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, L_psyCompMain) == 0x000018, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::L_psyCompMain' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_GetSoundManager_SoundManager) == 0x000068, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, Temp_bool_Variable) == 0x000098, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_RegisterCueSheet_ReturnValue) == 0x000099, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00009A, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000A0, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsyObjDtSound, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0000D8, "Member 'PsychicObjectManager_C_SetPsyObjDtSound::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.LoadDataTableSound
// 0x00A8 (0x00A8 - 0x0000)
struct PsychicObjectManager_C_LoadDataTableSound final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_in;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             L_dtSound;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_754F[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSoundData2               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00A1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_LoadDataTableSound) == 0x000008, "Wrong alignment on PsychicObjectManager_C_LoadDataTableSound");
static_assert(sizeof(PsychicObjectManager_C_LoadDataTableSound) == 0x0000A8, "Wrong size on PsychicObjectManager_C_LoadDataTableSound");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_LoadDataTableSound::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Index_in) == 0x000004, "Member 'PsychicObjectManager_C_LoadDataTableSound::Index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, L_dtSound) == 0x000008, "Member 'PsychicObjectManager_C_LoadDataTableSound::L_dtSound' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_LoadDataTableSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'PsychicObjectManager_C_LoadDataTableSound::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_GetSoundManager_SoundManager) == 0x000018, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PsychicObjectManager_C_LoadDataTableSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_Conv_StringToName_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Temp_bool_Variable) == 0x000054, "Member 'PsychicObjectManager_C_LoadDataTableSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_LoadDataTableSound::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadDataTableSound, Temp_bool_Variable_1) == 0x0000A1, "Member 'PsychicObjectManager_C_LoadDataTableSound::Temp_bool_Variable_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetWeightGaugeEnable
// 0x00D0 (0x00D0 - 0x0000)
struct PsychicObjectManager_C_SetWeightGaugeEnable final
{
public:
	bool                                          Player_in;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Flag_in;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7550[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttackFlag;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7551[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseMapGimmick_UseOk;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7552[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPsychicGauge_Value;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7553[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicGauge_Value_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7554[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnableInputPsychicCombo_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableInputPsychicCombo_bEnable;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7555[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue;      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7556[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7557[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick_1;            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7558[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick_2;            // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseMapGimmick_UseOk_1;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseMapGimmick_UseOk_2;                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7559[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetWeightGaugeEnable) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetWeightGaugeEnable");
static_assert(sizeof(PsychicObjectManager_C_SetWeightGaugeEnable) == 0x0000D0, "Wrong size on PsychicObjectManager_C_SetWeightGaugeEnable");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, Player_in) == 0x000000, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::Player_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, Flag_in) == 0x000001, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, Unq_obj_in) == 0x000002, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, Psy_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, AttackFlag) == 0x000010, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::AttackFlag' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_AsBPI_Map_Gimmick) == 0x000018, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_AsBPI_Map_Gimmick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_CanUseMapGimmick_UseOk) == 0x00002A, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_CanUseMapGimmick_UseOk' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002C, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_1) == 0x00002D, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_2) == 0x00002E, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_CalcPsychicCost_Cost) == 0x000030, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_CalcPsychicCost_Cost' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_GetPsychicGauge_Value) == 0x000034, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_GetPsychicGauge_Value' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_GetPsychicGauge_Value_1) == 0x000040, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_GetPsychicGauge_Value_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanOR_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsEnableInputPsychicCombo_self_CastInput) == 0x000048, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsEnableInputPsychicCombo_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsEnableInputPsychicCombo_bEnable) == 0x000058, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsEnableInputPsychicCombo_bEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_CalcPsychicCost_Cost_1) == 0x00005C, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_CalcPsychicCost_Cost_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsFlying_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000065, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsFalling_ReturnValue) == 0x000066, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanOR_ReturnValue_1) == 0x000067, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanOR_ReturnValue_2) == 0x000068, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_2) == 0x000069, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_GetComboAttackInputKind_ReturnValue) == 0x00006A, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_GetComboAttackInputKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006B, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_3) == 0x00006D, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_1) == 0x00006E, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_3) == 0x00006F, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_2) == 0x000070, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_3) == 0x000071, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_4) == 0x000072, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000073, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_GetPsychicObject_psy_obj) == 0x000078, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_4) == 0x000080, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_AsBPI_Map_Gimmick_1) == 0x000088, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_AsBPI_Map_Gimmick_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_AsBPI_Map_Gimmick_2) == 0x0000A0, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_AsBPI_Map_Gimmick_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_CanUseMapGimmick_UseOk_1) == 0x0000B1, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_CanUseMapGimmick_UseOk_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_CanUseMapGimmick_UseOk_2) == 0x0000B2, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_CanUseMapGimmick_UseOk_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000B3, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x0000B4, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_5) == 0x0000B5, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_6) == 0x0000B6, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_GetHudMain_HudMainGame) == 0x0000B8, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_IsValid_ReturnValue_7) == 0x0000C0, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_5) == 0x0000C1, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000C2, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000C3, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_6) == 0x0000C4, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000C5, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x0000C6, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_BooleanAND_ReturnValue_7) == 0x0000C7, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeEnable, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x0000C8, "Member 'PsychicObjectManager_C_SetWeightGaugeEnable::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CanCapture
// 0x0004 (0x0004 - 0x0000)
struct PsychicObjectManager_C_CanCapture final
{
public:
	bool                                          Unq_obj_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CanCapture) == 0x000001, "Wrong alignment on PsychicObjectManager_C_CanCapture");
static_assert(sizeof(PsychicObjectManager_C_CanCapture) == 0x000004, "Wrong size on PsychicObjectManager_C_CanCapture");
static_assert(offsetof(PsychicObjectManager_C_CanCapture, Unq_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_CanCapture::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CanCapture, Return) == 0x000001, "Member 'PsychicObjectManager_C_CanCapture::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CanCapture, Temp_bool_Variable) == 0x000002, "Member 'PsychicObjectManager_C_CanCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CanCapture, K2Node_Select_Default) == 0x000003, "Member 'PsychicObjectManager_C_CanCapture::K2Node_Select_Default' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusPause
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_SetFocusPause final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag_name_in;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_755B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame_1;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetFocusPause) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetFocusPause");
static_assert(sizeof(PsychicObjectManager_C_SetFocusPause) == 0x000030, "Wrong size on PsychicObjectManager_C_SetFocusPause");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetFocusPause::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, Tag_name_in) == 0x000004, "Member 'PsychicObjectManager_C_SetFocusPause::Tag_name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_GetHudMain_HudMainGame) == 0x000010, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_GetHudMain_HudMainGame_1) == 0x000020, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_GetHudMain_HudMainGame_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_IsValid_ReturnValue_3) == 0x00002A, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusPause, CallFunc_IsValid_ReturnValue_4) == 0x00002B, "Member 'PsychicObjectManager_C_SetFocusPause::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CheckEnemyObject
// 0x0048 (0x0048 - 0x0000)
struct PsychicObjectManager_C_CheckEnemyObject final
{
public:
	bool                                          bUnqObj;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ChkCapture;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ChkAttack;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCapture_return;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCaptureObject_capture_obj;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAttack_return;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755F[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEnemyObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCapture_return_1;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAttack_return_1;                       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnemyObject_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CheckEnemyObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CheckEnemyObject");
static_assert(sizeof(PsychicObjectManager_C_CheckEnemyObject) == 0x000048, "Wrong size on PsychicObjectManager_C_CheckEnemyObject");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, bUnqObj) == 0x000000, "Member 'PsychicObjectManager_C_CheckEnemyObject::bUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, ChkCapture) == 0x000001, "Member 'PsychicObjectManager_C_CheckEnemyObject::ChkCapture' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, ChkAttack) == 0x000002, "Member 'PsychicObjectManager_C_CheckEnemyObject::ChkAttack' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, ReturnValue) == 0x000003, "Member 'PsychicObjectManager_C_CheckEnemyObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CheckEnemyObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_CanCapture_return) == 0x000011, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_CanCapture_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_GetCaptureObject_capture_obj) == 0x000018, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_GetCaptureObject_capture_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_GetFocusObject_focus_obj) == 0x000020, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_GetFocusObject_focus_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_CanAttack_return) == 0x000029, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_CanAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_GetEnemyObject_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_GetEnemyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000038, "Member 'PsychicObjectManager_C_CheckEnemyObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PsychicObjectManager_C_CheckEnemyObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_CanCapture_return_1) == 0x000042, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_CanCapture_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_CanAttack_return_1) == 0x000043, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_CanAttack_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckEnemyObject, CallFunc_CheckEnemyObject_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_CheckEnemyObject::CallFunc_CheckEnemyObject_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetInstantRespawn
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetInstantRespawn final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetInstantRespawn) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetInstantRespawn");
static_assert(sizeof(PsychicObjectManager_C_SetInstantRespawn) == 0x000001, "Wrong size on PsychicObjectManager_C_SetInstantRespawn");
static_assert(offsetof(PsychicObjectManager_C_SetInstantRespawn, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetInstantRespawn::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetCopyPsychicObject
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetCopyPsychicObject final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetCopyPsychicObject) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_SetCopyPsychicObject) == 0x000001, "Wrong size on PsychicObjectManager_C_SetCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_SetCopyPsychicObject, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetCopyPsychicObject::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateCopyPsychicObject
// 0x02C0 (0x02C0 - 0x0000)
struct PsychicObjectManager_C_UpdateCopyPsychicObject final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 L_objClass;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7560[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7561[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7562[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7563[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7564[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7565[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7566[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeCopyPsychicObject_ReturnValue;  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7567[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7568[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeCopyPsychicObject_ReturnValue_1; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7569[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCopyPsychicObject_ReturnValue_2; // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756A[0x6];                                     // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_3;   // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756B[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeCopyPsychicObject_ReturnValue_3; // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756C[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756D[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_756E[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_2;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_3;                         // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756F[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7570[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_UpdateCopyPsychicObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_UpdateCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_UpdateCopyPsychicObject) == 0x0002C0, "Wrong size on PsychicObjectManager_C_UpdateCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, L_str) == 0x000000, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, L_objClass) == 0x000010, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::L_objClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeTransform_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, Temp_int_Array_Index_Variable) == 0x000080, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, Temp_int_Loop_Num_Variable) == 0x000084, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeTransform_ReturnValue_2) == 0x000090, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000C1, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000D8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Conv_IntToString_ReturnValue) == 0x0000F0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_GetClassDisplayName_ReturnValue) == 0x000100, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Concat_StrStr_ReturnValue) == 0x000110, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000120, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000148, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeTransform_ReturnValue_3) == 0x000150, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000180, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000188, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000190, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x000198, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x0001A0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x0001B4, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_InitializeCopyPsychicObject_ReturnValue) == 0x0001B8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_InitializeCopyPsychicObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001C0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x0001C8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Add_ReturnValue_1) == 0x0001DC, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_InitializeCopyPsychicObject_ReturnValue_1) == 0x0001E0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_InitializeCopyPsychicObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0001E8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0001F0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0001F8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x000200, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_bSuccess_2) == 0x000210, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_InitializeCopyPsychicObject_ReturnValue_2) == 0x000211, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_InitializeCopyPsychicObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000218, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_AsPsychic_Object_Interface_3) == 0x000220, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_AsPsychic_Object_Interface_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, K2Node_DynamicCast_bSuccess_3) == 0x000230, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Add_ReturnValue_2) == 0x000234, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_InitializeCopyPsychicObject_ReturnValue_3) == 0x000238, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_InitializeCopyPsychicObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Length_ReturnValue_2) == 0x00023C, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Find_ReturnValue) == 0x000240, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue_1) == 0x000244, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_GetDisplayName_ReturnValue) == 0x000248, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000258, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Add_ReturnValue_3) == 0x000268, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Add_ReturnValue_4) == 0x00026C, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000270, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Get_Item_2) == 0x000278, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Array_Get_Item_3) == 0x000280, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue_2) == 0x000288, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_GetDisplayName_ReturnValue_1) == 0x000290, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0002A0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateCopyPsychicObject, CallFunc_GetObjectClass_ReturnValue) == 0x0002B8, "Member 'PsychicObjectManager_C_UpdateCopyPsychicObject::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ResetCopyPsychicObject
// 0x0080 (0x0080 - 0x0000)
struct PsychicObjectManager_C_ResetCopyPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_copyObj;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_objClass;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7571[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7572[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7573[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7574[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7575[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7576[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7577[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ResetCopyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ResetCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_ResetCopyPsychicObject) == 0x000080, "Wrong size on PsychicObjectManager_C_ResetCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, L_copyObj) == 0x000000, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::L_copyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, L_objClass) == 0x000008, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::L_objClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Num_Variable_1) == 0x000030, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Counter_Variable_2) == 0x000038, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Num_Variable_2) == 0x000044, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue_2) == 0x000049, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Counter_Variable_3) == 0x00004C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Loop_Num_Variable_3) == 0x000058, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Less_IntInt_ReturnValue_3) == 0x00005C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, Temp_int_Array_Index_Variable_3) == 0x000060, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x00006C, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_IsValid_ReturnValue_3) == 0x000074, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetCopyPsychicObject, CallFunc_Array_Length_ReturnValue_3) == 0x000078, "Member 'PsychicObjectManager_C_ResetCopyPsychicObject::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetCopyPsychicObjectPause
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetCopyPsychicObjectPause final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetCopyPsychicObjectPause) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetCopyPsychicObjectPause");
static_assert(sizeof(PsychicObjectManager_C_SetCopyPsychicObjectPause) == 0x000001, "Wrong size on PsychicObjectManager_C_SetCopyPsychicObjectPause");
static_assert(offsetof(PsychicObjectManager_C_SetCopyPsychicObjectPause, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetCopyPsychicObjectPause::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetCopyPsychicObject
// 0x0080 (0x0080 - 0x0000)
struct PsychicObjectManager_C_GetCopyPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Copy_psy_obj_0;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Copy_psy_obj_1;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Copy_psy_obj_2;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               Copy_psy_obj_3;                                    // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_copyObj3;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_copyObj2;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_copyObj1;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_copyObj0;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_idx;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7578[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7579[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item_3;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetCopyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_GetCopyPsychicObject) == 0x000080, "Wrong size on PsychicObjectManager_C_GetCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, Parent_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, Copy_psy_obj_0) == 0x000008, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::Copy_psy_obj_0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, Copy_psy_obj_1) == 0x000010, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::Copy_psy_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, Copy_psy_obj_2) == 0x000018, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::Copy_psy_obj_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, Copy_psy_obj_3) == 0x000020, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::Copy_psy_obj_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, L_copyObj3) == 0x000028, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::L_copyObj3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, L_copyObj2) == 0x000030, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::L_copyObj2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, L_copyObj1) == 0x000038, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::L_copyObj1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, L_copyObj0) == 0x000040, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::L_copyObj0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, L_idx) == 0x000048, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_GetObjectClass_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_Get_Item) == 0x000058, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_Find_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObject, CallFunc_Array_Get_Item_3) == 0x000078, "Member 'PsychicObjectManager_C_GetCopyPsychicObject::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CopyCaptureObject
// 0x00A8 (0x00A8 - 0x0000)
struct PsychicObjectManager_C_CopyCaptureObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Copy_count_in;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Direct_drop_in;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Combo_in;                                          // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_757A[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Comb_level_in;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyPos3;                                        // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyPos2;                                        // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyPos1;                                        // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyPos0;                                        // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_757B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCopyPsychicObject_copy_psy_obj_0;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCopyPsychicObject_copy_psy_obj_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCopyPsychicObject_copy_psy_obj_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCopyPsychicObject_copy_psy_obj_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_757C[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_0;   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_1;   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_2;   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_3;   // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CopyCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CopyCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_CopyCaptureObject) == 0x0000A8, "Wrong size on PsychicObjectManager_C_CopyCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, Parent_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_CopyCaptureObject::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, Copy_count_in) == 0x000008, "Member 'PsychicObjectManager_C_CopyCaptureObject::Copy_count_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, Direct_drop_in) == 0x00000C, "Member 'PsychicObjectManager_C_CopyCaptureObject::Direct_drop_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, Combo_in) == 0x00000D, "Member 'PsychicObjectManager_C_CopyCaptureObject::Combo_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, Comb_level_in) == 0x000010, "Member 'PsychicObjectManager_C_CopyCaptureObject::Comb_level_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, L_copyPos3) == 0x000014, "Member 'PsychicObjectManager_C_CopyCaptureObject::L_copyPos3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, L_copyPos2) == 0x000020, "Member 'PsychicObjectManager_C_CopyCaptureObject::L_copyPos2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, L_copyPos1) == 0x00002C, "Member 'PsychicObjectManager_C_CopyCaptureObject::L_copyPos1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, L_copyPos0) == 0x000038, "Member 'PsychicObjectManager_C_CopyCaptureObject::L_copyPos0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObject_copy_psy_obj_0) == 0x000048, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObject_copy_psy_obj_0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObject_copy_psy_obj_1) == 0x000050, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObject_copy_psy_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObject_copy_psy_obj_2) == 0x000058, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObject_copy_psy_obj_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObject_copy_psy_obj_3) == 0x000060, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObject_copy_psy_obj_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00006A, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_IsValid_ReturnValue_1) == 0x00006B, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00006C, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_IsValid_ReturnValue_2) == 0x00006D, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_IsValid_ReturnValue_3) == 0x00006E, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_0) == 0x000070, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_1) == 0x00007C, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_2) == 0x000088, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_3) == 0x000094, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_GetCopyPsychicObjectPos_copy_obj_pos_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CopyCaptureObject, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0000A0, "Member 'PsychicObjectManager_C_CopyCaptureObject::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetCopyPsychicObjectPos
// 0x0240 (0x0240 - 0x0000)
struct PsychicObjectManager_C_GetCopyPsychicObjectPos final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Copy_index_in;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Copy_obj_pos_0;                                    // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Copy_obj_pos_1;                                    // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Copy_obj_pos_2;                                    // 0x0024(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Copy_obj_pos_3;                                    // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_chkOppsite;                                      // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_757D[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                L_traceEnd;                                        // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_traceStt;                                        // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_hitBg;                                           // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_checkBg;                                         // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_side;                                            // 0x005A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_757E[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_dist;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyObjPos1;                                     // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_copyObjPos0;                                     // 0x006C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dir1;                                            // 0x0078(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dir0;                                            // 0x0084(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirObjHz;                                          // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_dirTgtHz;                                        // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       L_player;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_parentPos;                                       // 0x00B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_757F[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_parentObj;                                       // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7580[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICameraInterface>      K2Node_DynamicCast_AsCamera_Interface;             // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7581[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicObjectBaseInterface_C> CallFunc_GetPsychicObjectCentrePos_self_CastInput; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetPsychicObjectCentrePos_centre_pos;     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_ReturnValue;      // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7582[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7583[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_1;                             // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7584[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7585[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7586[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetCopyPsychicObjectPos) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetCopyPsychicObjectPos");
static_assert(sizeof(PsychicObjectManager_C_GetCopyPsychicObjectPos) == 0x000240, "Wrong size on PsychicObjectManager_C_GetCopyPsychicObjectPos");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Parent_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Copy_index_in) == 0x000008, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Copy_index_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Copy_obj_pos_0) == 0x00000C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Copy_obj_pos_0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Copy_obj_pos_1) == 0x000018, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Copy_obj_pos_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Copy_obj_pos_2) == 0x000024, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Copy_obj_pos_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Copy_obj_pos_3) == 0x000030, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Copy_obj_pos_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_chkOppsite) == 0x00003C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_chkOppsite' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_traceEnd) == 0x000040, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_traceEnd' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_traceStt) == 0x00004C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_traceStt' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_hitBg) == 0x000058, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_hitBg' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_checkBg) == 0x000059, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_checkBg' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_side) == 0x00005A, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_side' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_dist) == 0x00005C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_dist' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_copyObjPos1) == 0x000060, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_copyObjPos1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_copyObjPos0) == 0x00006C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_copyObjPos0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_dir1) == 0x000078, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_dir1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_dir0) == 0x000084, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_dir0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, DirObjHz) == 0x000090, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::DirObjHz' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_dirTgtHz) == 0x00009C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_dirTgtHz' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_player) == 0x0000A8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_parentPos) == 0x0000B0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_parentPos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, L_parentObj) == 0x0000C0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::L_parentObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Temp_float_Variable) == 0x0000C8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, K2Node_DynamicCast_AsCamera_Interface) == 0x0000D0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::K2Node_DynamicCast_AsCamera_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetPsychicObjectCentrePos_self_CastInput) == 0x0000E8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetPsychicObjectCentrePos_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetPsychicObjectCentrePos_centre_pos) == 0x0000F8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetPsychicObjectCentrePos_centre_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetPlayerCameraRotation_ReturnValue) == 0x000104, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetPlayerCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Roll) == 0x000110, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Pitch) == 0x000114, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Yaw) == 0x000118, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_MakeRotator_ReturnValue) == 0x000120, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetForwardVector_ReturnValue) == 0x00012C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_MakeVector_ReturnValue) == 0x000138, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_MakeVector_ReturnValue_1) == 0x000144, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue) == 0x000150, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00015C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000168, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000174, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_RandomBool_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000184, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000190, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x00019C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0001A8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001B4, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Temp_float_Variable_1) == 0x0001C0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Roll_1) == 0x0001C4, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Pitch_1) == 0x0001C8, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_BreakRotator_Yaw_1) == 0x0001CC, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_MakeRotator_ReturnValue_1) == 0x0001D0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, Temp_bool_Variable) == 0x0001DC, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001E0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, K2Node_Select_Default) == 0x0001EC, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_RotateAngleAxis_ReturnValue) == 0x0001F0, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetPlayerManager_PlayerManager) == 0x000200, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000208, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_GetPlayer_ReturnValue) == 0x000218, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000220, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_Add_VectorVector_ReturnValue_5) == 0x00022C, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCopyPsychicObjectPos, CallFunc_IsValid_ReturnValue_1) == 0x000238, "Member 'PsychicObjectManager_C_GetCopyPsychicObjectPos::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AttackCopyPsychicObject
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_AttackCopyPsychicObject final
{
public:
	class USkeletalMeshComponent*                 AnimObjMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PsychicObjectComponent_C*           L_psyObjComp;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_AttackCopyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_AttackCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_AttackCopyPsychicObject) == 0x000018, "Wrong size on PsychicObjectManager_C_AttackCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, AnimObjMesh) == 0x000000, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::AnimObjMesh' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, L_psyObjComp) == 0x000008, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::L_psyObjComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x000013, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue_3) == 0x000014, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue_4) == 0x000015, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AttackCopyPsychicObject, CallFunc_IsValid_ReturnValue_5) == 0x000016, "Member 'PsychicObjectManager_C_AttackCopyPsychicObject::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetDataTableParamEnemyInfo
// 0x0188 (0x0188 - 0x0000)
struct PsychicObjectManager_C_GetDataTableParamEnemyInfo final
{
public:
	class AActor*                                 Em_actor_in;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueObjectContainerEnemyInfo        Data_table;                                        // 0x0008(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   L_softClass;                                       // 0x0038(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FUniqueObjectContainerEnemyInfo        L_dataTable;                                       // 0x0060(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   L_rowName;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7587[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7588[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7589[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_758A[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x00E8(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_758B[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_758C[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueObjectContainerEnemyInfo        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_758D[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetDataTableParamEnemyInfo) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetDataTableParamEnemyInfo");
static_assert(sizeof(PsychicObjectManager_C_GetDataTableParamEnemyInfo) == 0x000188, "Wrong size on PsychicObjectManager_C_GetDataTableParamEnemyInfo");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Em_actor_in) == 0x000000, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Em_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Data_table) == 0x000008, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Data_table' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, L_softClass) == 0x000038, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::L_softClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, L_dataTable) == 0x000060, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::L_dataTable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, L_rowName) == 0x000090, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::L_rowName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Temp_bool_True_if_break_was_hit_Variable) == 0x000098, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Temp_int_Loop_Num_Variable) == 0x0000A4, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x0000D0, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_GetObjectClass_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_GetClassDisplayName_ReturnValue) == 0x000110, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_LeftChop_ReturnValue) == 0x000120, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Conv_StringToName_ReturnValue) == 0x000130, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_BooleanAND_ReturnValue) == 0x000144, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000178, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000179, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetDataTableParamEnemyInfo, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_GetDataTableParamEnemyInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ResetFocusPsychicObject
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_ResetFocusPsychicObject final
{
public:
	bool                                          Loading_start_in;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_758E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Tag_name_in;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_758F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ResetFocusPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ResetFocusPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_ResetFocusPsychicObject) == 0x000020, "Wrong size on PsychicObjectManager_C_ResetFocusPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, Loading_start_in) == 0x000000, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::Loading_start_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, Tag_name_in) == 0x000004, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::Tag_name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, CallFunc_GetHudMain_HudMainGame) == 0x000010, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ResetFocusPsychicObject, CallFunc_IsValid_ReturnValue_3) == 0x00001B, "Member 'PsychicObjectManager_C_ResetFocusPsychicObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackRowName
// 0x0068 (0x0068 - 0x0000)
struct PsychicObjectManager_C_GetAttackRowName final
{
public:
	class FString                                 Name_in;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           Row_name_list;                                     // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FName>                           L_rowNameList;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   L_rowName;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7590[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7591[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetAttackRowName) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAttackRowName");
static_assert(sizeof(PsychicObjectManager_C_GetAttackRowName) == 0x000068, "Wrong size on PsychicObjectManager_C_GetAttackRowName");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, Name_in) == 0x000000, "Member 'PsychicObjectManager_C_GetAttackRowName::Name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, Row_name_list) == 0x000010, "Member 'PsychicObjectManager_C_GetAttackRowName::Row_name_list' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, L_rowNameList) == 0x000020, "Member 'PsychicObjectManager_C_GetAttackRowName::L_rowNameList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, L_rowName) == 0x000030, "Member 'PsychicObjectManager_C_GetAttackRowName::L_rowName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, Temp_int_Array_Index_Variable) == 0x000038, "Member 'PsychicObjectManager_C_GetAttackRowName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'PsychicObjectManager_C_GetAttackRowName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PsychicObjectManager_C_GetAttackRowName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Array_Add_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Contains_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackRowName, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_GetAttackRowName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsyObjAttackSphere
// 0x00D0 (0x00D0 - 0x0000)
struct PsychicObjectManager_C_DebugDrawPsyObjAttackSphere final
{
public:
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7592[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WasRecentlyRendered_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7593[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7594[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPsychicObjectSizeType                        Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7595[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawPsyObjAttackSphere");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere) == 0x0000D0, "Wrong size on PsychicObjectManager_C_DebugDrawPsyObjAttackSphere");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable_1) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable_2) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable_3) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable_4) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_struct_Variable_5) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_int_Variable) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_WasRecentlyRendered_ReturnValue) == 0x000079, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_WasRecentlyRendered_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_GetComponentBounds_Origin) == 0x00007C, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_GetComponentBounds_BoxExtent) == 0x000088, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_GetComponentBounds_SphereRadius) == 0x000094, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, Temp_byte_Variable) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, K2Node_Select_Default) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjAttackSphere, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjAttackSphere::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.LoadPsychicBattle
// 0x0050 (0x0050 - 0x0000)
struct PsychicObjectManager_C_LoadPsychicBattle final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7596[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7597[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7598[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7599[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInitialize_Initialized;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_LoadPsychicBattle) == 0x000008, "Wrong alignment on PsychicObjectManager_C_LoadPsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_LoadPsychicBattle) == 0x000050, "Wrong size on PsychicObjectManager_C_LoadPsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, PsychicBattleType) == 0x000000, "Member 'PsychicObjectManager_C_LoadPsychicBattle::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, Player) == 0x000008, "Member 'PsychicObjectManager_C_LoadPsychicBattle::Player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, Temp_byte_Variable) == 0x000010, "Member 'PsychicObjectManager_C_LoadPsychicBattle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, K2Node_DynamicCast_AsPlayer_Interface) == 0x000018, "Member 'PsychicObjectManager_C_LoadPsychicBattle::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_LoadPsychicBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_GetPlayerID_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_GetPlayer_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LoadPsychicBattle, CallFunc_IsInitialize_Initialized) == 0x000048, "Member 'PsychicObjectManager_C_LoadPsychicBattle::CallFunc_IsInitialize_Initialized' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsPlayPsychicBattle
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_IsPlayPsychicBattle final
{
public:
	bool                                          Play;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_Playing;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsPlayPsychicBattle) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsPlayPsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_IsPlayPsychicBattle) == 0x000002, "Wrong size on PsychicObjectManager_C_IsPlayPsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_IsPlayPsychicBattle, Play) == 0x000000, "Member 'PsychicObjectManager_C_IsPlayPsychicBattle::Play' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_IsPlayPsychicBattle, CallFunc_IsPlaying_Playing) == 0x000001, "Member 'PsychicObjectManager_C_IsPlayPsychicBattle::CallFunc_IsPlaying_Playing' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsBattleSequencePsychicBattle
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_IsBattleSequencePsychicBattle final
{
public:
	bool                                          Play;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattleSequence_Playing;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsBattleSequencePsychicBattle) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsBattleSequencePsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_IsBattleSequencePsychicBattle) == 0x000002, "Wrong size on PsychicObjectManager_C_IsBattleSequencePsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_IsBattleSequencePsychicBattle, Play) == 0x000000, "Member 'PsychicObjectManager_C_IsBattleSequencePsychicBattle::Play' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_IsBattleSequencePsychicBattle, CallFunc_IsBattleSequence_Playing) == 0x000001, "Member 'PsychicObjectManager_C_IsBattleSequencePsychicBattle::CallFunc_IsBattleSequence_Playing' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.StartPsychicBattle
// 0x0040 (0x0040 - 0x0000)
struct PsychicObjectManager_C_StartPsychicBattle final
{
public:
	EPsychicBattleType                            PsychicBattleType;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psychic_Object_Actor;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Player;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759B[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_StartPsychicBattle) == 0x000008, "Wrong alignment on PsychicObjectManager_C_StartPsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_StartPsychicBattle) == 0x000040, "Wrong size on PsychicObjectManager_C_StartPsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, PsychicBattleType) == 0x000000, "Member 'PsychicObjectManager_C_StartPsychicBattle::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, Psychic_Object_Actor) == 0x000008, "Member 'PsychicObjectManager_C_StartPsychicBattle::Psychic_Object_Actor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, Player) == 0x000010, "Member 'PsychicObjectManager_C_StartPsychicBattle::Player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'PsychicObjectManager_C_StartPsychicBattle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_StartPsychicBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PsychicObjectManager_C_StartPsychicBattle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, K2Node_DynamicCast_AsRSBattle_Character) == 0x000028, "Member 'PsychicObjectManager_C_StartPsychicBattle::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PsychicObjectManager_C_StartPsychicBattle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartPsychicBattle, CallFunc_GetPlayer_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_StartPsychicBattle::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicBattleRate
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_SetPsychicBattleRate final
{
public:
	float                                         PsychicBattleType;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicBattleRate) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicBattleRate");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicBattleRate) == 0x000018, "Wrong size on PsychicObjectManager_C_SetPsychicBattleRate");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBattleRate, PsychicBattleType) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicBattleRate::PsychicBattleType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBattleRate, Player) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicBattleRate::Player' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBattleRate, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicBattleRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.EndBattleSequencePsychicBattle
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_EndBattleSequencePsychicBattle final
{
public:
	bool                                          Win;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_EndBattleSequencePsychicBattle) == 0x000008, "Wrong alignment on PsychicObjectManager_C_EndBattleSequencePsychicBattle");
static_assert(sizeof(PsychicObjectManager_C_EndBattleSequencePsychicBattle) == 0x000010, "Wrong size on PsychicObjectManager_C_EndBattleSequencePsychicBattle");
static_assert(offsetof(PsychicObjectManager_C_EndBattleSequencePsychicBattle, Win) == 0x000000, "Member 'PsychicObjectManager_C_EndBattleSequencePsychicBattle::Win' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EndBattleSequencePsychicBattle, Player) == 0x000008, "Member 'PsychicObjectManager_C_EndBattleSequencePsychicBattle::Player' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetCameraParameterRowName
// 0x0058 (0x0058 - 0x0000)
struct PsychicObjectManager_C_GetCameraParameterRowName final
{
public:
	class FString                                 Name_in;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Row_name_list;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_rowName;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_759F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A0[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A3[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetCameraParameterRowName) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetCameraParameterRowName");
static_assert(sizeof(PsychicObjectManager_C_GetCameraParameterRowName) == 0x000058, "Wrong size on PsychicObjectManager_C_GetCameraParameterRowName");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Name_in) == 0x000000, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Row_name_list) == 0x000010, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Row_name_list' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, L_rowName) == 0x000018, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::L_rowName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Temp_int_Array_Index_Variable) == 0x000024, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Contains_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCameraParameterRowName, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'PsychicObjectManager_C_GetCameraParameterRowName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUnqObjBeamsID
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_GetUnqObjBeamsID final
{
public:
	bool                                          Rail;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	BattlePrototype::EPsychicObjectID             ID;                                                // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetUnqObjBeamsID) == 0x000001, "Wrong alignment on PsychicObjectManager_C_GetUnqObjBeamsID");
static_assert(sizeof(PsychicObjectManager_C_GetUnqObjBeamsID) == 0x000002, "Wrong size on PsychicObjectManager_C_GetUnqObjBeamsID");
static_assert(offsetof(PsychicObjectManager_C_GetUnqObjBeamsID, Rail) == 0x000000, "Member 'PsychicObjectManager_C_GetUnqObjBeamsID::Rail' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUnqObjBeamsID, ID) == 0x000001, "Member 'PsychicObjectManager_C_GetUnqObjBeamsID::ID' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUnqObjClass
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_GetUnqObjClass final
{
public:
	BattlePrototype::EPsychicObjectID             Psy_obj_id;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ID;                                                // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetUnqObjClass) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetUnqObjClass");
static_assert(sizeof(PsychicObjectManager_C_GetUnqObjClass) == 0x000038, "Wrong size on PsychicObjectManager_C_GetUnqObjClass");
static_assert(offsetof(PsychicObjectManager_C_GetUnqObjClass, Psy_obj_id) == 0x000000, "Member 'PsychicObjectManager_C_GetUnqObjClass::Psy_obj_id' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUnqObjClass, ID) == 0x000008, "Member 'PsychicObjectManager_C_GetUnqObjClass::ID' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUnqObjClass, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'PsychicObjectManager_C_GetUnqObjClass::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueObjectParameter
// 0x0088 (0x0088 - 0x0000)
struct PsychicObjectManager_C_GetUniqueObjectParameter final
{
public:
	class FString                                 Name_in;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FUniqueObjectCommonParameter           Parameter;                                         // 0x0010(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_rowName;                                         // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A5[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A6[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A7[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75A8[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetUniqueObjectParameter) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetUniqueObjectParameter");
static_assert(sizeof(PsychicObjectManager_C_GetUniqueObjectParameter) == 0x000088, "Wrong size on PsychicObjectManager_C_GetUniqueObjectParameter");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Name_in) == 0x000000, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Parameter) == 0x000010, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Parameter' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, L_index) == 0x000040, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, L_rowName) == 0x000044, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::L_rowName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Temp_bool_True_if_break_was_hit_Variable) == 0x00004C, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Temp_int_Array_Index_Variable) == 0x000050, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Not_PreBool_ReturnValue) == 0x000054, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueObjectParameter, CallFunc_Contains_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_GetUniqueObjectParameter::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CreateChildPsychicObject
// 0x00D0 (0x00D0 - 0x0000)
struct PsychicObjectManager_C_CreateChildPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Parent_obj_in;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Child_class_in;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Child_num_in;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PsychicObjectBasic_C*>       Child_list;                                        // 0x0038(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       L_childList;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	uint8                                         Pad_75AA[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75AB[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75AC[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75AD[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75AE[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_CreateChildPsychicObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_CreateChildPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_CreateChildPsychicObject) == 0x0000D0, "Wrong size on PsychicObjectManager_C_CreateChildPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, Parent_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::Parent_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, Child_class_in) == 0x000008, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::Child_class_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, Child_num_in) == 0x000030, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::Child_num_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, Child_list) == 0x000038, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::Child_list' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, L_childList) == 0x000048, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::L_childList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, Temp_int_Variable) == 0x000094, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000C0, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateChildPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_CreateChildPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DestroyChildPsychicObject
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_DestroyChildPsychicObject final
{
public:
	TArray<class ABP_PsychicObjectBasic_C*>       Child_list_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_childPsyObj;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75AF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DestroyChildPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DestroyChildPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_DestroyChildPsychicObject) == 0x000038, "Wrong size on PsychicObjectManager_C_DestroyChildPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, Child_list_in) == 0x000000, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::Child_list_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, L_childPsyObj) == 0x000010, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::L_childPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, CallFunc_Array_RemoveItem_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DestroyChildPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'PsychicObjectManager_C_DestroyChildPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ClearChildPsychicObject
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_ClearChildPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_childPsyObj;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B0[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ClearChildPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ClearChildPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_ClearChildPsychicObject) == 0x000020, "Wrong size on PsychicObjectManager_C_ClearChildPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, L_childPsyObj) == 0x000000, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::L_childPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearChildPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_ClearChildPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicBulletDataIndex
// 0x0024 (0x0024 - 0x0000)
struct PsychicObjectManager_C_GetPsychicBulletDataIndex final
{
public:
	BattlePrototype::EPsychicObjectID             PsyObjId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetPsychicBulletDataIndex) == 0x000004, "Wrong alignment on PsychicObjectManager_C_GetPsychicBulletDataIndex");
static_assert(sizeof(PsychicObjectManager_C_GetPsychicBulletDataIndex) == 0x000024, "Wrong size on PsychicObjectManager_C_GetPsychicBulletDataIndex");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, PsyObjId) == 0x000000, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::PsyObjId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, Param_Index) == 0x000004, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicBulletDataIndex, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_GetPsychicBulletDataIndex::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicBulletData
// 0x0090 (0x0090 - 0x0000)
struct PsychicObjectManager_C_SetPsychicBulletData final
{
public:
	BattlePrototype::EPsychicObjectID             PsyObjId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ABP_PsychicObjectBasic_C*>       K2Node_MakeArray_Array_2;                          // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FPsychicObjectBulletData               K2Node_MakeStruct_PsychicObjectBulletData;         // 0x0038(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicBulletDataIndex_index;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicBulletData) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicBulletData");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicBulletData) == 0x000090, "Wrong size on PsychicObjectManager_C_SetPsychicBulletData");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, PsyObjId) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicBulletData::PsyObjId' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, Param_Index) == 0x000004, "Member 'PsychicObjectManager_C_SetPsychicBulletData::Param_Index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, K2Node_MakeArray_Array) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicBulletData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, K2Node_MakeArray_Array_1) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicBulletData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, K2Node_MakeArray_Array_2) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicBulletData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, K2Node_MakeStruct_PsychicObjectBulletData) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicBulletData::K2Node_MakeStruct_PsychicObjectBulletData' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_SetPsychicBulletData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, CallFunc_GetPsychicBulletDataIndex_index) == 0x000084, "Member 'PsychicObjectManager_C_SetPsychicBulletData::CallFunc_GetPsychicBulletDataIndex_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicBulletData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_SetPsychicBulletData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.RemovePsychicBulletOwner
// 0x0068 (0x0068 - 0x0000)
struct PsychicObjectManager_C_RemovePsychicBulletOwner final
{
public:
	class ABP_PsychicObjectBasic_C*               Owner_obj_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	BattlePrototype::EPsychicObjectID             CallFunc_GetPsychicObjectID_psychic_object_id;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicBulletDataIndex_index;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B6[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B7[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75B8[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75B9[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75BA[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_RemovePsychicBulletOwner) == 0x000008, "Wrong alignment on PsychicObjectManager_C_RemovePsychicBulletOwner");
static_assert(sizeof(PsychicObjectManager_C_RemovePsychicBulletOwner) == 0x000068, "Wrong size on PsychicObjectManager_C_RemovePsychicBulletOwner");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Owner_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Owner_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, L_index) == 0x000008, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_GetPsychicObjectID_psychic_object_id) == 0x000018, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_GetPsychicObjectID_psychic_object_id' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_GetPsychicBulletDataIndex_index) == 0x000020, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_GetPsychicBulletDataIndex_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Temp_int_Loop_Num_Variable) == 0x000034, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_Get_Item) == 0x000048, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_RemoveItem_ReturnValue) == 0x00005D, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RemovePsychicBulletOwner, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_RemovePsychicBulletOwner::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetFocus
// 0x0040 (0x0040 - 0x0000)
struct PsychicObjectManager_C_SetFocus final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_in;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Map_gmk_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75BB[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Object_actor_in;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_ui_pk_weight_gauge_button                L_buttonType;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_capEnable;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75BC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IPsychicObjectSearchInterface> K2Node_DynamicCast_AsPsychic_Object_Search_Interface; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEffectFocus_ReturnValue;               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetFocus) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetFocus");
static_assert(sizeof(PsychicObjectManager_C_SetFocus) == 0x000040, "Wrong size on PsychicObjectManager_C_SetFocus");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetFocus::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, Unq_obj_in) == 0x000001, "Member 'PsychicObjectManager_C_SetFocus::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, Map_gmk_in) == 0x000002, "Member 'PsychicObjectManager_C_SetFocus::Map_gmk_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, Object_actor_in) == 0x000008, "Member 'PsychicObjectManager_C_SetFocus::Object_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, L_buttonType) == 0x000010, "Member 'PsychicObjectManager_C_SetFocus::L_buttonType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, L_capEnable) == 0x000011, "Member 'PsychicObjectManager_C_SetFocus::L_capEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_GetHudMain_HudMainGame) == 0x000018, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_3) == 0x000023, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_4) == 0x000024, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_5) == 0x000025, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_6) == 0x000026, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_7) == 0x000027, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, K2Node_DynamicCast_AsPsychic_Object_Search_Interface) == 0x000028, "Member 'PsychicObjectManager_C_SetFocus::K2Node_DynamicCast_AsPsychic_Object_Search_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PsychicObjectManager_C_SetFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_IsValid_ReturnValue_8) == 0x000039, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocus, CallFunc_SetEffectFocus_ReturnValue) == 0x00003A, "Member 'PsychicObjectManager_C_SetFocus::CallFunc_SetEffectFocus_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicGaugeCheck
// 0x00A0 (0x00A0 - 0x0000)
struct PsychicObjectManager_C_UpdatePsychicGaugeCheck final
{
public:
	bool                                          L_objCheck;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_mapGmk;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_unqObj;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_enable;                                          // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ui_pk_weight_gauge_button                L_button;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75BD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         L_gauge;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSAttackInputKind                            CallFunc_GetComboAttackInputKind_ReturnValue_1;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerActionKind                             CallFunc_GetCurrentActionState_Kind;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75BE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75BF[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C0[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseMapGimmick_UseOk;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C1[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C2[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnableInputPsychicCombo_self_CastInput; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableInputPsychicCombo_bEnable;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C3[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcPsychicCost_Cost_2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C4[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPsychicGauge_Value;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C5[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MapGimmick_C>     K2Node_DynamicCast_AsBPI_Map_Gimmick_1;            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseMapGimmick_UseOk_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsychicGaugeCheck) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdatePsychicGaugeCheck");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsychicGaugeCheck) == 0x0000A0, "Wrong size on PsychicObjectManager_C_UpdatePsychicGaugeCheck");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_objCheck) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_objCheck' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_mapGmk) == 0x000001, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_mapGmk' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_unqObj) == 0x000002, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_unqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_enable) == 0x000003, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_enable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_button) == 0x000004, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_button' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, L_gauge) == 0x000008, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::L_gauge' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_GetComboAttackInputKind_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_GetComboAttackInputKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsFlying_ReturnValue) == 0x00000D, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000E, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsFalling_ReturnValue) == 0x00000F, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_GetComboAttackInputKind_ReturnValue_1) == 0x000013, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_GetComboAttackInputKind_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000014, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_GetCurrentActionState_Kind) == 0x000015, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_GetCurrentActionState_Kind' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue_2) == 0x000016, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000017, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue_3) == 0x000018, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_CalcPsychicCost_Cost) == 0x00001C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_CalcPsychicCost_Cost' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_CalcPsychicCost_Cost_1) == 0x000024, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_CalcPsychicCost_Cost_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000029, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x00002A, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_3) == 0x00002B, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_4) == 0x00002C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue_4) == 0x00002D, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue) == 0x00002E, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x00002F, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_Not_PreBool_ReturnValue_5) == 0x000030, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_5) == 0x000031, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_6) == 0x000032, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_1) == 0x000033, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_2) == 0x000034, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanOR_ReturnValue_2) == 0x000035, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanOR_ReturnValue_3) == 0x000036, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, K2Node_DynamicCast_AsBPI_Map_Gimmick) == 0x000038, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::K2Node_DynamicCast_AsBPI_Map_Gimmick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_CanUseMapGimmick_UseOk) == 0x00004A, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_CanUseMapGimmick_UseOk' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_4) == 0x00004B, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_5) == 0x00004C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_6) == 0x00004D, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_GetHudMain_HudMainGame) == 0x000050, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_7) == 0x000058, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsEnableInputPsychicCombo_self_CastInput) == 0x000060, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsEnableInputPsychicCombo_self_CastInput' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsEnableInputPsychicCombo_bEnable) == 0x000070, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsEnableInputPsychicCombo_bEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_8) == 0x000071, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_CalcPsychicCost_Cost_2) == 0x000074, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_CalcPsychicCost_Cost_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000078, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_7) == 0x000079, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_GetPsychicGauge_Value) == 0x00007C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_GetPsychicGauge_Value' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_8) == 0x000080, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_BooleanAND_ReturnValue_9) == 0x000081, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, K2Node_DynamicCast_AsBPI_Map_Gimmick_1) == 0x000088, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::K2Node_DynamicCast_AsBPI_Map_Gimmick_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_9) == 0x000099, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_CanUseMapGimmick_UseOk_1) == 0x00009A, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_CanUseMapGimmick_UseOk_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_10) == 0x00009B, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicGaugeCheck, CallFunc_IsValid_ReturnValue_11) == 0x00009C, "Member 'PsychicObjectManager_C_UpdatePsychicGaugeCheck::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetHudMain
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_GetHudMain final
{
public:
	class AHUDMainGame_C*                         Param_HUDMainGame;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetHudMain) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetHudMain");
static_assert(sizeof(PsychicObjectManager_C_GetHudMain) == 0x000018, "Wrong size on PsychicObjectManager_C_GetHudMain");
static_assert(offsetof(PsychicObjectManager_C_GetHudMain, Param_HUDMainGame) == 0x000000, "Member 'PsychicObjectManager_C_GetHudMain::Param_HUDMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetHudMain, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'PsychicObjectManager_C_GetHudMain::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetHudMain, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_GetHudMain::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetHudMain, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'PsychicObjectManager_C_GetHudMain::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicComboCheck
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_UpdatePsychicComboCheck final
{
public:
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableInputPsychicCombo_bEnable;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C6[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsychicComboCheck) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdatePsychicComboCheck");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsychicComboCheck) == 0x000028, "Wrong size on PsychicObjectManager_C_UpdatePsychicComboCheck");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_IsEnableInputPsychicCombo_bEnable) == 0x000012, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_IsEnableInputPsychicCombo_bEnable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_GetHudMain_HudMainGame) == 0x000018, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_IsValid_ReturnValue_2) == 0x000021, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicComboCheck, CallFunc_IsValid_ReturnValue_3) == 0x000022, "Member 'PsychicObjectManager_C_UpdatePsychicComboCheck::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicObjectAction
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_CancelPsychicObjectAction final
{
public:
	bool                                          Event_in;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Psychic_battle_in;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelInput_skip;                         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C8[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_CancelPsychicObjectAction) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CancelPsychicObjectAction");
static_assert(sizeof(PsychicObjectManager_C_CancelPsychicObjectAction) == 0x000028, "Wrong size on PsychicObjectManager_C_CancelPsychicObjectAction");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, Event_in) == 0x000000, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::Event_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, Psychic_battle_in) == 0x000001, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::Psychic_battle_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, Npc_in) == 0x000002, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, Enemy_in) == 0x000003, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_CancelInput_skip) == 0x000012, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_CancelInput_skip' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_CheckPsychicObjectState_return) == 0x000013, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_CheckPsychicObjectState_return_1) == 0x000014, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_IsValid_ReturnValue_2) == 0x000015, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_GetPsychicObject_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectAction, CallFunc_GetPsychicObject_psy_obj_1) == 0x000020, "Member 'PsychicObjectManager_C_CancelPsychicObjectAction::CallFunc_GetPsychicObject_psy_obj_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.RegisterPsychicSlowActor
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_RegisterPsychicSlowActor final
{
public:
	class ARSBattleCharacter_C*                   SlowActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_RegisterPsychicSlowActor) == 0x000008, "Wrong alignment on PsychicObjectManager_C_RegisterPsychicSlowActor");
static_assert(sizeof(PsychicObjectManager_C_RegisterPsychicSlowActor) == 0x000010, "Wrong size on PsychicObjectManager_C_RegisterPsychicSlowActor");
static_assert(offsetof(PsychicObjectManager_C_RegisterPsychicSlowActor, SlowActor) == 0x000000, "Member 'PsychicObjectManager_C_RegisterPsychicSlowActor::SlowActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RegisterPsychicSlowActor, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_RegisterPsychicSlowActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UnregisterPsychicSlowActor
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_UnregisterPsychicSlowActor final
{
public:
	class ARSBattleCharacter_C*                   SlowActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UnregisterPsychicSlowActor) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UnregisterPsychicSlowActor");
static_assert(sizeof(PsychicObjectManager_C_UnregisterPsychicSlowActor) == 0x000010, "Wrong size on PsychicObjectManager_C_UnregisterPsychicSlowActor");
static_assert(offsetof(PsychicObjectManager_C_UnregisterPsychicSlowActor, SlowActor) == 0x000000, "Member 'PsychicObjectManager_C_UnregisterPsychicSlowActor::SlowActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UnregisterPsychicSlowActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_UnregisterPsychicSlowActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicComboSlow
// 0x001C (0x001C - 0x0000)
struct PsychicObjectManager_C_SetPsychicComboSlow final
{
public:
	bool                                          bSlow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75C9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75CA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicComboSlow) == 0x000004, "Wrong alignment on PsychicObjectManager_C_SetPsychicComboSlow");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicComboSlow) == 0x00001C, "Wrong size on PsychicObjectManager_C_SetPsychicComboSlow");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, bSlow) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::bSlow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicComboSlow, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicComboSlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugSetPsychicObjectWeight
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_DebugSetPsychicObjectWeight final
{
public:
	float                                         Weight_in;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75CB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75CC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75CD[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugSetPsychicObjectWeight) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugSetPsychicObjectWeight");
static_assert(sizeof(PsychicObjectManager_C_DebugSetPsychicObjectWeight) == 0x000030, "Wrong size on PsychicObjectManager_C_DebugSetPsychicObjectWeight");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, Weight_in) == 0x000000, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::Weight_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, Temp_int_Variable) == 0x000004, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000020, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugSetPsychicObjectWeight, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_DebugSetPsychicObjectWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ClearUniqueObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_ClearUniqueObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ClearUniqueObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ClearUniqueObject");
static_assert(sizeof(PsychicObjectManager_C_ClearUniqueObject) == 0x000010, "Wrong size on PsychicObjectManager_C_ClearUniqueObject");
static_assert(offsetof(PsychicObjectManager_C_ClearUniqueObject, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_ClearUniqueObject::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearUniqueObject, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_ClearUniqueObject::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearUniqueObject, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'PsychicObjectManager_C_ClearUniqueObject::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearUniqueObject, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00000A, "Member 'PsychicObjectManager_C_ClearUniqueObject::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectUse
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_SetUniqueObjectUse final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75CE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Unq_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75CF[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetUniqueObjectUse) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetUniqueObjectUse");
static_assert(sizeof(PsychicObjectManager_C_SetUniqueObjectUse) == 0x000038, "Wrong size on PsychicObjectManager_C_SetUniqueObjectUse");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectUse, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetUniqueObjectUse::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectUse, Unq_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_SetUniqueObjectUse::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectUse, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetUniqueObjectUse::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectUse, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetUniqueObjectUse::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectUse, CallFunc_GetDisplayName_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_SetUniqueObjectUse::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectUse
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_IsUniqueObjectUse final
{
public:
	bool                                          Is_use;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsUniqueObjectUse) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsUniqueObjectUse");
static_assert(sizeof(PsychicObjectManager_C_IsUniqueObjectUse) == 0x000001, "Wrong size on PsychicObjectManager_C_IsUniqueObjectUse");
static_assert(offsetof(PsychicObjectManager_C_IsUniqueObjectUse, Is_use) == 0x000000, "Member 'PsychicObjectManager_C_IsUniqueObjectUse::Is_use' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldCapture
// 0x0068 (0x0068 - 0x0000)
struct PsychicObjectManager_C_SetPsychicFieldCapture final
{
public:
	int32                                         Capture_num_in;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D0[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SortBySize_ReturnValue;                   // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SearchPsychicFieldObject_ReturnValue;     // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D1[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D2[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0060(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicFieldCapture) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicFieldCapture");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicFieldCapture) == 0x000068, "Wrong size on PsychicObjectManager_C_SetPsychicFieldCapture");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Capture_num_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Capture_num_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, L_index) == 0x000004, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_SortBySize_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_SortBySize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_SearchPsychicFieldObject_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_SearchPsychicFieldObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000050, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Temp_bool_Variable) == 0x000059, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, CallFunc_IsValid_ReturnValue_1) == 0x00005A, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldCapture, Temp_object_Variable) == 0x000060, "Member 'PsychicObjectManager_C_SetPsychicFieldCapture::Temp_object_Variable' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsPsychicFieldCaptureFinish
// 0x0002 (0x0002 - 0x0000)
struct PsychicObjectManager_C_IsPsychicFieldCaptureFinish final
{
public:
	bool                                          Finish;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsPsychicFieldCaptureFinish) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsPsychicFieldCaptureFinish");
static_assert(sizeof(PsychicObjectManager_C_IsPsychicFieldCaptureFinish) == 0x000002, "Wrong size on PsychicObjectManager_C_IsPsychicFieldCaptureFinish");
static_assert(offsetof(PsychicObjectManager_C_IsPsychicFieldCaptureFinish, Finish) == 0x000000, "Member 'PsychicObjectManager_C_IsPsychicFieldCaptureFinish::Finish' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_IsPsychicFieldCaptureFinish, CallFunc_IsOver_ReturnValue) == 0x000001, "Member 'PsychicObjectManager_C_IsPsychicFieldCaptureFinish::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldAttract
// 0x00B0 (0x00B0 - 0x0000)
struct PsychicObjectManager_C_SetPsychicFieldAttract final
{
public:
	struct FVector                                L_posObj;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectInUseC_ReturnValue;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D5[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D6[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D7[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerCameraLocation_location;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerCameraRotation_rotation;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75D8[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D9[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicFieldAttract) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicFieldAttract");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicFieldAttract) == 0x0000B0, "Wrong size on PsychicObjectManager_C_SetPsychicFieldAttract");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, L_posObj) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::L_posObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, L_index) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_SetPsychicObjectInUseC_ReturnValue) == 0x000039, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_SetPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_SetPsychicObjectCapture_return) == 0x000040, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_GetPlayerCameraLocation_location) == 0x00004C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_GetPlayerCameraLocation_location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_GetPlayerCameraRotation_rotation) == 0x000058, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_GetPlayerCameraRotation_rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_BreakRotator_Roll) == 0x000064, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_BreakRotator_Pitch) == 0x000068, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_BreakRotator_Yaw) == 0x00006C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x00007C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_SetPsychicObjectAttack_return) == 0x000088, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_Add_VectorVector_ReturnValue) == 0x00008C, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000A0, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldAttract, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'PsychicObjectManager_C_SetPsychicFieldAttract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldThrow
// 0x0058 (0x0058 - 0x0000)
struct PsychicObjectManager_C_SetPsychicFieldThrow final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75DA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicAnimObject_C*                   CallFunc_SetAnimOwner_anim_owner;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75DB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectAttack_return;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75DC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicFieldThrow) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicFieldThrow");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicFieldThrow) == 0x000058, "Wrong size on PsychicObjectManager_C_SetPsychicFieldThrow");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, L_index) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_SetAnimOwner_anim_owner) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_SetAnimOwner_anim_owner' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, Temp_object_Variable) == 0x000030, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_Array_Get_Item) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_SetPsychicObjectAttack_return) == 0x000040, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_SetPsychicObjectAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldThrow, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PsychicObjectManager_C_SetPsychicFieldThrow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldTarget
// 0x00E0 (0x00E0 - 0x0000)
struct PsychicObjectManager_C_SetPsychicFieldTarget final
{
public:
	int32                                         L_tgtIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bSearchResult;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75DD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_enmNum;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75DE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         L_enmList;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         L_objndex;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75DF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0040(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E0[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75E1[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetCurrentTargetActor_TargetActor;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SearchPsychicFieldTarget_ReturnValue;     // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E2[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75E3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E4[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicFieldTarget) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicFieldTarget");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicFieldTarget) == 0x0000E0, "Wrong size on PsychicObjectManager_C_SetPsychicFieldTarget");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, L_tgtIndex) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::L_tgtIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, L_bSearchResult) == 0x000004, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::L_bSearchResult' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, L_enmNum) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::L_enmNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, L_enmList) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::L_enmList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, L_objndex) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::L_objndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Array_Index_Variable) == 0x000030, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Num_Variable_1) == 0x000034, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_object_Variable) == 0x000040, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Array_Index_Variable_2) == 0x000054, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Num_Variable_2) == 0x00005C, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_GetCurrentTargetActor_TargetActor) == 0x000090, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_GetCurrentTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, Temp_int_Loop_Counter_Variable_2) == 0x0000A4, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_SearchPsychicFieldTarget_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_SearchPsychicFieldTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Percent_IntInt_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000D4, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldTarget, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'PsychicObjectManager_C_SetPsychicFieldTarget::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicField
// 0x0048 (0x0048 - 0x0000)
struct PsychicObjectManager_C_CancelPsychicField final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75E5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E6[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E7[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CancelPsychicField) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CancelPsychicField");
static_assert(sizeof(PsychicObjectManager_C_CancelPsychicField) == 0x000048, "Wrong size on PsychicObjectManager_C_CancelPsychicField");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, L_index) == 0x000000, "Member 'PsychicObjectManager_C_CancelPsychicField::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CancelPsychicField::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_CancelPsychicField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PsychicObjectManager_C_CancelPsychicField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_CancelPsychicField::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000028, "Member 'PsychicObjectManager_C_CancelPsychicField::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PsychicObjectManager_C_CancelPsychicField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, Temp_object_Variable) == 0x000038, "Member 'PsychicObjectManager_C_CancelPsychicField::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_CheckPsychicObjectState_return) == 0x000040, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_CheckPsychicObjectState_return_1) == 0x000041, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicField, CallFunc_SetPsychicObjectCapture_return) == 0x000042, "Member 'PsychicObjectManager_C_CancelPsychicField::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicField
// 0x0078 (0x0078 - 0x0000)
struct PsychicObjectManager_C_UpdatePsychicField final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posObj;                                          // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_index;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_time;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75EA[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75EB[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75EC[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetPsychicObjectCapture_return;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75ED[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75EE[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75EF[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsychicField) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdatePsychicField");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsychicField) == 0x000078, "Wrong size on PsychicObjectManager_C_UpdatePsychicField");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsychicField::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, L_posObj) == 0x000008, "Member 'PsychicObjectManager_C_UpdatePsychicField::L_posObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, L_index) == 0x000014, "Member 'PsychicObjectManager_C_UpdatePsychicField::L_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, L_time) == 0x000018, "Member 'PsychicObjectManager_C_UpdatePsychicField::L_time' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_UpdatePsychicField::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'PsychicObjectManager_C_UpdatePsychicField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, Temp_bool_Variable) == 0x000030, "Member 'PsychicObjectManager_C_UpdatePsychicField::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, Temp_int_Variable) == 0x000034, "Member 'PsychicObjectManager_C_UpdatePsychicField::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_GetElapsedTime_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_GetElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003C, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, Temp_int_Array_Index_Variable) == 0x000040, "Member 'PsychicObjectManager_C_UpdatePsychicField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Array_Get_Item) == 0x000048, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_SetPsychicObjectCapture_return) == 0x000050, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_SetPsychicObjectCapture_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000058, "Member 'PsychicObjectManager_C_UpdatePsychicField::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PsychicObjectManager_C_UpdatePsychicField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicField, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'PsychicObjectManager_C_UpdatePsychicField::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetFocusSearchRadiusRate
// 0x0040 (0x0040 - 0x0000)
struct PsychicObjectManager_C_SetFocusSearchRadiusRate final
{
public:
	float                                         Rate_in;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75F0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 L_distWorkList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F2[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetFocusSearchRadiusRate) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetFocusSearchRadiusRate");
static_assert(sizeof(PsychicObjectManager_C_SetFocusSearchRadiusRate) == 0x000040, "Wrong size on PsychicObjectManager_C_SetFocusSearchRadiusRate");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, Rate_in) == 0x000000, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::Rate_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, L_distWorkList) == 0x000008, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::L_distWorkList' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00002C, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetFocusSearchRadiusRate, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetFocusSearchRadiusRate::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CheckPsychicFieldObject
// 0x0130 (0x0130 - 0x0000)
struct PsychicObjectManager_C_CheckPsychicFieldObject final
{
public:
	TArray<class AActor*>                         Actor_list_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         L_addCount;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_addMax;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_sizeIdx;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75F3[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bAddFound;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_addIdx;                                          // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_startIdx;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F5[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75F6[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75F7[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EPsychicObjectSizeType>                CallFunc_GetAvailableRegisterSizeArraySafety_size_array; // 0x00B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetAvailableRegisterSizeArraySafety_safety; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75F9[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75FA[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PsychicObjectBaseInterface_C> K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75FB[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75FC[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75FD[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CheckPsychicFieldObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CheckPsychicFieldObject");
static_assert(sizeof(PsychicObjectManager_C_CheckPsychicFieldObject) == 0x000130, "Wrong size on PsychicObjectManager_C_CheckPsychicFieldObject");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, Actor_list_in) == 0x000000, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::Actor_list_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_addCount) == 0x000010, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_addCount' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_addMax) == 0x000014, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_addMax' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_sizeIdx) == 0x000018, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_sizeIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_psyObj) == 0x000020, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_bAddFound) == 0x000028, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_bAddFound' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_addIdx) == 0x00002C, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_addIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, L_startIdx) == 0x000030, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::L_startIdx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetDisplayName_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, Temp_int_Variable) == 0x000070, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000090, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj) == 0x0000A0, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetRandomRegisterPsychicObjectSafety_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, Temp_int_Variable_1) == 0x0000A8, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000AC, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x0000B0, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetAvailableRegisterSizeArraySafety_size_array) == 0x0000B8, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetAvailableRegisterSizeArraySafety_size_array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetAvailableRegisterSizeArraySafety_safety) == 0x0000C8, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetAvailableRegisterSizeArraySafety_safety' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface) == 0x0000D8, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::K2Node_DynamicCast_AsBPI_Psychic_Object_Base_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_GetDisplayName_ReturnValue_2) == 0x0000F0, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000108, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Array_Get_Item) == 0x000120, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicFieldObject, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000128, "Member 'PsychicObjectManager_C_CheckPsychicFieldObject::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicFieldWeightGauge
// 0x0018 (0x0018 - 0x0000)
struct PsychicObjectManager_C_SetPsychicFieldWeightGauge final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75FE[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHudMain_HudMainGame;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicFieldWeightGauge) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicFieldWeightGauge");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicFieldWeightGauge) == 0x000018, "Wrong size on PsychicObjectManager_C_SetPsychicFieldWeightGauge");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldWeightGauge, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicFieldWeightGauge::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldWeightGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PsychicObjectManager_C_SetPsychicFieldWeightGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldWeightGauge, CallFunc_GetHudMain_HudMainGame) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicFieldWeightGauge::CallFunc_GetHudMain_HudMainGame' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicFieldWeightGauge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetPsychicFieldWeightGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAvailableRegisterSizeArraySafety
// 0x0088 (0x0088 - 0x0000)
struct PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety final
{
public:
	int32                                         Len_in;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75FF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPsychicObjectSizeType>                Request_size_in;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<EPsychicObjectSizeType>                Size_array;                                        // 0x0018(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Safety;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7600[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_sizeCountMax;                                    // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_idx;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7601[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPsychicObjectSizeType>                L_sizeArray;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<EPsychicObjectSizeType>                CallFunc_GetAvailableRegisterSizeArray_ReturnValue; // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectSizeType                        Temp_byte_Variable;                                // 0x005D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectSizeType                        Temp_byte_Variable_1;                              // 0x005E(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectSizeType                        Temp_byte_Variable_2;                              // 0x005F(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectSizeType                        Temp_byte_Variable_3;                              // 0x0064(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7602[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety");
static_assert(sizeof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety) == 0x000088, "Wrong size on PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Len_in) == 0x000000, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Len_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Request_size_in) == 0x000008, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Request_size_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Size_array) == 0x000018, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Size_array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Safety) == 0x000028, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Safety' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, L_sizeCountMax) == 0x00002C, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::L_sizeCountMax' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, L_idx) == 0x000030, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, L_sizeArray) == 0x000038, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::L_sizeArray' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_GetAvailableRegisterSizeArray_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_GetAvailableRegisterSizeArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Temp_byte_Variable) == 0x00005D, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Temp_byte_Variable_1) == 0x00005E, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Temp_byte_Variable_2) == 0x00005F, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Temp_int_Variable) == 0x000060, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, Temp_byte_Variable_3) == 0x000064, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Array_Add_ReturnValue_2) == 0x000070, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Array_Add_ReturnValue_3) == 0x000074, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Percent_IntInt_ReturnValue) == 0x00007C, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety, K2Node_SwitchInteger_CmpSuccess) == 0x000081, "Member 'PsychicObjectManager_C_GetAvailableRegisterSizeArraySafety::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetRandomRegisterPsychicObjectSafety
// 0x0110 (0x0110 - 0x0000)
struct PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety final
{
public:
	EPsychicObjectSizeType                        Obj_size_in;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Safety_in;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7603[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_objClass;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7604[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetRandomPsychicObjectRegisterClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7605[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7606[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7607[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7608[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x00C0(0x0028)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety) == 0x000010, "Wrong alignment on PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety");
static_assert(sizeof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety) == 0x000110, "Wrong size on PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, Obj_size_in) == 0x000000, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::Obj_size_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, Safety_in) == 0x000001, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::Safety_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, Psy_obj) == 0x000008, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::Psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, L_objClass) == 0x000010, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::L_objClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_GetRandomPsychicObjectRegisterClass_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_GetRandomPsychicObjectRegisterClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_MakeLiteralByte_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic) == 0x000060, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, K2Node_ClassDynamicCast_bSuccess) == 0x000068, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_MakeTransform_ReturnValue_1) == 0x000070, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000A0, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x0000B8, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000BC, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000F0, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000F8, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000100, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'PsychicObjectManager_C_GetRandomRegisterPsychicObjectSafety::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetRandomRegisterSwingObjectSafety
// 0x00E0 (0x00E0 - 0x0000)
struct PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 L_objClass;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7609[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_760A[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_760B[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_760C[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetRandomSwingTypeObjectRegisterClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety) == 0x000010, "Wrong alignment on PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety");
static_assert(sizeof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety) == 0x0000E0, "Wrong size on PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, Psy_obj) == 0x000000, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::Psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, L_objClass) == 0x000008, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::L_objClass' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_MakeTransform_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0000A0, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0000B0, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000B8, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, CallFunc_GetRandomSwingTypeObjectRegisterClass_ReturnValue) == 0x0000C8, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::CallFunc_GetRandomSwingTypeObjectRegisterClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic) == 0x0000D0, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::K2Node_ClassDynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety, K2Node_ClassDynamicCast_bSuccess) == 0x0000D8, "Member 'PsychicObjectManager_C_GetRandomRegisterSwingObjectSafety::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CheckPsychicObjectAction
// 0x0024 (0x0024 - 0x0000)
struct PsychicObjectManager_C_CheckPsychicObjectAction final
{
public:
	bool                                          Direct_shot;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_capture;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_action;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Psychic_field;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Just_dodge;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Return;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_760D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_760E[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CheckPsychicObjectAction) == 0x000004, "Wrong alignment on PsychicObjectManager_C_CheckPsychicObjectAction");
static_assert(sizeof(PsychicObjectManager_C_CheckPsychicObjectAction) == 0x000024, "Wrong size on PsychicObjectManager_C_CheckPsychicObjectAction");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Direct_shot) == 0x000000, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Direct_shot' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Unq_obj_capture) == 0x000001, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Unq_obj_capture' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Unq_obj_action) == 0x000002, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Unq_obj_action' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Psychic_field) == 0x000003, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Psychic_field' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Just_dodge) == 0x000004, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Just_dodge' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, Return) == 0x000005, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_IsOver_ReturnValue) == 0x000011, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_IsOver_ReturnValue_1) == 0x000012, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Less_IntInt_ReturnValue_1) == 0x000018, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_BooleanOR_ReturnValue_1) == 0x000019, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Array_Length_ReturnValue_2) == 0x00001C, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckPsychicObjectAction, CallFunc_Less_IntInt_ReturnValue_2) == 0x000020, "Member 'PsychicObjectManager_C_CheckPsychicObjectAction::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetPsychicObjectAction
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_SetPsychicObjectAction final
{
public:
	bool                                          Direct_shot;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unique_object;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Map_gimmick;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Flag_in;                                           // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_760F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Obj_name_in;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Just_dodge;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Intercept;                                         // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Psychic_field;                                     // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7610[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7611[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7612[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetPsychicObjectAction) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetPsychicObjectAction");
static_assert(sizeof(PsychicObjectManager_C_SetPsychicObjectAction) == 0x000038, "Wrong size on PsychicObjectManager_C_SetPsychicObjectAction");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Direct_shot) == 0x000000, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Direct_shot' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Unique_object) == 0x000001, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Unique_object' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Map_gimmick) == 0x000002, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Map_gimmick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Flag_in) == 0x000003, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Obj_name_in) == 0x000008, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Obj_name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Just_dodge) == 0x000018, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Just_dodge' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Intercept) == 0x000019, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Intercept' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, Psychic_field) == 0x00001A, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::Psychic_field' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_RemoveItem_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_Add_ReturnValue_1) == 0x000024, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_Add_ReturnValue_2) == 0x00002C, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetPsychicObjectAction, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x000030, "Member 'PsychicObjectManager_C_SetPsychicObjectAction::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdatePsychicObjectAction
// 0x0007 (0x0007 - 0x0000)
struct PsychicObjectManager_C_UpdatePsychicObjectAction final
{
public:
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue_1;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdatePsychicObjectAction) == 0x000001, "Wrong alignment on PsychicObjectManager_C_UpdatePsychicObjectAction");
static_assert(sizeof(PsychicObjectManager_C_UpdatePsychicObjectAction) == 0x000007, "Wrong size on PsychicObjectManager_C_UpdatePsychicObjectAction");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_IsOver_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_IsOver_ReturnValue_1) == 0x000001, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_IsOver_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_IsEnable_ReturnValue) == 0x000005, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdatePsychicObjectAction, CallFunc_IsEnable_ReturnValue_1) == 0x000006, "Member 'PsychicObjectManager_C_UpdatePsychicObjectAction::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawAnimObjectList
// 0x00F0 (0x00F0 - 0x0000)
struct PsychicObjectManager_C_DebugDrawAnimObjectList final
{
public:
	class APsychicAnimObject_C*                   L_animObj;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_attach;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_occupied;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_free;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7613[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 L_str;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7614[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOccupied_return;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAttach_return;                         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7615[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7616[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7617[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7618[0x2];                                     // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawAnimObjectList) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawAnimObjectList");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawAnimObjectList) == 0x0000F0, "Wrong size on PsychicObjectManager_C_DebugDrawAnimObjectList");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, L_animObj) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::L_animObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, L_attach) == 0x000008, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::L_attach' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, L_occupied) == 0x00000C, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::L_occupied' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, L_free) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::L_free' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, L_str) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Variable) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Array_Index_Variable) == 0x000034, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Variable_1) == 0x000044, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_CheckOccupied_return) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_CheckOccupied_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_CanAttach_return) == 0x000049, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_CanAttach_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, Temp_int_Variable_2) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_IsValid_ReturnValue) == 0x0000E4, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_IsValid_ReturnValue_1) == 0x0000E5, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawAnimObjectList, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawAnimObjectList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetUniqueEffectParam
// 0x01A0 (0x01A0 - 0x0000)
struct PsychicObjectManager_C_GetUniqueEffectParam final
{
public:
	bool                                          brain_field;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPsychicObjectBrainFieldAttackType            brain_field_attack_type_in;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7619[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         brain_field_level_in;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Psychic_field;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Psychic_field_obj_num_in;                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPsychicObjectSizeParameter            Parameter;                                         // 0x0018(0x0138)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_lv;                                              // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   L_name;                                            // 0x0154(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_idx;                                             // 0x015C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761C[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761D[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761E[0x1];                                     // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_761F[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetUniqueEffectParam) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetUniqueEffectParam");
static_assert(sizeof(PsychicObjectManager_C_GetUniqueEffectParam) == 0x0001A0, "Wrong size on PsychicObjectManager_C_GetUniqueEffectParam");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, brain_field) == 0x000000, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::brain_field' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, brain_field_attack_type_in) == 0x000001, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::brain_field_attack_type_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, brain_field_level_in) == 0x000004, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::brain_field_level_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Psychic_field) == 0x000008, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Psychic_field' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Psychic_field_obj_num_in) == 0x00000C, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Psychic_field_obj_num_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Return) == 0x000010, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Parameter) == 0x000018, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Parameter' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, L_lv) == 0x000150, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::L_lv' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, L_name) == 0x000154, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::L_name' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, L_idx) == 0x00015C, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::L_idx' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Temp_bool_Variable) == 0x000160, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Temp_name_Variable) == 0x000164, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Temp_bool_Variable_1) == 0x00016C, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Temp_name_Variable_1) == 0x000170, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, Temp_name_Variable_2) == 0x000178, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000180, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000181, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000182, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, K2Node_Select_Default) == 0x000184, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, K2Node_Select_Default_1) == 0x00018C, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, K2Node_SwitchEnum_CmpSuccess) == 0x000194, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, CallFunc_Array_Find_ReturnValue) == 0x000198, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, K2Node_SwitchInteger_CmpSuccess) == 0x00019C, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetUniqueEffectParam, K2Node_SwitchInteger_CmpSuccess_1) == 0x00019D, "Member 'PsychicObjectManager_C_GetUniqueEffectParam::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsychicObjectAction
// 0x0170 (0x0170 - 0x0000)
struct PsychicObjectManager_C_DebugDrawPsychicObjectAction final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectAction_return;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7620[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7621[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectAction_return_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7622[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectAction_return_2;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7623[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectAction_return_3;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7624[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPsychicObjectAction_return_4;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7625[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawPsychicObjectAction) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawPsychicObjectAction");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawPsychicObjectAction) == 0x000170, "Wrong size on PsychicObjectManager_C_DebugDrawPsychicObjectAction");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, L_str) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_CheckPsychicObjectAction_return) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_CheckPsychicObjectAction_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_SelectString_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_CheckPsychicObjectAction_return_1) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_CheckPsychicObjectAction_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_SelectString_ReturnValue_1) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_CheckPsychicObjectAction_return_2) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_CheckPsychicObjectAction_return_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_SelectString_ReturnValue_2) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_CheckPsychicObjectAction_return_3) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_CheckPsychicObjectAction_return_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_SelectString_ReturnValue_3) == 0x000108, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000118, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000128, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_CheckPsychicObjectAction_return_4) == 0x000138, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_CheckPsychicObjectAction_return_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_SelectString_ReturnValue_4) == 0x000140, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000150, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsychicObjectAction, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000160, "Member 'PsychicObjectManager_C_DebugDrawPsychicObjectAction::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetFocusObject
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_GetFocusObject final
{
public:
	bool                                          Unq_obj_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7626[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Focus_obj;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7627[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetNpcObject_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7628[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetFocusObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetFocusObject");
static_assert(sizeof(PsychicObjectManager_C_GetFocusObject) == 0x000038, "Wrong size on PsychicObjectManager_C_GetFocusObject");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, Unq_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetFocusObject::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, Npc_in) == 0x000001, "Member 'PsychicObjectManager_C_GetFocusObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, Enemy_in) == 0x000002, "Member 'PsychicObjectManager_C_GetFocusObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, Focus_obj) == 0x000008, "Member 'PsychicObjectManager_C_GetFocusObject::Focus_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, Temp_bool_Variable) == 0x000010, "Member 'PsychicObjectManager_C_GetFocusObject::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, CallFunc_GetNpcObject_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_GetFocusObject::CallFunc_GetNpcObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000020, "Member 'PsychicObjectManager_C_GetFocusObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_GetFocusObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetFocusObject, K2Node_Select_Default) == 0x000030, "Member 'PsychicObjectManager_C_GetFocusObject::K2Node_Select_Default' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawObjectStatus
// 0x03B0 (0x03B0 - 0x0000)
struct PsychicObjectManager_C_DebugDrawObjectStatus final
{
public:
	class ABP_PsychicObjectBasic_C*               L_capEnmUnq;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_capEnmObj;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_capNpcObj;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_capUnqObj;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_capPsyObj;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_fcsEnmUnq;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_fcsEnmObj;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_fcsNpcObj;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_fcsUnqObj;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_fcsPsyObj;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7629[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos_1;              // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_762A[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_5;             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762B[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue_1;            // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762C[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_6;             // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_7;             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj;                 // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_8;             // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_9;             // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762D[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_10;            // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_11;            // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_12;            // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_13;            // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_14;            // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_15;            // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0310(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj_1;               // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj_2;               // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawObjectStatus) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawObjectStatus");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawObjectStatus) == 0x0003B0, "Wrong size on PsychicObjectManager_C_DebugDrawObjectStatus");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_capEnmUnq) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_capEnmUnq' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_capEnmObj) == 0x000008, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_capEnmObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_capNpcObj) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_capNpcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_capUnqObj) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_capUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_capPsyObj) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_capPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_fcsEnmUnq) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_fcsEnmUnq' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_fcsEnmObj) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_fcsEnmObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_fcsNpcObj) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_fcsNpcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_fcsUnqObj) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_fcsUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, L_fcsPsyObj) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::L_fcsPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetMeshBoundCentrePos_pos) == 0x000064, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetMeshBoundCentrePos_pos_1) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetMeshBoundCentrePos_pos_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_2) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_3) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_4) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_5) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsUniqueObjectC_ReturnValue) == 0x0000E1, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsValid_ReturnValue_2) == 0x0000F9, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsUniqueObjectC_ReturnValue_1) == 0x0000FA, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsUniqueObjectC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_6) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_7) == 0x000110, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetFocusObject_focus_obj) == 0x000120, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetFocusObject_focus_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue) == 0x000128, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000138, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000148, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_8) == 0x000158, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000168, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000178, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_9) == 0x000188, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000198, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001B8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001C8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001D8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001E8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001F8, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000208, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000218, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_IsValid_ReturnValue_3) == 0x000228, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000230, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000240, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000250, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_10) == 0x000260, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_11) == 0x000270, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_12) == 0x000280, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_13) == 0x000290, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_14) == 0x0002A0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0002B0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0002C0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetDisplayName_ReturnValue_15) == 0x0002D0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetDisplayName_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0002E0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0002F0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000300, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000310, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000320, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000330, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000340, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetFocusObject_focus_obj_1) == 0x000350, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetFocusObject_focus_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000358, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_27) == 0x000368, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_GetFocusObject_focus_obj_2) == 0x000378, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_GetFocusObject_focus_obj_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000380, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000390, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawObjectStatus, CallFunc_Concat_StrStr_ReturnValue_30) == 0x0003A0, "Member 'PsychicObjectManager_C_DebugDrawObjectStatus::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetCaptureObject
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_GetCaptureObject final
{
public:
	bool                                          Npc_in;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Unq_obj_in;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Check_obj_type_in;                                 // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Capture_obj;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUniqueObjectC_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_GetCaptureObject) == 0x000028, "Wrong size on PsychicObjectManager_C_GetCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, Npc_in) == 0x000000, "Member 'PsychicObjectManager_C_GetCaptureObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, Enemy_in) == 0x000001, "Member 'PsychicObjectManager_C_GetCaptureObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, Unq_obj_in) == 0x000002, "Member 'PsychicObjectManager_C_GetCaptureObject::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, Check_obj_type_in) == 0x000003, "Member 'PsychicObjectManager_C_GetCaptureObject::Check_obj_type_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, Capture_obj) == 0x000008, "Member 'PsychicObjectManager_C_GetCaptureObject::Capture_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000010, "Member 'PsychicObjectManager_C_GetCaptureObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PsychicObjectManager_C_GetCaptureObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, CallFunc_IsUniqueObjectC_ReturnValue) == 0x000021, "Member 'PsychicObjectManager_C_GetCaptureObject::CallFunc_IsUniqueObjectC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetCaptureObject, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000022, "Member 'PsychicObjectManager_C_GetCaptureObject::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetCaptureObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_SetCaptureObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Npc_in;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetCaptureObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetCaptureObject");
static_assert(sizeof(PsychicObjectManager_C_SetCaptureObject) == 0x000010, "Wrong size on PsychicObjectManager_C_SetCaptureObject");
static_assert(offsetof(PsychicObjectManager_C_SetCaptureObject, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_SetCaptureObject::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetCaptureObject, Npc_in) == 0x000008, "Member 'PsychicObjectManager_C_SetCaptureObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetCaptureObject, Enemy_in) == 0x000009, "Member 'PsychicObjectManager_C_SetCaptureObject::Enemy_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetAttackObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_GetAttackObject final
{
public:
	bool                                          Unq_obj_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_762F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Attack_obj_;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetAttackObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetAttackObject");
static_assert(sizeof(PsychicObjectManager_C_GetAttackObject) == 0x000010, "Wrong size on PsychicObjectManager_C_GetAttackObject");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObject, Unq_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetAttackObject::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObject, Npc_in) == 0x000001, "Member 'PsychicObjectManager_C_GetAttackObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObject, Enemy_in) == 0x000002, "Member 'PsychicObjectManager_C_GetAttackObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetAttackObject, Attack_obj_) == 0x000008, "Member 'PsychicObjectManager_C_GetAttackObject::Attack_obj_' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetAttackObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_SetAttackObject final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unq_obj_in;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetAttackObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetAttackObject");
static_assert(sizeof(PsychicObjectManager_C_SetAttackObject) == 0x000010, "Wrong size on PsychicObjectManager_C_SetAttackObject");
static_assert(offsetof(PsychicObjectManager_C_SetAttackObject, Psy_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_SetAttackObject::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetAttackObject, Unq_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_SetAttackObject::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetAttackObject, Npc_in) == 0x000009, "Member 'PsychicObjectManager_C_SetAttackObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetAttackObject, Enemy_in) == 0x00000A, "Member 'PsychicObjectManager_C_SetAttackObject::Enemy_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetPsychicObject
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_GetPsychicObject final
{
public:
	bool                                          Unq_obj_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Npc_in;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Focus_in;                                          // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Capture_in;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Attack_in;                                         // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7630[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7631[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetAttackObject_attack_obj_;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetCaptureObject_capture_obj;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_GetPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_GetPsychicObject) == 0x000038, "Wrong size on PsychicObjectManager_C_GetPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Unq_obj_in) == 0x000000, "Member 'PsychicObjectManager_C_GetPsychicObject::Unq_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Npc_in) == 0x000001, "Member 'PsychicObjectManager_C_GetPsychicObject::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Enemy_in) == 0x000002, "Member 'PsychicObjectManager_C_GetPsychicObject::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Focus_in) == 0x000003, "Member 'PsychicObjectManager_C_GetPsychicObject::Focus_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Capture_in) == 0x000004, "Member 'PsychicObjectManager_C_GetPsychicObject::Capture_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Attack_in) == 0x000005, "Member 'PsychicObjectManager_C_GetPsychicObject::Attack_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, Psy_obj) == 0x000008, "Member 'PsychicObjectManager_C_GetPsychicObject::Psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_GetPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_GetAttackObject_attack_obj_) == 0x000020, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_GetAttackObject_attack_obj_' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_GetCaptureObject_capture_obj) == 0x000028, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_GetCaptureObject_capture_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetPsychicObject, CallFunc_GetFocusObject_focus_obj) == 0x000030, "Member 'PsychicObjectManager_C_GetPsychicObject::CallFunc_GetFocusObject_focus_obj' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetIntercept
// 0x00C8 (0x00C8 - 0x0000)
struct PsychicObjectManager_C_SetIntercept final
{
public:
	class AActor*                                 Obj_actor_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   Intercepter_in;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   New_target_in;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_bEmOwner;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7632[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectIntercept_C*           L_itcObj;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7633[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7634[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7635[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7636[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7637[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Intercept_C>      K2Node_DynamicCast_AsBPI_Intercept;                // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InterceptAttack_bDummy;                   // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7638[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectInUseC_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7639[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_763A[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer_1;             // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_763B[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetIntercept) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetIntercept");
static_assert(sizeof(PsychicObjectManager_C_SetIntercept) == 0x0000C8, "Wrong size on PsychicObjectManager_C_SetIntercept");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Obj_actor_in) == 0x000000, "Member 'PsychicObjectManager_C_SetIntercept::Obj_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Intercepter_in) == 0x000008, "Member 'PsychicObjectManager_C_SetIntercept::Intercepter_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, New_target_in) == 0x000010, "Member 'PsychicObjectManager_C_SetIntercept::New_target_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, L_bEmOwner) == 0x000018, "Member 'PsychicObjectManager_C_SetIntercept::L_bEmOwner' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, L_itcObj) == 0x000020, "Member 'PsychicObjectManager_C_SetIntercept::L_itcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, L_psyObj) == 0x000028, "Member 'PsychicObjectManager_C_SetIntercept::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Temp_bool_True_if_break_was_hit_Variable) == 0x000032, "Member 'PsychicObjectManager_C_SetIntercept::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Temp_int_Array_Index_Variable) == 0x000034, "Member 'PsychicObjectManager_C_SetIntercept::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'PsychicObjectManager_C_SetIntercept::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PsychicObjectManager_C_SetIntercept::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue_2) == 0x00004D, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000050, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000061, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_AsBPI_Intercept) == 0x000068, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_AsBPI_Intercept' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue_3) == 0x000079, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_InterceptAttack_bDummy) == 0x00007A, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_InterceptAttack_bDummy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000080, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsPsychicObjectInUseC_ReturnValue) == 0x000091, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue_4) == 0x000098, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x0000A0, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsEnemyPlayer_bEnemyPlayer_1) == 0x0000B1, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsEnemyPlayer_bEnemyPlayer_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, CallFunc_IsValid_ReturnValue_5) == 0x0000B2, "Member 'PsychicObjectManager_C_SetIntercept::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x0000B8, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetIntercept, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'PsychicObjectManager_C_SetIntercept::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CreateInterceptObject
// 0x0070 (0x0070 - 0x0000)
struct PsychicObjectManager_C_CreateInterceptObject final
{
public:
	class ABP_PsychicObjectIntercept_C*           L_itcObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_763C[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectIntercept_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CreateInterceptObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_CreateInterceptObject");
static_assert(sizeof(PsychicObjectManager_C_CreateInterceptObject) == 0x000070, "Wrong size on PsychicObjectManager_C_CreateInterceptObject");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, L_itcObj) == 0x000000, "Member 'PsychicObjectManager_C_CreateInterceptObject::L_itcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, Temp_int_Variable) == 0x000054, "Member 'PsychicObjectManager_C_CreateInterceptObject::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CreateInterceptObject, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'PsychicObjectManager_C_CreateInterceptObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DeleteInterceptObject
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_DeleteInterceptObject final
{
public:
	class ABP_PsychicObjectIntercept_C*           L_itcObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_763D[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DeleteInterceptObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DeleteInterceptObject");
static_assert(sizeof(PsychicObjectManager_C_DeleteInterceptObject) == 0x000028, "Wrong size on PsychicObjectManager_C_DeleteInterceptObject");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, L_itcObj) == 0x000000, "Member 'PsychicObjectManager_C_DeleteInterceptObject::L_itcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'PsychicObjectManager_C_DeleteInterceptObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_DeleteInterceptObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_DeleteInterceptObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_DeleteInterceptObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DeleteInterceptObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_DeleteInterceptObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_DeleteInterceptObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DeleteInterceptObject, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PsychicObjectManager_C_DeleteInterceptObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawInterceptObject
// 0x0158 (0x0158 - 0x0000)
struct PsychicObjectManager_C_DebugDrawInterceptObject final
{
public:
	class ABP_PsychicObjectIntercept_C*           L_itcObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_763E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_763F[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPsychicObjectTickC_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7640[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7641[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPsychicObjectInterface> K2Node_DynamicCast_AsPsychic_Object_Interface_2;   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectInUseC_ReturnValue;        // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPsychicObjectActiveC_ReturnValue;       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7642[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7643[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7644[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7645[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawInterceptObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawInterceptObject");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawInterceptObject) == 0x000158, "Wrong size on PsychicObjectManager_C_DebugDrawInterceptObject");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, L_itcObj) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::L_itcObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, L_str) == 0x000008, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_AsPsychic_Object_Interface) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_AsPsychic_Object_Interface' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_IsPsychicObjectTickC_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_IsPsychicObjectTickC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Conv_BoolToString_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_AsPsychic_Object_Interface_1) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_AsPsychic_Object_Interface_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_AsPsychic_Object_Interface_2) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_AsPsychic_Object_Interface_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_IsPsychicObjectInUseC_ReturnValue) == 0x000079, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_IsPsychicObjectInUseC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_IsPsychicObjectActiveC_ReturnValue) == 0x00007A, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_IsPsychicObjectActiveC_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_GetDisplayName_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, Temp_int_Loop_Num_Variable) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000118, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000128, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000138, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInterceptObject, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000148, "Member 'PsychicObjectManager_C_DebugDrawInterceptObject::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugCreatePsychicObject
// 0x0250 (0x0250 - 0x0000)
struct PsychicObjectManager_C_DebugCreatePsychicObject final
{
public:
	TSoftClassPtr<class UClass>                   Psy_obj_class_in;                                  // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7646[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7647[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_cameraRotate;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7648[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7649[0x1];                                     // 0x017F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764A[0xC];                                     // 0x0204(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0210(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugCreatePsychicObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_DebugCreatePsychicObject");
static_assert(sizeof(PsychicObjectManager_C_DebugCreatePsychicObject) == 0x000250, "Wrong size on PsychicObjectManager_C_DebugCreatePsychicObject");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, Psy_obj_class_in) == 0x000000, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::Psy_obj_class_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, Temp_object_Variable) == 0x000028, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_SetEnablePsychicObjectRegister_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_SetEnablePsychicObjectRegister_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1) == 0x000039, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_SetEnablePsychicObjectRegister_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_LoadSoftClassActor_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, K2Node_MakeArray_Array) == 0x000048, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakTransform_Location) == 0x000090, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_GetCameraRotation_cameraRotate) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_GetCameraRotation_cameraRotate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000DC, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000F4, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x00017C, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_bBlockingHit) == 0x00017D, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017E, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_Time) == 0x000180, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_Distance) == 0x000184, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_ImpactPoint) == 0x000194, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_ImpactNormal) == 0x0001AC, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_FaceIndex) == 0x0001DC, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_TraceStart) == 0x0001E0, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BreakHitResult_TraceEnd) == 0x0001EC, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_MakeRotFromZ_ReturnValue) == 0x0001F8, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_MakeTransform_ReturnValue) == 0x000210, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000240, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugCreatePsychicObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x000248, "Member 'PsychicObjectManager_C_DebugCreatePsychicObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.InitDebugTraceRecord
// 0x0054 (0x0054 - 0x0000)
struct PsychicObjectManager_C_InitDebugTraceRecord final
{
public:
	float                                         Radius_in;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_ex_0_in;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_ex_1_in;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_ex_2_in;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius_ex_3_in;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_ex_0_in;                                     // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_ex_1_in;                                     // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_ex_2_in;                                     // 0x0034(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_ex_3_in;                                     // 0x0044(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_InitDebugTraceRecord) == 0x000004, "Wrong alignment on PsychicObjectManager_C_InitDebugTraceRecord");
static_assert(sizeof(PsychicObjectManager_C_InitDebugTraceRecord) == 0x000054, "Wrong size on PsychicObjectManager_C_InitDebugTraceRecord");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Radius_in) == 0x000000, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Radius_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Radius_ex_0_in) == 0x000004, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Radius_ex_0_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Radius_ex_1_in) == 0x000008, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Radius_ex_1_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Radius_ex_2_in) == 0x00000C, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Radius_ex_2_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Radius_ex_3_in) == 0x000010, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Radius_ex_3_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Color_ex_0_in) == 0x000014, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Color_ex_0_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Color_ex_1_in) == 0x000024, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Color_ex_1_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Color_ex_2_in) == 0x000034, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Color_ex_2_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_InitDebugTraceRecord, Color_ex_3_in) == 0x000044, "Member 'PsychicObjectManager_C_InitDebugTraceRecord::Color_ex_3_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AddDebugTraceRecord
// 0x0088 (0x0088 - 0x0000)
struct PsychicObjectManager_C_AddDebugTraceRecord final
{
public:
	struct FVector                                Stt_pos_in;                                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End_pos_in;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_in;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hit_pos_in;                                        // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hit_nrl_in;                                        // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extra_0_in;                                        // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extra_1_in;                                        // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extra_2_in;                                        // 0x004C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Extra_3_in;                                        // 0x0058(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_AddDebugTraceRecord) == 0x000004, "Wrong alignment on PsychicObjectManager_C_AddDebugTraceRecord");
static_assert(sizeof(PsychicObjectManager_C_AddDebugTraceRecord) == 0x000088, "Wrong size on PsychicObjectManager_C_AddDebugTraceRecord");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Stt_pos_in) == 0x000000, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Stt_pos_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, End_pos_in) == 0x00000C, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::End_pos_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Hit_in) == 0x000018, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Hit_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Hit_pos_in) == 0x00001C, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Hit_pos_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Hit_nrl_in) == 0x000028, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Hit_nrl_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Extra_0_in) == 0x000034, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Extra_0_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Extra_1_in) == 0x000040, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Extra_1_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Extra_2_in) == 0x00004C, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Extra_2_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, Extra_3_in) == 0x000058, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::Extra_3_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_1) == 0x000068, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_2) == 0x00006C, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_3) == 0x000070, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_4) == 0x000074, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_5) == 0x000078, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_6) == 0x00007C, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_7) == 0x000080, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddDebugTraceRecord, CallFunc_Array_Add_ReturnValue_8) == 0x000084, "Member 'PsychicObjectManager_C_AddDebugTraceRecord::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DrawDebugTraceRecord
// 0x0008 (0x0008 - 0x0000)
struct PsychicObjectManager_C_DrawDebugTraceRecord final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DrawDebugTraceRecord) == 0x000004, "Wrong alignment on PsychicObjectManager_C_DrawDebugTraceRecord");
static_assert(sizeof(PsychicObjectManager_C_DrawDebugTraceRecord) == 0x000008, "Wrong size on PsychicObjectManager_C_DrawDebugTraceRecord");
static_assert(offsetof(PsychicObjectManager_C_DrawDebugTraceRecord, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_DrawDebugTraceRecord::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DrawDebugTraceRecord, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_DrawDebugTraceRecord::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.NextDebugTraceRecord
// 0x0050 (0x0050 - 0x0000)
struct PsychicObjectManager_C_NextDebugTraceRecord final
{
public:
	bool                                          back_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          One0;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          One00;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          One000;                                            // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         L_maxIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_2;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764D[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_NextDebugTraceRecord) == 0x000004, "Wrong alignment on PsychicObjectManager_C_NextDebugTraceRecord");
static_assert(sizeof(PsychicObjectManager_C_NextDebugTraceRecord) == 0x000050, "Wrong size on PsychicObjectManager_C_NextDebugTraceRecord");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, back_in) == 0x000000, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::back_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, One0) == 0x000001, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::One0' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, One00) == 0x000002, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::One00' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, One000) == 0x000003, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::One000' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, L_maxIndex) == 0x000004, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::L_maxIndex' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, Temp_int_Variable) == 0x000008, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, Temp_int_Variable_1) == 0x00000C, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Min_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Max_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Min_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_3) == 0x00002C, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Max_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_4) == 0x000034, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Min_ReturnValue_2) == 0x000038, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Min_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_5) == 0x00003C, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Max_ReturnValue_2) == 0x000040, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000045, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_NextDebugTraceRecord, CallFunc_Add_IntInt_ReturnValue_6) == 0x00004C, "Member 'PsychicObjectManager_C_NextDebugTraceRecord::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateDebugTraceRecord
// 0x0090 (0x0090 - 0x0000)
struct PsychicObjectManager_C_UpdateDebugTraceRecord final
{
public:
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_2;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_3;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue_1;       // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_UpdateDebugTraceRecord) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdateDebugTraceRecord");
static_assert(sizeof(PsychicObjectManager_C_UpdateDebugTraceRecord) == 0x000090, "Wrong size on PsychicObjectManager_C_UpdateDebugTraceRecord");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Conv_IntToString_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000020, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Cross_VectorVector_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x00004C, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Cross_VectorVector_ReturnValue_2) == 0x000058, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Cross_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000064, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Cross_VectorVector_ReturnValue_3) == 0x000070, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Cross_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_MakeRotationFromAxes_ReturnValue_1) == 0x00007C, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_MakeRotationFromAxes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Less_FloatFloat_ReturnValue) == 0x000088, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDebugTraceRecord, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000089, "Member 'PsychicObjectManager_C_UpdateDebugTraceRecord::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRotArrow
// 0x0090 (0x0090 - 0x0000)
struct PsychicObjectManager_C_DebugDrawRotArrow final
{
public:
	struct FVector                                Pos_in;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot_in;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Len_in;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size_in;                                           // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_in;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawRotArrow) == 0x000004, "Wrong alignment on PsychicObjectManager_C_DebugDrawRotArrow");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawRotArrow) == 0x000090, "Wrong size on PsychicObjectManager_C_DebugDrawRotArrow");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, Pos_in) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::Pos_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, Rot_in) == 0x00000C, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::Rot_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, Len_in) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::Len_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, Size_in) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::Size_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, Time_in) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::Time_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_GetForwardVector_ReturnValue) == 0x000024, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_GetUpVector_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_GetRightVector_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRotArrow, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000084, "Member 'PsychicObjectManager_C_DebugDrawRotArrow::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CheckNpcObject
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_CheckNpcObject final
{
public:
	bool                                          bUnqObj;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bEnemy;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ChkCapture;                                        // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ChkAttack;                                         // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCapture_return;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_764F[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAttack_return;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNpcObject_ReturnValue;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CheckNpcObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CheckNpcObject");
static_assert(sizeof(PsychicObjectManager_C_CheckNpcObject) == 0x000030, "Wrong size on PsychicObjectManager_C_CheckNpcObject");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, bUnqObj) == 0x000000, "Member 'PsychicObjectManager_C_CheckNpcObject::bUnqObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, bEnemy) == 0x000001, "Member 'PsychicObjectManager_C_CheckNpcObject::bEnemy' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, ChkCapture) == 0x000002, "Member 'PsychicObjectManager_C_CheckNpcObject::ChkCapture' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, ChkAttack) == 0x000003, "Member 'PsychicObjectManager_C_CheckNpcObject::ChkAttack' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, ReturnValue) == 0x000004, "Member 'PsychicObjectManager_C_CheckNpcObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CheckNpcObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_CanCapture_return) == 0x000012, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_CanCapture_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_GetPsychicObject_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_GetPsychicObject_psy_obj_1) == 0x000020, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_GetPsychicObject_psy_obj_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_CanAttack_return) == 0x000029, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_CanAttack_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CheckNpcObject, CallFunc_CheckNpcObject_ReturnValue) == 0x00002A, "Member 'PsychicObjectManager_C_CheckNpcObject::CallFunc_CheckNpcObject_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CancelPsychicObjectHoming
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_CancelPsychicObjectHoming final
{
public:
	bool                                          Npc_in;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7650[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7651[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_CancelPsychicObjectHoming) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CancelPsychicObjectHoming");
static_assert(sizeof(PsychicObjectManager_C_CancelPsychicObjectHoming) == 0x000028, "Wrong size on PsychicObjectManager_C_CancelPsychicObjectHoming");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, Npc_in) == 0x000000, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, Enemy_in) == 0x000001, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, CallFunc_GetPsychicObject_psy_obj) == 0x000010, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelPsychicObjectHoming, CallFunc_GetPsychicObject_psy_obj_1) == 0x000020, "Member 'PsychicObjectManager_C_CancelPsychicObjectHoming::CallFunc_GetPsychicObject_psy_obj_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUsingBossGauge
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetUsingBossGauge final
{
public:
	bool                                          Param_bInBossGauge;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetUsingBossGauge) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetUsingBossGauge");
static_assert(sizeof(PsychicObjectManager_C_SetUsingBossGauge) == 0x000001, "Wrong size on PsychicObjectManager_C_SetUsingBossGauge");
static_assert(offsetof(PsychicObjectManager_C_SetUsingBossGauge, Param_bInBossGauge) == 0x000000, "Member 'PsychicObjectManager_C_SetUsingBossGauge::Param_bInBossGauge' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetMapGimmickExMode
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_SetMapGimmickExMode final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7652[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MapGimmickObjectBase_C*             Actor_in;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetMapGimmickExMode) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetMapGimmickExMode");
static_assert(sizeof(PsychicObjectManager_C_SetMapGimmickExMode) == 0x000010, "Wrong size on PsychicObjectManager_C_SetMapGimmickExMode");
static_assert(offsetof(PsychicObjectManager_C_SetMapGimmickExMode, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetMapGimmickExMode::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetMapGimmickExMode, Actor_in) == 0x000008, "Member 'PsychicObjectManager_C_SetMapGimmickExMode::Actor_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetMapGimmickEx
// 0x0008 (0x0008 - 0x0000)
struct PsychicObjectManager_C_SetMapGimmickEx final
{
public:
	class ABP_MapGimmickObjectBase_C*             Actor_in;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetMapGimmickEx) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetMapGimmickEx");
static_assert(sizeof(PsychicObjectManager_C_SetMapGimmickEx) == 0x000008, "Wrong size on PsychicObjectManager_C_SetMapGimmickEx");
static_assert(offsetof(PsychicObjectManager_C_SetMapGimmickEx, Actor_in) == 0x000000, "Member 'PsychicObjectManager_C_SetMapGimmickEx::Actor_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ExceptionallyAllowTriggerEffect
// 0x0015 (0x0015 - 0x0000)
struct PsychicObjectManager_C_ExceptionallyAllowTriggerEffect final
{
public:
	bool                                          Allow;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerActionKind                             L_mainPlayerCurretActionState;                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotifyInputPsychic_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Accumulating_Attacks_result;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerActionKind                             CallFunc_GetCurrentActionState_Kind;               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect) == 0x000001, "Wrong alignment on PsychicObjectManager_C_ExceptionallyAllowTriggerEffect");
static_assert(sizeof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect) == 0x000015, "Wrong size on PsychicObjectManager_C_ExceptionallyAllowTriggerEffect");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, Allow) == 0x000000, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::Allow' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, L_mainPlayerCurretActionState) == 0x000001, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::L_mainPlayerCurretActionState' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_IsNotifyInputPsychic_ReturnValue) == 0x000003, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_IsNotifyInputPsychic_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000005, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000006, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000007, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000008, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000009, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x00000A, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_Is_Accumulating_Attacks_result) == 0x00000C, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_Is_Accumulating_Attacks_result' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue_1) == 0x00000D, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue_2) == 0x00000F, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue_3) == 0x000011, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue_4) == 0x000012, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_GetCurrentActionState_Kind) == 0x000013, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_GetCurrentActionState_Kind' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ExceptionallyAllowTriggerEffect, CallFunc_BooleanOR_ReturnValue_5) == 0x000014, "Member 'PsychicObjectManager_C_ExceptionallyAllowTriggerEffect::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugPrintRegisterList
// 0x0130 (0x0130 - 0x0000)
struct PsychicObjectManager_C_DebugPrintRegisterList final
{
public:
	int32                                         L_objNum;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7653[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7654[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7655[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_VectorToString_ReturnValue_1;        // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7656[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7657[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7658[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7659[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugPrintRegisterList) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugPrintRegisterList");
static_assert(sizeof(PsychicObjectManager_C_DebugPrintRegisterList) == 0x000130, "Wrong size on PsychicObjectManager_C_DebugPrintRegisterList");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, L_objNum) == 0x000000, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::L_objNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, L_psyObj) == 0x000008, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_BreakTransform_Location) == 0x000028, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_BreakTransform_Rotation) == 0x000034, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_BreakTransform_Scale) == 0x000040, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Conv_VectorToString_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, Temp_int_Variable) == 0x000070, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000074, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Conv_VectorToString_ReturnValue_1) == 0x000088, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000098, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Conv_IntToString_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000108, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x000118, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugPrintRegisterList, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000120, "Member 'PsychicObjectManager_C_DebugPrintRegisterList::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectSkipDisableCamera
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera final
{
public:
	bool                                          bSkip;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera");
static_assert(sizeof(PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera) == 0x000001, "Wrong size on PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera, bSkip) == 0x000000, "Member 'PsychicObjectManager_C_SetUniqueObjectSkipDisableCamera::bSkip' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectSkipDisableCamera
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera final
{
public:
	bool                                          Return_;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera");
static_assert(sizeof(PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera) == 0x000001, "Wrong size on PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera");
static_assert(offsetof(PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera, Return_) == 0x000000, "Member 'PsychicObjectManager_C_IsUniqueObjectSkipDisableCamera::Return_' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRegisterPos
// 0x00A8 (0x00A8 - 0x0000)
struct PsychicObjectManager_C_DebugDrawRegisterPos final
{
public:
	int32                                         L_objNum;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posArg;                                          // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posObj;                                          // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posPly;                                          // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765A[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_765B[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_765C[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawRegisterPos) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawRegisterPos");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawRegisterPos) == 0x0000A8, "Wrong size on PsychicObjectManager_C_DebugDrawRegisterPos");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, L_objNum) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::L_objNum' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, L_posArg) == 0x000004, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::L_posArg' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, L_posObj) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::L_posObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, L_posPly) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::L_posPly' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, L_psyObj) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, Temp_int_Variable) == 0x000034, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000059, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_BreakTransform_Location) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterPos, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x0000A4, "Member 'PsychicObjectManager_C_DebugDrawRegisterPos::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.RespawnEnemyObject
// 0x0100 (0x0100 - 0x0000)
struct PsychicObjectManager_C_RespawnEnemyObject final
{
public:
	bool                                          L_randObj;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_dropType;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_765D[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   L_emOwner;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         I_index;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 L_class;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                L_psyObjManager;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765F[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7660[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7661[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7662[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7663[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_RespawnEnemyObject) == 0x000010, "Wrong alignment on PsychicObjectManager_C_RespawnEnemyObject");
static_assert(sizeof(PsychicObjectManager_C_RespawnEnemyObject) == 0x000100, "Wrong size on PsychicObjectManager_C_RespawnEnemyObject");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_randObj) == 0x000000, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_randObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_dropType) == 0x000001, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_dropType' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_emOwner) == 0x000008, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_emOwner' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, I_index) == 0x000010, "Member 'PsychicObjectManager_C_RespawnEnemyObject::I_index' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_class) == 0x000018, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_class' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_psyObj) == 0x000020, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, L_psyObjManager) == 0x000028, "Member 'PsychicObjectManager_C_RespawnEnemyObject::L_psyObjManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'PsychicObjectManager_C_RespawnEnemyObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'PsychicObjectManager_C_RespawnEnemyObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, Temp_int_Loop_Num_Variable) == 0x000080, "Member 'PsychicObjectManager_C_RespawnEnemyObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000088, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B8, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E8, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_RespawnEnemyObject, CallFunc_IsValid_ReturnValue_2) == 0x0000F4, "Member 'PsychicObjectManager_C_RespawnEnemyObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawRegisterObjInfo
// 0x01C0 (0x01C0 - 0x0000)
struct PsychicObjectManager_C_DebugDrawRegisterObjInfo final
{
public:
	struct FVector                                L_posObj;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posPly;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_numCompTick;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_numMeshTick;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_numActorTick;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7664[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_num;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetPsychicObjectRegisterActor_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7665[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7666[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7667[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7668[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7669[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCompTickEnable_return;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_766A[0x1];                                     // 0x01B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPsychicObjectRegisterNum_ReturnValue;  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawRegisterObjInfo) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawRegisterObjInfo");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawRegisterObjInfo) == 0x0001C0, "Wrong size on PsychicObjectManager_C_DebugDrawRegisterObjInfo");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_posObj) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_posObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_posPly) == 0x00000C, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_posPly' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_numCompTick) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_numCompTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_numMeshTick) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_numMeshTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_numActorTick) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_numActorTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_psyObj) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, L_num) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::L_num' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, Temp_int_Variable) == 0x000034, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, Temp_int_Variable_1) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, Temp_int_Variable_2) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_GetPsychicObjectRegisterActor_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_GetPsychicObjectRegisterActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000048, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_GetMeshBoundCentrePos_pos) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_SelectString_ReturnValue) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_SelectString_ReturnValue_1) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000110, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000120, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000130, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000140, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000150, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_SelectString_ReturnValue_2) == 0x000160, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000170, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, Temp_int_Variable_3) == 0x000180, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000188, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000198, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A8, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001AC, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_IsCompTickEnable_return) == 0x0001B4, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_IsCompTickEnable_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x0001B5, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_IsActorTickEnabled_ReturnValue) == 0x0001B6, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_GetPsychicObjectRegisterNum_ReturnValue) == 0x0001B8, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_GetPsychicObjectRegisterNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_BooleanOR_ReturnValue) == 0x0001BC, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawRegisterObjInfo, CallFunc_BooleanOR_ReturnValue_1) == 0x0001BD, "Member 'PsychicObjectManager_C_DebugDrawRegisterObjInfo::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetUniqueObjectAutoTakeItem
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_SetUniqueObjectAutoTakeItem final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetUniqueObjectAutoTakeItem) == 0x000001, "Wrong alignment on PsychicObjectManager_C_SetUniqueObjectAutoTakeItem");
static_assert(sizeof(PsychicObjectManager_C_SetUniqueObjectAutoTakeItem) == 0x000001, "Wrong size on PsychicObjectManager_C_SetUniqueObjectAutoTakeItem");
static_assert(offsetof(PsychicObjectManager_C_SetUniqueObjectAutoTakeItem, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetUniqueObjectAutoTakeItem::Flag_in' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsUniqueObjectAutoTakeItem
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_IsUniqueObjectAutoTakeItem final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsUniqueObjectAutoTakeItem) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsUniqueObjectAutoTakeItem");
static_assert(sizeof(PsychicObjectManager_C_IsUniqueObjectAutoTakeItem) == 0x000001, "Wrong size on PsychicObjectManager_C_IsUniqueObjectAutoTakeItem");
static_assert(offsetof(PsychicObjectManager_C_IsUniqueObjectAutoTakeItem, Return) == 0x000000, "Member 'PsychicObjectManager_C_IsUniqueObjectAutoTakeItem::Return' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetLockInputMode
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_SetLockInputMode final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_766B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Ref_name_in;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_766C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_766D[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_766E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_InputManager_C*                     CallFunc_GetInputManager_BP_InputManager;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_SetLockInputMode) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetLockInputMode");
static_assert(sizeof(PsychicObjectManager_C_SetLockInputMode) == 0x000038, "Wrong size on PsychicObjectManager_C_SetLockInputMode");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetLockInputMode::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, Ref_name_in) == 0x000004, "Member 'PsychicObjectManager_C_SetLockInputMode::Ref_name_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001C, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Array_RemoveItem_ReturnValue) == 0x00001D, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_GetInputManager_BP_InputManager) == 0x000028, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_GetInputManager_BP_InputManager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetLockInputMode, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'PsychicObjectManager_C_SetLockInputMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawInputModeLock
// 0x0100 (0x0100 - 0x0000)
struct PsychicObjectManager_C_DebugDrawInputModeLock final
{
public:
	class FString                                 L_str;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          L_bLock;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_766F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7670[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7671[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7672[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7673[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7674[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawInputModeLock) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawInputModeLock");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawInputModeLock) == 0x000100, "Wrong size on PsychicObjectManager_C_DebugDrawInputModeLock");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, L_str) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, L_bLock) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::L_bLock' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_GetDebuggingManager_Manager) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_SelectColor_ReturnValue) == 0x00006C, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_SelectString_ReturnValue) == 0x0000D8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawInputModeLock, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member 'PsychicObjectManager_C_DebugDrawInputModeLock::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.AddEventPsychicObject
// 0x0040 (0x0040 - 0x0000)
struct PsychicObjectManager_C_AddEventPsychicObject final
{
public:
	TArray<class AActor*>                         Actor_list_in;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7675[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7676[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7677[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_AddEventPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_AddEventPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_AddEventPsychicObject) == 0x000040, "Wrong size on PsychicObjectManager_C_AddEventPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, Actor_list_in) == 0x000000, "Member 'PsychicObjectManager_C_AddEventPsychicObject::Actor_list_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_AddEventPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PsychicObjectManager_C_AddEventPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'PsychicObjectManager_C_AddEventPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000020, "Member 'PsychicObjectManager_C_AddEventPsychicObject::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_AddEventPsychicObject::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'PsychicObjectManager_C_AddEventPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'PsychicObjectManager_C_AddEventPsychicObject::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PsychicObjectManager_C_AddEventPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_AddEventPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_AddEventPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetEventPsychicObject
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_SetEventPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7678[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetEventPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetEventPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_SetEventPsychicObject) == 0x000020, "Wrong size on PsychicObjectManager_C_SetEventPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_SetEventPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_SetEventPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_SetEventPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_SetEventPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_SetEventPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'PsychicObjectManager_C_SetEventPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_SetEventPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetEventPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_SetEventPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ClearEventPsychicObject
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_ClearEventPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7679[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_ClearEventPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ClearEventPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_ClearEventPsychicObject) == 0x000028, "Wrong size on PsychicObjectManager_C_ClearEventPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, Temp_int_Array_Index_Variable) == 0x000010, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ClearEventPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PsychicObjectManager_C_ClearEventPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.UpdateDestroyList
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_UpdateDestroyList final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_767A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_767B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_UpdateDestroyList) == 0x000008, "Wrong alignment on PsychicObjectManager_C_UpdateDestroyList");
static_assert(sizeof(PsychicObjectManager_C_UpdateDestroyList) == 0x000028, "Wrong size on PsychicObjectManager_C_UpdateDestroyList");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_UpdateDestroyList::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, Temp_int_Array_Index_Variable) == 0x000008, "Member 'PsychicObjectManager_C_UpdateDestroyList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'PsychicObjectManager_C_UpdateDestroyList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PsychicObjectManager_C_UpdateDestroyList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'PsychicObjectManager_C_UpdateDestroyList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_UpdateDestroyList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'PsychicObjectManager_C_UpdateDestroyList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_UpdateDestroyList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_UpdateDestroyList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawPsyObjInfo
// 0x0608 (0x0608 - 0x0000)
struct PsychicObjectManager_C_DebugDrawPsyObjInfo final
{
public:
	class FString                                 L_simulateSlp;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_simulateAwk;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_tickMesh;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_tickUnqComp;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_tickPsyComp;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 L_tickActor;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           L_color;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_radius;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posObj;                                          // 0x0074(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_posPly;                                          // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_simulateSleep;                                   // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_simulate;                                        // 0x008D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_unqComp;                                         // 0x008E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_psyComp;                                         // 0x008F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_meshTick;                                        // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          L_actorTick;                                       // 0x0091(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_767C[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_countTickShadowMesh;                             // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countTickAuraMesh;                               // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countMeshSimulate;                               // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countMeshSleep;                                  // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countMeshAwake;                                  // 0x00A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countTickMesh;                                   // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countTickUnqComp;                                // 0x00AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countTickPsyComp;                                // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countTickActor;                                  // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countBulletObj;                                  // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countPartsObj;                                   // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countPsyObj;                                     // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_countObj;                                        // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_767D[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_3;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_4;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_5;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_767E[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_767F[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7680[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7681[0x4];                                     // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7682[0x3];                                     // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7683[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7684[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x03D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7685[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7686[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x04D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_37;             // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_38;             // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_39;             // 0x0500(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_40;             // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7687[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_41;             // 0x0528(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_42;             // 0x0538(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_43;             // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_44;             // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_45;             // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7688[0x4];                                     // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_46;             // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_47;             // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7689[0x4];                                     // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectSkeletal_C*            K2Node_DynamicCast_AsBP_Psychic_Object_Skeletal;   // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768A[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectStatic_C*              K2Node_DynamicCast_AsBP_Psychic_Object_Static;     // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue_1;     // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768B[0x1];                                     // 0x05C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorTickEnabled_ReturnValue;           // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue_2;     // 0x05DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768C[0x1];                                     // 0x05DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue_3;     // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue_4;     // 0x05E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768D[0x1];                                     // 0x05E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_768E[0x4];                                     // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_PsychicObjectBasic_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x05F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawPsyObjInfo) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawPsyObjInfo");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawPsyObjInfo) == 0x000608, "Wrong size on PsychicObjectManager_C_DebugDrawPsyObjInfo");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_simulateSlp) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_simulateSlp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_simulateAwk) == 0x000010, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_simulateAwk' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_tickMesh) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_tickMesh' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_tickUnqComp) == 0x000030, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_tickUnqComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_tickPsyComp) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_tickPsyComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_tickActor) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_tickActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_color) == 0x000060, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_color' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_radius) == 0x000070, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_radius' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_posObj) == 0x000074, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_posObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_posPly) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_posPly' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_simulateSleep) == 0x00008C, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_simulateSleep' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_simulate) == 0x00008D, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_simulate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_unqComp) == 0x00008E, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_unqComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_psyComp) == 0x00008F, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_psyComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_meshTick) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_meshTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_actorTick) == 0x000091, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_actorTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickShadowMesh) == 0x000094, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickShadowMesh' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickAuraMesh) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickAuraMesh' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countMeshSimulate) == 0x00009C, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countMeshSimulate' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countMeshSleep) == 0x0000A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countMeshSleep' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countMeshAwake) == 0x0000A4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countMeshAwake' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickMesh) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickMesh' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickUnqComp) == 0x0000AC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickUnqComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickPsyComp) == 0x0000B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickPsyComp' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countTickActor) == 0x0000B4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countTickActor' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countBulletObj) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countBulletObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countPartsObj) == 0x0000BC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countPartsObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countPsyObj) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countPsyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_countObj) == 0x0000C4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_countObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, L_psyObj) == 0x0000C8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_1) == 0x0000D4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_2) == 0x0000D8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_3) == 0x0000DC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_4) == 0x0000E0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_5) == 0x0000E4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_6) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_7) == 0x0000EC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_8) == 0x0000F0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_9) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Loop_Num_Variable) == 0x000104, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue) == 0x000110, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000120, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000130, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue_1) == 0x000140, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000150, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000160, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue_2) == 0x000170, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000180, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000190, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue_3) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001C0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue_4) == 0x0001D0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001E0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001F0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDisplayName_ReturnValue_5) == 0x000200, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDisplayName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsValid_ReturnValue) == 0x000210, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000218, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000228, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000238, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000248, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000258, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000268, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000278, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_10) == 0x000288, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000290, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0002A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsValid_ReturnValue_1) == 0x0002B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0002B8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_20) == 0x0002C8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_21) == 0x0002D8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x0002E8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0002F8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000308, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x000318, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetDebuggingManager_Manager) == 0x000320, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000328, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsValid_ReturnValue_2) == 0x000334, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000338, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000348, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000350, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000360, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000370, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000380, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_3) == 0x000390, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000398, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0003A8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0003B8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0003C8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_8) == 0x0003D8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_9) == 0x0003E8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_10) == 0x0003F8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000408, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_26) == 0x000418, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_4) == 0x000428, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_27) == 0x000430, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_28) == 0x000440, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_29) == 0x000450, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000460, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_31) == 0x000470, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_32) == 0x000480, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetMeshBoundCentrePos_pos) == 0x000490, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_33) == 0x0004A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_34) == 0x0004B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_35) == 0x0004C0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_36) == 0x0004D0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_37) == 0x0004E0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_38) == 0x0004F0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_39) == 0x000500, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_40) == 0x000510, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_11) == 0x000520, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_41) == 0x000528, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_42) == 0x000538, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_43) == 0x000548, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_44) == 0x000558, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_45) == 0x000568, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_5) == 0x000578, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_46) == 0x000580, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Concat_StrStr_ReturnValue_47) == 0x000590, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Concat_StrStr_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_6) == 0x0005A0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, K2Node_DynamicCast_AsBP_Psychic_Object_Skeletal) == 0x0005A8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::K2Node_DynamicCast_AsBP_Psychic_Object_Skeletal' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, K2Node_DynamicCast_bSuccess) == 0x0005B0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, K2Node_DynamicCast_AsBP_Psychic_Object_Static) == 0x0005B8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::K2Node_DynamicCast_AsBP_Psychic_Object_Static' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, K2Node_DynamicCast_bSuccess_1) == 0x0005C0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x0005C1, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue_1) == 0x0005C2, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_7) == 0x0005C4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_8) == 0x0005C8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_9) == 0x0005CC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_10) == 0x0005D0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, Temp_int_Variable_12) == 0x0005D4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsActorTickEnabled_ReturnValue) == 0x0005D8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsActorTickEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0005D9, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue_2) == 0x0005DA, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_11) == 0x0005DC, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsValid_ReturnValue_3) == 0x0005E0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue_3) == 0x0005E1, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_IsComponentTickEnabled_ReturnValue_4) == 0x0005E2, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_IsComponentTickEnabled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_12) == 0x0005E4, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Add_IntInt_ReturnValue_13) == 0x0005E8, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_GetAllActorsOfClass_OutActors) == 0x0005F0, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawPsyObjInfo, CallFunc_Array_Length_ReturnValue) == 0x000600, "Member 'PsychicObjectManager_C_DebugDrawPsyObjInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct PsychicObjectManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on PsychicObjectManager_C_IsNeedFrameWait");
static_assert(sizeof(PsychicObjectManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on PsychicObjectManager_C_IsNeedFrameWait");
static_assert(offsetof(PsychicObjectManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.DebugDrawFcousObj
// 0x0260 (0x0260 - 0x0000)
struct PsychicObjectManager_C_DebugDrawFcousObj final
{
public:
	class ABP_PsychicObjectBasic_C*               L_focusObj;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_str;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_768F[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7690[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7691[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7692[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7693[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGravityEnabled_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7694[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7695[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7696[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMeshBoundCentrePos_pos;                // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x025E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x025F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_DebugDrawFcousObj) == 0x000008, "Wrong alignment on PsychicObjectManager_C_DebugDrawFcousObj");
static_assert(sizeof(PsychicObjectManager_C_DebugDrawFcousObj) == 0x000260, "Wrong size on PsychicObjectManager_C_DebugDrawFcousObj");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, L_focusObj) == 0x000000, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::L_focusObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, L_str) == 0x000008, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::L_str' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Conv_BoolToString_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000098, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000A8, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_IsGravityEnabled_ReturnValue) == 0x0000B8, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_IsGravityEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x0000C0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000D0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000D8, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x0000E8, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetCollisionEnabled_ReturnValue) == 0x0000F8, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000100, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000110, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000120, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000130, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000140, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000150, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000160, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000170, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000180, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000190, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_12) == 0x0001A0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x0001B0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_13) == 0x0001C0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0001D0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_15) == 0x0001E0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0001F0, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000200, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000210, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000220, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000230, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000240, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_GetMeshBoundCentrePos_pos) == 0x000250, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_GetMeshBoundCentrePos_pos' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_IsValid_ReturnValue) == 0x00025C, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_BooleanOR_ReturnValue) == 0x00025D, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_BooleanOR_ReturnValue_1) == 0x00025E, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_DebugDrawFcousObj, CallFunc_BooleanOR_ReturnValue_2) == 0x00025F, "Member 'PsychicObjectManager_C_DebugDrawFcousObj::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.LostCaptureOwner
// 0x0028 (0x0028 - 0x0000)
struct PsychicObjectManager_C_LostCaptureOwner final
{
public:
	class AActor*                                 Capture_owner_in;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Npc_in;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Enemy_in;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7697[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_LostCaptureOwner) == 0x000008, "Wrong alignment on PsychicObjectManager_C_LostCaptureOwner");
static_assert(sizeof(PsychicObjectManager_C_LostCaptureOwner) == 0x000028, "Wrong size on PsychicObjectManager_C_LostCaptureOwner");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, Capture_owner_in) == 0x000000, "Member 'PsychicObjectManager_C_LostCaptureOwner::Capture_owner_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, Npc_in) == 0x000008, "Member 'PsychicObjectManager_C_LostCaptureOwner::Npc_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, Enemy_in) == 0x000009, "Member 'PsychicObjectManager_C_LostCaptureOwner::Enemy_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_LostCaptureOwner::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, CallFunc_GetPsychicObject_psy_obj) == 0x000018, "Member 'PsychicObjectManager_C_LostCaptureOwner::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_LostCaptureOwner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'PsychicObjectManager_C_LostCaptureOwner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_LostCaptureOwner, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'PsychicObjectManager_C_LostCaptureOwner::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.ChangeUniqueObjectTargetActor
// 0x0038 (0x0038 - 0x0000)
struct PsychicObjectManager_C_ChangeUniqueObjectTargetActor final
{
public:
	class AActor*                                 Old_actor_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 New_actor_in;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7698[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               K2Node_DynamicCast_AsBP_Psychic_Object_Basic;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7699[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetPsychicObject_psy_obj;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor) == 0x000008, "Wrong alignment on PsychicObjectManager_C_ChangeUniqueObjectTargetActor");
static_assert(sizeof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor) == 0x000038, "Wrong size on PsychicObjectManager_C_ChangeUniqueObjectTargetActor");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, Old_actor_in) == 0x000000, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::Old_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, New_actor_in) == 0x000008, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::New_actor_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, L_psyObj) == 0x000010, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, K2Node_DynamicCast_AsBP_Psychic_Object_Basic) == 0x000020, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::K2Node_DynamicCast_AsBP_Psychic_Object_Basic' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_ChangeUniqueObjectTargetActor, CallFunc_GetPsychicObject_psy_obj) == 0x000030, "Member 'PsychicObjectManager_C_ChangeUniqueObjectTargetActor::CallFunc_GetPsychicObject_psy_obj' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.SetWeightGaugeCheck
// 0x00B0 (0x00B0 - 0x0000)
struct PsychicObjectManager_C_SetWeightGaugeCheck final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Force_in;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_SetWeightGaugeCheck) == 0x000008, "Wrong alignment on PsychicObjectManager_C_SetWeightGaugeCheck");
static_assert(sizeof(PsychicObjectManager_C_SetWeightGaugeCheck) == 0x0000B0, "Wrong size on PsychicObjectManager_C_SetWeightGaugeCheck");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, Flag_in) == 0x000000, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, Force_in) == 0x000001, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::Force_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, Psy_obj_in) == 0x000008, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_SelectString_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_SelectString_ReturnValue_1) == 0x000030, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_GetDisplayName_ReturnValue_1) == 0x000050, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000080, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000090, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_SetWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000A0, "Member 'PsychicObjectManager_C_SetWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.StartWeightGaugeCheck
// 0x0030 (0x0030 - 0x0000)
struct PsychicObjectManager_C_StartWeightGaugeCheck final
{
public:
	bool                                          Map_gimmick_in;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_StartWeightGaugeCheck) == 0x000008, "Wrong alignment on PsychicObjectManager_C_StartWeightGaugeCheck");
static_assert(sizeof(PsychicObjectManager_C_StartWeightGaugeCheck) == 0x000030, "Wrong size on PsychicObjectManager_C_StartWeightGaugeCheck");
static_assert(offsetof(PsychicObjectManager_C_StartWeightGaugeCheck, Map_gimmick_in) == 0x000000, "Member 'PsychicObjectManager_C_StartWeightGaugeCheck::Map_gimmick_in' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartWeightGaugeCheck, Temp_bool_Variable) == 0x000001, "Member 'PsychicObjectManager_C_StartWeightGaugeCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartWeightGaugeCheck, CallFunc_SelectString_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_StartWeightGaugeCheck::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'PsychicObjectManager_C_StartWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_StartWeightGaugeCheck, K2Node_Select_Default) == 0x000028, "Member 'PsychicObjectManager_C_StartWeightGaugeCheck::K2Node_Select_Default' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.EndWeightGaugeCheck
// 0x0020 (0x0020 - 0x0000)
struct PsychicObjectManager_C_EndWeightGaugeCheck final
{
public:
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicObjectManager_C_EndWeightGaugeCheck) == 0x000008, "Wrong alignment on PsychicObjectManager_C_EndWeightGaugeCheck");
static_assert(sizeof(PsychicObjectManager_C_EndWeightGaugeCheck) == 0x000020, "Wrong size on PsychicObjectManager_C_EndWeightGaugeCheck");
static_assert(offsetof(PsychicObjectManager_C_EndWeightGaugeCheck, CallFunc_SelectString_ReturnValue) == 0x000000, "Member 'PsychicObjectManager_C_EndWeightGaugeCheck::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EndWeightGaugeCheck, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'PsychicObjectManager_C_EndWeightGaugeCheck::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.CancelCopyPsychicObject
// 0x0010 (0x0010 - 0x0000)
struct PsychicObjectManager_C_CancelCopyPsychicObject final
{
public:
	class ABP_PsychicObjectBasic_C*               L_psyObj;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckPsychicObjectState_return_1;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_CancelCopyPsychicObject) == 0x000008, "Wrong alignment on PsychicObjectManager_C_CancelCopyPsychicObject");
static_assert(sizeof(PsychicObjectManager_C_CancelCopyPsychicObject) == 0x000010, "Wrong size on PsychicObjectManager_C_CancelCopyPsychicObject");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, L_psyObj) == 0x000000, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::L_psyObj' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_IsValid_ReturnValue_2) == 0x00000A, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_IsValid_ReturnValue_3) == 0x00000B, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_CheckPsychicObjectState_return) == 0x00000C, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_CheckPsychicObjectState_return' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_CheckPsychicObjectState_return_1) == 0x00000D, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_CheckPsychicObjectState_return_1' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_CancelCopyPsychicObject, CallFunc_IsValid_ReturnValue_4) == 0x00000E, "Member 'PsychicObjectManager_C_CancelCopyPsychicObject::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.EventManagerStart
// 0x0004 (0x0004 - 0x0000)
struct PsychicObjectManager_C_EventManagerStart final
{
public:
	bool                                          EnableTick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visibility;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_EventManagerStart) == 0x000001, "Wrong alignment on PsychicObjectManager_C_EventManagerStart");
static_assert(sizeof(PsychicObjectManager_C_EventManagerStart) == 0x000004, "Wrong size on PsychicObjectManager_C_EventManagerStart");
static_assert(offsetof(PsychicObjectManager_C_EventManagerStart, EnableTick) == 0x000000, "Member 'PsychicObjectManager_C_EventManagerStart::EnableTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EventManagerStart, Visibility) == 0x000001, "Member 'PsychicObjectManager_C_EventManagerStart::Visibility' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EventManagerStart, ReturnValue) == 0x000002, "Member 'PsychicObjectManager_C_EventManagerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EventManagerStart, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'PsychicObjectManager_C_EventManagerStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.EventManagerEnd
// 0x0003 (0x0003 - 0x0000)
struct PsychicObjectManager_C_EventManagerEnd final
{
public:
	bool                                          RestoreEnableTick;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RestoreVisibility;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_EventManagerEnd) == 0x000001, "Wrong alignment on PsychicObjectManager_C_EventManagerEnd");
static_assert(sizeof(PsychicObjectManager_C_EventManagerEnd) == 0x000003, "Wrong size on PsychicObjectManager_C_EventManagerEnd");
static_assert(offsetof(PsychicObjectManager_C_EventManagerEnd, RestoreEnableTick) == 0x000000, "Member 'PsychicObjectManager_C_EventManagerEnd::RestoreEnableTick' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EventManagerEnd, RestoreVisibility) == 0x000001, "Member 'PsychicObjectManager_C_EventManagerEnd::RestoreVisibility' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_EventManagerEnd, ReturnValue) == 0x000002, "Member 'PsychicObjectManager_C_EventManagerEnd::ReturnValue' has a wrong offset!");

// Function PsychicObjectManager.PsychicObjectManager_C.GetInterceptAttackParam
// 0x02D8 (0x02D8 - 0x0000)
struct PsychicObjectManager_C_GetInterceptAttackParam final
{
public:
	bool                                          bFind;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHCCollisionCommonInfo                 CommonInfo;                                        // 0x0008(0x0070)(Parm, OutParm)
	struct FHCSkillCommonInfo                     SkillInfo;                                         // 0x0078(0x00F0)(Parm, OutParm)
	struct FHCSkillCommonInfo                     LDefaultSkill;                                     // 0x0168(0x00F0)(Edit, BlueprintVisible)
	struct FHCCollisionCommonInfo                 LDefaultCommon;                                    // 0x0258(0x0070)(Edit, BlueprintVisible)
	class FName                                   Temp_name_Variable;                                // 0x02C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicObjectManager_C_GetInterceptAttackParam) == 0x000008, "Wrong alignment on PsychicObjectManager_C_GetInterceptAttackParam");
static_assert(sizeof(PsychicObjectManager_C_GetInterceptAttackParam) == 0x0002D8, "Wrong size on PsychicObjectManager_C_GetInterceptAttackParam");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, bFind) == 0x000000, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::bFind' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, CommonInfo) == 0x000008, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::CommonInfo' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, SkillInfo) == 0x000078, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::SkillInfo' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, LDefaultSkill) == 0x000168, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::LDefaultSkill' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, LDefaultCommon) == 0x000258, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::LDefaultCommon' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, Temp_name_Variable) == 0x0002C8, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, CallFunc_Array_Find_ReturnValue) == 0x0002D0, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicObjectManager_C_GetInterceptAttackParam, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002D4, "Member 'PsychicObjectManager_C_GetInterceptAttackParam::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

