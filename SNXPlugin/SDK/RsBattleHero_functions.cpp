#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RsBattleHero

#include "Basic.hpp"

#include "RsBattleHero_classes.hpp"
#include "RsBattleHero_parameters.hpp"


namespace SDK
{

// Function RsBattleHero.RsBattleHero_C.DispatchPsychicUniqueSuccess__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::DispatchPsychicUniqueSuccess__DelegateSignature(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicUniqueSuccess__DelegateSignature");

	Params::RsBattleHero_C_DispatchPsychicUniqueSuccess__DelegateSignature Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicCaptureCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     FirstAttackMontage                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::DispatchPsychicCaptureCompleted__DelegateSignature(class UAnimMontage* FirstAttackMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicCaptureCompleted__DelegateSignature");

	Params::RsBattleHero_C_DispatchPsychicCaptureCompleted__DelegateSignature Parms{};

	Parms.FirstAttackMontage = FirstAttackMontage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicCaptureCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::DispatchPsychicCaptureCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicCaptureCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicComboAttack__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::DispatchPsychicComboAttack__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicComboAttack__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicUniqueInputStart__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::DispatchPsychicUniqueInputStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicUniqueInputStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicUniqueEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::DispatchPsychicUniqueEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicUniqueEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DispatchPsychicUniqueAimBegin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         PsychicObject                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::DispatchPsychicUniqueAimBegin__DelegateSignature(class ABP_PsychicObjectBasic_C* PsychicObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DispatchPsychicUniqueAimBegin__DelegateSignature");

	Params::RsBattleHero_C_DispatchPsychicUniqueAimBegin__DelegateSignature Parms{};

	Parms.PsychicObject = PsychicObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.ExecuteUbergraph_RsBattleHero
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::ExecuteUbergraph_RsBattleHero(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ExecuteUbergraph_RsBattleHero");

	Params::RsBattleHero_C_ExecuteUbergraph_RsBattleHero Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnregisterDelayDriveEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::UnregisterDelayDriveEnd(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnregisterDelayDriveEnd");

	Params::RsBattleHero_C_UnregisterDelayDriveEnd Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.RegisterDelayDriveEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::RegisterDelayDriveEnd(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "RegisterDelayDriveEnd");

	Params::RsBattleHero_C_RegisterDelayDriveEnd Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnregisterNpcDriveForNexusDrive
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::UnregisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnregisterNpcDriveForNexusDrive");

	Params::RsBattleHero_C_UnregisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.RegisterNpcDriveForNexusDrive
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::RegisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "RegisterNpcDriveForNexusDrive");

	Params::RsBattleHero_C_RegisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnbindHologramOff
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UnbindHologramOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnbindHologramOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BindHologramOff
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BindHologramOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BindHologramOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ReceiveEndPlay");

	Params::RsBattleHero_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_TargetSearchComponent_K2Node_ComponentBoundEvent_0_ChangeTargetDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLockOn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLostTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BndEvt__BP_TargetSearchComponent_K2Node_ComponentBoundEvent_0_ChangeTargetDelegate__DelegateSignature(class ARSCharacterBase* Target, bool bLockOn, bool bLostTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_TargetSearchComponent_K2Node_ComponentBoundEvent_0_ChangeTargetDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_TargetSearchComponent_K2Node_ComponentBoundEvent_0_ChangeTargetDelegate__DelegateSignature Parms{};

	Parms.Target = Target;
	Parms.bLockOn = bLockOn;
	Parms.bLostTarget = bLostTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnDamageingForPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnDamageingForPlayer(const struct FHCHitResult& HitResult, float DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnDamageingForPlayer");

	Params::RsBattleHero_C_OnDamageingForPlayer Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.ResetCoverDamagePlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ResetCoverDamagePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ResetCoverDamagePlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnUpdateDriveHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnUpdateDriveHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnUpdateDriveHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnDeadPlayerCore
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnDeadPlayerCore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnDeadPlayerCore");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DamageAfter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FHCHitResult>             Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ARsBattleHero_C::DamageAfter(TArray<struct FHCHitResult>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DamageAfter");

	Params::RsBattleHero_C_DamageAfter Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function RsBattleHero.RsBattleHero_C.BadStateEffectOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCBadState                             bad                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BadStateEffectOn(EHCBadState bad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BadStateEffectOn");

	Params::RsBattleHero_C_BadStateEffectOn Parms{};

	Parms.bad = bad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnPlayerAssetLoad
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnPlayerAssetLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnPlayerAssetLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInitialize
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnUpdateHUD
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnUpdateHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnUpdateHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SetupPhychicCaptureMaterial
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsStart                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetupPhychicCaptureMaterial(bool IsStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetupPhychicCaptureMaterial");

	Params::RsBattleHero_C_SetupPhychicCaptureMaterial Parms{};

	Parms.IsStart = IsStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.TickDelaySasRecoveryEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::TickDelaySasRecoveryEffect(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "TickDelaySasRecoveryEffect");

	Params::RsBattleHero_C_TickDelaySasRecoveryEffect Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnbindDelaySasRecoveryEffect
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UnbindDelaySasRecoveryEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnbindDelaySasRecoveryEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BindDelaySasRecoveryEffect
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BindDelaySasRecoveryEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BindDelaySasRecoveryEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnEquipSAS
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnEquipSAS(E_SASButton Button, E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEquipSAS");

	Params::RsBattleHero_C_OnEquipSAS Parms{};

	Parms.Button = Button;
	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnPsychicEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnPsychicEnd");

	Params::RsBattleHero_C_OnPsychicEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnPsychicStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnPsychicStart");

	Params::RsBattleHero_C_OnPsychicStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnCopyEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnCopyEnd");

	Params::RsBattleHero_C_OnCopyEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnCopyStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnCopyStart");

	Params::RsBattleHero_C_OnCopyStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnStealthEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnStealthEnd");

	Params::RsBattleHero_C_OnStealthEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnStealthStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnStealthStart");

	Params::RsBattleHero_C_OnStealthStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnSeeThroughEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnSeeThroughEnd");

	Params::RsBattleHero_C_OnSeeThroughEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnSeeThroughStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnSeeThroughStart");

	Params::RsBattleHero_C_OnSeeThroughStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnMetalEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnMetalEnd");

	Params::RsBattleHero_C_OnMetalEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnMetalStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnMetalStart");

	Params::RsBattleHero_C_OnMetalStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnTelepoEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnTelepoEnd");

	Params::RsBattleHero_C_OnTelepoEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnTelepoStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnTelepoStart");

	Params::RsBattleHero_C_OnTelepoStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnFireEnd");

	Params::RsBattleHero_C_OnFireEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnFireStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnFireStart");

	Params::RsBattleHero_C_OnFireStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnElectricEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnElectricEnd");

	Params::RsBattleHero_C_OnElectricEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnElectricStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnElectricStart");

	Params::RsBattleHero_C_OnElectricStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnAcceleratorEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnAcceleratorEnd");

	Params::RsBattleHero_C_OnAcceleratorEnd Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnAcceleratorStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnAcceleratorStart");

	Params::RsBattleHero_C_OnAcceleratorStart Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnInitializeDebug
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInitializeDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInitializeDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnAnimNotifyInputPsychic
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnAnimNotifyInputPsychic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnAnimNotifyInputPsychic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ReceiveMontageBlendingOut
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ReceiveMontageBlendingOut(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ReceiveMontageBlendingOut");

	Params::RsBattleHero_C_ReceiveMontageBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.ReceiveMontageEnded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Interrupted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ReceiveMontageEnded(class UAnimMontage* Montage, bool Interrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ReceiveMontageEnded");

	Params::RsBattleHero_C_ReceiveMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.Interrupted = Interrupted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.TickCaptureVibration
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::TickCaptureVibration(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "TickCaptureVibration");

	Params::RsBattleHero_C_TickCaptureVibration Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnbindCaptureVibration
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UnbindCaptureVibration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnbindCaptureVibration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BindCaptureVibration
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BindCaptureVibration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BindCaptureVibration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueObjectControlStart__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueObjectControlStart__DelegateSignature(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueObjectControlStart__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueObjectControlStart__DelegateSignature Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_2_UniqueObjectAddGauge__DelegateSignature
// (BlueprintEvent)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_2_UniqueObjectAddGauge__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_2_UniqueObjectAddGauge__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SetPsychicEmissionInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bON                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SetPsychicEmissionInterface(bool bON, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetPsychicEmissionInterface");

	Params::RsBattleHero_C_SetPsychicEmissionInterface Parms{};

	Parms.bON = bON;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueObjectEnd__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    Input_success_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueObjectEnd__DelegateSignature(bool Input_success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueObjectEnd__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueObjectEnd__DelegateSignature Parms{};

	Parms.Input_success_in = Input_success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueInputStart__DelegateSignature
// (BlueprintEvent)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueInputStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_5_UniqueInputStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__AttackInput_K2Node_ComponentBoundEvent_2_ChangePsychicComboLevelDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   PsychicComboLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__AttackInput_K2Node_ComponentBoundEvent_2_ChangePsychicComboLevelDelegate__DelegateSignature(int32 PsychicComboLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__AttackInput_K2Node_ComponentBoundEvent_2_ChangePsychicComboLevelDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__AttackInput_K2Node_ComponentBoundEvent_2_ChangePsychicComboLevelDelegate__DelegateSignature Parms{};

	Parms.PsychicComboLevel = PsychicComboLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__AttackInput_K2Node_ComponentBoundEvent_0_ChangePsychicComboLevelDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   PsychicComboLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__AttackInput_K2Node_ComponentBoundEvent_0_ChangePsychicComboLevelDelegate__DelegateSignature(int32 PsychicComboLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__AttackInput_K2Node_ComponentBoundEvent_0_ChangePsychicComboLevelDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__AttackInput_K2Node_ComponentBoundEvent_0_ChangePsychicComboLevelDelegate__DelegateSignature Parms{};

	Parms.PsychicComboLevel = PsychicComboLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_ComboAttackStart__DelegateSignature
// (BlueprintEvent)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_ComboAttackStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_ComboAttackStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueAttackSuccess__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Unique_montage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueAttackSuccess__DelegateSignature(class UAnimMontage* Unique_montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueAttackSuccess__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_UniqueAttackSuccess__DelegateSignature Parms{};

	Parms.Unique_montage = Unique_montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_CaptureSuccess__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Unique_montage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_CaptureSuccess__DelegateSignature(class UAnimMontage* Unique_montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_CaptureSuccess__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_PlayerPsychicObjectComponent_K2Node_ComponentBoundEvent_0_CaptureSuccess__DelegateSignature Parms{};

	Parms.Unique_montage = Unique_montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerSASHologramAttackManual
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerSASHologramAttackManual()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerSASHologramAttackManual");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputReleasePsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputReleasePsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputReleasePsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerPsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerPsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerPsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerSASAllOff
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerSASAllOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerSASAllOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerSASHologramAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerSASHologramAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerSASHologramAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerRessurect
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerRessurect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerRessurect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputReleaseBrainFieldPsychicRight
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputReleaseBrainFieldPsychicRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputReleaseBrainFieldPsychicRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerBrainFieldPsychicRight
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerBrainFieldPsychicRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerBrainFieldPsychicRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerBrainFieldPsychicLeft
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerBrainFieldPsychicLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerBrainFieldPsychicLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerBrainFieldPsychicUp
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerBrainFieldPsychicUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerBrainFieldPsychicUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerChangeSASSet
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerChangeSASSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerChangeSASSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputReleaseMapGimmick
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputReleaseMapGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputReleaseMapGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerMapGimmick
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerMapGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerMapGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputReleasePsychicSpecial
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputReleasePsychicSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputReleasePsychicSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerPsychicSpecial
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerPsychicSpecial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerPsychicSpecial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerIntercept
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputReleasePsychic
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputReleasePsychic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputReleasePsychic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerPsychic
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerPsychic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerPsychic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerBrainField
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerDownSAS
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerDownSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerDownSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerUpSAS
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerUpSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerUpSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerRightSAS
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerRightSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerRightSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerLeftSAS
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerLeftSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerLeftSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnInputTriggerBrainCrash
// (Protected, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnInputTriggerBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnInputTriggerBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldPsychicGaugeDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bChangeDirection                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldPsychicGaugeDelegate__DelegateSignature(bool bChangeDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldPsychicGaugeDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldPsychicGaugeDelegate__DelegateSignature Parms{};

	Parms.bChangeDirection = bChangeDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_RequestLunaticBrainTalkDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EPlayerBrainFieldDanger                 DangerLV                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFirstBrainField                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_RequestLunaticBrainTalkDelegate__DelegateSignature(EPlayerBrainFieldDanger DangerLV, bool bFirstBrainField)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_RequestLunaticBrainTalkDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_RequestLunaticBrainTalkDelegate__DelegateSignature Parms{};

	Parms.DangerLV = DangerLV;
	Parms.bFirstBrainField = bFirstBrainField;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_2_PlayerBrainFieldIntarvalEndDelegate__DelegateSignature
// (BlueprintEvent)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_2_PlayerBrainFieldIntarvalEndDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_2_PlayerBrainFieldIntarvalEndDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_1_PlayerBrainFieldStateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// EPlayerBrainFieldState                  State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerBrainFieldState                  PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_1_PlayerBrainFieldStateDelegate__DelegateSignature(EPlayerBrainFieldState State, EPlayerBrainFieldState PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_1_PlayerBrainFieldStateDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__PlayerScript_K2Node_ComponentBoundEvent_1_PlayerBrainFieldStateDelegate__DelegateSignature Parms{};

	Parms.State = State;
	Parms.PrevState = PrevState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldUpdateDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldUpdateDelegate__DelegateSignature(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldUpdateDelegate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainFieldUpdateDelegate__DelegateSignature Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnEnpcSasTimeDilationTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnEnpcSasTimeDilationTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEnpcSasTimeDilationTick");

	Params::RsBattleHero_C_OnEnpcSasTimeDilationTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.UnbindEnpcSasTimeDilationTick
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UnbindEnpcSasTimeDilationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UnbindEnpcSasTimeDilationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BindEnpcSasTimeDilationTick
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BindEnpcSasTimeDilationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BindEnpcSasTimeDilationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SuspendEnpcSASDirection
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::SuspendEnpcSASDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SuspendEnpcSASDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BeginEnpcSASDirection
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BeginEnpcSASDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginEnpcSASDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainTalkHitCountDelegate__DelegateSignature
// (BlueprintEvent)

void ARsBattleHero_C::BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainTalkHitCountDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__PlayerScript_K2Node_ComponentBoundEvent_0_PlayerBrainTalkHitCountDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BrainTalk_FindTarget
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EFindTargetBrainTalkType>        Type                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ARsBattleHero_C::BrainTalk_FindTarget(const TArray<EFindTargetBrainTalkType>& Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainTalk_FindTarget");

	Params::RsBattleHero_C_BrainTalk_FindTarget Parms{};

	Parms.Type = std::move(Type);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BrainTalk_FnishUniqueObject
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BrainTalk_FnishUniqueObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainTalk_FnishUniqueObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BrainTalk_FirstSasElectric
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BrainTalk_FirstSasElectric()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainTalk_FirstSasElectric");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BrainTalk_FirstSasFire
// (BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BrainTalk_FirstSasFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainTalk_FirstSasFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_5_NexusDriveSasBegin__DelegateSignature
// (BlueprintEvent)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_5_NexusDriveSasBegin__DelegateSignature(E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_5_NexusDriveSasBegin__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_5_NexusDriveSasBegin__DelegateSignature Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_4_NexusDriveActivate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_4_NexusDriveActivate__DelegateSignature(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_4_NexusDriveActivate__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_4_NexusDriveActivate__DelegateSignature Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_3_NexusDriveSasEnd__DelegateSignature
// (BlueprintEvent)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_3_NexusDriveSasEnd__DelegateSignature(E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_3_NexusDriveSasEnd__DelegateSignature");

	Params::RsBattleHero_C_BndEvt__BP_NexusDriveComponent_K2Node_ComponentBoundEvent_3_NexusDriveSasEnd__DelegateSignature Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.NexusDriveAttackHitRecovery
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bCopyPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::NexusDriveAttackHitRecovery(const struct FHCHitResult& HitResult, bool bCopyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "NexusDriveAttackHitRecovery");

	Params::RsBattleHero_C_NexusDriveAttackHitRecovery Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.bCopyPlayer = bCopyPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__Cable__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__Cable__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__Cable__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__Reaction__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__Reaction__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__Reaction__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__Effect__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__Effect__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__Effect__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__StartCameraAttention__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__StartCameraAttention__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__StartCameraAttention__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__EndCameraAttention__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__EndCameraAttention__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__EndCameraAttention__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__StartTimeDilation__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__StartTimeDilation__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__StartTimeDilation__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__EndTimeDilation__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__EndTimeDilation__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__EndTimeDilation__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__RegistSAS__EventFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__RegistSAS__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__RegistSAS__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__UpdateFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EnpcSASTimeLine__FinishedFunc
// (BlueprintEvent)

void ARsBattleHero_C::EnpcSASTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EnpcSASTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CheckInputPsychic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckInputPsychic(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckInputPsychic");

	Params::RsBattleHero_C_CheckInputPsychic Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.InputBrainCrash
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.StartSAS
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             Sas_button                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::StartSAS(E_SASButton Sas_button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "StartSAS");

	Params::RsBattleHero_C_StartSAS Parms{};

	Parms.Sas_button = Sas_button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnAttackActorHit
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnAttackActorHit(const struct FHCHitResult& HitResult, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnAttackActorHit");

	Params::RsBattleHero_C_OnAttackActorHit Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.PostTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PostTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PostTick");

	Params::RsBattleHero_C_PostTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.MainTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::MainTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "MainTick");

	Params::RsBattleHero_C_MainTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.UpdateBrainField
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::UpdateBrainField(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UpdateBrainField");

	Params::RsBattleHero_C_UpdateBrainField Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.Set Cable Brain Field Mode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::Set_Cable_Brain_Field_Mode(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "Set Cable Brain Field Mode");

	Params::RsBattleHero_C_Set_Cable_Brain_Field_Mode Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.IsEnableBrainField
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableBrainField(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableBrainField");

	Params::RsBattleHero_C_IsEnableBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RsBattleHero.RsBattleHero_C.GetBrainFieldTimeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetBrainFieldTimeRate(float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetBrainFieldTimeRate");

	Params::RsBattleHero_C_GetBrainFieldTimeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function RsBattleHero.RsBattleHero_C.StartSAS_UI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::StartSAS_UI(E_SASButton SASButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "StartSAS_UI");

	Params::RsBattleHero_C_StartSAS_UI Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnChangeBattleReady
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBattle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnChangeBattleReady(bool bBattle, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnChangeBattleReady");

	Params::RsBattleHero_C_OnChangeBattleReady Parms{};

	Parms.bBattle = bBattle;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CalcDamageByAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefPhysicsDamage                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefObjDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlameDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectricDamage                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCriticalDamageRate                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::CalcDamageByAttack(float& RefPhysicsDamage, float& RefObjDamage, float& RefFlameDamage, float& RefElectricDamage, float& RefCriticalDamageRate, class AActor* DefenseActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CalcDamageByAttack");

	Params::RsBattleHero_C_CalcDamageByAttack Parms{};

	Parms.RefPhysicsDamage = RefPhysicsDamage;
	Parms.RefObjDamage = RefObjDamage;
	Parms.RefFlameDamage = RefFlameDamage;
	Parms.RefElectricDamage = RefElectricDamage;
	Parms.RefCriticalDamageRate = RefCriticalDamageRate;
	Parms.DefenseActor = DefenseActor;

	UObject::ProcessEvent(Func, &Parms);

	RefPhysicsDamage = Parms.RefPhysicsDamage;
	RefObjDamage = Parms.RefObjDamage;
	RefFlameDamage = Parms.RefFlameDamage;
	RefElectricDamage = Parms.RefElectricDamage;
	RefCriticalDamageRate = Parms.RefCriticalDamageRate;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.SetPsychicObjectEnableRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Brain_Field_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Range                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SetPsychicObjectEnableRange(bool Is_Brain_Field_in, float* Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetPsychicObjectEnableRange");

	Params::RsBattleHero_C_SetPsychicObjectEnableRange Parms{};

	Parms.Is_Brain_Field_in = Is_Brain_Field_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Range != nullptr)
		*Range = Parms.Range;
}


// Function RsBattleHero.RsBattleHero_C.CalcFinalDamageByAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARsBattleHero_C::CalcFinalDamageByAttack(float Damage, class AActor* DefenseActor, const struct FHCSkillCommonInfo& SkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CalcFinalDamageByAttack");

	Params::RsBattleHero_C_CalcFinalDamageByAttack Parms{};

	Parms.Damage = Damage;
	Parms.DefenseActor = DefenseActor;
	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.OverwriteAttackCollisionInfo
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           RefCommonInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FHCSkillCommonInfo               RefSkill                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::OverwriteAttackCollisionInfo(struct FHCCollisionCommonInfo& RefCommonInfo, struct FHCSkillCommonInfo& RefSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OverwriteAttackCollisionInfo");

	Params::RsBattleHero_C_OverwriteAttackCollisionInfo Parms{};

	Parms.RefCommonInfo = std::move(RefCommonInfo);
	Parms.RefSkill = std::move(RefSkill);

	UObject::ProcessEvent(Func, &Parms);

	RefCommonInfo = std::move(Parms.RefCommonInfo);
	RefSkill = std::move(Parms.RefSkill);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.SetCanAnimOverrideSASColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetCanAnimOverrideSASColor(bool Enable, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetCanAnimOverrideSASColor");

	Params::RsBattleHero_C_SetCanAnimOverrideSASColor Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.GetCanAnimOverrideSASColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::GetCanAnimOverrideSASColor(bool* Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetCanAnimOverrideSASColor");

	Params::RsBattleHero_C_GetCanAnimOverrideSASColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;
}


// Function RsBattleHero.RsBattleHero_C.PreTick
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PreTick(float DeltaSeconds, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PreTick");

	Params::RsBattleHero_C_PreTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.SetSasStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Stealth_on_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hero_order_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_delay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_ignore                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    No_sas_cancel_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    From_event_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetSasStealth(bool Stealth_on_in, bool Hero_order_in, bool Check_delay, bool Check_ignore, bool No_sas_cancel_in, bool From_event_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetSasStealth");

	Params::RsBattleHero_C_SetSasStealth Parms{};

	Parms.Stealth_on_in = Stealth_on_in;
	Parms.Hero_order_in = Hero_order_in;
	Parms.Check_delay = Check_delay;
	Parms.Check_ignore = Check_ignore;
	Parms.No_sas_cancel_in = No_sas_cancel_in;
	Parms.From_event_in = From_event_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.SetHideSASOutline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHide                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetHideSASOutline(bool bHide, class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetHideSASOutline");

	Params::RsBattleHero_C_SetHideSASOutline Parms{};

	Parms.bHide = bHide;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CopyPlayerOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AppearTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CopyPlayerOn(float AppearTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CopyPlayerOn");

	Params::RsBattleHero_C_CopyPlayerOn Parms{};

	Parms.AppearTime = AppearTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.InitializeSAS
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InitializeSAS(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InitializeSAS");

	Params::RsBattleHero_C_InitializeSAS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnDestroy
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnDestroy(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnDestroy");

	Params::RsBattleHero_C_OnDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.SAS_CommonStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     SAS_Command                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SAS_CommonStart");

	Params::RsBattleHero_C_SAS_CommonStart Parms{};

	Parms.SAS_Command = std::move(SAS_Command);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.SAS_CommonEnd
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RemainTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SAS_CommonEnd");

	Params::RsBattleHero_C_SAS_CommonEnd Parms{};

	Parms.SAS_Kind = SAS_Kind;
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;

	if (RemainTime != nullptr)
		*RemainTime = Parms.RemainTime;
}


// Function RsBattleHero.RsBattleHero_C.CheckHardenRestriction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerActionKind                       Action_kind_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckHardenRestriction(EPlayerActionKind Action_kind_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckHardenRestriction");

	Params::RsBattleHero_C_CheckHardenRestriction Parms{};

	Parms.Action_kind_in = Action_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.OpenBrainFieldSetting
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OpenBrainFieldSetting(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OpenBrainFieldSetting");

	Params::RsBattleHero_C_OpenBrainFieldSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CloseBrainFieldSetting
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBrainFieldEndType                      EndType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CloseBrainFieldSetting(EBrainFieldEndType EndType, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CloseBrainFieldSetting");

	Params::RsBattleHero_C_CloseBrainFieldSetting Parms{};

	Parms.EndType = EndType;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.isEnableActionRecovery
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableActionRecovery(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "isEnableActionRecovery");

	Params::RsBattleHero_C_IsEnableActionRecovery Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function RsBattleHero.RsBattleHero_C.PsychicObjectThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSlam                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PsychicObjectThrow(bool bSlam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PsychicObjectThrow");

	Params::RsBattleHero_C_PsychicObjectThrow Parms{};

	Parms.bSlam = bSlam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.PsychicObjectCombo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AttractTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AirCombo                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EnemyDirectShot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PsychicObjectCombo(int32 Level, int32 Param_Index, float AttractTime, bool AirCombo, bool EnemyDirectShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PsychicObjectCombo");

	Params::RsBattleHero_C_PsychicObjectCombo Parms{};

	Parms.Level = Level;
	Parms.Param_Index = Param_Index;
	Parms.AttractTime = AttractTime;
	Parms.AirCombo = AirCombo;
	Parms.EnemyDirectShot = EnemyDirectShot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.PsychicObjectCancel
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::PsychicObjectCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PsychicObjectCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SetCaptureAction
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::SetCaptureAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetCaptureAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerPsychic
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUnique                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InputTriggerPsychic(bool bUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerPsychic");

	Params::RsBattleHero_C_InputTriggerPsychic Parms{};

	Parms.bUnique = bUnique;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.InputReleasePsychic
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUnique                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InputReleasePsychic(bool bUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputReleasePsychic");

	Params::RsBattleHero_C_InputReleasePsychic Parms{};

	Parms.bUnique = bUnique;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.SetPsychicEmission
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bON                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SetPsychicEmission(bool bON, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetPsychicEmission");

	Params::RsBattleHero_C_SetPsychicEmission Parms{};

	Parms.bON = bON;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.SetUniquePsychicAttackLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_UniquePsychicBonusLevel                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SetUniquePsychicAttackLevel(int32 Param_UniquePsychicBonusLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetUniquePsychicAttackLevel");

	Params::RsBattleHero_C_SetUniquePsychicAttackLevel Parms{};

	Parms.Param_UniquePsychicBonusLevel = Param_UniquePsychicBonusLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnBeginOverlapMapGimmick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMapGimmickObject*                Gimmick                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LookAtPos                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnBeginOverlapMapGimmick(class AMapGimmickObject* Gimmick, const struct FVector& LookAtPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBeginOverlapMapGimmick");

	Params::RsBattleHero_C_OnBeginOverlapMapGimmick Parms{};

	Parms.Gimmick = Gimmick;
	Parms.LookAtPos = std::move(LookAtPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnEndOverlapMapGimmick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMapGimmickObject*                Gimmick                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnEndOverlapMapGimmick(class AMapGimmickObject* Gimmick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEndOverlapMapGimmick");

	Params::RsBattleHero_C_OnEndOverlapMapGimmick Parms{};

	Parms.Gimmick = Gimmick;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.InputMapGimmick
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InputMapGimmick(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputMapGimmick");

	Params::RsBattleHero_C_InputMapGimmick Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.CancelMapGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CancelMapGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CancelMapGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CaptureMapGimmick
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CaptureMapGimmick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CaptureMapGimmick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ResetPayPsychicCost
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ResetPayPsychicCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ResetPayPsychicCost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.GetAttackMotionPlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetAttackMotionPlayRate(float* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetAttackMotionPlayRate");

	Params::RsBattleHero_C_GetAttackMotionPlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputTriggerBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnBeginDrive
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBeginDrive(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBeginDrive");

	Params::RsBattleHero_C_OnBeginDrive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.OnEndDrive
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInterruption                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLocationChange                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnEndDrive(bool bInterruption, bool bLocationChange, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEndDrive");

	Params::RsBattleHero_C_OnEndDrive Parms{};

	Parms.bInterruption = bInterruption;
	Parms.bLocationChange = bLocationChange;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function RsBattleHero.RsBattleHero_C.CheckCaptureAnimPattern
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ObjectLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RandomFront                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerCaptureAnimPattern               Pattern                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::CheckCaptureAnimPattern(const struct FVector& ObjectLocation, int32 RandomFront, EPlayerCaptureAnimPattern* Pattern)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckCaptureAnimPattern");

	Params::RsBattleHero_C_CheckCaptureAnimPattern Parms{};

	Parms.ObjectLocation = std::move(ObjectLocation);
	Parms.RandomFront = RandomFront;

	UObject::ProcessEvent(Func, &Parms);

	if (Pattern != nullptr)
		*Pattern = Parms.Pattern;
}


// Function RsBattleHero.RsBattleHero_C.ChangeSASSet
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ChangeSASSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ChangeSASSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InputSAS
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             Sas_button                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::InputSAS(E_SASButton Sas_button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputSAS");

	Params::RsBattleHero_C_InputSAS Parms{};

	Parms.Sas_button = Sas_button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.ClearPrecedeInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ClearPrecedeInput(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ClearPrecedeInput");

	Params::RsBattleHero_C_ClearPrecedeInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CheckFriendCoverDamage
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::CheckFriendCoverDamage(float DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckFriendCoverDamage");

	Params::RsBattleHero_C_CheckFriendCoverDamage Parms{};

	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.CheckActivateDamageCover
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActivate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLethalDamage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLargeDamage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckActivateDamageCover(float DamageValue, bool* bActivate, bool* bLethalDamage, bool* bLargeDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckActivateDamageCover");

	Params::RsBattleHero_C_CheckActivateDamageCover Parms{};

	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

	if (bActivate != nullptr)
		*bActivate = Parms.bActivate;

	if (bLethalDamage != nullptr)
		*bLethalDamage = Parms.bLethalDamage;

	if (bLargeDamage != nullptr)
		*bLargeDamage = Parms.bLargeDamage;
}


// Function RsBattleHero.RsBattleHero_C.CheckCoverDamageAblePlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               InPlayerID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckCoverDamageAblePlayer(EPlayerID InPlayerID, bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckCoverDamageAblePlayer");

	Params::RsBattleHero_C_CheckCoverDamageAblePlayer Parms{};

	Parms.InPlayerID = InPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.SearchAIPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFiound                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SearchAIPsychicObject(bool* bFiound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SearchAIPsychicObject");

	Params::RsBattleHero_C_SearchAIPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFiound != nullptr)
		*bFiound = Parms.bFiound;
}


// Function RsBattleHero.RsBattleHero_C.CheckAIPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCapture                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAttack                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckAIPsychicObject(bool bCapture, bool bAttack, bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckAIPsychicObject");

	Params::RsBattleHero_C_CheckAIPsychicObject Parms{};

	Parms.bCapture = bCapture;
	Parms.bAttack = bAttack;

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.DamageBefore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IgnoreAutoSasMetal                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DamageBefore(bool IgnoreAutoSasMetal, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DamageBefore");

	Params::RsBattleHero_C_DamageBefore Parms{};

	Parms.IgnoreAutoSasMetal = IgnoreAutoSasMetal;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.SubHardenTime
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SubTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SubHardenTime(float SubTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SubHardenTime");

	Params::RsBattleHero_C_SubHardenTime Parms{};

	Parms.SubTime = SubTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CheckAutoStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckAutoStealth(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckAutoStealth");

	Params::RsBattleHero_C_CheckAutoStealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RsBattleHero.RsBattleHero_C.UpdateAutoStealth
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UpdateAutoStealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UpdateAutoStealth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.DebugGetObjectAnimationName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             AnimationName                                          (Parm, OutParm)

void ARsBattleHero_C::DebugGetObjectAnimationName(class FText* AnimationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DebugGetObjectAnimationName");

	Params::RsBattleHero_C_DebugGetObjectAnimationName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimationName != nullptr)
		*AnimationName = std::move(Parms.AnimationName);
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerSASHologramAttack
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bManual                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InputTriggerSASHologramAttack(bool bManual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerSASHologramAttack");

	Params::RsBattleHero_C_InputTriggerSASHologramAttack Parms{};

	Parms.bManual = bManual;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.GetSASActiveSeconds
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainingSec                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSASActiveSeconds(E_SASButton SASButton, float* RemainingSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASActiveSeconds");

	Params::RsBattleHero_C_GetSASActiveSeconds Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);

	if (RemainingSec != nullptr)
		*RemainingSec = Parms.RemainingSec;
}


// Function RsBattleHero.RsBattleHero_C.GetWeakNumber
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ARsBattleHero_C::GetWeakNumber()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetWeakNumber");

	Params::RsBattleHero_C_GetWeakNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.DoEventStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoEventStart");

	Params::RsBattleHero_C_DoEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.DoStaticEventStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoStaticEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoStaticEventStart");

	Params::RsBattleHero_C_DoStaticEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.DoStaticEventEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoStaticEventEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoStaticEventEnd");

	Params::RsBattleHero_C_DoStaticEventEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.DoDynamicEventStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoDynamicEventStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoDynamicEventStart");

	Params::RsBattleHero_C_DoDynamicEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.DoDynamicEventEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoDynamicEventEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoDynamicEventEnd");

	Params::RsBattleHero_C_DoDynamicEventEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.DoApplySkill
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoApplySkill(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoApplySkill");

	Params::RsBattleHero_C_DoApplySkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.ApplySkillAction
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ApplySkillAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySkillAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ApplySkillAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ApplySkillAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySkillAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldMoveBrainField
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBrainFieldMoveBrainField(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldMoveBrainField");

	Params::RsBattleHero_C_OnBrainFieldMoveBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldMoveNormalField
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBrainFieldMoveNormalField(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldMoveNormalField");

	Params::RsBattleHero_C_OnBrainFieldMoveNormalField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldOpenEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBrainFieldOpenEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldOpenEnd");

	Params::RsBattleHero_C_OnBrainFieldOpenEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldCloseStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBrainFieldCloseStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldCloseStart");

	Params::RsBattleHero_C_OnBrainFieldCloseStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.ApplySkillOther
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ApplySkillOther()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySkillOther");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SetActionStateObstructPsychic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetActionStateObstructPsychic(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetActionStateObstructPsychic");

	Params::RsBattleHero_C_SetActionStateObstructPsychic Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSASHologramAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESASHologramAttackTiming                Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsEnableSASHologramAttack(ESASHologramAttackTiming Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSASHologramAttack");

	Params::RsBattleHero_C_IsEnableSASHologramAttack Parms{};

	Parms.Timing = Timing;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.AreaChangeBegin
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::AreaChangeBegin(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "AreaChangeBegin");

	Params::RsBattleHero_C_AreaChangeBegin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.AreaChangeEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::AreaChangeEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "AreaChangeEnd");

	Params::RsBattleHero_C_AreaChangeEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableInputPsychicCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableInputPsychicCombo(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableInputPsychicCombo");

	Params::RsBattleHero_C_IsEnableInputPsychicCombo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RsBattleHero.RsBattleHero_C.DoTimerPause
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPause                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::DoTimerPause(bool bPause, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "DoTimerPause");

	Params::RsBattleHero_C_DoTimerPause Parms{};

	Parms.bPause = bPause;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnEnterActionState
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerActionKind                       NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnEnterActionState(EPlayerActionKind NewState, int32 Param, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEnterActionState");

	Params::RsBattleHero_C_OnEnterActionState Parms{};

	Parms.NewState = NewState;
	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnEnterUpperActionState
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerUpperActionKind                  NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnEnterUpperActionState(EPlayerUpperActionKind NewState, int32 Param, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnEnterUpperActionState");

	Params::RsBattleHero_C_OnEnterUpperActionState Parms{};

	Parms.NewState = NewState;
	Parms.Param = Param;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.BeginPsychicDither
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BeginPsychicDither(class FName ParameterName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginPsychicDither");

	Params::RsBattleHero_C_BeginPsychicDither Parms{};

	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.EndPsychicDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoInterp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::EndPsychicDither(bool bNoInterp, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EndPsychicDither");

	Params::RsBattleHero_C_EndPsychicDither Parms{};

	Parms.bNoInterp = bNoInterp;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.UpdatePsychicDither
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::UpdatePsychicDither(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UpdatePsychicDither");

	Params::RsBattleHero_C_UpdatePsychicDither Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.GatherPsychicDitherIgnoreList
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicDitherType                      DitherType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>                   IgnoreActorList                                        (Parm, OutParm, HasGetValueTypeHash)

void ARsBattleHero_C::GatherPsychicDitherIgnoreList(EPsychicDitherType DitherType, float Param0, float Param1, bool* bSuccess, TArray<class AActor*>* IgnoreActorList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GatherPsychicDitherIgnoreList");

	Params::RsBattleHero_C_GatherPsychicDitherIgnoreList Parms{};

	Parms.DitherType = DitherType;
	Parms.Param0 = Param0;
	Parms.Param1 = Param1;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (IgnoreActorList != nullptr)
		*IgnoreActorList = std::move(Parms.IgnoreActorList);
}


// Function RsBattleHero.RsBattleHero_C.BeginDriveSequence
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BeginDriveSequence(bool* bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginDriveSequence");

	Params::RsBattleHero_C_BeginDriveSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;
}


// Function RsBattleHero.RsBattleHero_C.SetSeeThroughSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetSeeThroughSetting(bool bEnable, class FName ClaimantName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetSeeThroughSetting");

	Params::RsBattleHero_C_SetSeeThroughSetting Parms{};

	Parms.bEnable = bEnable;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.InputSASAllOff
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputSASAllOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputSASAllOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSASInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableSASInput(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSASInput");

	Params::RsBattleHero_C_IsEnableSASInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RsBattleHero.RsBattleHero_C.OnDriveGaugeMax
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENotifyDriveEvent                       Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnDriveGaugeMax(ENotifyDriveEvent Reason, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnDriveGaugeMax");

	Params::RsBattleHero_C_OnDriveGaugeMax Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerBrainFieldAttackLeft
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputTriggerBrainFieldAttackLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerBrainFieldAttackLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerBrainFieldAttackUp
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputTriggerBrainFieldAttackUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerBrainFieldAttackUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerBrainFieldAttackRight
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputTriggerBrainFieldAttackRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerBrainFieldAttackRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InputReleaseBrainFieldAttackRight
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputReleaseBrainFieldAttackRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputReleaseBrainFieldAttackRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.GetActiveSASNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetActiveSASNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetActiveSASNum");

	Params::RsBattleHero_C_GetActiveSASNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function RsBattleHero.RsBattleHero_C.InputTriggerBrainFieldEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InputTriggerBrainFieldEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputTriggerBrainFieldEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.RequestBrainFieldHelp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::RequestBrainFieldHelp(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "RequestBrainFieldHelp");

	Params::RsBattleHero_C_RequestBrainFieldHelp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerBrainFieldState                  State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerBrainFieldState                  PrevState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnBrainFieldState(EPlayerBrainFieldState State, EPlayerBrainFieldState PrevState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldState");

	Params::RsBattleHero_C_OnBrainFieldState Parms{};

	Parms.State = State;
	Parms.PrevState = PrevState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.SASCancelAll
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCancelCost                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SASCancelAll(bool bCancelCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SASCancelAll");

	Params::RsBattleHero_C_SASCancelAll Parms{};

	Parms.bCancelCost = bCancelCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.IsEnableIntercept
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableIntercept(bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableIntercept");

	Params::RsBattleHero_C_IsEnableIntercept Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableJustDodgePsychic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableJustDodgePsychic(bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableJustDodgePsychic");

	Params::RsBattleHero_C_IsEnableJustDodgePsychic Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.InputPsychicField
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPress                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::InputPsychicField(bool bPress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InputPsychicField");

	Params::RsBattleHero_C_InputPsychicField Parms{};

	Parms.bPress = bPress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.GetPsychicFieldCaptureNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetPsychicFieldCaptureNum(int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetPsychicFieldCaptureNum");

	Params::RsBattleHero_C_GetPsychicFieldCaptureNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function RsBattleHero.RsBattleHero_C.BeginPsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::BeginPsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginPsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.EndPsychicField
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::EndPsychicField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EndPsychicField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BeginEnpcSAS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BeginEnpcSAS(E_SASKind Kind, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginEnpcSAS");

	Params::RsBattleHero_C_BeginEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.FinishEnpcSASDirection
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::FinishEnpcSASDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "FinishEnpcSASDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.InitializeDataTable
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::InitializeDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "InitializeDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.PlayBrainFieldBackGroundVoice
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Step                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::PlayBrainFieldBackGroundVoice(int32 Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PlayBrainFieldBackGroundVoice");

	Params::RsBattleHero_C_PlayBrainFieldBackGroundVoice Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.StopBrainFieldBackGroundVoice
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::StopBrainFieldBackGroundVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "StopBrainFieldBackGroundVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CheckAbleInterceptInReactionChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAbleIntercept                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckAbleInterceptInReactionChance(bool* bAbleIntercept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckAbleInterceptInReactionChance");

	Params::RsBattleHero_C_CheckAbleInterceptInReactionChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAbleIntercept != nullptr)
		*bAbleIntercept = Parms.bAbleIntercept;
}


// Function RsBattleHero.RsBattleHero_C.CalcFinalDamageByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARsBattleHero_C::CalcFinalDamageByDefence(float Damage, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CalcFinalDamageByDefence");

	Params::RsBattleHero_C_CalcFinalDamageByDefence Parms{};

	Parms.Damage = Damage;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.OnAreaChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bChangeLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnAreaChange(bool bChangeLocation, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnAreaChange");

	Params::RsBattleHero_C_OnAreaChange Parms{};

	Parms.bChangeLocation = bChangeLocation;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.IsEventBrainCrash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEvent                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEventBrainCrash(bool* IsEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEventBrainCrash");

	Params::RsBattleHero_C_IsEventBrainCrash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEvent != nullptr)
		*IsEvent = Parms.IsEvent;
}


// Function RsBattleHero.RsBattleHero_C.EventBrainCrash
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::EventBrainCrash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EventBrainCrash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CheckBrainFieldLunaticBrainTalk
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckBrainFieldLunaticBrainTalk(bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckBrainFieldLunaticBrainTalk");

	Params::RsBattleHero_C_CheckBrainFieldLunaticBrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.PlayBrainFieldLunaticBrainTalk
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerBrainFieldDanger                 DangerLV                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFirst                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PlayBrainFieldLunaticBrainTalk(EPlayerBrainFieldDanger DangerLV, bool bFirst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PlayBrainFieldLunaticBrainTalk");

	Params::RsBattleHero_C_PlayBrainFieldLunaticBrainTalk Parms{};

	Parms.DangerLV = DangerLV;
	Parms.bFirst = bFirst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.GetBrainFieldLunaticBrainTalkID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerBrainFieldDanger                 DangerLV                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFirst                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             BrainTalkID                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetBrainFieldLunaticBrainTalkID(EPlayerBrainFieldDanger DangerLV, bool bFirst, class FName* BrainTalkID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetBrainFieldLunaticBrainTalkID");

	Params::RsBattleHero_C_GetBrainFieldLunaticBrainTalkID Parms{};

	Parms.DangerLV = DangerLV;
	Parms.bFirst = bFirst;

	UObject::ProcessEvent(Func, &Parms);

	if (BrainTalkID != nullptr)
		*BrainTalkID = Parms.BrainTalkID;
}


// Function RsBattleHero.RsBattleHero_C.BrainFieldDangerDirection
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bTimeUp                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::BrainFieldDangerDirection(bool bTimeUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainFieldDangerDirection");

	Params::RsBattleHero_C_BrainFieldDangerDirection Parms{};

	Parms.bTimeUp = bTimeUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.CheckNpcPsychicCombo
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CheckNpcPsychicCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckNpcPsychicCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CheckStrongCharacter
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 CheckCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::CheckStrongCharacter(class ARSCharacterBase* CheckCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckStrongCharacter");

	Params::RsBattleHero_C_CheckStrongCharacter Parms{};

	Parms.CheckCharacter = CheckCharacter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableBackStepAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsEnableBackStepAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableBackStepAttack");

	Params::RsBattleHero_C_IsEnableBackStepAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.SASCount
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SASCount(E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SASCount");

	Params::RsBattleHero_C_SASCount Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.PlayPsychicComboCaptureSE
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::PlayPsychicComboCaptureSE(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PlayPsychicComboCaptureSE");

	Params::RsBattleHero_C_PlayPsychicComboCaptureSE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.StopPsychicComboCaptureSE
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::StopPsychicComboCaptureSE(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "StopPsychicComboCaptureSE");

	Params::RsBattleHero_C_StopPsychicComboCaptureSE Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CheckSASGuardFire
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CheckSASGuardFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckSASGuardFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSASCoverDamageFromPlayerID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               CoverPlayerID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsEnableSASCoverDamageFromPlayerID(EPlayerID CoverPlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSASCoverDamageFromPlayerID");

	Params::RsBattleHero_C_IsEnableSASCoverDamageFromPlayerID Parms{};

	Parms.CoverPlayerID = CoverPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetAsyncCopyParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCheckCopy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Right                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Left                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetAsyncCopyParameter(bool* bCheckCopy, struct FVector* Right, struct FVector* Left)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetAsyncCopyParameter");

	Params::RsBattleHero_C_GetAsyncCopyParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCheckCopy != nullptr)
		*bCheckCopy = Parms.bCheckCopy;

	if (Right != nullptr)
		*Right = std::move(Parms.Right);

	if (Left != nullptr)
		*Left = std::move(Parms.Left);
}


// Function RsBattleHero.RsBattleHero_C.PlayerSkillJustDodgeUp
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::PlayerSkillJustDodgeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PlayerSkillJustDodgeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BrainCrashEventEnd
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::BrainCrashEventEnd(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BrainCrashEventEnd");

	Params::RsBattleHero_C_BrainCrashEventEnd Parms{};

	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnBrainFieldOpenStart
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnBrainFieldOpenStart(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnBrainFieldOpenStart");

	Params::RsBattleHero_C_OnBrainFieldOpenStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.UpdateAirDodgeCount
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::UpdateAirDodgeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "UpdateAirDodgeCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ApplySASEffectActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActivate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ApplySASEffectActive(E_SASKindNative Kind, bool bActivate, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySASEffectActive");

	Params::RsBattleHero_C_ApplySASEffectActive Parms{};

	Parms.Kind = Kind;
	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.ApplySASEffectPassive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ApplySASEffectPassive(E_SASKindNative Kind, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySASEffectPassive");

	Params::RsBattleHero_C_ApplySASEffectPassive Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.IsUseAbleSASRecastGauge
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsUseAbleSASRecastGauge(E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsUseAbleSASRecastGauge");

	Params::RsBattleHero_C_IsUseAbleSASRecastGauge Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetSASEffectFixParam
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         InKind                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct F_SASParamNative>         OutFixParam                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetSASEffectFixParam(E_SASKindNative InKind, TArray<struct F_SASParamNative>* OutFixParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASEffectFixParam");

	Params::RsBattleHero_C_GetSASEffectFixParam Parms{};

	Parms.InKind = InKind;

	UObject::ProcessEvent(Func, &Parms);

	if (OutFixParam != nullptr)
		*OutFixParam = std::move(Parms.OutFixParam);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.ApplySASEffectPassiveAll
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLinkAbleOnly                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::ApplySASEffectPassiveAll(bool bLinkAbleOnly, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplySASEffectPassiveAll");

	Params::RsBattleHero_C_ApplySASEffectPassiveAll Parms{};

	Parms.bLinkAbleOnly = bLinkAbleOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.CheckSasGuardElectric
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CheckSasGuardElectric()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckSasGuardElectric");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.SASCancelEffectAndSE
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEffect                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSE                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bCancelAll                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SASCancelEffectAndSE(bool bEffect, bool bSE, bool bCancelAll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SASCancelEffectAndSE");

	Params::RsBattleHero_C_SASCancelEffectAndSE Parms{};

	Parms.bEffect = bEffect;
	Parms.bSE = bSE;
	Parms.bCancelAll = bCancelAll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.SasRecastRecoverEffect
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelayTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SasRecastRecoverEffect(float DelayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SasRecastRecoverEffect");

	Params::RsBattleHero_C_SasRecastRecoverEffect Parms{};

	Parms.DelayTime = DelayTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.kpiGameOver
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::KpiGameOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "kpiGameOver");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.CancelActiveSAS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CancelSASCost                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CancelActiveSAS(E_SASKindNative SasKind, bool CancelSASCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CancelActiveSAS");

	Params::RsBattleHero_C_CancelActiveSAS Parms{};

	Parms.SasKind = SasKind;
	Parms.CancelSASCost = CancelSASCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.GetSASRecastAndActiveGaugeRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SASGaugeRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::GetSASRecastAndActiveGaugeRate(E_SASButton SASButton, float* SASGaugeRate, bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASRecastAndActiveGaugeRate");

	Params::RsBattleHero_C_GetSASRecastAndActiveGaugeRate Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);

	if (SASGaugeRate != nullptr)
		*SASGaugeRate = Parms.SASGaugeRate;

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function RsBattleHero.RsBattleHero_C.SubCombinationVisionCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               HologramPlayerID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SubCombinationVisionCost(EPlayerID HologramPlayerID, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SubCombinationVisionCost");

	Params::RsBattleHero_C_SubCombinationVisionCost Parms{};

	Parms.HologramPlayerID = HologramPlayerID;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.PayMapGimmckCost
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::PayMapGimmckCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "PayMapGimmckCost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.ChargeSASRemainTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ChargeRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::ChargeSASRemainTime(float ChargeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ChargeSASRemainTime");

	Params::RsBattleHero_C_ChargeSASRemainTime Parms{};

	Parms.ChargeRate = ChargeRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.CheckCaptureVibrationEnd
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::CheckCaptureVibrationEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckCaptureVibrationEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnHologramOff
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::OnHologramOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnHologramOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.OnCancelSASCutin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnCancelSASCutin(E_SASKind SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnCancelSASCutin");

	Params::RsBattleHero_C_OnCancelSASCutin Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSasSelectSlow
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsEnableSasSelectSlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSasSelectSlow");

	Params::RsBattleHero_C_IsEnableSasSelectSlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.ResetFlyingCombo
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ResetFlyingCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ResetFlyingCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.TelepoComboSettingCoordinate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPrevEnableAttack                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bEnableAttackAir                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPrevEnableAttackAir                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::TelepoComboSettingCoordinate(bool bEnableAttack, bool bPrevEnableAttack, bool bEnableAttackAir, bool bPrevEnableAttackAir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "TelepoComboSettingCoordinate");

	Params::RsBattleHero_C_TelepoComboSettingCoordinate Parms{};

	Parms.bEnableAttack = bEnableAttack;
	Parms.bPrevEnableAttack = bPrevEnableAttack;
	Parms.bEnableAttackAir = bEnableAttackAir;
	Parms.bPrevEnableAttackAir = bPrevEnableAttackAir;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.SASCancelEffectAndSEInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEffect                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSE                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SASCancelEffectAndSEInterface(bool bEffect, bool bSE, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SASCancelEffectAndSEInterface");

	Params::RsBattleHero_C_SASCancelEffectAndSEInterface Parms{};

	Parms.bEffect = bEffect;
	Parms.bSE = bSE;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.EventManagerStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableTick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::EventManagerStart(bool EnableTick, bool Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EventManagerStart");

	Params::RsBattleHero_C_EventManagerStart Parms{};

	Parms.EnableTick = EnableTick;
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.EndEnpcSASDirectionTimeDilation
// (Private, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::EndEnpcSASDirectionTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EndEnpcSASDirectionTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.IsManualHologramAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsManualHologramAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsManualHologramAttack");

	Params::RsBattleHero_C_IsManualHologramAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetManualHologramAttackPlayerID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetManualHologramAttackPlayerID(EPlayerID* PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetManualHologramAttackPlayerID");

	Params::RsBattleHero_C_GetManualHologramAttackPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerId != nullptr)
		*PlayerId = Parms.PlayerId;
}


// Function RsBattleHero.RsBattleHero_C.OnNexusDriveSasBegin
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnNexusDriveSasBegin(E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnNexusDriveSasBegin");

	Params::RsBattleHero_C_OnNexusDriveSasBegin Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnNexusDriveSasEnd
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::OnNexusDriveSasEnd(E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnNexusDriveSasEnd");

	Params::RsBattleHero_C_OnNexusDriveSasEnd Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.OnNexusDriveActivate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActivate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::OnNexusDriveActivate(bool bActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "OnNexusDriveActivate");

	Params::RsBattleHero_C_OnNexusDriveActivate Parms{};

	Parms.bActivate = bActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveHardenSubTimeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetNexusDriveHardenSubTimeRate(float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveHardenSubTimeRate");

	Params::RsBattleHero_C_GetNexusDriveHardenSubTimeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function RsBattleHero.RsBattleHero_C.GetAnimNotifyCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ConditionNo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::GetAnimNotifyCondition(int32 ConditionNo, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetAnimNotifyCondition");

	Params::RsBattleHero_C_GetAnimNotifyCondition Parms{};

	Parms.ConditionNo = ConditionNo;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function RsBattleHero.RsBattleHero_C.GetManualAssaultVisionSasGaugeRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARsBattleHero_C::GetManualAssaultVisionSasGaugeRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetManualAssaultVisionSasGaugeRate");

	Params::RsBattleHero_C_GetManualAssaultVisionSasGaugeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.ApplyWireAndSasCableColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ApplyWireAndSasCableColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ApplyWireAndSasCableColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.IsNexusDriveSeeThroughBestJustDodge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBestJustDodge                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsNexusDriveSeeThroughBestJustDodge(bool* bBestJustDodge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsNexusDriveSeeThroughBestJustDodge");

	Params::RsBattleHero_C_IsNexusDriveSeeThroughBestJustDodge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBestJustDodge != nullptr)
		*bBestJustDodge = Parms.bBestJustDodge;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSasCableExColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnableSasCableExColor(E_SASKind SasKind, bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSasCableExColor");

	Params::RsBattleHero_C_IsEnableSasCableExColor Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function RsBattleHero.RsBattleHero_C.SetChargeLevelForNexusDrive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChargeLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::SetChargeLevelForNexusDrive(int32 ChargeLevel, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SetChargeLevelForNexusDrive");

	Params::RsBattleHero_C_SetChargeLevelForNexusDrive Parms{};

	Parms.ChargeLevel = ChargeLevel;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function RsBattleHero.RsBattleHero_C.ForceEndSeeThroughPostProcess
// (Public, BlueprintCallable, BlueprintEvent)

void ARsBattleHero_C::ForceEndSeeThroughPostProcess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "ForceEndSeeThroughPostProcess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.BeginPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::BeginPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "BeginPhotoMode");

	Params::RsBattleHero_C_BeginPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.EndPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::EndPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "EndPhotoMode");

	Params::RsBattleHero_C_EndPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.IsActiveNexusDriveSas
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsActiveNexusDriveSas(E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsActiveNexusDriveSas");

	Params::RsBattleHero_C_IsActiveNexusDriveSas Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveMetal_DamageRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARsBattleHero_C::GetNexusDriveMetal_DamageRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveMetal_DamageRate");

	Params::RsBattleHero_C_GetNexusDriveMetal_DamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveAccelerator_DamageRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ARsBattleHero_C::GetNexusDriveAccelerator_DamageRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveAccelerator_DamageRate");

	Params::RsBattleHero_C_GetNexusDriveAccelerator_DamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.IsActiveNexusDriveAny
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsActiveNexusDriveAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsActiveNexusDriveAny");

	Params::RsBattleHero_C_IsActiveNexusDriveAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.IsRegisterNpcDriveForNexusDrive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsRegisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsRegisterNpcDriveForNexusDrive");

	Params::RsBattleHero_C_IsRegisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.IsRegisterActiveSasKindAny
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsRegisterActiveSasKindAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsRegisterActiveSasKindAny");

	Params::RsBattleHero_C_IsRegisterActiveSasKindAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveTelepoDamageRateForJewelPool
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutWinceRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockbackRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDownRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               InSkill                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetNexusDriveTelepoDamageRateForJewelPool(float* OutCrashRate, float* OutWinceRate, float* OutKnockbackRate, float* OutDownRate, const struct FHCSkillCommonInfo& InSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveTelepoDamageRateForJewelPool");

	Params::RsBattleHero_C_GetNexusDriveTelepoDamageRateForJewelPool Parms{};

	Parms.InSkill = std::move(InSkill);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutWinceRate != nullptr)
		*OutWinceRate = Parms.OutWinceRate;

	if (OutKnockbackRate != nullptr)
		*OutKnockbackRate = Parms.OutKnockbackRate;

	if (OutDownRate != nullptr)
		*OutDownRate = Parms.OutDownRate;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveTelepoAttackRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutDamageRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutWinceRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockbackRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDownRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               InSkill                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetNexusDriveTelepoAttackRate(float* OutDamageRate, float* OutCrashRate, float* OutWinceRate, float* OutKnockbackRate, float* OutDownRate, const struct FHCSkillCommonInfo& InSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveTelepoAttackRate");

	Params::RsBattleHero_C_GetNexusDriveTelepoAttackRate Parms{};

	Parms.InSkill = std::move(InSkill);

	UObject::ProcessEvent(Func, &Parms);

	if (OutDamageRate != nullptr)
		*OutDamageRate = Parms.OutDamageRate;

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutWinceRate != nullptr)
		*OutWinceRate = Parms.OutWinceRate;

	if (OutKnockbackRate != nullptr)
		*OutKnockbackRate = Parms.OutKnockbackRate;

	if (OutDownRate != nullptr)
		*OutDownRate = Parms.OutDownRate;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveStealth_AttackParam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockback                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDown                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetNexusDriveStealth_AttackParam(float* OutCrashRate, float* OutKnockback, float* OutDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveStealth_AttackParam");

	Params::RsBattleHero_C_GetNexusDriveStealth_AttackParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutKnockback != nullptr)
		*OutKnockback = Parms.OutKnockback;

	if (OutDown != nullptr)
		*OutDown = Parms.OutDown;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDrivePsychic_PsychicFieldDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutDown                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetNexusDrivePsychic_PsychicFieldDown(float* OutDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDrivePsychic_PsychicFieldDown");

	Params::RsBattleHero_C_GetNexusDrivePsychic_PsychicFieldDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDown != nullptr)
		*OutDown = Parms.OutDown;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.GetNexusDriveCombinationVisionCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCost                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::GetNexusDriveCombinationVisionCost(float* OutCost, E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetNexusDriveCombinationVisionCost");

	Params::RsBattleHero_C_GetNexusDriveCombinationVisionCost Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (OutCost != nullptr)
		*OutCost = Parms.OutCost;

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.CanBrainCrash
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Param_CanBrainCrash                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CanBrainCrash(bool* Param_CanBrainCrash) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CanBrainCrash");

	Params::RsBattleHero_C_CanBrainCrash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CanBrainCrash != nullptr)
		*Param_CanBrainCrash = Parms.Param_CanBrainCrash;
}


// Function RsBattleHero.RsBattleHero_C.IsCanSAS_Use
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSASUse                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsCanSAS_Use(E_SASButton SASButton, bool* IsSASUse) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsCanSAS_Use");

	Params::RsBattleHero_C_IsCanSAS_Use Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSASUse != nullptr)
		*IsSASUse = Parms.IsSASUse;
}


// Function RsBattleHero.RsBattleHero_C.IsChangeAbleBrainField
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsChangeAbleBrainField(bool* bOK) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsChangeAbleBrainField");

	Params::RsBattleHero_C_IsChangeAbleBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.GetSAS_MaxActiveSeconds
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ActivationSeconds                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSAS_MaxActiveSeconds(E_SASKindNative SasKind, float* ActivationSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSAS_MaxActiveSeconds");

	Params::RsBattleHero_C_GetSAS_MaxActiveSeconds Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (ActivationSeconds != nullptr)
		*ActivationSeconds = Parms.ActivationSeconds;
}


// Function RsBattleHero.RsBattleHero_C.GetSASKindforButton
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKindNative                         SasKind                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSASKindforButton(E_SASButton SASButton, E_SASKindNative* SasKind) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASKindforButton");

	Params::RsBattleHero_C_GetSASKindforButton Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);

	if (SasKind != nullptr)
		*SasKind = Parms.SasKind;
}


// Function RsBattleHero.RsBattleHero_C.GetSASParamForKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SASParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSASParamForKind(E_SASKind SasKind, int32 SASParam, float* Param) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASParamForKind");

	Params::RsBattleHero_C_GetSASParamForKind Parms{};

	Parms.SasKind = SasKind;
	Parms.SASParam = SASParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = Parms.Param;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSASEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESASEffect                              Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Param0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param1                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param2                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param3                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::IsEnableSASEffect(E_SASKind Kind, ESASEffect Effect, bool* bEnable, float* Param0, float* Param1, float* Param2, float* Param3) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSASEffect");

	Params::RsBattleHero_C_IsEnableSASEffect Parms{};

	Parms.Kind = Kind;
	Parms.Effect = Effect;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;

	if (Param0 != nullptr)
		*Param0 = Parms.Param0;

	if (Param1 != nullptr)
		*Param1 = Parms.Param1;

	if (Param2 != nullptr)
		*Param2 = Parms.Param2;

	if (Param3 != nullptr)
		*Param3 = Parms.Param3;
}


// Function RsBattleHero.RsBattleHero_C.GetSASParamDataCurrentLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FF_SASParam                      Param                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSASParamDataCurrentLevel(E_SASKind Kind, struct FF_SASParam* Param) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASParamDataCurrentLevel");

	Params::RsBattleHero_C_GetSASParamDataCurrentLevel Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = std::move(Parms.Param);
}


// Function RsBattleHero.RsBattleHero_C.IsIgnoreVisionFog
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARsBattleHero_C::IsIgnoreVisionFog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsIgnoreVisionFog");

	Params::RsBattleHero_C_IsIgnoreVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RsBattleHero.RsBattleHero_C.CalcPsychicCost
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bUnique                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMapGimmick                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPsychicCombo                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Cost                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::CalcPsychicCost(bool bUnique, bool bMapGimmick, bool bPsychicCombo, float* Cost) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CalcPsychicCost");

	Params::RsBattleHero_C_CalcPsychicCost Parms{};

	Parms.bUnique = bUnique;
	Parms.bMapGimmick = bMapGimmick;
	Parms.bPsychicCombo = bPsychicCombo;

	UObject::ProcessEvent(Func, &Parms);

	if (Cost != nullptr)
		*Cost = Parms.Cost;
}


// Function RsBattleHero.RsBattleHero_C.SearchSASButtonFromKind
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSearchLatest                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_SASButton                             SASButton                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::SearchSASButtonFromKind(E_SASKind SasKind, bool bSearchLatest, E_SASButton* SASButton) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SearchSASButtonFromKind");

	Params::RsBattleHero_C_SearchSASButtonFromKind Parms{};

	Parms.SasKind = SasKind;
	Parms.bSearchLatest = bSearchLatest;

	UObject::ProcessEvent(Func, &Parms);

	if (SASButton != nullptr)
		*SASButton = Parms.SASButton;
}


// Function RsBattleHero.RsBattleHero_C.GetMapGimmickLookAtLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetMapGimmickLookAtLocation(struct FVector* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetMapGimmickLookAtLocation");

	Params::RsBattleHero_C_GetMapGimmickLookAtLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function RsBattleHero.RsBattleHero_C.GetMapGimmickObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AMapGimmickObject*                MapGimmickObject                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetMapGimmickObject(class AMapGimmickObject** MapGimmickObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetMapGimmickObject");

	Params::RsBattleHero_C_GetMapGimmickObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MapGimmickObject != nullptr)
		*MapGimmickObject = Parms.MapGimmickObject;
}


// Function RsBattleHero.RsBattleHero_C.IsCancelMapGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bCancel                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsCancelMapGimmick(bool* bCancel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsCancelMapGimmick");

	Params::RsBattleHero_C_IsCancelMapGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCancel != nullptr)
		*bCancel = Parms.bCancel;
}


// Function RsBattleHero.RsBattleHero_C.GetUseItemSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPlayerUseItemSpeed                     Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetUseItemSpeed(EPlayerUseItemSpeed* Speed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetUseItemSpeed");

	Params::RsBattleHero_C_GetUseItemSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function RsBattleHero.RsBattleHero_C.IsActiveSAS_ForKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsActiveSAS_ForKind(E_SASKind SAS_Kind, bool* IsActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsActiveSAS_ForKind");

	Params::RsBattleHero_C_IsActiveSAS_ForKind Parms{};

	Parms.SAS_Kind = SAS_Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function RsBattleHero.RsBattleHero_C.IsActiveSAS_ForButton
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASButton                             SASButton                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSAS                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsActiveSAS_ForButton(E_SASButton SASButton, bool* IsSAS) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsActiveSAS_ForButton");

	Params::RsBattleHero_C_IsActiveSAS_ForButton Parms{};

	Parms.SASButton = SASButton;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSAS != nullptr)
		*IsSAS = Parms.IsSAS;
}


// Function RsBattleHero.RsBattleHero_C.GetBrainFieldPsychicAttackLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetBrainFieldPsychicAttackLevel(EPsychicObjectBrainFieldAttackType Type, int32* Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetBrainFieldPsychicAttackLevel");

	Params::RsBattleHero_C_GetBrainFieldPsychicAttackLevel Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;
}


// Function RsBattleHero.RsBattleHero_C.IsPsychicCostZero
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bUnique                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMapGimmick                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bZero                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsPsychicCostZero(bool bUnique, bool bMapGimmick, bool* bZero) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsPsychicCostZero");

	Params::RsBattleHero_C_IsPsychicCostZero Parms{};

	Parms.bUnique = bUnique;
	Parms.bMapGimmick = bMapGimmick;

	UObject::ProcessEvent(Func, &Parms);

	if (bZero != nullptr)
		*bZero = Parms.bZero;
}


// Function RsBattleHero.RsBattleHero_C.SubPsychicFieldCost
// (Public, BlueprintCallable, BlueprintEvent, Const)

void ARsBattleHero_C::SubPsychicFieldCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "SubPsychicFieldCost");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RsBattleHero.RsBattleHero_C.IsEnpcSASLinkAble
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsEnpcSASLinkAble(E_SASKind Kind, bool* bOK) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnpcSASLinkAble");

	Params::RsBattleHero_C_IsEnpcSASLinkAble Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function RsBattleHero.RsBattleHero_C.CheckAssassinAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EAssassinAttackHit                      Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bArmorBreak                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckAssassinAttack(EAssassinAttackHit Type, class ARSBattleCharacter_C* DamagedActor, bool* bSuccess, bool* bArmorBreak) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckAssassinAttack");

	Params::RsBattleHero_C_CheckAssassinAttack Parms{};

	Parms.Type = Type;
	Parms.DamagedActor = DamagedActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (bArmorBreak != nullptr)
		*bArmorBreak = Parms.bArmorBreak;
}


// Function RsBattleHero.RsBattleHero_C.IsAutoTakenItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bAuto                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsAutoTakenItem(bool* bAuto) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsAutoTakenItem");

	Params::RsBattleHero_C_IsAutoTakenItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAuto != nullptr)
		*bAuto = Parms.bAuto;
}


// Function RsBattleHero.RsBattleHero_C.NeedsDispNoDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bNeedsDipsNoDamage                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::NeedsDispNoDamage(bool* bNeedsDipsNoDamage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "NeedsDispNoDamage");

	Params::RsBattleHero_C_NeedsDispNoDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNeedsDipsNoDamage != nullptr)
		*bNeedsDipsNoDamage = Parms.bNeedsDipsNoDamage;
}


// Function RsBattleHero.RsBattleHero_C.IsAutoStealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bAuto                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::IsAutoStealth(bool* bAuto) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsAutoStealth");

	Params::RsBattleHero_C_IsAutoStealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAuto != nullptr)
		*bAuto = Parms.bAuto;
}


// Function RsBattleHero.RsBattleHero_C.CheckDisableBeginSAS_Telepo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bDisable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARsBattleHero_C::CheckDisableBeginSAS_Telepo(bool* bDisable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "CheckDisableBeginSAS_Telepo");

	Params::RsBattleHero_C_CheckDisableBeginSAS_Telepo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisable != nullptr)
		*bDisable = Parms.bDisable;
}


// Function RsBattleHero.RsBattleHero_C.GetSASTimeParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RecastSec                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ActivationSec                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetSASTimeParameter(E_SASKind Kind, float* RecastSec, float* ActivationSec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetSASTimeParameter");

	Params::RsBattleHero_C_GetSASTimeParameter Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (RecastSec != nullptr)
		*RecastSec = Parms.RecastSec;

	if (ActivationSec != nullptr)
		*ActivationSec = Parms.ActivationSec;
}


// Function RsBattleHero.RsBattleHero_C.IsEnableSASEffectInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESASEffect                              Effect                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    OutEnable                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OutParam0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutParam1                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutParam2                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutParam3                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::IsEnableSASEffectInterface(E_SASKindNative Kind, ESASEffect Effect, bool* OutEnable, float* OutParam0, float* OutParam1, float* OutParam2, float* OutParam3) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "IsEnableSASEffectInterface");

	Params::RsBattleHero_C_IsEnableSASEffectInterface Parms{};

	Parms.Kind = Kind;
	Parms.Effect = Effect;

	UObject::ProcessEvent(Func, &Parms);

	if (OutEnable != nullptr)
		*OutEnable = Parms.OutEnable;

	if (OutParam0 != nullptr)
		*OutParam0 = Parms.OutParam0;

	if (OutParam1 != nullptr)
		*OutParam1 = Parms.OutParam1;

	if (OutParam2 != nullptr)
		*OutParam2 = Parms.OutParam2;

	if (OutParam3 != nullptr)
		*OutParam3 = Parms.OutParam3;
}


// Function RsBattleHero.RsBattleHero_C.GetCharacterReplaceSkillTable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UDataTable*                       Original                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       SkillTable                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARsBattleHero_C::GetCharacterReplaceSkillTable(class UDataTable* Original, class UDataTable** SkillTable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RsBattleHero_C", "GetCharacterReplaceSkillTable");

	Params::RsBattleHero_C_GetCharacterReplaceSkillTable Parms{};

	Parms.Original = Original;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillTable != nullptr)
		*SkillTable = Parms.SkillTable;
}

}

