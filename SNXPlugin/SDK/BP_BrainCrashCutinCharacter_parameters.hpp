#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainCrashCutinCharacter

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_BrainCrashCutinCharacter.BP_BrainCrashCutinCharacter_C.ExecuteUbergraph_BP_BrainCrashCutinCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaySimulate_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter) == 0x000004, "Wrong alignment on BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter");
static_assert(sizeof(BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter) == 0x000008, "Wrong size on BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter, EntryPoint) == 0x000000, "Member 'BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter, CallFunc_IsPlaySimulate_ReturnValue) == 0x000004, "Member 'BP_BrainCrashCutinCharacter_C_ExecuteUbergraph_BP_BrainCrashCutinCharacter::CallFunc_IsPlaySimulate_ReturnValue' has a wrong offset!");

// Function BP_BrainCrashCutinCharacter.BP_BrainCrashCutinCharacter_C.SetupMesh
// 0x0040 (0x0040 - 0x0000)
struct BP_BrainCrashCutinCharacter_C_SetupMesh final
{
public:
	class USkeletalMesh*                          Param_SetupMesh;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8505[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8506[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetBattleMemberActorFromKind_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveSAS_SeeThrough_ReturnValue;       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BrainCrashCutinCharacter_C_SetupMesh) == 0x000008, "Wrong alignment on BP_BrainCrashCutinCharacter_C_SetupMesh");
static_assert(sizeof(BP_BrainCrashCutinCharacter_C_SetupMesh) == 0x000040, "Wrong size on BP_BrainCrashCutinCharacter_C_SetupMesh");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, Param_SetupMesh) == 0x000000, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::Param_SetupMesh' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, PlayerId) == 0x000008, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, CallFunc_GetBattleMemberActorFromKind_ReturnValue) == 0x000020, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::CallFunc_GetBattleMemberActorFromKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, K2Node_DynamicCast_AsPlayer_Interface) == 0x000028, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, CallFunc_IsActiveSAS_SeeThrough_ReturnValue) == 0x000039, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::CallFunc_IsActiveSAS_SeeThrough_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrainCrashCutinCharacter_C_SetupMesh, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'BP_BrainCrashCutinCharacter_C_SetupMesh::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}

