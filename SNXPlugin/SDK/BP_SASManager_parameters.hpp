#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SASManager

#include "Basic.hpp"

#include "AcceleratorParam_structs.hpp"
#include "Engine_structs.hpp"
#include "E_SASKind_structs.hpp"
#include "FSASCommand_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FSASCommandInternal_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "F_SASParam_structs.hpp"
#include "FSASSequencerData_structs.hpp"
#include "FSASElectricParam_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASSeeThroughParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASTelepoParam_structs.hpp"
#include "FSASStealthParam_structs.hpp"
#include "FSASCopyParam_structs.hpp"
#include "FSASPsychicParam_structs.hpp"


namespace SDK::Params
{

// Function BP_SASManager.BP_SASManager_C.ExecuteUbergraph_BP_SASManager
// 0x01D0 (0x01D0 - 0x0000)
struct BP_SASManager_C_ExecuteUbergraph_BP_SASManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41CE[0xA];                                     // 0x0006(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41CF[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_17;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41D0[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_16;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_8;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASElectricParam                     K2Node_Event_param_15;                             // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D1[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_14;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D2[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_14;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_7;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_13;                             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D3[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_13;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_12;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D4[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_12;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_6;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_11;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D5[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_11;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_10;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D6[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_10;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_5;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_9;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D7[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_9;                              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_8;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D8[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_8;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_4;                         // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_7;                              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D9[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_7;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_6;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DA[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_6;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_3;                         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_5;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DB[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_4;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DC[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_3;                              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DD[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param_2;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DE[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_1;                              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41DF[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param;                                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E0[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner;                                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E1[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41E2[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E3[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation; // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager) == 0x000010, "Wrong alignment on BP_SASManager_C_ExecuteUbergraph_BP_SASManager");
static_assert(sizeof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager) == 0x0001D0, "Wrong size on BP_SASManager_C_ExecuteUbergraph_BP_SASManager");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, EntryPoint) == 0x000000, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000005, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Parameter_1) == 0x000050, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_17) == 0x000060, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_17' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_bHologram_1) == 0x000068, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Parameter) == 0x00006C, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_16) == 0x000078, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_16' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_8) == 0x000080, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_bHologram) == 0x000084, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_15) == 0x000085, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_15' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_15) == 0x000088, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_15' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_14) == 0x000090, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_14' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_14) == 0x000098, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_14' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_7) == 0x0000A0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_13) == 0x0000A4, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_13' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_13) == 0x0000A8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_13' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_12) == 0x0000B0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_12' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_12) == 0x0000B8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_12' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_6) == 0x0000C0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_11) == 0x0000C4, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_11' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_11) == 0x0000C8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_11' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_10) == 0x0000D0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_10) == 0x0000D8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_5) == 0x0000E0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_9) == 0x0000E4, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_9) == 0x0000E8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_8) == 0x0000F0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_8) == 0x0000F8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_4) == 0x000100, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_7) == 0x000104, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_7) == 0x000108, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_6) == 0x000110, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_6) == 0x000118, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_3) == 0x000120, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_5) == 0x000124, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_5) == 0x000128, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_4) == 0x000130, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_4) == 0x000138, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_2) == 0x000140, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_3) == 0x000144, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_3) == 0x000148, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_2) == 0x000150, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_2) == 0x000158, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime_1) == 0x000160, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param_1) == 0x000164, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner_1) == 0x000168, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_param) == 0x000170, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_Owner) == 0x000178, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_RemainTime) == 0x000180, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_DeltaSeconds) == 0x000184, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000188, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000189, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_GetCutinManager_CutinManager) == 0x000190, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_BooleanOR_ReturnValue) == 0x000198, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_GetGameSystemManager_Manater) == 0x0001A0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_Event_EndPlayReason) == 0x0001A8, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation) == 0x0001AC, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_GetCurrentCustomTimeDilation_CustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001B0, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ExecuteUbergraph_BP_SASManager, K2Node_CreateDelegate_OutputDelegate) == 0x0001B4, "Member 'BP_SASManager_C_ExecuteUbergraph_BP_SASManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SASManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_SASManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SASManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_SASManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SASManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SASManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SASManager_C_ReceiveTick");
static_assert(sizeof(BP_SASManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_SASManager_C_ReceiveTick");
static_assert(offsetof(BP_SASManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SASManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnPsychicEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnPsychicEnd final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnPsychicEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnPsychicEnd");
static_assert(sizeof(BP_SASManager_C_OnPsychicEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnPsychicEnd");
static_assert(offsetof(BP_SASManager_C_OnPsychicEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnPsychicEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnPsychicEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnPsychicEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnPsychicEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnPsychicEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnPsychicStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnPsychicStart final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnPsychicStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnPsychicStart");
static_assert(sizeof(BP_SASManager_C_OnPsychicStart) == 0x000010, "Wrong size on BP_SASManager_C_OnPsychicStart");
static_assert(offsetof(BP_SASManager_C_OnPsychicStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnPsychicStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnPsychicStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnPsychicStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnCopyEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnCopyEnd final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnCopyEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnCopyEnd");
static_assert(sizeof(BP_SASManager_C_OnCopyEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnCopyEnd");
static_assert(offsetof(BP_SASManager_C_OnCopyEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnCopyEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnCopyEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnCopyEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnCopyEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnCopyEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnCopyStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnCopyStart final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnCopyStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnCopyStart");
static_assert(sizeof(BP_SASManager_C_OnCopyStart) == 0x000010, "Wrong size on BP_SASManager_C_OnCopyStart");
static_assert(offsetof(BP_SASManager_C_OnCopyStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnCopyStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnCopyStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnCopyStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnStealthEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnStealthEnd final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnStealthEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnStealthEnd");
static_assert(sizeof(BP_SASManager_C_OnStealthEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnStealthEnd");
static_assert(offsetof(BP_SASManager_C_OnStealthEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnStealthEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStealthEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnStealthEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStealthEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnStealthEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnStealthStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnStealthStart final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41E9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnStealthStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnStealthStart");
static_assert(sizeof(BP_SASManager_C_OnStealthStart) == 0x000010, "Wrong size on BP_SASManager_C_OnStealthStart");
static_assert(offsetof(BP_SASManager_C_OnStealthStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnStealthStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStealthStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnStealthStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnTelepoEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnTelepoEnd final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41EA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnTelepoEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnTelepoEnd");
static_assert(sizeof(BP_SASManager_C_OnTelepoEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnTelepoEnd");
static_assert(offsetof(BP_SASManager_C_OnTelepoEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnTelepoEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnTelepoEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnTelepoEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnTelepoEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnTelepoEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnTelepoStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnTelepoStart final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41EB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnTelepoStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnTelepoStart");
static_assert(sizeof(BP_SASManager_C_OnTelepoStart) == 0x000010, "Wrong size on BP_SASManager_C_OnTelepoStart");
static_assert(offsetof(BP_SASManager_C_OnTelepoStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnTelepoStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnTelepoStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnTelepoStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnSeeThroughEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnSeeThroughEnd final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnSeeThroughEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnSeeThroughEnd");
static_assert(sizeof(BP_SASManager_C_OnSeeThroughEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnSeeThroughEnd");
static_assert(offsetof(BP_SASManager_C_OnSeeThroughEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnSeeThroughEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSeeThroughEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnSeeThroughEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSeeThroughEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnSeeThroughEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnSeeThroughStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnSeeThroughStart final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41ED[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnSeeThroughStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnSeeThroughStart");
static_assert(sizeof(BP_SASManager_C_OnSeeThroughStart) == 0x000010, "Wrong size on BP_SASManager_C_OnSeeThroughStart");
static_assert(offsetof(BP_SASManager_C_OnSeeThroughStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnSeeThroughStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSeeThroughStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnSeeThroughStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnMetalEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnMetalEnd final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnMetalEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnMetalEnd");
static_assert(sizeof(BP_SASManager_C_OnMetalEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnMetalEnd");
static_assert(offsetof(BP_SASManager_C_OnMetalEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnMetalEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnMetalEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnMetalEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnMetalEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnMetalEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnMetalStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnMetalStart final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41EF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnMetalStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnMetalStart");
static_assert(sizeof(BP_SASManager_C_OnMetalStart) == 0x000010, "Wrong size on BP_SASManager_C_OnMetalStart");
static_assert(offsetof(BP_SASManager_C_OnMetalStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnMetalStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnMetalStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnMetalStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnFireEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnFireEnd");
static_assert(sizeof(BP_SASManager_C_OnFireEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnFireEnd");
static_assert(offsetof(BP_SASManager_C_OnFireEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnFireEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnFireEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnFireEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnFireStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnFireStart");
static_assert(sizeof(BP_SASManager_C_OnFireStart) == 0x000010, "Wrong size on BP_SASManager_C_OnFireStart");
static_assert(offsetof(BP_SASManager_C_OnFireStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnFireStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnFireStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnElectricEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnElectricEnd");
static_assert(sizeof(BP_SASManager_C_OnElectricEnd) == 0x000018, "Wrong size on BP_SASManager_C_OnElectricEnd");
static_assert(offsetof(BP_SASManager_C_OnElectricEnd, Param) == 0x000000, "Member 'BP_SASManager_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnElectricEnd, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnElectricEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'BP_SASManager_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnElectricStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnElectricStart");
static_assert(sizeof(BP_SASManager_C_OnElectricStart) == 0x000010, "Wrong size on BP_SASManager_C_OnElectricStart");
static_assert(offsetof(BP_SASManager_C_OnElectricStart, Param) == 0x000000, "Member 'BP_SASManager_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnElectricStart, Param_Owner) == 0x000008, "Member 'BP_SASManager_C_OnElectricStart::Param_Owner' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnAcceleratorEnd");
static_assert(sizeof(BP_SASManager_C_OnAcceleratorEnd) == 0x000020, "Wrong size on BP_SASManager_C_OnAcceleratorEnd");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'BP_SASManager_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorEnd, Param_Owner) == 0x000010, "Member 'BP_SASManager_C_OnAcceleratorEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'BP_SASManager_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'BP_SASManager_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnAcceleratorStart");
static_assert(sizeof(BP_SASManager_C_OnAcceleratorStart) == 0x000020, "Wrong size on BP_SASManager_C_OnAcceleratorStart");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'BP_SASManager_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorStart, Param_Owner) == 0x000010, "Member 'BP_SASManager_C_OnAcceleratorStart::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'BP_SASManager_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.UpdateSASCommand
// 0x0058 (0x0058 - 0x0000)
struct BP_SASManager_C_UpdateSASCommand final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41F6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommand                           L_Command;                                         // 0x0008(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_ArrayIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F7[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_UpdateSASCommand) == 0x000008, "Wrong alignment on BP_SASManager_C_UpdateSASCommand");
static_assert(sizeof(BP_SASManager_C_UpdateSASCommand) == 0x000058, "Wrong size on BP_SASManager_C_UpdateSASCommand");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, DeltaSeconds) == 0x000000, "Member 'BP_SASManager_C_UpdateSASCommand::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, L_Command) == 0x000008, "Member 'BP_SASManager_C_UpdateSASCommand::L_Command' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, L_ArrayIndex) == 0x000038, "Member 'BP_SASManager_C_UpdateSASCommand::L_ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_SASManager_C_UpdateSASCommand::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, Temp_int_Loop_Num_Variable) == 0x000040, "Member 'BP_SASManager_C_UpdateSASCommand::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_SASManager_C_UpdateSASCommand::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_SASManager_C_UpdateSASCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SASManager_C_UpdateSASCommand::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateSASCommand, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_SASManager_C_UpdateSASCommand::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.UpdateCutIn
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SASManager_C_UpdateCutIn final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_ArrayIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCommandInternal                   L_CmdRef;                                          // 0x0008(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F8[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_Sound_Manager;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41F9[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41FA[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41FB[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommandInternal                   CallFunc_Array_Get_Item;                           // 0x0070(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FC[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCutinRowNameByESASKind_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReserved_Reserved;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_UpdateCutIn) == 0x000008, "Wrong alignment on BP_SASManager_C_UpdateCutIn");
static_assert(sizeof(BP_SASManager_C_UpdateCutIn) == 0x0000C0, "Wrong size on BP_SASManager_C_UpdateCutIn");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, DeltaSeconds) == 0x000000, "Member 'BP_SASManager_C_UpdateCutIn::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, L_ArrayIndex) == 0x000004, "Member 'BP_SASManager_C_UpdateCutIn::L_ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, L_CmdRef) == 0x000008, "Member 'BP_SASManager_C_UpdateCutIn::L_CmdRef' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_SASManager_C_UpdateCutIn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'BP_SASManager_C_UpdateCutIn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_GetSoundManager_Sound_Manager) == 0x000048, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_GetSoundManager_Sound_Manager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_IsCutInPlaying_Playing) == 0x000051, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_SASManager_C_UpdateCutIn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_GetCutinManager_CutinManager) == 0x000060, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_BooleanAND_ReturnValue) == 0x0000AD, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_GetCutinRowNameByESASKind_ReturnValue) == 0x0000B0, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_GetCutinRowNameByESASKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_IsReserved_Reserved) == 0x0000B8, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_IsReserved_Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UpdateCutIn, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000B9, "Member 'BP_SASManager_C_UpdateCutIn::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetReservedFlag
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_SetReservedFlag final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On;                                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FD[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitFlagOn_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitFlagOff_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_SetReservedFlag) == 0x000004, "Wrong alignment on BP_SASManager_C_SetReservedFlag");
static_assert(sizeof(BP_SASManager_C_SetReservedFlag) == 0x000010, "Wrong size on BP_SASManager_C_SetReservedFlag");
static_assert(offsetof(BP_SASManager_C_SetReservedFlag, SasKind) == 0x000000, "Member 'BP_SASManager_C_SetReservedFlag::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetReservedFlag, On) == 0x000001, "Member 'BP_SASManager_C_SetReservedFlag::On' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetReservedFlag, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_SetReservedFlag::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetReservedFlag, CallFunc_BitFlagOn_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_SetReservedFlag::CallFunc_BitFlagOn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetReservedFlag, CallFunc_BitFlagOff_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_SetReservedFlag::CallFunc_BitFlagOff_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnSkillStart
// 0x0290 (0x0290 - 0x0000)
struct BP_SASManager_C_OnSkillStart final
{
public:
	struct FFSASCommandInternal                   Command;                                           // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Kind;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41FE[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41FF[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommand                           K2Node_MakeStruct_FSASCommand;                     // 0x0060(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SAS_CommonStart_Dummy;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4200[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4201[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4202[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_2;    // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_1;           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4203[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_3;    // 0x0120(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4204[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_2;           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4205[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_4;    // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_5;    // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_6;    // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4206[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_3;           // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4207[0x2];                                     // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4208[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_7;    // 0x01B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4209[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_4;           // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420A[0x2];                                     // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420B[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_5;           // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420C[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_6;           // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420D[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_6;                      // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_7;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_420E[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_420F[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_7;           // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4210[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4211[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4212[0x3];                                     // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4213[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_8;           // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4214[0x2];                                     // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnSkillStart) == 0x000008, "Wrong alignment on BP_SASManager_C_OnSkillStart");
static_assert(sizeof(BP_SASManager_C_OnSkillStart) == 0x000290, "Wrong size on BP_SASManager_C_OnSkillStart");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Command) == 0x000000, "Member 'BP_SASManager_C_OnSkillStart::Command' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Kind) == 0x000038, "Member 'BP_SASManager_C_OnSkillStart::Kind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000048, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_MakeStruct_FSASCommand) == 0x000060, "Member 'BP_SASManager_C_OnSkillStart::K2Node_MakeStruct_FSASCommand' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_SAS_CommonStart_Dummy) == 0x000090, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_SAS_CommonStart_Dummy' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_SwitchEnum_CmpSuccess) == 0x000091, "Member 'BP_SASManager_C_OnSkillStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable) == 0x0000A0, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_1) == 0x0000A8, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_2) == 0x0000B0, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B4, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_2) == 0x0000B8, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_2) == 0x0000BC, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_3) == 0x0000C4, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000C8, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x0000D8, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_2) == 0x0000F0, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_3) == 0x000100, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_1) == 0x000108, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_3) == 0x000120, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_3) == 0x000130, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_2) == 0x000138, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_4) == 0x000150, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_5) == 0x000160, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_4) == 0x000170, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_5) == 0x000174, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_6) == 0x000178, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_3) == 0x000188, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_3) == 0x000190, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A1, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001A4, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_6) == 0x0001A8, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetAllActorsWithInterface_OutActors_7) == 0x0001B0, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetAllActorsWithInterface_OutActors_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_4) == 0x0001C0, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_4) == 0x0001C8, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_4) == 0x0001D8, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001D9, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001DC, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Array_Length_ReturnValue_7) == 0x0001E0, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_4) == 0x0001E4, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_5) == 0x0001E8, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_4) == 0x0001EC, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_5) == 0x0001F0, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_5) == 0x0001F8, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_5) == 0x000208, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_6) == 0x000210, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_6) == 0x000220, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_6) == 0x000224, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Num_Variable_7) == 0x000228, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Num_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_4) == 0x00022C, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_6) == 0x000230, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_GetCutinManager_CutinManager) == 0x000238, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_7) == 0x000240, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_7) == 0x000250, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_5) == 0x000254, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_6) == 0x000258, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_5) == 0x00025C, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_5) == 0x000260, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_6) == 0x000264, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_6) == 0x000268, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Loop_Counter_Variable_7) == 0x00026C, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, Temp_int_Array_Index_Variable_7) == 0x000270, "Member 'BP_SASManager_C_OnSkillStart::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_AsBPI_SASInterface_8) == 0x000278, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_AsBPI_SASInterface_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, K2Node_DynamicCast_bSuccess_8) == 0x000288, "Member 'BP_SASManager_C_OnSkillStart::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Less_IntInt_ReturnValue_7) == 0x000289, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillStart, CallFunc_Add_IntInt_ReturnValue_7) == 0x00028C, "Member 'BP_SASManager_C_OnSkillStart::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnSkillEnd
// 0x0258 (0x0258 - 0x0000)
struct BP_SASManager_C_OnSkillEnd final
{
public:
	struct FFSASCommandInternal                   Command;                                           // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4215[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SAS_CommonEnd_bDummy;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4216[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SAS_CommonEnd_RemainTime;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4217[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4218[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_4;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4219[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421A[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x00A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421B[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_2;    // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_3;    // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_1;           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421C[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_2;           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421D[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_4;    // 0x0130(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_5;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421E[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_3;           // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421F[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_5;    // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4220[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_4;           // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4221[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_6;    // 0x0190(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4222[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_5;           // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4223[0x2];                                     // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4224[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_7;    // 0x01C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4225[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_6;           // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4226[0x3];                                     // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_6;                      // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4227[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_7;                      // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4228[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_7;           // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4229[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_8;           // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422A[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422B[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422C[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnSkillEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_OnSkillEnd");
static_assert(sizeof(BP_SASManager_C_OnSkillEnd) == 0x000258, "Wrong size on BP_SASManager_C_OnSkillEnd");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Command) == 0x000000, "Member 'BP_SASManager_C_OnSkillEnd::Command' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, bCancelSASCost) == 0x000038, "Member 'BP_SASManager_C_OnSkillEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000040, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000051, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_SAS_CommonEnd_bDummy) == 0x000052, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_SAS_CommonEnd_bDummy' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_SAS_CommonEnd_RemainTime) == 0x000054, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_SAS_CommonEnd_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable) == 0x000058, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_1) == 0x000070, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_2) == 0x000078, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_2) == 0x00007C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_2) == 0x000084, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_3) == 0x000088, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_3) == 0x00008C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_3) == 0x000094, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_4) == 0x000098, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0000A8, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_4) == 0x0000B8, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x0000C0, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_2) == 0x0000D8, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_2) == 0x0000E8, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_5) == 0x0000EC, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_3) == 0x0000F0, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_1) == 0x000100, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_2) == 0x000118, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_3) == 0x00012C, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_4) == 0x000130, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_5) == 0x000140, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_3) == 0x000144, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_3) == 0x000148, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_4) == 0x00015C, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_5) == 0x000160, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_5) == 0x000170, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_4) == 0x000178, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_4) == 0x000188, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_6) == 0x000190, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_4) == 0x0001A0, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_5) == 0x0001A8, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_5) == 0x0001B8, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001B9, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001BC, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_6) == 0x0001C0, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_GetAllActorsWithInterface_OutActors_7) == 0x0001C8, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_GetAllActorsWithInterface_OutActors_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Array_Length_ReturnValue_7) == 0x0001D8, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_6) == 0x0001E0, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_6) == 0x0001F0, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_5) == 0x0001F4, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_6) == 0x0001F8, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_5) == 0x0001FC, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_5) == 0x000200, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Num_Variable_7) == 0x000204, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Num_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_6) == 0x000208, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_7) == 0x000210, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_7) == 0x000220, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Array_Index_Variable_7) == 0x000224, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_AsBPI_SASInterface_8) == 0x000228, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_AsBPI_SASInterface_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, K2Node_DynamicCast_bSuccess_8) == 0x000238, "Member 'BP_SASManager_C_OnSkillEnd::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_6) == 0x00023C, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, Temp_int_Loop_Counter_Variable_7) == 0x000240, "Member 'BP_SASManager_C_OnSkillEnd::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_6) == 0x000244, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_6) == 0x000248, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Less_IntInt_ReturnValue_7) == 0x00024C, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnSkillEnd, CallFunc_Add_IntInt_ReturnValue_7) == 0x000250, "Member 'BP_SASManager_C_OnSkillEnd::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnStopCutin
// 0x0098 (0x0098 - 0x0000)
struct BP_SASManager_C_OnStopCutin final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_ArrayIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCommandInternal                   L_CmdRef;                                          // 0x0008(0x0038)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422E[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommandInternal                   CallFunc_Array_Get_Item;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422F[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4230[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnStopCutin) == 0x000008, "Wrong alignment on BP_SASManager_C_OnStopCutin");
static_assert(sizeof(BP_SASManager_C_OnStopCutin) == 0x000098, "Wrong size on BP_SASManager_C_OnStopCutin");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, NewLocalVar_0) == 0x000000, "Member 'BP_SASManager_C_OnStopCutin::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, L_ArrayIndex) == 0x000004, "Member 'BP_SASManager_C_OnStopCutin::L_ArrayIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, L_CmdRef) == 0x000008, "Member 'BP_SASManager_C_OnStopCutin::L_CmdRef' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_SASManager_C_OnStopCutin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, Temp_bool_True_if_break_was_hit_Variable) == 0x000044, "Member 'BP_SASManager_C_OnStopCutin::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_SASManager_C_OnStopCutin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_OnStopCutin, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_SASManager_C_OnStopCutin::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StartCutinSlow
// 0x0068 (0x0068 - 0x0000)
struct BP_SASManager_C_StartCutinSlow final
{
public:
	float                                         LTimeDilation;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4231[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4232[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_StartCutinSlow) == 0x000008, "Wrong alignment on BP_SASManager_C_StartCutinSlow");
static_assert(sizeof(BP_SASManager_C_StartCutinSlow) == 0x000068, "Wrong size on BP_SASManager_C_StartCutinSlow");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, LTimeDilation) == 0x000000, "Member 'BP_SASManager_C_StartCutinSlow::LTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SASManager_C_StartCutinSlow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_SASManager_C_StartCutinSlow::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000010, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_SASManager_C_StartCutinSlow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetGameSystemManager_Manater) == 0x000030, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetMainPlayer_Player) == 0x000038, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetSASCodeActorList_self_CastInput) == 0x000040, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_GetSASCodeActorList_CodeList) == 0x000050, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000060, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCutinSlow, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_SASManager_C_StartCutinSlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StopCutinSlow
// 0x0060 (0x0060 - 0x0000)
struct BP_SASManager_C_StopCutinSlow final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4233[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4234[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_GetSASCodeActorList_self_CastInput;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4235[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_StopCutinSlow) == 0x000008, "Wrong alignment on BP_SASManager_C_StopCutinSlow");
static_assert(sizeof(BP_SASManager_C_StopCutinSlow) == 0x000060, "Wrong size on BP_SASManager_C_StopCutinSlow");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_StopCutinSlow::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_StopCutinSlow::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000008, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SASManager_C_StopCutinSlow::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetGameSystemManager_Manater) == 0x000028, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetMainPlayer_Player) == 0x000030, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetSASCodeActorList_self_CastInput) == 0x000038, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetSASCodeActorList_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_GetSASCodeActorList_CodeList) == 0x000048, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000058, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutinSlow, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_SASManager_C_StopCutinSlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetCurrentCutinSASType_Internal
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_GetCurrentCutinSASType_Internal final
{
public:
	E_SASKind                                     SASType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4236[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetCurrentCutinSASType_Internal) == 0x000008, "Wrong alignment on BP_SASManager_C_GetCurrentCutinSASType_Internal");
static_assert(sizeof(BP_SASManager_C_GetCurrentCutinSASType_Internal) == 0x000010, "Wrong size on BP_SASManager_C_GetCurrentCutinSASType_Internal");
static_assert(offsetof(BP_SASManager_C_GetCurrentCutinSASType_Internal, SASType) == 0x000000, "Member 'BP_SASManager_C_GetCurrentCutinSASType_Internal::SASType' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCurrentCutinSASType_Internal, CallFunc_GetCutinManager_CutinManager) == 0x000008, "Member 'BP_SASManager_C_GetCurrentCutinSASType_Internal::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.ResetCharacters
// 0x0240 (0x0240 - 0x0000)
struct BP_SASManager_C_ResetCharacters final
{
public:
	int32                                         CharacterCableNum;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4237[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCableEnergyMesh_C*               EnergyMesh;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopLastIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopFirstIndex;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       RSCharacter;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FindIndex;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4238[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCharacter_C*                     TargetActor;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         BindingList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CutinManager;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4239[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_423A[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_423B[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423C[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCableEnergyMesh_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_423D[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_423E[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_423F[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4240[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4241[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4242[0x5];                                     // 0x0173(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4243[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSequencerData                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0198(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4244[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClassActor_ReturnValue;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4245[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4246[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCharacter_C*                     K2Node_DynamicCast_AsBP_SASCharacter;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4247[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4248[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4249[0x5];                                     // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_ResetCharacters) == 0x000010, "Wrong alignment on BP_SASManager_C_ResetCharacters");
static_assert(sizeof(BP_SASManager_C_ResetCharacters) == 0x000240, "Wrong size on BP_SASManager_C_ResetCharacters");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CharacterCableNum) == 0x000000, "Member 'BP_SASManager_C_ResetCharacters::CharacterCableNum' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, EnergyMesh) == 0x000008, "Member 'BP_SASManager_C_ResetCharacters::EnergyMesh' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, LoopLastIndex) == 0x000010, "Member 'BP_SASManager_C_ResetCharacters::LoopLastIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, LoopFirstIndex) == 0x000014, "Member 'BP_SASManager_C_ResetCharacters::LoopFirstIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, RSCharacter) == 0x000018, "Member 'BP_SASManager_C_ResetCharacters::RSCharacter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, FindIndex) == 0x000020, "Member 'BP_SASManager_C_ResetCharacters::FindIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, TargetActor) == 0x000028, "Member 'BP_SASManager_C_ResetCharacters::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, BindingList) == 0x000030, "Member 'BP_SASManager_C_ResetCharacters::BindingList' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CutinManager) == 0x000040, "Member 'BP_SASManager_C_ResetCharacters::CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeTransform_ReturnValue) == 0x000050, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeLiteralString_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeTransform_ReturnValue_1) == 0x0000A0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000110, "Member 'BP_SASManager_C_ResetCharacters::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_SASManager_C_ResetCharacters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetSASCodeActorList_CodeList) == 0x000128, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00013C, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Array_Length_ReturnValue_2) == 0x000140, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetPlayerManager_PlayerManager) == 0x000148, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetPlayer_ReturnValue) == 0x000158, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeLiteralInt_ReturnValue) == 0x000160, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, Temp_int_Variable) == 0x000164, "Member 'BP_SASManager_C_ResetCharacters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, Temp_int_Variable_1) == 0x000168, "Member 'BP_SASManager_C_ResetCharacters::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_IntToByte_ReturnValue) == 0x000170, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetValidValue_ReturnValue) == 0x000171, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000172, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000178, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000188, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_StringToName_ReturnValue) == 0x00018C, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000194, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetDataTableRowFromName_OutRow) == 0x000198, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001D0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_LoadSoftClassActor_ReturnValue) == 0x0001D8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_LoadSoftClassActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x0001E0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0001E8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001F0, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_IsValidClass_ReturnValue) == 0x0001F8, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, K2Node_DynamicCast_AsBP_SASCharacter) == 0x000200, "Member 'BP_SASManager_C_ResetCharacters::K2Node_DynamicCast_AsBP_SASCharacter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_SASManager_C_ResetCharacters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00020C, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000210, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, Temp_int_Variable_2) == 0x000218, "Member 'BP_SASManager_C_ResetCharacters::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_Add_IntInt_ReturnValue_1) == 0x00021C, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_IsValid_ReturnValue_2) == 0x000220, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_MakeLiteralByte_ReturnValue) == 0x000221, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000222, "Member 'BP_SASManager_C_ResetCharacters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_ResetCharacters, K2Node_MakeArray_Array) == 0x000228, "Member 'BP_SASManager_C_ResetCharacters::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetupActiveCutinActor
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_SetupActiveCutinActor final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_424B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCharacter_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SetupActiveCutinActor) == 0x000008, "Wrong alignment on BP_SASManager_C_SetupActiveCutinActor");
static_assert(sizeof(BP_SASManager_C_SetupActiveCutinActor) == 0x000020, "Wrong size on BP_SASManager_C_SetupActiveCutinActor");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, SasKind) == 0x000000, "Member 'BP_SASManager_C_SetupActiveCutinActor::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, Active) == 0x000001, "Member 'BP_SASManager_C_SetupActiveCutinActor::Active' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetupActiveCutinActor, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_SASManager_C_SetupActiveCutinActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.LoadSASParamDataTable
// 0x0108 (0x0108 - 0x0000)
struct BP_SASManager_C_LoadSASParamDataTable final
{
public:
	int32                                         LDataIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbDataFound;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     LKind;                                             // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DataTable;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424E[0x1];                                     // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424F[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SASParam                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A4(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4250[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_8;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_9;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4251[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_LoadSASParamDataTable) == 0x000008, "Wrong alignment on BP_SASManager_C_LoadSASParamDataTable");
static_assert(sizeof(BP_SASManager_C_LoadSASParamDataTable) == 0x000108, "Wrong size on BP_SASManager_C_LoadSASParamDataTable");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, LDataIndex) == 0x000000, "Member 'BP_SASManager_C_LoadSASParamDataTable::LDataIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, LbDataFound) == 0x000004, "Member 'BP_SASManager_C_LoadSASParamDataTable::LbDataFound' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, LKind) == 0x000005, "Member 'BP_SASManager_C_LoadSASParamDataTable::LKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, DataTable) == 0x000008, "Member 'BP_SASManager_C_LoadSASParamDataTable::DataTable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable) == 0x000010, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_1) == 0x000018, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_2) == 0x000020, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_3) == 0x000028, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_4) == 0x000030, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_5) == 0x000038, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_6) == 0x000040, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_7) == 0x000048, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_8) == 0x000050, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_int_Variable) == 0x000058, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_int_Variable_1) == 0x00005C, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_GetValidValue_ReturnValue) == 0x000068, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000069, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00006A, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_9) == 0x000070, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_object_Variable_10) == 0x000078, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_byte_Variable) == 0x000080, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, Temp_int_Variable_2) == 0x000084, "Member 'BP_SASManager_C_LoadSASParamDataTable::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Conv_IntToString_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A4, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_1) == 0x0000D0, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_2) == 0x0000D4, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_3) == 0x0000D8, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_4) == 0x0000DC, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_5) == 0x0000E0, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_6) == 0x0000E4, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_7) == 0x0000E8, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_8) == 0x0000EC, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Array_Add_ReturnValue_9) == 0x0000F0, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Array_Add_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000F4, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, K2Node_SwitchEnum_CmpSuccess) == 0x0000F8, "Member 'BP_SASManager_C_LoadSASParamDataTable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000FA, "Member 'BP_SASManager_C_LoadSASParamDataTable::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadSASParamDataTable, K2Node_Select_Default) == 0x000100, "Member 'BP_SASManager_C_LoadSASParamDataTable::K2Node_Select_Default' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASLogoTexture
// 0x0028 (0x0028 - 0x0000)
struct BP_SASManager_C_GetSASLogoTexture final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4252[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Texture;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4253[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_GetSASLogoTexture) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASLogoTexture");
static_assert(sizeof(BP_SASManager_C_GetSASLogoTexture) == 0x000028, "Wrong size on BP_SASManager_C_GetSASLogoTexture");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, SasKind) == 0x000000, "Member 'BP_SASManager_C_GetSASLogoTexture::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, Texture) == 0x000008, "Member 'BP_SASManager_C_GetSASLogoTexture::Texture' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_GetSASLogoTexture::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SASManager_C_GetSASLogoTexture::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'BP_SASManager_C_GetSASLogoTexture::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASLogoTexture, CallFunc_InRange_IntInt_ReturnValue) == 0x000024, "Member 'BP_SASManager_C_GetSASLogoTexture::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.LoadAssets
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SASManager_C_LoadAssets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4254[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ObjectSoftRefToStringRaw_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadObjectGeneric_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4255[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ObjectSoftRefToStringRaw_ReturnValue_1;   // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadObjectGeneric_ReturnValue_1;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4256[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4257[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ObjectSoftRefToStringRaw_ReturnValue_2;   // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4258[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadObjectGeneric_ReturnValue_2;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        K2Node_DynamicCast_AsParticle_System;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4259[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425A[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_LoadAssets) == 0x000008, "Wrong alignment on BP_SASManager_C_LoadAssets");
static_assert(sizeof(BP_SASManager_C_LoadAssets) == 0x0000C8, "Wrong size on BP_SASManager_C_LoadAssets");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Num_Variable_1) == 0x000008, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Num_Variable_2) == 0x00001C, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_ObjectSoftRefToStringRaw_ReturnValue) == 0x000028, "Member 'BP_SASManager_C_LoadAssets::CallFunc_ObjectSoftRefToStringRaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_LoadObjectGeneric_ReturnValue) == 0x000038, "Member 'BP_SASManager_C_LoadAssets::CallFunc_LoadObjectGeneric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_AsTexture_2D) == 0x000040, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_ObjectSoftRefToStringRaw_ReturnValue_1) == 0x000050, "Member 'BP_SASManager_C_LoadAssets::CallFunc_ObjectSoftRefToStringRaw_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_LoadObjectGeneric_ReturnValue_1) == 0x000060, "Member 'BP_SASManager_C_LoadAssets::CallFunc_LoadObjectGeneric_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_AsLevel_Sequence) == 0x000068, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue_2) == 0x000074, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue_3) == 0x000084, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_ObjectSoftRefToStringRaw_ReturnValue_2) == 0x000088, "Member 'BP_SASManager_C_LoadAssets::CallFunc_ObjectSoftRefToStringRaw_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue_4) == 0x000098, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_LoadObjectGeneric_ReturnValue_2) == 0x0000A0, "Member 'BP_SASManager_C_LoadAssets::CallFunc_LoadObjectGeneric_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_AsParticle_System) == 0x0000A8, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_AsParticle_System' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'BP_SASManager_C_LoadAssets::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BP_SASManager_C_LoadAssets::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000B8, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadAssets, CallFunc_Array_Length_ReturnValue_5) == 0x0000C0, "Member 'BP_SASManager_C_LoadAssets::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASCodeEmitterTemplates
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_GetSASCodeEmitterTemplates final
{
public:
	TArray<class UParticleSystem*>                EmitterTemplates;                                  // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FTransform>                     Transforms;                                        // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetSASCodeEmitterTemplates) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASCodeEmitterTemplates");
static_assert(sizeof(BP_SASManager_C_GetSASCodeEmitterTemplates) == 0x000020, "Wrong size on BP_SASManager_C_GetSASCodeEmitterTemplates");
static_assert(offsetof(BP_SASManager_C_GetSASCodeEmitterTemplates, EmitterTemplates) == 0x000000, "Member 'BP_SASManager_C_GetSASCodeEmitterTemplates::EmitterTemplates' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASCodeEmitterTemplates, Transforms) == 0x000010, "Member 'BP_SASManager_C_GetSASCodeEmitterTemplates::Transforms' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASSequencer
// 0x0028 (0x0028 - 0x0000)
struct BP_SASManager_C_GetSASSequencer final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         Sequencer;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetSASSequencer) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASSequencer");
static_assert(sizeof(BP_SASManager_C_GetSASSequencer) == 0x000028, "Wrong size on BP_SASManager_C_GetSASSequencer");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, SasKind) == 0x000000, "Member 'BP_SASManager_C_GetSASSequencer::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, Sequencer) == 0x000008, "Member 'BP_SASManager_C_GetSASSequencer::Sequencer' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_GetSASSequencer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, CallFunc_Array_LastIndex_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_GetSASSequencer::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, CallFunc_InRange_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_GetSASSequencer::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASSequencer, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SASManager_C_GetSASSequencer::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.AcceleratorStart
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SASManager_C_AcceleratorStart final
{
public:
	struct FAcceleratorParam                      Param_AcceleratorParameter;                        // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_425E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425F[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4260[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4261[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4262[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4263[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_AcceleratorStart) == 0x000008, "Wrong alignment on BP_SASManager_C_AcceleratorStart");
static_assert(sizeof(BP_SASManager_C_AcceleratorStart) == 0x0000A8, "Wrong size on BP_SASManager_C_AcceleratorStart");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, Param_AcceleratorParameter) == 0x000000, "Member 'BP_SASManager_C_AcceleratorStart::Param_AcceleratorParameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, Param_Owner) == 0x000010, "Member 'BP_SASManager_C_AcceleratorStart::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, bHologram) == 0x000018, "Member 'BP_SASManager_C_AcceleratorStart::bHologram' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_SASManager_C_AcceleratorStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetPlayer_ReturnValue) == 0x000040, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000050, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetPlayer_ReturnValue_1) == 0x000058, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetGameSystemManager_Manater) == 0x000060, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000068, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_SASManager_C_AcceleratorStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000078, "Member 'BP_SASManager_C_AcceleratorStart::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_SASManager_C_AcceleratorStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_SASManager_C_AcceleratorStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000098, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorStart, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_SASManager_C_AcceleratorStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.AcceleratorEnd
// 0x00A8 (0x00A8 - 0x0000)
struct BP_SASManager_C_AcceleratorEnd final
{
public:
	struct FAcceleratorParam                      InputPin;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4264[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4265[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4266[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4267[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4268[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4269[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426A[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_AcceleratorEnd) == 0x000008, "Wrong alignment on BP_SASManager_C_AcceleratorEnd");
static_assert(sizeof(BP_SASManager_C_AcceleratorEnd) == 0x0000A8, "Wrong size on BP_SASManager_C_AcceleratorEnd");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, InputPin) == 0x000000, "Member 'BP_SASManager_C_AcceleratorEnd::InputPin' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, RemainTime) == 0x00000C, "Member 'BP_SASManager_C_AcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, Param_Owner) == 0x000010, "Member 'BP_SASManager_C_AcceleratorEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, bHologram) == 0x000018, "Member 'BP_SASManager_C_AcceleratorEnd::bHologram' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SASManager_C_AcceleratorEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000020, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, K2Node_DynamicCast_AsBPI_SASInterface) == 0x000038, "Member 'BP_SASManager_C_AcceleratorEnd::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SASManager_C_AcceleratorEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetPlayerManager_PlayerManager) == 0x000050, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetPlayer_ReturnValue) == 0x000058, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000060, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000068, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetPlayer_ReturnValue_1) == 0x000070, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000078, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, Temp_int_Loop_Num_Variable) == 0x00007C, "Member 'BP_SASManager_C_AcceleratorEnd::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetGameSystemManager_Manater) == 0x000080, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000090, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BP_SASManager_C_AcceleratorEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_AcceleratorEnd, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_SASManager_C_AcceleratorEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StopCutin
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_StopCutin final
{
public:
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_GetDuration_ReturnValue;                  // 0x0004(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_StopCutin) == 0x000004, "Wrong alignment on BP_SASManager_C_StopCutin");
static_assert(sizeof(BP_SASManager_C_StopCutin) == 0x000018, "Wrong size on BP_SASManager_C_StopCutin");
static_assert(offsetof(BP_SASManager_C_StopCutin, CallFunc_IsCutInPlaying_Playing) == 0x000000, "Member 'BP_SASManager_C_StopCutin::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutin, CallFunc_GetDuration_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_StopCutin::CallFunc_GetDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopCutin, CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_StopCutin::CallFunc_Conv_QualifiedFrameTimeToSeconds_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.PlayBrainFieldHelpCutIn
// 0x0110 (0x0110 - 0x0000)
struct BP_SASManager_C_PlayBrainFieldHelpCutIn final
{
public:
	EPlayerID                                     HelpPlayerID;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426C[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426D[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_2;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_3;                              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_4;                              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_5;                              // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_6;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_7;                              // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_8;                              // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_9;                              // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_10;                             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_11;                             // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_12;                             // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_13;                             // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_14;                             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_15;                             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_16;                             // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_17;                             // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_18;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_19;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_20;                             // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_21;                             // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_22;                             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_23;                             // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_24;                             // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_25;                             // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_26;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_27;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable_28;                             // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     K2Node_Select_Default_1;                           // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426E[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_PlayBrainFieldHelpCutIn) == 0x000008, "Wrong alignment on BP_SASManager_C_PlayBrainFieldHelpCutIn");
static_assert(sizeof(BP_SASManager_C_PlayBrainFieldHelpCutIn) == 0x000110, "Wrong size on BP_SASManager_C_PlayBrainFieldHelpCutIn");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, HelpPlayerID) == 0x000000, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::HelpPlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable) == 0x000001, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable) == 0x000004, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_1) == 0x00000C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_2) == 0x000014, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_3) == 0x00001C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_4) == 0x000024, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_5) == 0x00002C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_6) == 0x000034, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_7) == 0x00003C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_8) == 0x000044, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_9) == 0x00004C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_10) == 0x000054, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_11) == 0x00005C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_12) == 0x000064, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_13) == 0x00006C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_14) == 0x000074, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_15) == 0x00007C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_16) == 0x000084, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_17) == 0x00008C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_18) == 0x000094, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_19) == 0x00009C, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_20) == 0x0000A4, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_21) == 0x0000AC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_22) == 0x0000B4, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_23) == 0x0000BC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_24) == 0x0000C4, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_25) == 0x0000CC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_name_Variable_26) == 0x0000D4, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_1) == 0x0000DC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, K2Node_Select_Default) == 0x0000E0, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_2) == 0x0000E8, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_3) == 0x0000E9, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_4) == 0x0000EA, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_5) == 0x0000EB, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_6) == 0x0000EC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_7) == 0x0000ED, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_8) == 0x0000EE, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_9) == 0x0000EF, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_10) == 0x0000F0, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_11) == 0x0000F1, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_12) == 0x0000F2, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_13) == 0x0000F3, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_14) == 0x0000F4, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_15) == 0x0000F5, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_16) == 0x0000F6, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_17) == 0x0000F7, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_18) == 0x0000F8, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_19) == 0x0000F9, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_20) == 0x0000FA, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_21) == 0x0000FB, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_22) == 0x0000FC, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_23) == 0x0000FD, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_24) == 0x0000FE, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_25) == 0x0000FF, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_26) == 0x000100, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_27) == 0x000101, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, Temp_byte_Variable_28) == 0x000102, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, K2Node_Select_Default_1) == 0x000103, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PlayBrainFieldHelpCutIn, CallFunc_GetCutinManager_CutinManager) == 0x000108, "Member 'BP_SASManager_C_PlayBrainFieldHelpCutIn::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.CancelBrainFieldHelpCutIn
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_CancelBrainFieldHelpCutIn final
{
public:
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_426F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_CancelBrainFieldHelpCutIn) == 0x000008, "Wrong alignment on BP_SASManager_C_CancelBrainFieldHelpCutIn");
static_assert(sizeof(BP_SASManager_C_CancelBrainFieldHelpCutIn) == 0x000020, "Wrong size on BP_SASManager_C_CancelBrainFieldHelpCutIn");
static_assert(offsetof(BP_SASManager_C_CancelBrainFieldHelpCutIn, CallFunc_GetCutinManager_CutinManager) == 0x000000, "Member 'BP_SASManager_C_CancelBrainFieldHelpCutIn::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelBrainFieldHelpCutIn, CallFunc_IsCutInPlaying_Playing) == 0x000008, "Member 'BP_SASManager_C_CancelBrainFieldHelpCutIn::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelBrainFieldHelpCutIn, CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer) == 0x000010, "Member 'BP_SASManager_C_CancelBrainFieldHelpCutIn::CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelBrainFieldHelpCutIn, CallFunc_IsPlaying_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_CancelBrainFieldHelpCutIn::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StartStopScene
// 0x0030 (0x0030 - 0x0000)
struct BP_SASManager_C_StartStopScene final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4270[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4271[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_StartStopScene) == 0x000008, "Wrong alignment on BP_SASManager_C_StartStopScene");
static_assert(sizeof(BP_SASManager_C_StartStopScene) == 0x000030, "Wrong size on BP_SASManager_C_StartStopScene");
static_assert(offsetof(BP_SASManager_C_StartStopScene, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_SASManager_C_StartStopScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SASManager_C_StartStopScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_StartStopScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_StartStopScene::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_StartStopScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_SASManager_C_StartStopScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_StartStopScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_SASManager_C_StartStopScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_GetGameSystemManager_Manater) == 0x000020, "Member 'BP_SASManager_C_StartStopScene::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartStopScene, CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation) == 0x000028, "Member 'BP_SASManager_C_StartStopScene::CallFunc_SetGlobalCustomTimeDilation_CurrentCustomTimeDilation' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StopStopScene
// 0x0030 (0x0030 - 0x0000)
struct BP_SASManager_C_StopStopScene final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4272[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4273[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manater;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveGlobalCustomTimeDilation_Success;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_StopStopScene) == 0x000008, "Wrong alignment on BP_SASManager_C_StopStopScene");
static_assert(sizeof(BP_SASManager_C_StopStopScene) == 0x000030, "Wrong size on BP_SASManager_C_StopStopScene");
static_assert(offsetof(BP_SASManager_C_StopStopScene, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_StopStopScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_StopStopScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SASManager_C_StopStopScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_StopStopScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_StopStopScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_StopStopScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_StopStopScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_GetGameSystemManager_Manater) == 0x000020, "Member 'BP_SASManager_C_StopStopScene::CallFunc_GetGameSystemManager_Manater' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StopStopScene, CallFunc_RemoveGlobalCustomTimeDilation_Success) == 0x000028, "Member 'BP_SASManager_C_StopStopScene::CallFunc_RemoveGlobalCustomTimeDilation_Success' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StartCableEnergy
// 0x0098 (0x0098 - 0x0000)
struct BP_SASManager_C_StartCableEnergy final
{
public:
	class ABP_SASCableEnergyMesh_C*               EnergyCable;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CableBase_C*                        TargetCable;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopLastIndex;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4274[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       RSCharacter;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4275[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4276[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCableEnergyMesh_C*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4277[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4278[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_CableBase_C*>                CallFunc_GetSASCodeActorList_CodeList;             // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_CableBase_C*                        CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4279[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_427A[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_427B[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_StartCableEnergy) == 0x000008, "Wrong alignment on BP_SASManager_C_StartCableEnergy");
static_assert(sizeof(BP_SASManager_C_StartCableEnergy) == 0x000098, "Wrong size on BP_SASManager_C_StartCableEnergy");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, EnergyCable) == 0x000000, "Member 'BP_SASManager_C_StartCableEnergy::EnergyCable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, TargetCable) == 0x000008, "Member 'BP_SASManager_C_StartCableEnergy::TargetCable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, LoopLastIndex) == 0x000010, "Member 'BP_SASManager_C_StartCableEnergy::LoopLastIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, RSCharacter) == 0x000018, "Member 'BP_SASManager_C_StartCableEnergy::RSCharacter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, Temp_int_Variable) == 0x000020, "Member 'BP_SASManager_C_StartCableEnergy::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000040, "Member 'BP_SASManager_C_StartCableEnergy::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SASManager_C_StartCableEnergy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_GetSASCodeActorList_CodeList) == 0x000058, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_GetSASCodeActorList_CodeList' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_IsValid_ReturnValue_2) == 0x000070, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Array_LastIndex_ReturnValue) == 0x000074, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_GetPlayerManager_PlayerManager) == 0x000078, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000084, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_Min_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartCableEnergy, CallFunc_GetPlayer_ReturnValue) == 0x000090, "Member 'BP_SASManager_C_StartCableEnergy::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.DetachCableEnergy
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_DetachCableEnergy final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_427C[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_DetachCableEnergy) == 0x000004, "Wrong alignment on BP_SASManager_C_DetachCableEnergy");
static_assert(sizeof(BP_SASManager_C_DetachCableEnergy) == 0x000018, "Wrong size on BP_SASManager_C_DetachCableEnergy");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_DetachCableEnergy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_DetachCableEnergy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SASManager_C_DetachCableEnergy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_DetachCableEnergy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_DetachCableEnergy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DetachCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_DetachCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.EraseCableEnergy
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_EraseCableEnergy final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_427D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_EraseCableEnergy) == 0x000004, "Wrong alignment on BP_SASManager_C_EraseCableEnergy");
static_assert(sizeof(BP_SASManager_C_EraseCableEnergy) == 0x000018, "Wrong size on BP_SASManager_C_EraseCableEnergy");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_EraseCableEnergy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_EraseCableEnergy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SASManager_C_EraseCableEnergy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_EraseCableEnergy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_EraseCableEnergy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EraseCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_EraseCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.VisibleCableEnergy
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_VisibleCableEnergy final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_427E[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_VisibleCableEnergy) == 0x000004, "Wrong alignment on BP_SASManager_C_VisibleCableEnergy");
static_assert(sizeof(BP_SASManager_C_VisibleCableEnergy) == 0x000018, "Wrong size on BP_SASManager_C_VisibleCableEnergy");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_VisibleCableEnergy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_VisibleCableEnergy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SASManager_C_VisibleCableEnergy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_VisibleCableEnergy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_VisibleCableEnergy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_VisibleCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_VisibleCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.LoadExtraCutin
// 0x0050 (0x0050 - 0x0000)
struct BP_SASManager_C_LoadExtraCutin final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_427F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCutinExtra_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_LoadExtraCutin) == 0x000010, "Wrong alignment on BP_SASManager_C_LoadExtraCutin");
static_assert(sizeof(BP_SASManager_C_LoadExtraCutin) == 0x000050, "Wrong size on BP_SASManager_C_LoadExtraCutin");
static_assert(offsetof(BP_SASManager_C_LoadExtraCutin, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_SASManager_C_LoadExtraCutin::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadExtraCutin, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'BP_SASManager_C_LoadExtraCutin::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadExtraCutin, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000038, "Member 'BP_SASManager_C_LoadExtraCutin::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadExtraCutin, CallFunc_FinishSpawningActor_ReturnValue) == 0x000040, "Member 'BP_SASManager_C_LoadExtraCutin::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_LoadExtraCutin, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_SASManager_C_LoadExtraCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.UnloadExtraCutin
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_UnloadExtraCutin final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_UnloadExtraCutin) == 0x000001, "Wrong alignment on BP_SASManager_C_UnloadExtraCutin");
static_assert(sizeof(BP_SASManager_C_UnloadExtraCutin) == 0x000001, "Wrong size on BP_SASManager_C_UnloadExtraCutin");
static_assert(offsetof(BP_SASManager_C_UnloadExtraCutin, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SASManager_C_UnloadExtraCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.StartExtraCutin
// 0x00B8 (0x00B8 - 0x0000)
struct BP_SASManager_C_StartExtraCutin final
{
public:
	ESASCutinExtraID                              ExtraID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4280[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4281[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_StartExtraCutin) == 0x000008, "Wrong alignment on BP_SASManager_C_StartExtraCutin");
static_assert(sizeof(BP_SASManager_C_StartExtraCutin) == 0x0000B8, "Wrong size on BP_SASManager_C_StartExtraCutin");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, ExtraID) == 0x000000, "Member 'BP_SASManager_C_StartExtraCutin::ExtraID' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_SASManager_C_StartExtraCutin::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_SASManager_C_StartExtraCutin::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A0, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_StartExtraCutin, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_SASManager_C_StartExtraCutin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsPlayingCutinExtra
// 0x0003 (0x0003 - 0x0000)
struct BP_SASManager_C_IsPlayingCutinExtra final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_Playing;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsPlayingCutinExtra) == 0x000001, "Wrong alignment on BP_SASManager_C_IsPlayingCutinExtra");
static_assert(sizeof(BP_SASManager_C_IsPlayingCutinExtra) == 0x000003, "Wrong size on BP_SASManager_C_IsPlayingCutinExtra");
static_assert(offsetof(BP_SASManager_C_IsPlayingCutinExtra, ReturnValue) == 0x000000, "Member 'BP_SASManager_C_IsPlayingCutinExtra::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsPlayingCutinExtra, CallFunc_IsPlaying_Playing) == 0x000001, "Member 'BP_SASManager_C_IsPlayingCutinExtra::CallFunc_IsPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsPlayingCutinExtra, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_SASManager_C_IsPlayingCutinExtra::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.EmitParticleCableEnergy
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_EmitParticleCableEnergy final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4282[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_EmitParticleCableEnergy) == 0x000004, "Wrong alignment on BP_SASManager_C_EmitParticleCableEnergy");
static_assert(sizeof(BP_SASManager_C_EmitParticleCableEnergy) == 0x000018, "Wrong size on BP_SASManager_C_EmitParticleCableEnergy");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SASManager_C_EmitParticleCableEnergy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SASManager_C_EmitParticleCableEnergy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SASManager_C_EmitParticleCableEnergy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_EmitParticleCableEnergy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_EmitParticleCableEnergy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'BP_SASManager_C_EmitParticleCableEnergy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EmitParticleCableEnergy, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_EmitParticleCableEnergy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetMipPreStream
// 0x0080 (0x0080 - 0x0000)
struct BP_SASManager_C_SetMipPreStream final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4283[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   MeshName;                                          // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4284[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ResourceManager_C*                  CallFunc_GetResourceManager_ResourceManager;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SetMipPreStream) == 0x000008, "Wrong alignment on BP_SASManager_C_SetMipPreStream");
static_assert(sizeof(BP_SASManager_C_SetMipPreStream) == 0x000080, "Wrong size on BP_SASManager_C_SetMipPreStream");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, SasKind) == 0x000000, "Member 'BP_SASManager_C_SetMipPreStream::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Enable) == 0x000001, "Member 'BP_SASManager_C_SetMipPreStream::Enable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, MeshName) == 0x000004, "Member 'BP_SASManager_C_SetMipPreStream::MeshName' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable) == 0x00000C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_1) == 0x000014, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_2) == 0x00001C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_3) == 0x000024, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_4) == 0x00002C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_5) == 0x000034, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_6) == 0x00003C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_7) == 0x000044, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_8) == 0x00004C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_9) == 0x000054, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_name_Variable_10) == 0x00005C, "Member 'BP_SASManager_C_SetMipPreStream::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, CallFunc_NotEqual_NameName_ReturnValue) == 0x000064, "Member 'BP_SASManager_C_SetMipPreStream::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, Temp_byte_Variable) == 0x000065, "Member 'BP_SASManager_C_SetMipPreStream::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, CallFunc_GetResourceManager_ResourceManager) == 0x000068, "Member 'BP_SASManager_C_SetMipPreStream::CallFunc_GetResourceManager_ResourceManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, K2Node_Select_Default) == 0x000070, "Member 'BP_SASManager_C_SetMipPreStream::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetMipPreStream, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_SASManager_C_SetMipPreStream::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetHealedBrainFieldFlag
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_SetHealedBrainFieldFlag final
{
public:
	bool                                          bHealed;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SetHealedBrainFieldFlag) == 0x000001, "Wrong alignment on BP_SASManager_C_SetHealedBrainFieldFlag");
static_assert(sizeof(BP_SASManager_C_SetHealedBrainFieldFlag) == 0x000001, "Wrong size on BP_SASManager_C_SetHealedBrainFieldFlag");
static_assert(offsetof(BP_SASManager_C_SetHealedBrainFieldFlag, bHealed) == 0x000000, "Member 'BP_SASManager_C_SetHealedBrainFieldFlag::bHealed' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetHealedBrainFieldFlag
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_GetHealedBrainFieldFlag final
{
public:
	bool                                          IsHealed;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_GetHealedBrainFieldFlag) == 0x000001, "Wrong alignment on BP_SASManager_C_GetHealedBrainFieldFlag");
static_assert(sizeof(BP_SASManager_C_GetHealedBrainFieldFlag) == 0x000001, "Wrong size on BP_SASManager_C_GetHealedBrainFieldFlag");
static_assert(offsetof(BP_SASManager_C_GetHealedBrainFieldFlag, IsHealed) == 0x000000, "Member 'BP_SASManager_C_GetHealedBrainFieldFlag::IsHealed' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.OnEndCutinSequencer
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_OnEndCutinSequencer final
{
public:
	E_SASKind                                     CallFunc_GetCurrentCutinSASType_Internal_SASType;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_OnEndCutinSequencer) == 0x000001, "Wrong alignment on BP_SASManager_C_OnEndCutinSequencer");
static_assert(sizeof(BP_SASManager_C_OnEndCutinSequencer) == 0x000001, "Wrong size on BP_SASManager_C_OnEndCutinSequencer");
static_assert(offsetof(BP_SASManager_C_OnEndCutinSequencer, CallFunc_GetCurrentCutinSASType_Internal_SASType) == 0x000000, "Member 'BP_SASManager_C_OnEndCutinSequencer::CallFunc_GetCurrentCutinSASType_Internal_SASType' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.DispTipsSAS
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_DispTipsSAS final
{
public:
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_1; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_2; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetCurrentCutinSASType_Internal_SASType;  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_DispTipsSAS) == 0x000004, "Wrong alignment on BP_SASManager_C_DispTipsSAS");
static_assert(sizeof(BP_SASManager_C_DispTipsSAS) == 0x000010, "Wrong size on BP_SASManager_C_DispTipsSAS");
static_assert(offsetof(BP_SASManager_C_DispTipsSAS, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue) == 0x000000, "Member 'BP_SASManager_C_DispTipsSAS::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DispTipsSAS, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_1) == 0x000004, "Member 'BP_SASManager_C_DispTipsSAS::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DispTipsSAS, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_2) == 0x000008, "Member 'BP_SASManager_C_DispTipsSAS::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DispTipsSAS, CallFunc_GetCurrentCutinSASType_Internal_SASType) == 0x00000C, "Member 'BP_SASManager_C_DispTipsSAS::CallFunc_GetCurrentCutinSASType_Internal_SASType' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_DispTipsSAS, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BP_SASManager_C_DispTipsSAS::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASEffectFixParam
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SASManager_C_GetSASEffectFixParam final
{
public:
	E_SASKindNative                               InKind;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4285[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct F_SASParamNative>               OutFixParam;                                       // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4286[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct F_SASParamNative>               OutData;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FF_SASParam>                    Data;                                              // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_SASKindNative                               Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4287[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FF_SASParam>                    Temp_struct_Variable;                              // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SASParam                            CallFunc_Array_Get_Item;                           // 0x0064(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4288[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct F_SASParamNative                       K2Node_MakeStruct__SASParamNative;                 // 0x0090(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4289[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FF_SASParam>                    K2Node_Select_Default;                             // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetSASEffectFixParam) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASEffectFixParam");
static_assert(sizeof(BP_SASManager_C_GetSASEffectFixParam) == 0x0000C0, "Wrong size on BP_SASManager_C_GetSASEffectFixParam");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, InKind) == 0x000000, "Member 'BP_SASManager_C_GetSASEffectFixParam::InKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, OutFixParam) == 0x000008, "Member 'BP_SASManager_C_GetSASEffectFixParam::OutFixParam' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, ReturnValue) == 0x000018, "Member 'BP_SASManager_C_GetSASEffectFixParam::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, OutData) == 0x000020, "Member 'BP_SASManager_C_GetSASEffectFixParam::OutData' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, Data) == 0x000030, "Member 'BP_SASManager_C_GetSASEffectFixParam::Data' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, Temp_byte_Variable) == 0x000040, "Member 'BP_SASManager_C_GetSASEffectFixParam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, Temp_struct_Variable) == 0x000048, "Member 'BP_SASManager_C_GetSASEffectFixParam::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_SASManager_C_GetSASEffectFixParam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_SASManager_C_GetSASEffectFixParam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, K2Node_MakeStruct__SASParamNative) == 0x000090, "Member 'BP_SASManager_C_GetSASEffectFixParam::K2Node_MakeStruct__SASParamNative' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_SASManager_C_GetSASEffectFixParam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASEffectFixParam, K2Node_Select_Default) == 0x0000B0, "Member 'BP_SASManager_C_GetSASEffectFixParam::K2Node_Select_Default' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetExtraCutinDilation
// 0x0008 (0x0008 - 0x0000)
struct BP_SASManager_C_SetExtraCutinDilation final
{
public:
	float                                         Dilation;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SetExtraCutinDilation) == 0x000004, "Wrong alignment on BP_SASManager_C_SetExtraCutinDilation");
static_assert(sizeof(BP_SASManager_C_SetExtraCutinDilation) == 0x000008, "Wrong size on BP_SASManager_C_SetExtraCutinDilation");
static_assert(offsetof(BP_SASManager_C_SetExtraCutinDilation, Dilation) == 0x000000, "Member 'BP_SASManager_C_SetExtraCutinDilation::Dilation' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SetExtraCutinDilation, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_SetExtraCutinDilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_SASManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_SASManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_SASManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_SASManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_SASManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.PauseExtraCutin
// 0x0002 (0x0002 - 0x0000)
struct BP_SASManager_C_PauseExtraCutin final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_PauseExtraCutin) == 0x000001, "Wrong alignment on BP_SASManager_C_PauseExtraCutin");
static_assert(sizeof(BP_SASManager_C_PauseExtraCutin) == 0x000002, "Wrong size on BP_SASManager_C_PauseExtraCutin");
static_assert(offsetof(BP_SASManager_C_PauseExtraCutin, IsPause) == 0x000000, "Member 'BP_SASManager_C_PauseExtraCutin::IsPause' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_PauseExtraCutin, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SASManager_C_PauseExtraCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsCutinPlayingNative
// 0x0002 (0x0002 - 0x0000)
struct BP_SASManager_C_IsCutinPlayingNative final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsCutinPlayingNative) == 0x000001, "Wrong alignment on BP_SASManager_C_IsCutinPlayingNative");
static_assert(sizeof(BP_SASManager_C_IsCutinPlayingNative) == 0x000002, "Wrong size on BP_SASManager_C_IsCutinPlayingNative");
static_assert(offsetof(BP_SASManager_C_IsCutinPlayingNative, ReturnValue) == 0x000000, "Member 'BP_SASManager_C_IsCutinPlayingNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutinPlayingNative, CallFunc_IsCutInPlaying_Playing) == 0x000001, "Member 'BP_SASManager_C_IsCutinPlayingNative::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.CancelSASWhenPlayingCutin
// 0x0060 (0x0060 - 0x0000)
struct BP_SASManager_C_CancelSASWhenPlayingCutin final
{
public:
	class ABP_CutinManager_C*                     LCutinManager;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CancelSAS_Success;                        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReserved_Reserved;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetCurrentSASType_SASKind;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_428E[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CancelSAS_Success_1;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_428F[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_CancelSASWhenPlayingCutin) == 0x000008, "Wrong alignment on BP_SASManager_C_CancelSASWhenPlayingCutin");
static_assert(sizeof(BP_SASManager_C_CancelSASWhenPlayingCutin) == 0x000060, "Wrong size on BP_SASManager_C_CancelSASWhenPlayingCutin");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, LCutinManager) == 0x000000, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::LCutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, Temp_int_Variable) == 0x000008, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, Temp_int_Variable_1) == 0x00000C, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_CancelSAS_Success) == 0x00001A, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_CancelSAS_Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001B, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_IsReserved_Reserved) == 0x00001C, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_IsReserved_Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetMainPlayer_Player) == 0x000038, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetCurrentSASType_SASKind) == 0x000040, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetCurrentSASType_SASKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_MakeLiteralInt_ReturnValue) == 0x000044, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_CancelSAS_Success_1) == 0x000048, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_CancelSAS_Success_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_GetCutinManager_CutinManager) == 0x000050, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSASWhenPlayingCutin, CallFunc_IsCutInPlaying_Playing) == 0x000058, "Member 'BP_SASManager_C_CancelSASWhenPlayingCutin::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SetOptionNoCutin
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_SetOptionNoCutin final
{
public:
	bool                                          bNoCutin;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SetOptionNoCutin) == 0x000001, "Wrong alignment on BP_SASManager_C_SetOptionNoCutin");
static_assert(sizeof(BP_SASManager_C_SetOptionNoCutin) == 0x000001, "Wrong size on BP_SASManager_C_SetOptionNoCutin");
static_assert(offsetof(BP_SASManager_C_SetOptionNoCutin, bNoCutin) == 0x000000, "Member 'BP_SASManager_C_SetOptionNoCutin::bNoCutin' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.Start
// 0x0078 (0x0078 - 0x0000)
struct BP_SASManager_C_Start final
{
public:
	struct FFSASCommand                           Parameter;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbSuccess;                                         // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     SasKind;                                           // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4290[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommandInternal                   K2Node_MakeStruct_FSASCommandInternal;             // 0x0038(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsReserved_Reserved;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4291[0x2];                                     // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_Start) == 0x000008, "Wrong alignment on BP_SASManager_C_Start");
static_assert(sizeof(BP_SASManager_C_Start) == 0x000078, "Wrong size on BP_SASManager_C_Start");
static_assert(offsetof(BP_SASManager_C_Start, Parameter) == 0x000000, "Member 'BP_SASManager_C_Start::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, Success) == 0x000030, "Member 'BP_SASManager_C_Start::Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, LbSuccess) == 0x000031, "Member 'BP_SASManager_C_Start::LbSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, SasKind) == 0x000032, "Member 'BP_SASManager_C_Start::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, K2Node_MakeStruct_FSASCommandInternal) == 0x000038, "Member 'BP_SASManager_C_Start::K2Node_MakeStruct_FSASCommandInternal' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, CallFunc_IsReserved_Reserved) == 0x000070, "Member 'BP_SASManager_C_Start::CallFunc_IsReserved_Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, CallFunc_Not_PreBool_ReturnValue) == 0x000071, "Member 'BP_SASManager_C_Start::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_Start, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_SASManager_C_Start::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.UnregisterActor
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_UnregisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_UnregisterActor) == 0x000008, "Wrong alignment on BP_SASManager_C_UnregisterActor");
static_assert(sizeof(BP_SASManager_C_UnregisterActor) == 0x000010, "Wrong size on BP_SASManager_C_UnregisterActor");
static_assert(offsetof(BP_SASManager_C_UnregisterActor, Actor) == 0x000000, "Member 'BP_SASManager_C_UnregisterActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UnregisterActor, Success) == 0x000008, "Member 'BP_SASManager_C_UnregisterActor::Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_UnregisterActor, CallFunc_Array_RemoveItem_ReturnValue) == 0x000009, "Member 'BP_SASManager_C_UnregisterActor::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.RegisterActor
// 0x0010 (0x0010 - 0x0000)
struct BP_SASManager_C_RegisterActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4292[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_RegisterActor) == 0x000008, "Wrong alignment on BP_SASManager_C_RegisterActor");
static_assert(sizeof(BP_SASManager_C_RegisterActor) == 0x000010, "Wrong size on BP_SASManager_C_RegisterActor");
static_assert(offsetof(BP_SASManager_C_RegisterActor, Actor) == 0x000000, "Member 'BP_SASManager_C_RegisterActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_RegisterActor, Success) == 0x000008, "Member 'BP_SASManager_C_RegisterActor::Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_RegisterActor, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_RegisterActor::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.CancelSAS
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SASManager_C_CancelSAS final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4293[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     LCutinManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4294[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4295[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4296[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4297[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutInPlaying_Playing;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4298[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetCurrentSASType_SASKind;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4299[0x1];                                     // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCommandInternal                   CallFunc_Array_Get_Item;                           // 0x0060(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429A[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429B[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommandInternal                   CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_CancelSAS) == 0x000008, "Wrong alignment on BP_SASManager_C_CancelSAS");
static_assert(sizeof(BP_SASManager_C_CancelSAS) == 0x0000E8, "Wrong size on BP_SASManager_C_CancelSAS");
static_assert(offsetof(BP_SASManager_C_CancelSAS, SAS_Kind) == 0x000000, "Member 'BP_SASManager_C_CancelSAS::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, bCancelSASCost) == 0x000001, "Member 'BP_SASManager_C_CancelSAS::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Success) == 0x000002, "Member 'BP_SASManager_C_CancelSAS::Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, LCutinManager) == 0x000008, "Member 'BP_SASManager_C_CancelSAS::LCutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_SASManager_C_CancelSAS::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SASManager_C_CancelSAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00001C, "Member 'BP_SASManager_C_CancelSAS::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_SASManager_C_CancelSAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Not_PreBool_ReturnValue_1) == 0x000024, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_SASManager_C_CancelSAS::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_SASManager_C_CancelSAS::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_GetMainPlayer_Player) == 0x000038, "Member 'BP_SASManager_C_CancelSAS::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_GetCutinManager_CutinManager) == 0x000040, "Member 'BP_SASManager_C_CancelSAS::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_IsCutInPlaying_Playing) == 0x000048, "Member 'BP_SASManager_C_CancelSAS::CallFunc_IsCutInPlaying_Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer) == 0x000050, "Member 'BP_SASManager_C_CancelSAS::CallFunc_GetCurrentSequencePlayer_CurrentSequencePlayer' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_GetCurrentSASType_SASKind) == 0x000058, "Member 'BP_SASManager_C_CancelSAS::CallFunc_GetCurrentSASType_SASKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_IsPlaying_ReturnValue) == 0x000059, "Member 'BP_SASManager_C_CancelSAS::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'BP_SASManager_C_CancelSAS::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_SASManager_C_CancelSAS::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00009C, "Member 'BP_SASManager_C_CancelSAS::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_BooleanAND_ReturnValue) == 0x0000A5, "Member 'BP_SASManager_C_CancelSAS::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E4, "Member 'BP_SASManager_C_CancelSAS::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000E5, "Member 'BP_SASManager_C_CancelSAS::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_CancelSAS, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E6, "Member 'BP_SASManager_C_CancelSAS::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.EndSAS
// 0x0090 (0x0090 - 0x0000)
struct BP_SASManager_C_EndSAS final
{
public:
	struct FFSASCommand                           Parameter;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSASCommandInternal                   CallFunc_Array_Get_Item;                           // 0x0050(0x0038)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_EndSAS) == 0x000008, "Wrong alignment on BP_SASManager_C_EndSAS");
static_assert(sizeof(BP_SASManager_C_EndSAS) == 0x000090, "Wrong size on BP_SASManager_C_EndSAS");
static_assert(offsetof(BP_SASManager_C_EndSAS, Parameter) == 0x000000, "Member 'BP_SASManager_C_EndSAS::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, Success) == 0x000030, "Member 'BP_SASManager_C_EndSAS::Success' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_SASManager_C_EndSAS::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000038, "Member 'BP_SASManager_C_EndSAS::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_SASManager_C_EndSAS::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_SASManager_C_EndSAS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_SASManager_C_EndSAS::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_SASManager_C_EndSAS::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_SASManager_C_EndSAS::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_Array_RemoveItem_ReturnValue) == 0x000089, "Member 'BP_SASManager_C_EndSAS::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00008A, "Member 'BP_SASManager_C_EndSAS::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_EndSAS, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008B, "Member 'BP_SASManager_C_EndSAS::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetCurrentCutinSASType
// 0x0002 (0x0002 - 0x0000)
struct BP_SASManager_C_GetCurrentCutinSASType final
{
public:
	E_SASKind                                     SASType;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetCurrentCutinSASType_Internal_SASType;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetCurrentCutinSASType) == 0x000001, "Wrong alignment on BP_SASManager_C_GetCurrentCutinSASType");
static_assert(sizeof(BP_SASManager_C_GetCurrentCutinSASType) == 0x000002, "Wrong size on BP_SASManager_C_GetCurrentCutinSASType");
static_assert(offsetof(BP_SASManager_C_GetCurrentCutinSASType, SASType) == 0x000000, "Member 'BP_SASManager_C_GetCurrentCutinSASType::SASType' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCurrentCutinSASType, CallFunc_GetCurrentCutinSASType_Internal_SASType) == 0x000001, "Member 'BP_SASManager_C_GetCurrentCutinSASType::CallFunc_GetCurrentCutinSASType_Internal_SASType' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SAS_CommonStart
// 0x0038 (0x0038 - 0x0000)
struct BP_SASManager_C_SAS_CommonStart final
{
public:
	struct FFSASCommand                           SAS_Command;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_SAS_CommonStart) == 0x000008, "Wrong alignment on BP_SASManager_C_SAS_CommonStart");
static_assert(sizeof(BP_SASManager_C_SAS_CommonStart) == 0x000038, "Wrong size on BP_SASManager_C_SAS_CommonStart");
static_assert(offsetof(BP_SASManager_C_SAS_CommonStart, SAS_Command) == 0x000000, "Member 'BP_SASManager_C_SAS_CommonStart::SAS_Command' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SAS_CommonStart, Dummy) == 0x000030, "Member 'BP_SASManager_C_SAS_CommonStart::Dummy' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.SAS_CommonEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_SASManager_C_SAS_CommonEnd final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429E[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainTime;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_SAS_CommonEnd) == 0x000004, "Wrong alignment on BP_SASManager_C_SAS_CommonEnd");
static_assert(sizeof(BP_SASManager_C_SAS_CommonEnd) == 0x000008, "Wrong size on BP_SASManager_C_SAS_CommonEnd");
static_assert(offsetof(BP_SASManager_C_SAS_CommonEnd, SAS_Kind) == 0x000000, "Member 'BP_SASManager_C_SAS_CommonEnd::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SAS_CommonEnd, bCancelSASCost) == 0x000001, "Member 'BP_SASManager_C_SAS_CommonEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SAS_CommonEnd, bDummy) == 0x000002, "Member 'BP_SASManager_C_SAS_CommonEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_SAS_CommonEnd, RemainTime) == 0x000004, "Member 'BP_SASManager_C_SAS_CommonEnd::RemainTime' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsCutInPlaying
// 0x0018 (0x0018 - 0x0000)
struct BP_SASManager_C_IsCutInPlaying final
{
public:
	bool                                          bCheckSASCutInStopped;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Playing;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaying;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinManager_C*                     CallFunc_GetCutinManager_CutinManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingCurrentSequence_IsPlaying;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsCutInPlaying) == 0x000008, "Wrong alignment on BP_SASManager_C_IsCutInPlaying");
static_assert(sizeof(BP_SASManager_C_IsCutInPlaying) == 0x000018, "Wrong size on BP_SASManager_C_IsCutInPlaying");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, bCheckSASCutInStopped) == 0x000000, "Member 'BP_SASManager_C_IsCutInPlaying::bCheckSASCutInStopped' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, Playing) == 0x000001, "Member 'BP_SASManager_C_IsCutInPlaying::Playing' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, IsPlaying) == 0x000002, "Member 'BP_SASManager_C_IsCutInPlaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, CallFunc_GetCutinManager_CutinManager) == 0x000008, "Member 'BP_SASManager_C_IsCutInPlaying::CallFunc_GetCutinManager_CutinManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, CallFunc_IsPlayingCurrentSequence_IsPlaying) == 0x000010, "Member 'BP_SASManager_C_IsCutInPlaying::CallFunc_IsPlayingCurrentSequence_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInPlaying, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SASManager_C_IsCutInPlaying::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetAcceleratorParameter
// 0x000C (0x000C - 0x0000)
struct BP_SASManager_C_GetAcceleratorParameter final
{
public:
	struct FAcceleratorParam                      Param_AcceleratorParameter;                        // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetAcceleratorParameter) == 0x000004, "Wrong alignment on BP_SASManager_C_GetAcceleratorParameter");
static_assert(sizeof(BP_SASManager_C_GetAcceleratorParameter) == 0x00000C, "Wrong size on BP_SASManager_C_GetAcceleratorParameter");
static_assert(offsetof(BP_SASManager_C_GetAcceleratorParameter, Param_AcceleratorParameter) == 0x000000, "Member 'BP_SASManager_C_GetAcceleratorParameter::Param_AcceleratorParameter' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetCutinManager
// 0x0008 (0x0008 - 0x0000)
struct BP_SASManager_C_GetCutinManager final
{
public:
	class ABP_CutinManager_C*                     CutinManager;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetCutinManager) == 0x000008, "Wrong alignment on BP_SASManager_C_GetCutinManager");
static_assert(sizeof(BP_SASManager_C_GetCutinManager) == 0x000008, "Wrong size on BP_SASManager_C_GetCutinManager");
static_assert(offsetof(BP_SASManager_C_GetCutinManager, CutinManager) == 0x000000, "Member 'BP_SASManager_C_GetCutinManager::CutinManager' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetCutinRowNameByESASKind
// 0x0088 (0x0088 - 0x0000)
struct BP_SASManager_C_GetCutinRowNameByESASKind final
{
public:
	E_SASKind                                     Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOptionNoCutin_bNoCutin;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A3[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetCutinRowNameByESASKind) == 0x000004, "Wrong alignment on BP_SASManager_C_GetCutinRowNameByESASKind");
static_assert(sizeof(BP_SASManager_C_GetCutinRowNameByESASKind) == 0x000088, "Wrong size on BP_SASManager_C_GetCutinRowNameByESASKind");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Param_Index) == 0x000000, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, ReturnValue) == 0x000004, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_bool_Variable) == 0x00000C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable) == 0x000010, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_byte_Variable) == 0x000018, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_1) == 0x00001C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_2) == 0x000024, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_3) == 0x00002C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_4) == 0x000034, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_5) == 0x00003C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_6) == 0x000044, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_7) == 0x00004C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_8) == 0x000054, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_9) == 0x00005C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_10) == 0x000064, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, Temp_name_Variable_11) == 0x00006C, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, CallFunc_IsOptionNoCutin_bNoCutin) == 0x000074, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::CallFunc_IsOptionNoCutin_bNoCutin' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, K2Node_Select_Default) == 0x000078, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetCutinRowNameByESASKind, K2Node_Select_Default_1) == 0x000080, "Member 'BP_SASManager_C_GetCutinRowNameByESASKind::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASParamData
// 0x0068 (0x0068 - 0x0000)
struct BP_SASManager_C_GetSASParamData final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A4[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FF_SASParam                            Param;                                             // 0x0008(0x0024)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LIndex;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_5;         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_6;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_7;         // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_8;         // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A5[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FF_SASParam                            K2Node_MakeStruct_F_SASParam;                      // 0x0040(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_9;         // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_GetSASParamData) == 0x000004, "Wrong alignment on BP_SASManager_C_GetSASParamData");
static_assert(sizeof(BP_SASManager_C_GetSASParamData) == 0x000068, "Wrong size on BP_SASManager_C_GetSASParamData");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, Kind) == 0x000000, "Member 'BP_SASManager_C_GetSASParamData::Kind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, Level) == 0x000004, "Member 'BP_SASManager_C_GetSASParamData::Level' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, Param) == 0x000008, "Member 'BP_SASManager_C_GetSASParamData::Param' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, LIndex) == 0x00002C, "Member 'BP_SASManager_C_GetSASParamData::LIndex' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BP_SASManager_C_GetSASParamData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000036, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000037, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000038, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000039, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x00003A, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_5) == 0x00003B, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_6) == 0x00003C, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_7) == 0x00003D, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_8) == 0x00003E, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, K2Node_MakeStruct_F_SASParam) == 0x000040, "Member 'BP_SASManager_C_GetSASParamData::K2Node_MakeStruct_F_SASParam' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamData, CallFunc_Array_IsValidIndex_ReturnValue_9) == 0x000064, "Member 'BP_SASManager_C_GetSASParamData::CallFunc_Array_IsValidIndex_ReturnValue_9' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASParamDataNum
// 0x0058 (0x0058 - 0x0000)
struct BP_SASManager_C_GetSASParamDataNum final
{
public:
	E_SASKindNative                               InKind;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataNum;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct F_SASParamNative>               OutData;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FF_SASParam>                    Data;                                              // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	E_SASKindNative                               Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FF_SASParam>                    Temp_struct_Variable;                              // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FF_SASParam>                    K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASManager_C_GetSASParamDataNum) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASParamDataNum");
static_assert(sizeof(BP_SASManager_C_GetSASParamDataNum) == 0x000058, "Wrong size on BP_SASManager_C_GetSASParamDataNum");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, InKind) == 0x000000, "Member 'BP_SASManager_C_GetSASParamDataNum::InKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, DataNum) == 0x000004, "Member 'BP_SASManager_C_GetSASParamDataNum::DataNum' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, OutData) == 0x000008, "Member 'BP_SASManager_C_GetSASParamDataNum::OutData' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, Data) == 0x000018, "Member 'BP_SASManager_C_GetSASParamDataNum::Data' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, Temp_byte_Variable) == 0x000028, "Member 'BP_SASManager_C_GetSASParamDataNum::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, Temp_struct_Variable) == 0x000030, "Member 'BP_SASManager_C_GetSASParamDataNum::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, K2Node_Select_Default) == 0x000040, "Member 'BP_SASManager_C_GetSASParamDataNum::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASParamDataNum, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_SASManager_C_GetSASParamDataNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsOptionNoCutin
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_IsOptionNoCutin final
{
public:
	bool                                          bNoCutin;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsOptionNoCutin) == 0x000001, "Wrong alignment on BP_SASManager_C_IsOptionNoCutin");
static_assert(sizeof(BP_SASManager_C_IsOptionNoCutin) == 0x000001, "Wrong size on BP_SASManager_C_IsOptionNoCutin");
static_assert(offsetof(BP_SASManager_C_IsOptionNoCutin, bNoCutin) == 0x000000, "Member 'BP_SASManager_C_IsOptionNoCutin::bNoCutin' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsAnyReserved
// 0x0002 (0x0002 - 0x0000)
struct BP_SASManager_C_IsAnyReserved final
{
public:
	bool                                          Reserved;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsAnyReserved) == 0x000001, "Wrong alignment on BP_SASManager_C_IsAnyReserved");
static_assert(sizeof(BP_SASManager_C_IsAnyReserved) == 0x000002, "Wrong size on BP_SASManager_C_IsAnyReserved");
static_assert(offsetof(BP_SASManager_C_IsAnyReserved, Reserved) == 0x000000, "Member 'BP_SASManager_C_IsAnyReserved::Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyReserved, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SASManager_C_IsAnyReserved::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsReserved
// 0x000C (0x000C - 0x0000)
struct BP_SASManager_C_IsReserved final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reserved;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A8[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BitFlagCheck_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsReserved) == 0x000004, "Wrong alignment on BP_SASManager_C_IsReserved");
static_assert(sizeof(BP_SASManager_C_IsReserved) == 0x00000C, "Wrong size on BP_SASManager_C_IsReserved");
static_assert(offsetof(BP_SASManager_C_IsReserved, SAS_Kind) == 0x000000, "Member 'BP_SASManager_C_IsReserved::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsReserved, Reserved) == 0x000001, "Member 'BP_SASManager_C_IsReserved::Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsReserved, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_SASManager_C_IsReserved::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsReserved, CallFunc_BitFlagCheck_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_IsReserved::CallFunc_BitFlagCheck_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsAnyCutInReserved
// 0x001C (0x001C - 0x0000)
struct BP_SASManager_C_IsAnyCutInReserved final
{
public:
	bool                                          Reserved;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     Idx;                                               // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Num;                                               // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A9[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReserved_Reserved;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42AA[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsAnyCutInReserved) == 0x000004, "Wrong alignment on BP_SASManager_C_IsAnyCutInReserved");
static_assert(sizeof(BP_SASManager_C_IsAnyCutInReserved) == 0x00001C, "Wrong size on BP_SASManager_C_IsAnyCutInReserved");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, Reserved) == 0x000000, "Member 'BP_SASManager_C_IsAnyCutInReserved::Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, RetValue) == 0x000001, "Member 'BP_SASManager_C_IsAnyCutInReserved::RetValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, Idx) == 0x000002, "Member 'BP_SASManager_C_IsAnyCutInReserved::Idx' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, Num) == 0x000003, "Member 'BP_SASManager_C_IsAnyCutInReserved::Num' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, Temp_int_Variable) == 0x000004, "Member 'BP_SASManager_C_IsAnyCutInReserved::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, Temp_bool_Variable) == 0x000010, "Member 'BP_SASManager_C_IsAnyCutInReserved::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_IsReserved_Reserved) == 0x000012, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_IsReserved_Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsAnyCutInReserved, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_SASManager_C_IsAnyCutInReserved::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsCutInReserved
// 0x0003 (0x0003 - 0x0000)
struct BP_SASManager_C_IsCutInReserved final
{
public:
	E_SASKind                                     SasKind;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reserved;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReserved_Reserved;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsCutInReserved) == 0x000001, "Wrong alignment on BP_SASManager_C_IsCutInReserved");
static_assert(sizeof(BP_SASManager_C_IsCutInReserved) == 0x000003, "Wrong size on BP_SASManager_C_IsCutInReserved");
static_assert(offsetof(BP_SASManager_C_IsCutInReserved, SasKind) == 0x000000, "Member 'BP_SASManager_C_IsCutInReserved::SasKind' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInReserved, Reserved) == 0x000001, "Member 'BP_SASManager_C_IsCutInReserved::Reserved' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_IsCutInReserved, CallFunc_IsReserved_Reserved) == 0x000002, "Member 'BP_SASManager_C_IsCutInReserved::CallFunc_IsReserved_Reserved' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.GetSASExtendTimeRate
// 0x0020 (0x0020 - 0x0000)
struct BP_SASManager_C_GetSASExtendTimeRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AB[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccessoryEffect_outValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAccessoryEffect_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_GetSASExtendTimeRate) == 0x000008, "Wrong alignment on BP_SASManager_C_GetSASExtendTimeRate");
static_assert(sizeof(BP_SASManager_C_GetSASExtendTimeRate) == 0x000020, "Wrong size on BP_SASManager_C_GetSASExtendTimeRate");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, Rate) == 0x000000, "Member 'BP_SASManager_C_GetSASExtendTimeRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, LRate) == 0x000004, "Member 'BP_SASManager_C_GetSASExtendTimeRate::LRate' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_SASManager_C_GetSASExtendTimeRate::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000010, "Member 'BP_SASManager_C_GetSASExtendTimeRate::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, CallFunc_GetAccessoryEffect_outValue) == 0x000014, "Member 'BP_SASManager_C_GetSASExtendTimeRate::CallFunc_GetAccessoryEffect_outValue' has a wrong offset!");
static_assert(offsetof(BP_SASManager_C_GetSASExtendTimeRate, CallFunc_GetAccessoryEffect_ReturnValue) == 0x000018, "Member 'BP_SASManager_C_GetSASExtendTimeRate::CallFunc_GetAccessoryEffect_ReturnValue' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_IsAcceleratorValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on BP_SASManager_C_IsAcceleratorValid");
static_assert(sizeof(BP_SASManager_C_IsAcceleratorValid) == 0x000001, "Wrong size on BP_SASManager_C_IsAcceleratorValid");
static_assert(offsetof(BP_SASManager_C_IsAcceleratorValid, Valid) == 0x000000, "Member 'BP_SASManager_C_IsAcceleratorValid::Valid' has a wrong offset!");

// Function BP_SASManager.BP_SASManager_C.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct BP_SASManager_C_IsAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASManager_C_IsAccelerating) == 0x000001, "Wrong alignment on BP_SASManager_C_IsAccelerating");
static_assert(sizeof(BP_SASManager_C_IsAccelerating) == 0x000001, "Wrong size on BP_SASManager_C_IsAccelerating");
static_assert(offsetof(BP_SASManager_C_IsAccelerating, Accelerating) == 0x000000, "Member 'BP_SASManager_C_IsAccelerating::Accelerating' has a wrong offset!");

}

