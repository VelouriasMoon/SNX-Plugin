#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_MoveToPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BTT_ch_Base_MoveTo_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ch_MoveToPlayer.BTT_ch_MoveToPlayer_C
// 0x0038 (0x01B8 - 0x0180)
class UBTT_ch_MoveToPlayer_C final : public UBTT_ch_Base_MoveTo_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTT_ch_MoveToPlayer_C;              // 0x0180(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bSprint;                                           // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62D5[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StopPlayerDistanceZ;                               // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StopPlayerDistance;                                // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunning;                                          // 0x0194(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62D6[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WALK_TO_RUN_DIST;                                  // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RUN_TO_WALK_DIST;                                  // 0x019C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RUN_SPEED_RATE_MIN;                                // 0x01A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RunSpeedRate;                                      // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseWalkSpeedScale;                                // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RUN_SPEED_RATE_DIST_MAX;                           // 0x01AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RUN_SPEED_RATE_DIST_MIN;                           // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_ch_MoveToPlayer(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void UpdateWalkSpeed(class APawn* ControlledPawn);
	void Exit(class AAIController* OwnerController, class APawn* ControlledPawn);
	void InitializeWalkOrRun(class APawn* ControlledPawn);
	void UpdateWalkOrRun(class APawn* ControlledPawn);

	void CalcRunSpeedRate(float CurrentDistSq, float MinDistSq, float MaxDistSq, float* SpeedScale) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_ch_MoveToPlayer_C">();
	}
	static class UBTT_ch_MoveToPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ch_MoveToPlayer_C>();
	}
};
static_assert(alignof(UBTT_ch_MoveToPlayer_C) == 0x000008, "Wrong alignment on UBTT_ch_MoveToPlayer_C");
static_assert(sizeof(UBTT_ch_MoveToPlayer_C) == 0x0001B8, "Wrong size on UBTT_ch_MoveToPlayer_C");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, UberGraphFrame_BTT_ch_MoveToPlayer_C) == 0x000180, "Member 'UBTT_ch_MoveToPlayer_C::UberGraphFrame_BTT_ch_MoveToPlayer_C' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, bSprint) == 0x000188, "Member 'UBTT_ch_MoveToPlayer_C::bSprint' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, StopPlayerDistanceZ) == 0x00018C, "Member 'UBTT_ch_MoveToPlayer_C::StopPlayerDistanceZ' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, StopPlayerDistance) == 0x000190, "Member 'UBTT_ch_MoveToPlayer_C::StopPlayerDistance' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, bRunning) == 0x000194, "Member 'UBTT_ch_MoveToPlayer_C::bRunning' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, WALK_TO_RUN_DIST) == 0x000198, "Member 'UBTT_ch_MoveToPlayer_C::WALK_TO_RUN_DIST' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, RUN_TO_WALK_DIST) == 0x00019C, "Member 'UBTT_ch_MoveToPlayer_C::RUN_TO_WALK_DIST' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, RUN_SPEED_RATE_MIN) == 0x0001A0, "Member 'UBTT_ch_MoveToPlayer_C::RUN_SPEED_RATE_MIN' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, RunSpeedRate) == 0x0001A4, "Member 'UBTT_ch_MoveToPlayer_C::RunSpeedRate' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, BaseWalkSpeedScale) == 0x0001A8, "Member 'UBTT_ch_MoveToPlayer_C::BaseWalkSpeedScale' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, RUN_SPEED_RATE_DIST_MAX) == 0x0001AC, "Member 'UBTT_ch_MoveToPlayer_C::RUN_SPEED_RATE_DIST_MAX' has a wrong offset!");
static_assert(offsetof(UBTT_ch_MoveToPlayer_C, RUN_SPEED_RATE_DIST_MIN) == 0x0001B0, "Member 'UBTT_ch_MoveToPlayer_C::RUN_SPEED_RATE_DIST_MIN' has a wrong offset!");

}

