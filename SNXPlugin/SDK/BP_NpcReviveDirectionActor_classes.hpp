#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NpcReviveDirectionActor

#include "Basic.hpp"

#include "EPlayerReviveCableStep_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NpcReviveDirectionActor.BP_NpcReviveDirectionActor_C
// 0x00C8 (0x02F8 - 0x0230)
class ABP_NpcReviveDirectionActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReviveTimeLine_CurveEnergyNPC_0FF3A189444B3AA21EF948BD4E273C1E; // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReviveTimeLine_CableEnergy_0FF3A189444B3AA21EF948BD4E273C1E; // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ReviveTimeLine__Direction_0FF3A189444B3AA21EF948BD4E273C1E; // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92C8[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ReviveTimeLine;                                    // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      RevivePlayer;                                      // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerReviveCableStep                        ReviveCableStep;                                   // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92C9[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bExecReviveDirection;                              // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBeginCameraDIrection;                             // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSlow;                                             // 0x0282(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92CA[0x1];                                     // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraOffsetRate;                                  // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CameraTargetSocketName;                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraTargetHeightOffset;                          // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraBeginLerpTime;                               // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   CameraBeginEaseFunc;                               // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92CB[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraBeginEaseBlendExp;                           // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraEndLerpTime;                                 // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   CameraEndEaseFunc;                                 // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92CC[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraEndEaseBlendExp;                             // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraFov;                                         // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraFovLerpTime;                                 // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   CameraFovEaseFunc;                                 // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92CD[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraFovEaseBlendExp;                             // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlowTimeDilation;                                  // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StoreRootOffset;                                   // 0x02C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReticleParticleScale;                              // 0x02CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URSParticleSystemComponentBase*> ReticleParticleHandle;                             // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         ReticleParticleDelayTime;                          // 0x02E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraFovTargetHeightOffset;                       // 0x02EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromNpc;                                          // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_NpcReviveDirectionActor(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void EndTimeLine();
	void BeginTimeLine();
	void ReviveTimeLine__CableEvent__EventFunc();
	void ReviveTimeLine__PostProcessEvent__EventFunc();
	void ReviveTimeLine__ReviveEvent__EventFunc();
	void ReviveTimeLine__EffectEvent__EventFunc();
	void ReviveTimeLine__CameraEvent__EventFunc();
	void ReviveTimeLine__SlowEvent__EventFunc();
	void ReviveTimeLine__MotionEvent__EventFunc();
	void ReviveTimeLine__CablePhysicsEvent__EventFunc();
	void ReviveTimeLine__CameraShakeEvent__EventFunc();
	void ReviveTimeLine__ControllerVibrationEvent__EventFunc();
	void ReviveTimeLine__UpdateFunc();
	void ReviveTimeLine__FinishedFunc();
	void BeginDirection(class ARSBattlePlayer_C* InRevivePlayer, bool bInFromNpc);
	void EndDirection();
	void FinishRevive(bool bCableOff);
	void ExecCableEvent();
	void UpdateTimeDilation();
	void BeginCameraDirection();
	void EndCameraDirection();
	void SetSlow(bool bInSlow);
	void BeginReviveCamera(class ARSBattlePlayer_C* Player, class ARSBattlePlayer_C* TargetPlayer);
	void EndReviveCamera(class ARSBattlePlayer_C* Player);
	void SpawnParticle();
	void SpawnReticleParticle(class ARSBattlePlayer_C* InRevivePlayer);
	void EndReticleParticle();
	void SetCableEnergy(const struct FVector& Energy);

	void IsFinishRevive(bool* bFinish) const;
	void CalcRootOffset(class ARSBattlePlayer_C* InHelpPlayer, class ARSBattlePlayer_C* InRevivePlayer, struct FVector* Offset) const;
	void GetReticleParticleDelay(float* DelayTime) const;
	void IsExecRevive(bool* bExec) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NpcReviveDirectionActor_C">();
	}
	static class ABP_NpcReviveDirectionActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NpcReviveDirectionActor_C>();
	}
};
static_assert(alignof(ABP_NpcReviveDirectionActor_C) == 0x000008, "Wrong alignment on ABP_NpcReviveDirectionActor_C");
static_assert(sizeof(ABP_NpcReviveDirectionActor_C) == 0x0002F8, "Wrong size on ABP_NpcReviveDirectionActor_C");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, UberGraphFrame) == 0x000230, "Member 'ABP_NpcReviveDirectionActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_NpcReviveDirectionActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReviveTimeLine_CurveEnergyNPC_0FF3A189444B3AA21EF948BD4E273C1E) == 0x000240, "Member 'ABP_NpcReviveDirectionActor_C::ReviveTimeLine_CurveEnergyNPC_0FF3A189444B3AA21EF948BD4E273C1E' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReviveTimeLine_CableEnergy_0FF3A189444B3AA21EF948BD4E273C1E) == 0x00024C, "Member 'ABP_NpcReviveDirectionActor_C::ReviveTimeLine_CableEnergy_0FF3A189444B3AA21EF948BD4E273C1E' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReviveTimeLine__Direction_0FF3A189444B3AA21EF948BD4E273C1E) == 0x000258, "Member 'ABP_NpcReviveDirectionActor_C::ReviveTimeLine__Direction_0FF3A189444B3AA21EF948BD4E273C1E' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReviveTimeLine) == 0x000260, "Member 'ABP_NpcReviveDirectionActor_C::ReviveTimeLine' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, RevivePlayer) == 0x000268, "Member 'ABP_NpcReviveDirectionActor_C::RevivePlayer' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReviveCableStep) == 0x000270, "Member 'ABP_NpcReviveDirectionActor_C::ReviveCableStep' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, PlayerManager) == 0x000278, "Member 'ABP_NpcReviveDirectionActor_C::PlayerManager' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, bExecReviveDirection) == 0x000280, "Member 'ABP_NpcReviveDirectionActor_C::bExecReviveDirection' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, bBeginCameraDIrection) == 0x000281, "Member 'ABP_NpcReviveDirectionActor_C::bBeginCameraDIrection' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, bSlow) == 0x000282, "Member 'ABP_NpcReviveDirectionActor_C::bSlow' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraOffsetRate) == 0x000284, "Member 'ABP_NpcReviveDirectionActor_C::CameraOffsetRate' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraTargetSocketName) == 0x000288, "Member 'ABP_NpcReviveDirectionActor_C::CameraTargetSocketName' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraTargetHeightOffset) == 0x000290, "Member 'ABP_NpcReviveDirectionActor_C::CameraTargetHeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraBeginLerpTime) == 0x000294, "Member 'ABP_NpcReviveDirectionActor_C::CameraBeginLerpTime' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraBeginEaseFunc) == 0x000298, "Member 'ABP_NpcReviveDirectionActor_C::CameraBeginEaseFunc' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraBeginEaseBlendExp) == 0x00029C, "Member 'ABP_NpcReviveDirectionActor_C::CameraBeginEaseBlendExp' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraEndLerpTime) == 0x0002A0, "Member 'ABP_NpcReviveDirectionActor_C::CameraEndLerpTime' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraEndEaseFunc) == 0x0002A4, "Member 'ABP_NpcReviveDirectionActor_C::CameraEndEaseFunc' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraEndEaseBlendExp) == 0x0002A8, "Member 'ABP_NpcReviveDirectionActor_C::CameraEndEaseBlendExp' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraFov) == 0x0002AC, "Member 'ABP_NpcReviveDirectionActor_C::CameraFov' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraFovLerpTime) == 0x0002B0, "Member 'ABP_NpcReviveDirectionActor_C::CameraFovLerpTime' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraFovEaseFunc) == 0x0002B4, "Member 'ABP_NpcReviveDirectionActor_C::CameraFovEaseFunc' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraFovEaseBlendExp) == 0x0002B8, "Member 'ABP_NpcReviveDirectionActor_C::CameraFovEaseBlendExp' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, SlowTimeDilation) == 0x0002BC, "Member 'ABP_NpcReviveDirectionActor_C::SlowTimeDilation' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, StoreRootOffset) == 0x0002C0, "Member 'ABP_NpcReviveDirectionActor_C::StoreRootOffset' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReticleParticleScale) == 0x0002CC, "Member 'ABP_NpcReviveDirectionActor_C::ReticleParticleScale' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReticleParticleHandle) == 0x0002D8, "Member 'ABP_NpcReviveDirectionActor_C::ReticleParticleHandle' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, ReticleParticleDelayTime) == 0x0002E8, "Member 'ABP_NpcReviveDirectionActor_C::ReticleParticleDelayTime' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, CameraFovTargetHeightOffset) == 0x0002EC, "Member 'ABP_NpcReviveDirectionActor_C::CameraFovTargetHeightOffset' has a wrong offset!");
static_assert(offsetof(ABP_NpcReviveDirectionActor_C, bFromNpc) == 0x0002F0, "Member 'ABP_NpcReviveDirectionActor_C::bFromNpc' has a wrong offset!");

}

