#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UI3DBGBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_UI3DBGBase.BP_UI3DBGBase_C
// 0x00B0 (0x02E0 - 0x0230)
class ABP_UI3DBGBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         BGLevelName;                                       // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ULevelStreamingDynamic*>         BGLevel;                                           // 0x0258(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         LoadLevelCounter;                                  // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoadEnd;                                         // 0x026C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WaitStart;                                         // 0x026D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B7[0x2];                                     // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RestoreViewTarget;                                 // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraAngle;                                       // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIMain3DBGCameraSetting               CameraParameter;                                   // 0x027C(0x0020)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor)
	struct FVector                                RestoreCelLookLightDirection;                      // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CelLookLightDirection;                             // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InPlay;                                            // 0x02B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B8[0x3];                                     // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ED_OnShown;                                        // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UseLevelCamera;                                    // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42B9[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACameraActor*                           LevelCamera;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          WaitLevelVisible;                                  // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ED_OnShown__DelegateSignature();
	void ExecuteUbergraph_BP_UI3DBGBase(int32 EntryPoint);
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void Start();
	void End();
	void PrivateStartVisible();
	void SetCameraParameter(const struct FUIMain3DBGCameraSetting& CameraSetting);
	void PrivateTickBGCamera(float DeltaSeconds);
	void PrivateBGLevelLoadEnd();
	void PrivateLevelLoad();
	void EventLevelShown();
	void SetCameraAngle(float Angle);
	void IsValidUseLevelCamera(bool* Valid);
	void SetLevelRenderLayer(uint8 RenderLayer);
	void UpdateCheckLevelVisible();
	void IsWaitStart(bool* Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_UI3DBGBase_C">();
	}
	static class ABP_UI3DBGBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_UI3DBGBase_C>();
	}
};
static_assert(alignof(ABP_UI3DBGBase_C) == 0x000008, "Wrong alignment on ABP_UI3DBGBase_C");
static_assert(sizeof(ABP_UI3DBGBase_C) == 0x0002E0, "Wrong size on ABP_UI3DBGBase_C");
static_assert(offsetof(ABP_UI3DBGBase_C, UberGraphFrame) == 0x000230, "Member 'ABP_UI3DBGBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, Camera) == 0x000238, "Member 'ABP_UI3DBGBase_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_UI3DBGBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, BGLevelName) == 0x000248, "Member 'ABP_UI3DBGBase_C::BGLevelName' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, BGLevel) == 0x000258, "Member 'ABP_UI3DBGBase_C::BGLevel' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, LoadLevelCounter) == 0x000268, "Member 'ABP_UI3DBGBase_C::LoadLevelCounter' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, IsLoadEnd) == 0x00026C, "Member 'ABP_UI3DBGBase_C::IsLoadEnd' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, WaitStart) == 0x00026D, "Member 'ABP_UI3DBGBase_C::WaitStart' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, RestoreViewTarget) == 0x000270, "Member 'ABP_UI3DBGBase_C::RestoreViewTarget' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, CameraAngle) == 0x000278, "Member 'ABP_UI3DBGBase_C::CameraAngle' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, CameraParameter) == 0x00027C, "Member 'ABP_UI3DBGBase_C::CameraParameter' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, RestoreCelLookLightDirection) == 0x00029C, "Member 'ABP_UI3DBGBase_C::RestoreCelLookLightDirection' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, CelLookLightDirection) == 0x0002A8, "Member 'ABP_UI3DBGBase_C::CelLookLightDirection' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, InPlay) == 0x0002B4, "Member 'ABP_UI3DBGBase_C::InPlay' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, ED_OnShown) == 0x0002B8, "Member 'ABP_UI3DBGBase_C::ED_OnShown' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, UseLevelCamera) == 0x0002C8, "Member 'ABP_UI3DBGBase_C::UseLevelCamera' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, LevelCamera) == 0x0002D0, "Member 'ABP_UI3DBGBase_C::LevelCamera' has a wrong offset!");
static_assert(offsetof(ABP_UI3DBGBase_C, WaitLevelVisible) == 0x0002D8, "Member 'ABP_UI3DBGBase_C::WaitLevelVisible' has a wrong offset!");

}

