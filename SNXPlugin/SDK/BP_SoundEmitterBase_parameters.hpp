#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SoundEmitterBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.ExecuteUbergraph_BP_SoundEmitterBase
// 0x0068 (0x0068 - 0x0000)
struct BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Update_Dummy;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A13[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveSoundLocation_IsIn;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A14[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventManager*                          K2Node_DynamicCast_AsEvent_Manager;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopLoopSe_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A15[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase");
static_assert(sizeof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase) == 0x000068, "Wrong size on BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, EntryPoint) == 0x000000, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Update_Dummy) == 0x00000C, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Update_Dummy' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, K2Node_Event_EndPlayReason) == 0x00000D, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_IsValid_ReturnValue) == 0x00000E, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_GetSoundManager_SoundManager) == 0x000028, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_MoveSoundLocation_IsIn) == 0x00003C, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_MoveSoundLocation_IsIn' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_GetEventManager_ReturnValue) == 0x000040, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, K2Node_DynamicCast_AsEvent_Manager) == 0x000048, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::K2Node_DynamicCast_AsEvent_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_StopLoopSe_ReturnValue) == 0x000052, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_StopLoopSe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_SoundEmitterBase_C_ExecuteUbergraph_BP_SoundEmitterBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundEmitterBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SoundEmitterBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_SoundEmitterBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SoundEmitterBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_SoundEmitterBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SoundEmitterBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundEmitterBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SoundEmitterBase_C_ReceiveTick");
static_assert(sizeof(BP_SoundEmitterBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_SoundEmitterBase_C_ReceiveTick");
static_assert(offsetof(BP_SoundEmitterBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SoundEmitterBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.Update
// 0x0120 (0x0120 - 0x0000)
struct BP_SoundEmitterBase_C_Update final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A16[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URSAtomComponentBase*>           TmpComponents;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIsEvent_IsEvent;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A17[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_UpdatePlayerLocation_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopLoopSe_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A18[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A19[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayLoopSe_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TickIntervalUpdate_IntervalSeconds;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveSoundLocation_IsIn;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1C[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item_2;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1D[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0088(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1E[0x3];                                     // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_Update) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_Update");
static_assert(sizeof(BP_SoundEmitterBase_C_Update) == 0x000120, "Wrong size on BP_SoundEmitterBase_C_Update");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Dummy) == 0x000000, "Member 'BP_SoundEmitterBase_C_Update::Dummy' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, TmpComponents) == 0x000008, "Member 'BP_SoundEmitterBase_C_Update::TmpComponents' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_CheckIsEvent_IsEvent) == 0x00001C, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_CheckIsEvent_IsEvent' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_UpdatePlayerLocation_ReturnValue) == 0x000020, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_UpdatePlayerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_StopLoopSe_ReturnValue) == 0x00002C, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_StopLoopSe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_PlayLoopSe_ReturnValue) == 0x000068, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_PlayLoopSe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_TickIntervalUpdate_IntervalSeconds) == 0x00006C, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_TickIntervalUpdate_IntervalSeconds' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_MoveSoundLocation_IsIn) == 0x000070, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_MoveSoundLocation_IsIn' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000071, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Get_Item_2) == 0x000078, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Array_Length_ReturnValue_2) == 0x000080, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Less_IntInt_ReturnValue_1) == 0x000085, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000088, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, Temp_int_Loop_Counter_Variable_2) == 0x000110, "Member 'BP_SoundEmitterBase_C_Update::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Less_IntInt_ReturnValue_2) == 0x000114, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_Update, CallFunc_Add_IntInt_ReturnValue_2) == 0x000118, "Member 'BP_SoundEmitterBase_C_Update::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.MoveSoundLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundEmitterBase_C_MoveSoundLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsIn;                                              // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_MoveSoundLocation) == 0x000004, "Wrong alignment on BP_SoundEmitterBase_C_MoveSoundLocation");
static_assert(sizeof(BP_SoundEmitterBase_C_MoveSoundLocation) == 0x000010, "Wrong size on BP_SoundEmitterBase_C_MoveSoundLocation");
static_assert(offsetof(BP_SoundEmitterBase_C_MoveSoundLocation, TargetLocation) == 0x000000, "Member 'BP_SoundEmitterBase_C_MoveSoundLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_MoveSoundLocation, IsIn) == 0x00000C, "Member 'BP_SoundEmitterBase_C_MoveSoundLocation::IsIn' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.TickIntervalUpdate
// 0x003C (0x003C - 0x0000)
struct BP_SoundEmitterBase_C_TickIntervalUpdate final
{
public:
	struct FVector                                Param_PlayerLocation;                              // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         IntervalSeconds;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToTargetLength;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRadius_Radius;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_TickIntervalUpdate) == 0x000004, "Wrong alignment on BP_SoundEmitterBase_C_TickIntervalUpdate");
static_assert(sizeof(BP_SoundEmitterBase_C_TickIntervalUpdate) == 0x00003C, "Wrong size on BP_SoundEmitterBase_C_TickIntervalUpdate");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, Param_PlayerLocation) == 0x000000, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::Param_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, IntervalSeconds) == 0x00000C, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::IntervalSeconds' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, ToTargetLength) == 0x000010, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::ToTargetLength' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_GetRadius_Radius) == 0x000024, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_GetRadius_Radius' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_VSize_ReturnValue) == 0x000034, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_TickIntervalUpdate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_SoundEmitterBase_C_TickIntervalUpdate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.SetVolume
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundEmitterBase_C_SetVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A20[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_SetVolume) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_SetVolume");
static_assert(sizeof(BP_SoundEmitterBase_C_SetVolume) == 0x000020, "Wrong size on BP_SoundEmitterBase_C_SetVolume");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, Volume) == 0x000000, "Member 'BP_SoundEmitterBase_C_SetVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundEmitterBase_C_SetVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_SoundEmitterBase_C_SetVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SoundEmitterBase_C_SetVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SoundEmitterBase_C_SetVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundEmitterBase_C_SetVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_SetVolume, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SoundEmitterBase_C_SetVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.PlaySoundEmitter
// 0x0050 (0x0050 - 0x0000)
struct BP_SoundEmitterBase_C_PlaySoundEmitter final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A21[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A22[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A23[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_PlaySoundEmitter) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_PlaySoundEmitter");
static_assert(sizeof(BP_SoundEmitterBase_C_PlaySoundEmitter) == 0x000050, "Wrong size on BP_SoundEmitterBase_C_PlaySoundEmitter");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, Volume) == 0x000000, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_PlayVoice_ReturnValue) == 0x000030, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Contains_ReturnValue) == 0x00003D, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000040, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_PlaySoundEmitter, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_SoundEmitterBase_C_PlaySoundEmitter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.StopSoundEmitter
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundEmitterBase_C_StopSoundEmitter final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A24[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_StopSoundEmitter) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_StopSoundEmitter");
static_assert(sizeof(BP_SoundEmitterBase_C_StopSoundEmitter) == 0x000028, "Wrong size on BP_SoundEmitterBase_C_StopSoundEmitter");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, FadeTime) == 0x000000, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_StopSoundEmitter, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SoundEmitterBase_C_StopSoundEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.UpdatePlayerLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_SoundEmitterBase_C_UpdatePlayerLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A25[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_UpdatePlayerLocation) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_UpdatePlayerLocation");
static_assert(sizeof(BP_SoundEmitterBase_C_UpdatePlayerLocation) == 0x000030, "Wrong size on BP_SoundEmitterBase_C_UpdatePlayerLocation");
static_assert(offsetof(BP_SoundEmitterBase_C_UpdatePlayerLocation, ReturnValue) == 0x000000, "Member 'BP_SoundEmitterBase_C_UpdatePlayerLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_UpdatePlayerLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_SoundEmitterBase_C_UpdatePlayerLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_UpdatePlayerLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_SoundEmitterBase_C_UpdatePlayerLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_UpdatePlayerLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_SoundEmitterBase_C_UpdatePlayerLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_UpdatePlayerLocation, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_SoundEmitterBase_C_UpdatePlayerLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.CheckIsEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundEmitterBase_C_CheckIsEvent final
{
public:
	bool                                          IsEvent;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsIgnore;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A26[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ProgressIDList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsCutSceneEventNative_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundEmitterBase_C_CheckIsEvent) == 0x000008, "Wrong alignment on BP_SoundEmitterBase_C_CheckIsEvent");
static_assert(sizeof(BP_SoundEmitterBase_C_CheckIsEvent) == 0x000020, "Wrong size on BP_SoundEmitterBase_C_CheckIsEvent");
static_assert(offsetof(BP_SoundEmitterBase_C_CheckIsEvent, IsEvent) == 0x000000, "Member 'BP_SoundEmitterBase_C_CheckIsEvent::IsEvent' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_CheckIsEvent, IsIgnore) == 0x000001, "Member 'BP_SoundEmitterBase_C_CheckIsEvent::IsIgnore' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_CheckIsEvent, ProgressIDList) == 0x000008, "Member 'BP_SoundEmitterBase_C_CheckIsEvent::ProgressIDList' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_CheckIsEvent, CallFunc_IsCutSceneEventNative_ReturnValue) == 0x000018, "Member 'BP_SoundEmitterBase_C_CheckIsEvent::CallFunc_IsCutSceneEventNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_CheckIsEvent, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_SoundEmitterBase_C_CheckIsEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.GetRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundEmitterBase_C_GetRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_GetRadius) == 0x000004, "Wrong alignment on BP_SoundEmitterBase_C_GetRadius");
static_assert(sizeof(BP_SoundEmitterBase_C_GetRadius) == 0x000004, "Wrong size on BP_SoundEmitterBase_C_GetRadius");
static_assert(offsetof(BP_SoundEmitterBase_C_GetRadius, Radius) == 0x000000, "Member 'BP_SoundEmitterBase_C_GetRadius::Radius' has a wrong offset!");

// Function BP_SoundEmitterBase.BP_SoundEmitterBase_C.GetCapsuleCalcNormal
// 0x0080 (0x0080 - 0x0000)
struct BP_SoundEmitterBase_C_GetCapsuleCalcNormal final
{
public:
	struct FVector                                CapsuleLineNormal;                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CapsuleLine;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CapsuleLineStartLocation;                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                H;                                                 // 0x0034(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LH;                                                // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal) == 0x000004, "Wrong alignment on BP_SoundEmitterBase_C_GetCapsuleCalcNormal");
static_assert(sizeof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal) == 0x000080, "Wrong size on BP_SoundEmitterBase_C_GetCapsuleCalcNormal");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CapsuleLineNormal) == 0x000000, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CapsuleLineNormal' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CapsuleLine) == 0x00000C, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CapsuleLine' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CapsuleLineStartLocation) == 0x000018, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CapsuleLineStartLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, TargetLocation) == 0x000024, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, Rate) == 0x000030, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::Rate' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, H) == 0x000034, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::H' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, LH) == 0x000040, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::LH' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, LRate) == 0x00004C, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::LRate' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_Dot_VectorVector_ReturnValue) == 0x000060, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundEmitterBase_C_GetCapsuleCalcNormal, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000074, "Member 'BP_SoundEmitterBase_C_GetCapsuleCalcNormal::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");

}

