#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_ENpcInterface

#include "Basic.hpp"

#include "BPI_ENpcInterface_classes.hpp"
#include "BPI_ENpcInterface_parameters.hpp"


namespace SDK
{

// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetBarrierComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EnemyBarrierComponent_C*      Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetBarrierComponent(class UBP_EnemyBarrierComponent_C** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetBarrierComponent");

	Params::BPI_ENpcInterface_C_GetBarrierComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetEnpcComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ENpcComponent_C*              Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetEnpcComponent(class UBP_ENpcComponent_C** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetEnpcComponent");

	Params::BPI_ENpcInterface_C_GetEnpcComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetEnpcSequencerComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_ENPCSequencerComponent_C*     Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetEnpcSequencerComponent(class UBP_ENPCSequencerComponent_C** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetEnpcSequencerComponent");

	Params::BPI_ENpcInterface_C_GetEnpcSequencerComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_GetPartner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PartnerActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_GetPartner(class AActor** PartnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_GetPartner");

	Params::BPI_ENpcInterface_C_Em8000_GetPartner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PartnerActor != nullptr)
		*PartnerActor = Parms.PartnerActor;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_BulletAttackEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBulletType                             BulletType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_BulletAttackEnd(EBulletType BulletType, bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_BulletAttackEnd");

	Params::BPI_ENpcInterface_C_Em8200_BulletAttackEnd Parms{};

	Parms.BulletType = BulletType;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartTelepoMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartTelepoMove(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartTelepoMove");

	Params::BPI_ENpcInterface_C_Em8200_StartTelepoMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EndTelepoMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EndTelepoMove(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EndTelepoMove");

	Params::BPI_ENpcInterface_C_Em8200_EndTelepoMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CalcTelepoMoveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETelepoMoveType_em8200                  TelepoType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TelepoMoveLocation                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_CalcTelepoMoveLocation(ETelepoMoveType_em8200 TelepoType, struct FVector* TelepoMoveLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CalcTelepoMoveLocation");

	Params::BPI_ENpcInterface_C_Em8200_CalcTelepoMoveLocation Parms{};

	Parms.TelepoType = TelepoType;

	UObject::ProcessEvent(Func, &Parms);

	if (TelepoMoveLocation != nullptr)
		*TelepoMoveLocation = std::move(Parms.TelepoMoveLocation);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_GetTelepoMoveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutputTelepoMoveLocation                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_GetTelepoMoveLocation(struct FVector* OutputTelepoMoveLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_GetTelepoMoveLocation");

	Params::BPI_ENpcInterface_C_Em8200_GetTelepoMoveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputTelepoMoveLocation != nullptr)
		*OutputTelepoMoveLocation = std::move(Parms.OutputTelepoMoveLocation);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetTelepoMoveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InputTelepoMoveLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetTelepoMoveLocation(const struct FVector& InputTelepoMoveLocation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetTelepoMoveLocation");

	Params::BPI_ENpcInterface_C_Em8200_SetTelepoMoveLocation Parms{};

	Parms.InputTelepoMoveLocation = std::move(InputTelepoMoveLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CopyActorPlayMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_CopyActorPlayMontage(int32 Param_Index, class UAnimMontage* Montage, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CopyActorPlayMontage");

	Params::BPI_ENpcInterface_C_Em8200_CopyActorPlayMontage Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CopyActorUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NextState                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_CopyActorUpdate(int32 Param_Index, float DeltaSec, int32* NextState, bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CopyActorUpdate");

	Params::BPI_ENpcInterface_C_Em8200_CopyActorUpdate Parms{};

	Parms.Param_Index = Param_Index;
	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (NextState != nullptr)
		*NextState = Parms.NextState;

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_UpdateMoveAssultAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewParam1                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewParam2                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_UpdateMoveAssultAttack(int32 NewParam, int32 NewParam1, int32 NewParam2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_UpdateMoveAssultAttack");

	Params::BPI_ENpcInterface_C_Em8200_UpdateMoveAssultAttack Parms{};

	Parms.NewParam = NewParam;
	Parms.NewParam1 = NewParam1;
	Parms.NewParam2 = NewParam2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CopyActorActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_CopyActorActive(bool bActive, int32 Param_Index, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CopyActorActive");

	Params::BPI_ENpcInterface_C_Em8200_CopyActorActive Parms{};

	Parms.bActive = bActive;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_GetCopyActorAssultTotalTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TotalTime                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_GetCopyActorAssultTotalTime(int32 Param_Index, float* TotalTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_GetCopyActorAssultTotalTime");

	Params::BPI_ENpcInterface_C_Em8200_GetCopyActorAssultTotalTime Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalTime != nullptr)
		*TotalTime = Parms.TotalTime;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_GetCopyActorActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_GetCopyActorActive(int32 Param_Index, bool* bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_GetCopyActorActive");

	Params::BPI_ENpcInterface_C_Em8200_GetCopyActorActive Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetCopyActorLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetCopyActorLocation(int32 Param_Index, const struct FVector& NewLocation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetCopyActorLocation");

	Params::BPI_ENpcInterface_C_Em8200_SetCopyActorLocation Parms{};

	Parms.Param_Index = Param_Index;
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetCopyActorRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewRotation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetCopyActorRotation(int32 Param_Index, const struct FRotator& NewRotation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetCopyActorRotation");

	Params::BPI_ENpcInterface_C_Em8200_SetCopyActorRotation Parms{};

	Parms.Param_Index = Param_Index;
	Parms.NewRotation = std::move(NewRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_GetTargetableCopyActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             RSBattleCharacter                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_GetTargetableCopyActor(int32 Param_Index, class ARSBattleCharacter_C** RSBattleCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_GetTargetableCopyActor");

	Params::BPI_ENpcInterface_C_Em8200_GetTargetableCopyActor Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (RSBattleCharacter != nullptr)
		*RSBattleCharacter = Parms.RSBattleCharacter;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StoreHomingElecStartEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StoreHomingElecStartEnd(const struct FVector& StartLocation, const struct FVector& EndLocation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StoreHomingElecStartEnd");

	Params::BPI_ENpcInterface_C_Em8200_StoreHomingElecStartEnd Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartSeeThrough
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartSeeThrough(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartSeeThrough");

	Params::BPI_ENpcInterface_C_Em8200_StartSeeThrough Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsSpStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsSpStart(bool* bSpStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsSpStart");

	Params::BPI_ENpcInterface_C_IsSpStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSpStart != nullptr)
		*bSpStart = Parms.bSpStart;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.SetSpStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpStart                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::SetSpStart(bool bSpStart, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "SetSpStart");

	Params::BPI_ENpcInterface_C_SetSpStart Parms{};

	Parms.bSpStart = bSpStart;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_PillarIceExtendTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ExtendTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_PillarIceExtendTime(float ExtendTime, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_PillarIceExtendTime");

	Params::BPI_ENpcInterface_C_Em8200_PillarIceExtendTime Parms{};

	Parms.ExtendTime = ExtendTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetSpShockWaveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetSpShockWaveLocation(const struct FVector& Location, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetSpShockWaveLocation");

	Params::BPI_ENpcInterface_C_Em8200_SetSpShockWaveLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8210_ApplyCommonBranch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8210_ApplyCommonBranch(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8210_ApplyCommonBranch");

	Params::BPI_ENpcInterface_C_Em8210_ApplyCommonBranch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_IsAttackDriveMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_IsAttackDriveMode(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_IsAttackDriveMode");

	Params::BPI_ENpcInterface_C_Em8000_IsAttackDriveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_IsAttackBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_IsAttackBrainField(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_IsAttackBrainField");

	Params::BPI_ENpcInterface_C_Em8000_IsAttackBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_FireBomb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Parent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHard                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_FireBomb(class AActor* Parent, bool bHard, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_FireBomb");

	Params::BPI_ENpcInterface_C_Em8000_FireBomb Parms{};

	Parms.Parent = Parent;
	Parms.bHard = bHard;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_SetBattleProcess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Process                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_SetBattleProcess(int32 Process, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_SetBattleProcess");

	Params::BPI_ENpcInterface_C_Em8000_SetBattleProcess Parms{};

	Parms.Process = Process;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.CheckAbleInterceptInReactionChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAbleIntercept                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::CheckAbleInterceptInReactionChance(bool* bAbleIntercept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "CheckAbleInterceptInReactionChance");

	Params::BPI_ENpcInterface_C_CheckAbleInterceptInReactionChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAbleIntercept != nullptr)
		*bAbleIntercept = Parms.bAbleIntercept;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_SetAutoAimRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewRate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_SetAutoAimRate(float NewRate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_SetAutoAimRate");

	Params::BPI_ENpcInterface_C_Em8010_SetAutoAimRate Parms{};

	Parms.NewRate = NewRate;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Ch0500_StartSeeThrough
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Ch0500_StartSeeThrough(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Ch0500_StartSeeThrough");

	Params::BPI_ENpcInterface_C_Ch0500_StartSeeThrough Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_SetTriggerLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_SetTriggerLocation(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_SetTriggerLocation");

	Params::BPI_ENpcInterface_C_Em8000_SetTriggerLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.SetStealthReactionInterval
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::SetStealthReactionInterval(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "SetStealthReactionInterval");

	Params::BPI_ENpcInterface_C_SetStealthReactionInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_SelectChakramCombo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ComboType                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Np1100_SelectChakramCombo(class FString* ComboType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_SelectChakramCombo");

	Params::BPI_ENpcInterface_C_Np1100_SelectChakramCombo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ComboType != nullptr)
		*ComboType = std::move(Parms.ComboType);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_GetChakramComboList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           ChakramComboList                                       (Parm, OutParm, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Np1100_GetChakramComboList(TArray<uint8>* ChakramComboList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_GetChakramComboList");

	Params::BPI_ENpcInterface_C_Np1100_GetChakramComboList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChakramComboList != nullptr)
		*ChakramComboList = std::move(Parms.ChakramComboList);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Ch0900_CreateCopy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Ch0900_CreateCopy(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Ch0900_CreateCopy");

	Params::BPI_ENpcInterface_C_Ch0900_CreateCopy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_StartHidden
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_StartHidden(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_StartHidden");

	Params::BPI_ENpcInterface_C_Np1100_StartHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_EndHidden
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_EndHidden(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_EndHidden");

	Params::BPI_ENpcInterface_C_Np1100_EndHidden Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_SetBattlePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Phase                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_SetBattlePhase(int32 Phase, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_SetBattlePhase");

	Params::BPI_ENpcInterface_C_Np1100_SetBattlePhase Parms{};

	Parms.Phase = Phase;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_SetChangeEm8010Process
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_SetChangeEm8010Process(int32 Value, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_SetChangeEm8010Process");

	Params::BPI_ENpcInterface_C_Em8000_SetChangeEm8010Process Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_GetChangeEm8010Process
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Process                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_GetChangeEm8010Process(int32* Process)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_GetChangeEm8010Process");

	Params::BPI_ENpcInterface_C_Em8000_GetChangeEm8010Process Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Process != nullptr)
		*Process = Parms.Process;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ExecChangeEm8010
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_ExecChangeEm8010(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ExecChangeEm8010");

	Params::BPI_ENpcInterface_C_Em8000_ExecChangeEm8010 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_SetThrowCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAdd                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_SetThrowCount(bool bAdd, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_SetThrowCount");

	Params::BPI_ENpcInterface_C_Np1100_SetThrowCount Parms{};

	Parms.bAdd = bAdd;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.ForceFinishMetamorphosis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBrainFieldCancel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::ForceFinishMetamorphosis(bool bBrainFieldCancel, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "ForceFinishMetamorphosis");

	Params::BPI_ENpcInterface_C_ForceFinishMetamorphosis Parms{};

	Parms.bBrainFieldCancel = bBrainFieldCancel;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_UseAttack_BrainTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_UseAttack_BrainTalk(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_UseAttack_BrainTalk");

	Params::BPI_ENpcInterface_C_Np1100_UseAttack_BrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_UseSpTrigger_BrainTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_UseSpTrigger_BrainTalk(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_UseSpTrigger_BrainTalk");

	Params::BPI_ENpcInterface_C_Np1100_UseSpTrigger_BrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_UseAttackEnd_BrainTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_UseAttackEnd_BrainTalk(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_UseAttackEnd_BrainTalk");

	Params::BPI_ENpcInterface_C_Em8200_UseAttackEnd_BrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100UseAfterSpAttack_BrainTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100UseAfterSpAttack_BrainTalk(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100UseAfterSpAttack_BrainTalk");

	Params::BPI_ENpcInterface_C_Np1100UseAfterSpAttack_BrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_StartSpTriggerMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_StartSpTriggerMove(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_StartSpTriggerMove");

	Params::BPI_ENpcInterface_C_Np1100_StartSpTriggerMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_EndSpTriggerMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_EndSpTriggerMove(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_EndSpTriggerMove");

	Params::BPI_ENpcInterface_C_Np1100_EndSpTriggerMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetBattlePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattlePhase_em8210                     BattlePhase                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetBattlePhase(EBattlePhase_em8210 BattlePhase, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetBattlePhase");

	Params::BPI_ENpcInterface_C_Em8200_SetBattlePhase Parms{};

	Parms.BattlePhase = BattlePhase;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_GetBattlePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattlePhase_em8210                     BattlePhase                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8200_GetBattlePhase(EBattlePhase_em8210* BattlePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_GetBattlePhase");

	Params::BPI_ENpcInterface_C_Em8200_GetBattlePhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattlePhase != nullptr)
		*BattlePhase = Parms.BattlePhase;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CanPlayExtraSasCutin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESASCutinExtraID                        CutinID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanPlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_CanPlayExtraSasCutin(ESASCutinExtraID CutinID, bool* CanPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CanPlayExtraSasCutin");

	Params::BPI_ENpcInterface_C_Em8200_CanPlayExtraSasCutin Parms{};

	Parms.CutinID = CutinID;

	UObject::ProcessEvent(Func, &Parms);

	if (CanPlay != nullptr)
		*CanPlay = Parms.CanPlay;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetCanPlayExtraSasCutin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCanPlay                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESASCutinExtraID                        CutinID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetCanPlayExtraSasCutin(bool bCanPlay, ESASCutinExtraID CutinID, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetCanPlayExtraSasCutin");

	Params::BPI_ENpcInterface_C_Em8200_SetCanPlayExtraSasCutin Parms{};

	Parms.bCanPlay = bCanPlay;
	Parms.CutinID = CutinID;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.PassedStartBrainFieldStartHp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::PassedStartBrainFieldStartHp(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "PassedStartBrainFieldStartHp");

	Params::BPI_ENpcInterface_C_PassedStartBrainFieldStartHp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartDodgeMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartDodgeMove(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartDodgeMove");

	Params::BPI_ENpcInterface_C_Em8200_StartDodgeMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8210_CanStartDodgeMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanStart                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8210_CanStartDodgeMove(bool* CanStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8210_CanStartDodgeMove");

	Params::BPI_ENpcInterface_C_Em8210_CanStartDodgeMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanStart != nullptr)
		*CanStart = Parms.CanStart;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8210_EndDodgeMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8210_EndDodgeMove(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8210_EndDodgeMove");

	Params::BPI_ENpcInterface_C_Em8210_EndDodgeMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EnableDodgeJust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EnableDodgeJust(bool bEnable, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EnableDodgeJust");

	Params::BPI_ENpcInterface_C_Em8200_EnableDodgeJust Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_IsEnableDodgeJust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_IsEnableDodgeJust(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_IsEnableDodgeJust");

	Params::BPI_ENpcInterface_C_Em8200_IsEnableDodgeJust Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.EnpcBulletAttackEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::EnpcBulletAttackEnd(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "EnpcBulletAttackEnd");

	Params::BPI_ENpcInterface_C_EnpcBulletAttackEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_SetFakeUniqueName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FakeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_SetFakeUniqueName(class FName FakeName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_SetFakeUniqueName");

	Params::BPI_ENpcInterface_C_Em8010_SetFakeUniqueName Parms{};

	Parms.FakeName = FakeName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_SetFakeUniqueName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FakeName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_SetFakeUniqueName(class FName FakeName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_SetFakeUniqueName");

	Params::BPI_ENpcInterface_C_Em8000_SetFakeUniqueName Parms{};

	Parms.FakeName = FakeName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Is Unique Enpc Type
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUnique                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Is_Unique_Enpc_Type(bool* IsUnique)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Is Unique Enpc Type");

	Params::BPI_ENpcInterface_C_Is_Unique_Enpc_Type Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsUnique != nullptr)
		*IsUnique = Parms.IsUnique;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_AttachMask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_AttachMask(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_AttachMask");

	Params::BPI_ENpcInterface_C_Em8200_AttachMask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetLastPhaseHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetLastPhaseHpRate(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetLastPhaseHpRate");

	Params::BPI_ENpcInterface_C_Em8200_SetLastPhaseHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Np1100_StartSpAfterVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Np1100_StartSpAfterVoice(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Np1100_StartSpAfterVoice");

	Params::BPI_ENpcInterface_C_Np1100_StartSpAfterVoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetEnpcDyingHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EnpcDyingHpRate                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetEnpcDyingHpRate(float* EnpcDyingHpRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetEnpcDyingHpRate");

	Params::BPI_ENpcInterface_C_GetEnpcDyingHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EnpcDyingHpRate != nullptr)
		*EnpcDyingHpRate = Parms.EnpcDyingHpRate;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_PlayBattleVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBattleVoice_em8200                     EBattleVoiceType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_PlayBattleVoice(EBattleVoice_em8200 EBattleVoiceType, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_PlayBattleVoice");

	Params::BPI_ENpcInterface_C_Em8200_PlayBattleVoice Parms{};

	Parms.EBattleVoiceType = EBattleVoiceType;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_SetExecRush
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_SetExecRush(bool bExec, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_SetExecRush");

	Params::BPI_ENpcInterface_C_Em8010_SetExecRush Parms{};

	Parms.bExec = bExec;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SuicideInformOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SuicideInformOwner(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SuicideInformOwner");

	Params::BPI_ENpcInterface_C_Em8200_SuicideInformOwner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_NotifyDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_NotifyDead(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_NotifyDead");

	Params::BPI_ENpcInterface_C_Em8000_NotifyDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_HomingElecEnd_BrainTalk
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_HomingElecEnd_BrainTalk(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_HomingElecEnd_BrainTalk");

	Params::BPI_ENpcInterface_C_Em8200_HomingElecEnd_BrainTalk Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetWaitEventParty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InWait                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetWaitEventParty(bool InWait, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetWaitEventParty");

	Params::BPI_ENpcInterface_C_Em8200_SetWaitEventParty Parms{};

	Parms.InWait = InWait;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_SetAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerAIBattleThinkType                AiType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_SetAction(EPlayerAIBattleThinkType AiType, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_SetAction");

	Params::BPI_ENpcInterface_C_Em8000_SetAction Parms{};

	Parms.AiType = AiType;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_UpdateDodgeJust
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_UpdateDodgeJust(float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_UpdateDodgeJust");

	Params::BPI_ENpcInterface_C_Em8200_UpdateDodgeJust Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8290_StartAppearEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InAppear                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8290_StartAppearEffect(bool InAppear, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8290_StartAppearEffect");

	Params::BPI_ENpcInterface_C_Em8290_StartAppearEffect Parms{};

	Parms.InAppear = InAppear;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8290_SetSafeDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8290_SetSafeDestroy(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8290_SetSafeDestroy");

	Params::BPI_ENpcInterface_C_Em8290_SetSafeDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8290_StartDisappear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8290_StartDisappear(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8290_StartDisappear");

	Params::BPI_ENpcInterface_C_Em8290_StartDisappear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Ch0900_ForceCopyDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Ch0900_ForceCopyDead(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Ch0900_ForceCopyDead");

	Params::BPI_ENpcInterface_C_Ch0900_ForceCopyDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartDodgeJustFlash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FlashIntervalTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartDodgeJustFlash(float FlashIntervalTime, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartDodgeJustFlash");

	Params::BPI_ENpcInterface_C_Em8200_StartDodgeJustFlash Parms{};

	Parms.FlashIntervalTime = FlashIntervalTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_UpdateDodgeJustFlash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_UpdateDodgeJustFlash(float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_UpdateDodgeJustFlash");

	Params::BPI_ENpcInterface_C_Em8200_UpdateDodgeJustFlash Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EndDodgeJustFlash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EndDodgeJustFlash(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EndDodgeJustFlash");

	Params::BPI_ENpcInterface_C_Em8200_EndDodgeJustFlash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetMaskVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewVisibility                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetMaskVisibility(bool NewVisibility, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetMaskVisibility");

	Params::BPI_ENpcInterface_C_Em8200_SetMaskVisibility Parms{};

	Parms.NewVisibility = NewVisibility;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EnableTargetableCopyActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EnableTargetableCopyActor(int32 Param_Index, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EnableTargetableCopyActor");

	Params::BPI_ENpcInterface_C_Em8200_EnableTargetableCopyActor Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_SetEyeMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_SetEyeMaterial(bool On, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_SetEyeMaterial");

	Params::BPI_ENpcInterface_C_Em8200_SetEyeMaterial Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_1stAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_1stAttack(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_1stAttack");

	Params::BPI_ENpcInterface_C_Em8000_1stAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsTemporaryDriveMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTempDrive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsTemporaryDriveMode(bool* IsTempDrive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsTemporaryDriveMode");

	Params::BPI_ENpcInterface_C_IsTemporaryDriveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTempDrive != nullptr)
		*IsTempDrive = Parms.IsTempDrive;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_StartFinishMetamorphosis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_StartFinishMetamorphosis(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_StartFinishMetamorphosis");

	Params::BPI_ENpcInterface_C_Em8010_StartFinishMetamorphosis Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsUniqueCondition_OpenBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsUniqueCondition_OpenBrainField(bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsUniqueCondition_OpenBrainField");

	Params::BPI_ENpcInterface_C_IsUniqueCondition_OpenBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8210_EndUniqueNoDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8210_EndUniqueNoDead(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8210_EndUniqueNoDead");

	Params::BPI_ENpcInterface_C_Em8210_EndUniqueNoDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_IsRegisterTelepoMoveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRegister                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_IsRegisterTelepoMoveLocation(bool* IsRegister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_IsRegisterTelepoMoveLocation");

	Params::BPI_ENpcInterface_C_Em8200_IsRegisterTelepoMoveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRegister != nullptr)
		*IsRegister = Parms.IsRegister;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsUniqueCondition_Drive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsUniqueCondition_Drive(bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsUniqueCondition_Drive");

	Params::BPI_ENpcInterface_C_IsUniqueCondition_Drive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_IsAttachMask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAttach                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_IsAttachMask(bool* bAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_IsAttachMask");

	Params::BPI_ENpcInterface_C_Em8200_IsAttachMask Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAttach != nullptr)
		*bAttach = Parms.bAttach;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_IsMaskVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_IsMaskVisible(bool* IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_IsMaskVisible");

	Params::BPI_ENpcInterface_C_Em8200_IsMaskVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible != nullptr)
		*IsVisible = Parms.IsVisible;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_CopyActorWarmUp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_CopyActorWarmUp(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_CopyActorWarmUp");

	Params::BPI_ENpcInterface_C_Em8200_CopyActorWarmUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartSpPsychic
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartPsychicType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Shot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartSpPsychic(int32 StartPsychicType, bool Shot, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartSpPsychic");

	Params::BPI_ENpcInterface_C_Em8200_StartSpPsychic Parms{};

	Parms.StartPsychicType = StartPsychicType;
	Parms.Shot = Shot;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EnableAimCopyActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EnableAimCopyActor(bool bEnable, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EnableAimCopyActor");

	Params::BPI_ENpcInterface_C_Em8200_EnableAimCopyActor Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_StartAimCopyActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AimSpeed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxAimAngle                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InternalLock                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ToCamera                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_StartAimCopyActor(float AimSpeed, float MaxAimAngle, bool InternalLock, bool ToCamera, class FName SocketName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_StartAimCopyActor");

	Params::BPI_ENpcInterface_C_Em8200_StartAimCopyActor Parms{};

	Parms.AimSpeed = AimSpeed;
	Parms.MaxAimAngle = MaxAimAngle;
	Parms.InternalLock = InternalLock;
	Parms.ToCamera = ToCamera;
	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_TriggerSequenceAfter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAfter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_TriggerSequenceAfter(bool bAfter, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_TriggerSequenceAfter");

	Params::BPI_ENpcInterface_C_Em8200_TriggerSequenceAfter Parms{};

	Parms.bAfter = bAfter;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.StartDamageMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DamageDir                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadMove                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Duumy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::StartDamageMove(const struct FVector& DamageDir, float Power, bool DeadMove, bool* Duumy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "StartDamageMove");

	Params::BPI_ENpcInterface_C_StartDamageMove Parms{};

	Parms.DamageDir = std::move(DamageDir);
	Parms.Power = Power;
	Parms.DeadMove = DeadMove;

	UObject::ProcessEvent(Func, &Parms);

	if (Duumy != nullptr)
		*Duumy = Parms.Duumy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EnableIntenceVoice
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EnableIntenceVoice(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EnableIntenceVoice");

	Params::BPI_ENpcInterface_C_Em8200_EnableIntenceVoice Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_GetShockwaveEffectArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URSParticleSystemComponentBase*>EffectArray                                            (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_GetShockwaveEffectArray(TArray<class URSParticleSystemComponentBase*>* EffectArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_GetShockwaveEffectArray");

	Params::BPI_ENpcInterface_C_Em8000_GetShockwaveEffectArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EffectArray != nullptr)
		*EffectArray = std::move(Parms.EffectArray);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ShockwaveEffect_Clear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_ShockwaveEffect_Clear(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ShockwaveEffect_Clear");

	Params::BPI_ENpcInterface_C_Em8000_ShockwaveEffect_Clear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ShockwaveEffect_SetElem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URSParticleSystemComponentBase*   Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_ShockwaveEffect_SetElem(int32 Param_Index, class URSParticleSystemComponentBase* Particle, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ShockwaveEffect_SetElem");

	Params::BPI_ENpcInterface_C_Em8000_ShockwaveEffect_SetElem Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Particle = Particle;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ShockwaveEffect_Get
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URSParticleSystemComponentBase*   Particle                                               (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_ShockwaveEffect_Get(int32 Param_Index, class URSParticleSystemComponentBase** Particle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ShockwaveEffect_Get");

	Params::BPI_ENpcInterface_C_Em8000_ShockwaveEffect_Get Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Particle != nullptr)
		*Particle = Parms.Particle;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ShockwaveEffect_Add
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URSParticleSystemComponentBase*   Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_ShockwaveEffect_Add(class URSParticleSystemComponentBase* Particle, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ShockwaveEffect_Add");

	Params::BPI_ENpcInterface_C_Em8000_ShockwaveEffect_Add Parms{};

	Parms.Particle = Particle;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_ShockwaveEffect_Deactivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_ShockwaveEffect_Deactivate(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_ShockwaveEffect_Deactivate");

	Params::BPI_ENpcInterface_C_Em8000_ShockwaveEffect_Deactivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_PermitBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8000_PermitBrainField(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_PermitBrainField");

	Params::BPI_ENpcInterface_C_Em8000_PermitBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_GetMetamorphosisParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ParentActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8010_GetMetamorphosisParent(class AActor** ParentActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_GetMetamorphosisParent");

	Params::BPI_ENpcInterface_C_Em8010_GetMetamorphosisParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParentActor != nullptr)
		*ParentActor = Parms.ParentActor;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetEnpcOutlineAppendMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           MeshComps                                              (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetEnpcOutlineAppendMesh(TArray<class UMeshComponent*>* MeshComps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetEnpcOutlineAppendMesh");

	Params::BPI_ENpcInterface_C_GetEnpcOutlineAppendMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComps != nullptr)
		*MeshComps = std::move(Parms.MeshComps);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.OnStartSequencer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::OnStartSequencer(int32 IndexIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "OnStartSequencer");

	Params::BPI_ENpcInterface_C_OnStartSequencer Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8290_ExecAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8290_ExecAttack(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8290_ExecAttack");

	Params::BPI_ENpcInterface_C_Em8290_ExecAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_GetBattlePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BattlePhase                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8220_GetBattlePhase(int32* BattlePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_GetBattlePhase");

	Params::BPI_ENpcInterface_C_Em8220_GetBattlePhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattlePhase != nullptr)
		*BattlePhase = Parms.BattlePhase;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_SetBattlePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BattlePhase                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_SetBattlePhase(int32 BattlePhase, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_SetBattlePhase");

	Params::BPI_ENpcInterface_C_Em8220_SetBattlePhase Parms{};

	Parms.BattlePhase = BattlePhase;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_BeginDispAttackCable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BeginTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_BeginDispAttackCable(int32 CableIndex, float BeginTime, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_BeginDispAttackCable");

	Params::BPI_ENpcInterface_C_Em8220_BeginDispAttackCable Parms{};

	Parms.CableIndex = CableIndex;
	Parms.BeginTime = BeginTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_EndDispAttackCable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_EndDispAttackCable(int32 CableIndex, float EndTime, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_EndDispAttackCable");

	Params::BPI_ENpcInterface_C_Em8220_EndDispAttackCable Parms{};

	Parms.CableIndex = CableIndex;
	Parms.EndTime = EndTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_PlayAttackCableAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_em8220_CableInfo             CableInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_PlayAttackCableAnim(const struct FST_em8220_CableInfo& CableInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_PlayAttackCableAnim");

	Params::BPI_ENpcInterface_C_Em8220_PlayAttackCableAnim Parms{};

	Parms.CableInfo = std::move(CableInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_EndAttackCableAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CableIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_EndAttackCableAnim(int32 CableIndex, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_EndAttackCableAnim");

	Params::BPI_ENpcInterface_C_Em8220_EndAttackCableAnim Parms{};

	Parms.CableIndex = CableIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8200_EndAllAttackCable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bForce                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EndTime                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8200_EndAllAttackCable(bool bForce, float EndTime, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8200_EndAllAttackCable");

	Params::BPI_ENpcInterface_C_Em8200_EndAllAttackCable Parms{};

	Parms.bForce = bForce;
	Parms.EndTime = EndTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_BeginCablePiller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_BeginCablePiller(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_BeginCablePiller");

	Params::BPI_ENpcInterface_C_Em8220_BeginCablePiller Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_GetCablePillerLocationList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           IgnoreActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  LocationList                                           (Parm, OutParm, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8220_GetCablePillerLocationList(class AActor* IgnoreActor, TArray<struct FVector>* LocationList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_GetCablePillerLocationList");

	Params::BPI_ENpcInterface_C_Em8220_GetCablePillerLocationList Parms{};

	Parms.IgnoreActor = IgnoreActor;

	UObject::ProcessEvent(Func, &Parms);

	if (LocationList != nullptr)
		*LocationList = std::move(Parms.LocationList);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_BeginNextCableSpike
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_BeginNextCableSpike(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_BeginNextCableSpike");

	Params::BPI_ENpcInterface_C_Em8220_BeginNextCableSpike Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_BulletAttackHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBulletType                             BulletType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_BulletAttackHit(EBulletType BulletType, class AActor* HitActor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_BulletAttackHit");

	Params::BPI_ENpcInterface_C_Em8220_BulletAttackHit Parms{};

	Parms.BulletType = BulletType;
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_SetCableSpikeStartEffectTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartEffectTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_SetCableSpikeStartEffectTime(float StartEffectTime, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_SetCableSpikeStartEffectTime");

	Params::BPI_ENpcInterface_C_Em8220_SetCableSpikeStartEffectTime Parms{};

	Parms.StartEffectTime = StartEffectTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_GetCableSpikeStartEffectTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   StartEffectTime                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8220_GetCableSpikeStartEffectTime(float* StartEffectTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_GetCableSpikeStartEffectTime");

	Params::BPI_ENpcInterface_C_Em8220_GetCableSpikeStartEffectTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartEffectTime != nullptr)
		*StartEffectTime = Parms.StartEffectTime;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.EnterDownEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerDownType                         DownType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::EnterDownEnpc(EPlayerDownType DownType, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "EnterDownEnpc");

	Params::BPI_ENpcInterface_C_EnterDownEnpc Parms{};

	Parms.DownType = DownType;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.EntryBrainCrashAccessEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::EntryBrainCrashAccessEnpc(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "EntryBrainCrashAccessEnpc");

	Params::BPI_ENpcInterface_C_EntryBrainCrashAccessEnpc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_SetHighSpdLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_SetHighSpdLocation(const struct FVector& InLocation, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_SetHighSpdLocation");

	Params::BPI_ENpcInterface_C_Em8220_SetHighSpdLocation Parms{};

	Parms.InLocation = std::move(InLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_GetHighSpdLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8220_GetHighSpdLocation(struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_GetHighSpdLocation");

	Params::BPI_ENpcInterface_C_Em8220_GetHighSpdLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_SetHighSpdDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HighSpdDistance                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_SetHighSpdDistance(float HighSpdDistance, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_SetHighSpdDistance");

	Params::BPI_ENpcInterface_C_Em8220_SetHighSpdDistance Parms{};

	Parms.HighSpdDistance = HighSpdDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_GetHighSpdDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HighSpdDistance                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8220_GetHighSpdDistance(float* HighSpdDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_GetHighSpdDistance");

	Params::BPI_ENpcInterface_C_Em8220_GetHighSpdDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HighSpdDistance != nullptr)
		*HighSpdDistance = Parms.HighSpdDistance;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_RegisterShotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFRegisterShotData               RegisterShotData                                       (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_RegisterShotData(const struct FFRegisterShotData& RegisterShotData, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_RegisterShotData");

	Params::BPI_ENpcInterface_C_Em8220_RegisterShotData Parms{};

	Parms.RegisterShotData = std::move(RegisterShotData);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_UnregisterAllShotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_UnregisterAllShotData(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_UnregisterAllShotData");

	Params::BPI_ENpcInterface_C_Em8220_UnregisterAllShotData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_UpdateShotData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_UpdateShotData(float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_UpdateShotData");

	Params::BPI_ENpcInterface_C_Em8220_UpdateShotData Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_ChangeAccelerator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_ChangeAccelerator(bool bStart, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_ChangeAccelerator");

	Params::BPI_ENpcInterface_C_Em8220_ChangeAccelerator Parms{};

	Parms.bStart = bStart;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_StartSpCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_StartSpCount(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_StartSpCount");

	Params::BPI_ENpcInterface_C_Em8220_StartSpCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_StartCopyActorSpTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_StartCopyActorSpTimer(class ARSCharacterBase* InActor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_StartCopyActorSpTimer");

	Params::BPI_ENpcInterface_C_Em8220_StartCopyActorSpTimer Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_EndCopyActorSpTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSCharacterBase*                 InActor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_EndCopyActorSpTimer(class ARSCharacterBase* InActor, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_EndCopyActorSpTimer");

	Params::BPI_ENpcInterface_C_Em8220_EndCopyActorSpTimer Parms{};

	Parms.InActor = InActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.PreStartSequencerEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::PreStartSequencerEnpc(int32 IndexIn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "PreStartSequencerEnpc");

	Params::BPI_ENpcInterface_C_PreStartSequencerEnpc Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.FinishedSequencerEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::FinishedSequencerEnpc(int32 IndexIn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "FinishedSequencerEnpc");

	Params::BPI_ENpcInterface_C_FinishedSequencerEnpc Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.PostStartSequencerEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::PostStartSequencerEnpc(int32 IndexIn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "PostStartSequencerEnpc");

	Params::BPI_ENpcInterface_C_PostStartSequencerEnpc Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetSequenceActorEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SequenceActorEnpc                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetSequenceActorEnpc(class AActor** SequenceActorEnpc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetSequenceActorEnpc");

	Params::BPI_ENpcInterface_C_GetSequenceActorEnpc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SequenceActorEnpc != nullptr)
		*SequenceActorEnpc = Parms.SequenceActorEnpc;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.StartSpSequenceEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::StartSpSequenceEnpc(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "StartSpSequenceEnpc");

	Params::BPI_ENpcInterface_C_StartSpSequenceEnpc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_SetVisibleSpTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_SetVisibleSpTimer(bool bVisible, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_SetVisibleSpTimer");

	Params::BPI_ENpcInterface_C_Em8220_SetVisibleSpTimer Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_CalcAttackCollisionInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCAttackCollisionInfo           CollisionInfo                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_CalcAttackCollisionInfo(const struct FHCAttackCollisionInfo& CollisionInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_CalcAttackCollisionInfo");

	Params::BPI_ENpcInterface_C_Em8220_CalcAttackCollisionInfo Parms{};

	Parms.CollisionInfo = std::move(CollisionInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_StoreCollisionInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               SkillInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_StoreCollisionInfo(const struct FHCSkillCommonInfo& SkillInfo, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_StoreCollisionInfo");

	Params::BPI_ENpcInterface_C_Em8220_StoreCollisionInfo Parms{};

	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_RestoreCollisionInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_RestoreCollisionInfo(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_RestoreCollisionInfo");

	Params::BPI_ENpcInterface_C_Em8220_RestoreCollisionInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.PostFinishedSequencerEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::PostFinishedSequencerEnpc(int32 IndexIn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "PostFinishedSequencerEnpc");

	Params::BPI_ENpcInterface_C_PostFinishedSequencerEnpc Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.OnSpawnStartEnpc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::OnSpawnStartEnpc(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "OnSpawnStartEnpc");

	Params::BPI_ENpcInterface_C_OnSpawnStartEnpc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.GetENpcParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UBP_ENpc_ParamBase_C*             Param                                                  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::GetENpcParam(class UBP_ENpc_ParamBase_C** Param) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "GetENpcParam");

	Params::BPI_ENpcInterface_C_GetENpcParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param != nullptr)
		*Param = Parms.Param;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_GetBattleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_BattleType_em8000                  BattleType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_GetBattleType(Enum_BattleType_em8000* BattleType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_GetBattleType");

	Params::BPI_ENpcInterface_C_Em8000_GetBattleType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattleType != nullptr)
		*BattleType = Parms.BattleType;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsActiveEnpcSAS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// E_SASKind                               Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bActive                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsActiveEnpcSAS(E_SASKind Kind, bool* bActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsActiveEnpcSAS");

	Params::BPI_ENpcInterface_C_IsActiveEnpcSAS Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bActive != nullptr)
		*bActive = Parms.bActive;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8210_IsHomingEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8210_IsHomingEnd(bool* bEnd) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8210_IsHomingEnd");

	Params::BPI_ENpcInterface_C_Em8210_IsHomingEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8000_GetBattleProcess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   CurProcess                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8000_GetBattleProcess(int32* CurProcess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8000_GetBattleProcess");

	Params::BPI_ENpcInterface_C_Em8000_GetBattleProcess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurProcess != nullptr)
		*CurProcess = Parms.CurProcess;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_GetBattleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// Enum_BattleType_em8010                  BattleType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8010_GetBattleType(Enum_BattleType_em8010* BattleType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_GetBattleType");

	Params::BPI_ENpcInterface_C_Em8010_GetBattleType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BattleType != nullptr)
		*BattleType = Parms.BattleType;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsNotRequirementPartner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bNotRequirement                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsNotRequirementPartner(bool* bNotRequirement) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsNotRequirementPartner");

	Params::BPI_ENpcInterface_C_IsNotRequirementPartner Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNotRequirement != nullptr)
		*bNotRequirement = Parms.bNotRequirement;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.IsIgnoreForceFinishMetamorphosis
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bIgnore                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::IsIgnoreForceFinishMetamorphosis(bool* bIgnore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "IsIgnoreForceFinishMetamorphosis");

	Params::BPI_ENpcInterface_C_IsIgnoreForceFinishMetamorphosis Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIgnore != nullptr)
		*bIgnore = Parms.bIgnore;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_IsMetamophosis_BaseChara
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bIsMetamorphosis                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_IsMetamophosis_BaseChara(bool* bIsMetamorphosis) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_IsMetamophosis_BaseChara");

	Params::BPI_ENpcInterface_C_Em8010_IsMetamophosis_BaseChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsMetamorphosis != nullptr)
		*bIsMetamorphosis = Parms.bIsMetamorphosis;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_IsMetamophosis_ChangeChara
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bIsMetamorphosis                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_IsMetamophosis_ChangeChara(bool* bIsMetamorphosis) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_IsMetamophosis_ChangeChara");

	Params::BPI_ENpcInterface_C_Em8010_IsMetamophosis_ChangeChara Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsMetamorphosis != nullptr)
		*bIsMetamorphosis = Parms.bIsMetamorphosis;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_IsMetamorphosis_Disappear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bDisappear                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_IsMetamorphosis_Disappear(bool* bDisappear) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_IsMetamorphosis_Disappear");

	Params::BPI_ENpcInterface_C_Em8010_IsMetamorphosis_Disappear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisappear != nullptr)
		*bDisappear = Parms.bDisappear;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_IsMetamorphosis_Appear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bAppear                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8010_IsMetamorphosis_Appear(bool* bAppear) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_IsMetamorphosis_Appear");

	Params::BPI_ENpcInterface_C_Em8010_IsMetamorphosis_Appear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAppear != nullptr)
		*bAppear = Parms.bAppear;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8010_GetParameterTableAttackScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_ENpcInterface_C::Em8010_GetParameterTableAttackScale(float* Scale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8010_GetParameterTableAttackScale");

	Params::BPI_ENpcInterface_C_Em8010_GetParameterTableAttackScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function BPI_ENpcInterface.BPI_ENpcInterface_C.Em8220_IsSpFieldOpen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bOpen                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_ENpcInterface_C::Em8220_IsSpFieldOpen(bool* bOpen) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_ENpcInterface_C", "Em8220_IsSpFieldOpen");

	Params::BPI_ENpcInterface_C_Em8220_IsSpFieldOpen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bOpen != nullptr)
		*bOpen = Parms.bOpen;
}

}

