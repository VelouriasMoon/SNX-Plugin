#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UseItemComponent

#include "Basic.hpp"

#include "BP_UseItemComponent_classes.hpp"
#include "BP_UseItemComponent_parameters.hpp"


namespace SDK
{

// Function BP_UseItemComponent.BP_UseItemComponent_C.ExecuteUbergraph_BP_UseItemComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::ExecuteUbergraph_BP_UseItemComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "ExecuteUbergraph_BP_UseItemComponent");

	Params::BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "ReceiveTick");

	Params::BP_UseItemComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_UseItemComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.ItemApply
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRevive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UseItemComponent_C::ItemApply(bool bRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "ItemApply");

	Params::BP_UseItemComponent_C_ItemApply Parms{};

	Parms.bRevive = bRevive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.SetItemID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          InItemId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bInHelpPlayer                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bInReviveNpc                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UseItemComponent_C::SetItemID(EConsumeItemID InItemId, bool bInHelpPlayer, bool bInReviveNpc)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "SetItemID");

	Params::BP_UseItemComponent_C_SetItemID Parms{};

	Parms.InItemId = InItemId;
	Parms.bInHelpPlayer = bInHelpPlayer;
	Parms.bInReviveNpc = bInReviveNpc;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.SpawnItemUseParticle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAttach                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRevive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UseItemComponent_C::SpawnItemUseParticle(bool bAttach, class FName SocketName, bool bRevive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "SpawnItemUseParticle");

	Params::BP_UseItemComponent_C_SpawnItemUseParticle Parms{};

	Parms.bAttach = bAttach;
	Parms.SocketName = SocketName;
	Parms.bRevive = bRevive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.SpawnItemEffectParticle
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           TargetMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::SpawnItemEffectParticle(class USkeletalMeshComponent* TargetMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "SpawnItemEffectParticle");

	Params::BP_UseItemComponent_C_SpawnItemEffectParticle Parms{};

	Parms.TargetMesh = TargetMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemTargetList
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ARSBattlePlayer_C*>        TargetList                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemTargetList(TArray<class ARSBattlePlayer_C*>* TargetList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemTargetList");

	Params::BP_UseItemComponent_C_GetItemTargetList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetList != nullptr)
		*TargetList = std::move(Parms.TargetList);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.NpcItemCancelCheck
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                TargetPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::NpcItemCancelCheck(class ARSBattlePlayer_C* TargetPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "NpcItemCancelCheck");

	Params::BP_UseItemComponent_C_NpcItemCancelCheck Parms{};

	Parms.TargetPlayer = TargetPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemData
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FItemDataCell                    Item_data                                              (Parm, OutParm)

void UBP_UseItemComponent_C::GetItemData(EConsumeItemID Item_id_in, bool* bFound, struct FItemDataCell* Item_data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemData");

	Params::BP_UseItemComponent_C_GetItemData Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (Item_data != nullptr)
		*Item_data = std::move(Parms.Item_data);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemAttackValue
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemAttackValue(EConsumeItemID Item_id_in, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemAttackValue");

	Params::BP_UseItemComponent_C_GetItemAttackValue Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemPsychicValue
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemPsychicValue(EConsumeItemID Item_id_in, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemPsychicValue");

	Params::BP_UseItemComponent_C_GetItemPsychicValue Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemVitalityValue
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemVitalityValue(EConsumeItemID Item_id_in, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemVitalityValue");

	Params::BP_UseItemComponent_C_GetItemVitalityValue Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemDefenceValue
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemDefenceValue(EConsumeItemID Item_id_in, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemDefenceValue");

	Params::BP_UseItemComponent_C_GetItemDefenceValue Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EConsumeItemID                          Item_id_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_Name                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemName(EConsumeItemID Item_id_in, class FName* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemName");

	Params::BP_UseItemComponent_C_GetItemName Parms{};

	Parms.Item_id_in = Item_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = Parms.Param_Name;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.SetRecastTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UseItemComponent_C::SetRecastTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "SetRecastTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.UpdateRecastTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UseItemComponent_C::UpdateRecastTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "UpdateRecastTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.InitRecastTimeParameter
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UseItemComponent_C::InitRecastTimeParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "InitRecastTimeParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.ResetRecastTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UseItemComponent_C::ResetRecastTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "ResetRecastTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemTypeNum
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EConsumeItemID                          ItemIdIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemTypeNum                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemTypeNum(EConsumeItemID ItemIdIn, int32* ItemTypeNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemTypeNum");

	Params::BP_UseItemComponent_C_GetItemTypeNum Parms{};

	Parms.ItemIdIn = ItemIdIn;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemTypeNum != nullptr)
		*ItemTypeNum = Parms.ItemTypeNum;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.SetCurrentItemID
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UseItemComponent_C::SetCurrentItemID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "SetCurrentItemID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.IsRecastItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bRecast                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EConsumeItemID                          Param_ItemId                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::IsRecastItem(bool* bRecast, EConsumeItemID* Param_ItemId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "IsRecastItem");

	Params::BP_UseItemComponent_C_IsRecastItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRecast != nullptr)
		*bRecast = Parms.bRecast;

	if (Param_ItemId != nullptr)
		*Param_ItemId = Parms.Param_ItemId;
}


// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EConsumeItemID                          Item                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UseItemComponent_C::GetItemID(EConsumeItemID* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UseItemComponent_C", "GetItemID");

	Params::BP_UseItemComponent_C_GetItemID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = Parms.Item;
}

}

