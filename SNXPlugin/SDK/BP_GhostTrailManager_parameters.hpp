#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GhostTrailManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_GhostMaterialParam_structs.hpp"
#include "E_GhostInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.GhostSpawned__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct BP_GhostTrailManager_C_GhostSpawned__DelegateSignature final
{
public:
	struct FE_GhostInfo                           GhostInfo;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_GhostSpawned__DelegateSignature) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_GhostSpawned__DelegateSignature");
static_assert(sizeof(BP_GhostTrailManager_C_GhostSpawned__DelegateSignature) == 0x000038, "Wrong size on BP_GhostTrailManager_C_GhostSpawned__DelegateSignature");
static_assert(offsetof(BP_GhostTrailManager_C_GhostSpawned__DelegateSignature, GhostInfo) == 0x000000, "Member 'BP_GhostTrailManager_C_GhostSpawned__DelegateSignature::GhostInfo' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.ExecuteUbergraph_BP_GhostTrailManager
// 0x000C (0x000C - 0x0000)
struct BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager");
static_assert(sizeof(BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager) == 0x00000C, "Wrong size on BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager");
static_assert(offsetof(BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager, EntryPoint) == 0x000000, "Member 'BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_GhostTrailManager_C_ExecuteUbergraph_BP_GhostTrailManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GhostTrailManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_ReceiveTick");
static_assert(sizeof(BP_GhostTrailManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_GhostTrailManager_C_ReceiveTick");
static_assert(offsetof(BP_GhostTrailManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GhostTrailManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SpawnStaticGhost
// 0x02B0 (0x02B0 - 0x0000)
struct BP_GhostTrailManager_C_SpawnStaticGhost final
{
public:
	class UStaticMeshComponent*                   MasterStaticMeshComponent;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FE_GhostInfo                           GhostInfo;                                         // 0x0008(0x0038)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UStaticMesh*                            TargetMesh;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 TmpMatParamIndex;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FE_GhostInfo                           TmpInfo;                                           // 0x0058(0x0038)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         TmpMaterialNum;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA9[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_NewTransform;                                    // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               L_GhostDinamMaterial;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   L_Master;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   L_Mesh;                                            // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_SearchOrAddStaticMeshCache_CachedMesh;    // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAA[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAB[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAC[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FE_GhostInfo                           K2Node_MakeStruct_E_GhostInfo;                     // 0x0118(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DAD[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_PrivateSearchMaterialParamIndex_Index;    // 0x01E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAE[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0200(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DAF[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcRandomOffsetLocation_OffsetLocation;  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB0[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ChangeMasterRelative_ReturnValue;         // 0x0280(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_SpawnStaticGhost) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_SpawnStaticGhost");
static_assert(sizeof(BP_GhostTrailManager_C_SpawnStaticGhost) == 0x0002B0, "Wrong size on BP_GhostTrailManager_C_SpawnStaticGhost");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, MasterStaticMeshComponent) == 0x000000, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::MasterStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, GhostInfo) == 0x000008, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, TargetMesh) == 0x000040, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, TmpMatParamIndex) == 0x000048, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::TmpMatParamIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, TmpInfo) == 0x000058, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::TmpInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, TmpMaterialNum) == 0x000090, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::TmpMaterialNum' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, L_NewTransform) == 0x0000A0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::L_NewTransform' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, L_GhostDinamMaterial) == 0x0000D0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::L_GhostDinamMaterial' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, L_Master) == 0x0000D8, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::L_Master' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, L_Mesh) == 0x0000E0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_SearchOrAddStaticMeshCache_CachedMesh) == 0x0000E8, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_SearchOrAddStaticMeshCache_CachedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, Temp_int_Variable) == 0x0000F4, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000104, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_BooleanAND_ReturnValue) == 0x000110, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000111, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, K2Node_MakeStruct_E_GhostInfo) == 0x000118, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::K2Node_MakeStruct_E_GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000150, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_PrivateSearchMaterialParamIndex_Index) == 0x0001E0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_PrivateSearchMaterialParamIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001F0, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_IsValid_ReturnValue_1) == 0x0001F8, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_GetNumMaterials_ReturnValue) == 0x0001FC, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, Temp_struct_Variable) == 0x000200, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_AddComponent_ReturnValue) == 0x000230, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_SetStaticMesh_ReturnValue) == 0x000238, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000240, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_CalcRandomOffsetLocation_OffsetLocation) == 0x000270, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_CalcRandomOffsetLocation_OffsetLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnStaticGhost, CallFunc_ChangeMasterRelative_ReturnValue) == 0x000280, "Member 'BP_GhostTrailManager_C_SpawnStaticGhost::CallFunc_ChangeMasterRelative_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SpawnTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailManager_C_SpawnTimer final
{
public:
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGhostDeltaSeconds_DeltaSeconds;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB2[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_SpawnTimer) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_SpawnTimer");
static_assert(sizeof(BP_GhostTrailManager_C_SpawnTimer) == 0x000010, "Wrong size on BP_GhostTrailManager_C_SpawnTimer");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnTimer, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_GhostTrailManager_C_SpawnTimer::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnTimer, CallFunc_GetGhostDeltaSeconds_DeltaSeconds) == 0x000004, "Member 'BP_GhostTrailManager_C_SpawnTimer::CallFunc_GetGhostDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnTimer, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_GhostTrailManager_C_SpawnTimer::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnTimer, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_GhostTrailManager_C_SpawnTimer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SpawnSkeletalGhost
// 0x02E0 (0x02E0 - 0x0000)
struct BP_GhostTrailManager_C_SpawnSkeletalGhost final
{
public:
	class USkeletalMeshComponent*                 MasterStaticMeshComponent;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FE_GhostInfo                           GhostInfo;                                         // 0x0008(0x0038)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMesh*                          TargetMesh;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 TmpMatParamIndex;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FE_GhostInfo                           TmpInfo;                                           // 0x0058(0x0038)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         TmpMaterialNum;                                    // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB3[0xC];                                     // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             L_NewTransform;                                    // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               L_GhostDinamMaterial;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 L_Master;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 L_Mesh;                                            // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisibleMaterial_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB4[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_SearchOrAddSkeletalMeshCache_CachedMesh;  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB5[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB6[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB7[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB8[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_PrivateSearchMaterialParamIndex_Index;    // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB9[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBA[0x2];                                     // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DBB[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0160(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FE_GhostInfo                           K2Node_MakeStruct_E_GhostInfo;                     // 0x0190(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DBC[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBD[0x3];                                     // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x01E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_CalcRandomOffsetLocation_OffsetLocation;  // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DBE[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ChangeMasterRelative_ReturnValue;         // 0x02B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_SpawnSkeletalGhost) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_SpawnSkeletalGhost");
static_assert(sizeof(BP_GhostTrailManager_C_SpawnSkeletalGhost) == 0x0002E0, "Wrong size on BP_GhostTrailManager_C_SpawnSkeletalGhost");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, MasterStaticMeshComponent) == 0x000000, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::MasterStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, GhostInfo) == 0x000008, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, TargetMesh) == 0x000040, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, TmpMatParamIndex) == 0x000048, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::TmpMatParamIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, TmpInfo) == 0x000058, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::TmpInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, TmpMaterialNum) == 0x000090, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::TmpMaterialNum' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, L_NewTransform) == 0x0000A0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::L_NewTransform' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, L_GhostDinamMaterial) == 0x0000D0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::L_GhostDinamMaterial' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, L_Master) == 0x0000D8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::L_Master' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, L_Mesh) == 0x0000E0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, Temp_int_Variable) == 0x0000E8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, Temp_int_Loop_Num_Variable) == 0x0000F4, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_IsVisibleMaterial_ReturnValue) == 0x0000F8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_IsVisibleMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_SearchOrAddSkeletalMeshCache_CachedMesh) == 0x000100, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_SearchOrAddSkeletalMeshCache_CachedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, Temp_int_Loop_Counter_Variable) == 0x000108, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Not_PreBool_ReturnValue) == 0x000114, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_BooleanAND_ReturnValue) == 0x000115, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, Temp_int_Array_Index_Variable) == 0x000120, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_PrivateSearchMaterialParamIndex_Index) == 0x000128, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_PrivateSearchMaterialParamIndex_Index' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000140, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00014C, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, Temp_struct_Variable) == 0x000160, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, K2Node_MakeStruct_E_GhostInfo) == 0x000190, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::K2Node_MakeStruct_E_GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_AddComponent_ReturnValue) == 0x0001C8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0001D8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_IsValid_ReturnValue_2) == 0x0001E0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_GetNumMaterials_ReturnValue) == 0x0001E4, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0001E8, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000270, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_CalcRandomOffsetLocation_OffsetLocation) == 0x0002A0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_CalcRandomOffsetLocation_OffsetLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnSkeletalGhost, CallFunc_ChangeMasterRelative_ReturnValue) == 0x0002B0, "Member 'BP_GhostTrailManager_C_SpawnSkeletalGhost::CallFunc_ChangeMasterRelative_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.UpdateGhostInfos
// 0x0098 (0x0098 - 0x0000)
struct BP_GhostTrailManager_C_UpdateGhostInfos final
{
public:
	struct FE_GhostInfo                           TmpGhost;                                          // 0x0000(0x0038)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_GetGhostDeltaSeconds_DeltaSeconds;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DBF[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC0[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FE_GhostInfo                           CallFunc_Array_Get_Item;                           // 0x0058(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_UpdateGhostInfos) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_UpdateGhostInfos");
static_assert(sizeof(BP_GhostTrailManager_C_UpdateGhostInfos) == 0x000098, "Wrong size on BP_GhostTrailManager_C_UpdateGhostInfos");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, TmpGhost) == 0x000000, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::TmpGhost' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_GetGhostDeltaSeconds_DeltaSeconds) == 0x000038, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_GetGhostDeltaSeconds_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_Add_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostInfos, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_GhostTrailManager_C_UpdateGhostInfos::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SpawnGhosts
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GhostTrailManager_C_SpawnGhosts final
{
public:
	float                                         L_VelocityLengthSq;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC1[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC2[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC3[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC4[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC5[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC6[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FE_GhostInfo                           CallFunc_SpawnSkeletalGhost_GhostInfo;             // 0x0068(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC7[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FE_GhostInfo                           CallFunc_SpawnStaticGhost_GhostInfo;               // 0x00A8(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_SpawnGhosts) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_SpawnGhosts");
static_assert(sizeof(BP_GhostTrailManager_C_SpawnGhosts) == 0x0000E0, "Wrong size on BP_GhostTrailManager_C_SpawnGhosts");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, L_VelocityLengthSq) == 0x000000, "Member 'BP_GhostTrailManager_C_SpawnGhosts::L_VelocityLengthSq' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_Get_Item) == 0x00001C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_VSizeSquared_ReturnValue) == 0x000028, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_VSizeSquared_ReturnValue_1) == 0x00004C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000050, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000058, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'BP_GhostTrailManager_C_SpawnGhosts::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_BooleanAND_ReturnValue_1) == 0x000060, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Less_IntInt_ReturnValue_1) == 0x000061, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Not_PreBool_ReturnValue_1) == 0x000062, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_SpawnSkeletalGhost_GhostInfo) == 0x000068, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_SpawnSkeletalGhost_GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SpawnGhosts, CallFunc_SpawnStaticGhost_GhostInfo) == 0x0000A8, "Member 'BP_GhostTrailManager_C_SpawnGhosts::CallFunc_SpawnStaticGhost_GhostInfo' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.UpdateGhostVisual
// 0x0068 (0x0068 - 0x0000)
struct BP_GhostTrailManager_C_UpdateGhostVisual final
{
public:
	struct FE_GhostInfo                           GhostInfo;                                         // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         L_ExistTime;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_UpdateGhostVisual) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_UpdateGhostVisual");
static_assert(sizeof(BP_GhostTrailManager_C_UpdateGhostVisual) == 0x000068, "Wrong size on BP_GhostTrailManager_C_UpdateGhostVisual");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, GhostInfo) == 0x000000, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::GhostInfo' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, L_ExistTime) == 0x000038, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::L_ExistTime' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_GetFloatValue_ReturnValue) == 0x000040, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000054, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_UpdateGhostVisual, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_GhostTrailManager_C_UpdateGhostVisual::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.RevealLastGhosts
// 0x0080 (0x0080 - 0x0000)
struct BP_GhostTrailManager_C_RevealLastGhosts final
{
public:
	int32                                         GhostLastIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TrailNum;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         TmpGhost;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC8[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DC9[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCA[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FE_GhostInfo                           CallFunc_Array_Get_Item;                           // 0x0040(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_RevealLastGhosts) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_RevealLastGhosts");
static_assert(sizeof(BP_GhostTrailManager_C_RevealLastGhosts) == 0x000080, "Wrong size on BP_GhostTrailManager_C_RevealLastGhosts");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, GhostLastIndex) == 0x000000, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::GhostLastIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, TrailNum) == 0x000004, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::TrailNum' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, TmpGhost) == 0x000008, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::TmpGhost' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, Temp_int_Variable) == 0x000014, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Min_ReturnValue) == 0x000030, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RevealLastGhosts, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_GhostTrailManager_C_RevealLastGhosts::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.CalcVelocities
// 0x0050 (0x0050 - 0x0000)
struct BP_GhostTrailManager_C_CalcVelocities final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpLastLocation;                                   // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpLocation;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCB[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCC[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_CalcVelocities) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_CalcVelocities");
static_assert(sizeof(BP_GhostTrailManager_C_CalcVelocities) == 0x000050, "Wrong size on BP_GhostTrailManager_C_CalcVelocities");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, DeltaSeconds) == 0x000000, "Member 'BP_GhostTrailManager_C_CalcVelocities::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, TmpLastLocation) == 0x000004, "Member 'BP_GhostTrailManager_C_CalcVelocities::TmpLastLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, TmpLocation) == 0x000010, "Member 'BP_GhostTrailManager_C_CalcVelocities::TmpLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Loop_Num_Variable_1) == 0x000028, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'BP_GhostTrailManager_C_CalcVelocities::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcVelocities, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_GhostTrailManager_C_CalcVelocities::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SetGhostMaterialParams
// 0x0128 (0x0128 - 0x0000)
struct BP_GhostTrailManager_C_SetGhostMaterialParams final
{
public:
	struct FE_GhostInfo                           Ghost;                                             // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         TmpParamIndex;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DCD[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FE_GhostMaterialParam                  TmpParam;                                          // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FE_GhostInfo                           L_Ghost;                                           // 0x0058(0x0038)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCE[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetScalarParameterByIndex_ReturnValue;    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetScalarParameterByIndex_ReturnValue_1;  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DCF[0x2];                                     // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetVectorParameterByIndex_ReturnValue;    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD0[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD1[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD2[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x0104(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD3[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_SetGhostMaterialParams) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_SetGhostMaterialParams");
static_assert(sizeof(BP_GhostTrailManager_C_SetGhostMaterialParams) == 0x000128, "Wrong size on BP_GhostTrailManager_C_SetGhostMaterialParams");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Ghost) == 0x000000, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Ghost' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, TmpParamIndex) == 0x000038, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::TmpParamIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, TmpParam) == 0x000040, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::TmpParam' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, L_Ghost) == 0x000058, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::L_Ghost' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_IsValid_ReturnValue_2) == 0x000092, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_IsValid_ReturnValue_3) == 0x000093, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_IsValid_ReturnValue_4) == 0x000094, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Loop_Num_Variable) == 0x000098, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_GetFloatValue_ReturnValue) == 0x0000A8, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_SetScalarParameterByIndex_ReturnValue) == 0x0000AC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_SetScalarParameterByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_SetScalarParameterByIndex_ReturnValue_1) == 0x0000AD, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_SetScalarParameterByIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000B8, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_GetLinearColorValue_ReturnValue) == 0x0000BC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_SetVectorParameterByIndex_ReturnValue) == 0x0000CC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_SetVectorParameterByIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Loop_Num_Variable_1) == 0x0000D0, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000EC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000F8, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000FC, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_GetFloatValue_ReturnValue_1) == 0x000100, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x000104, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, Temp_int_Array_Index_Variable_1) == 0x000114, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Array_Length_ReturnValue_2) == 0x000118, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00011D, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SetGhostMaterialParams, CallFunc_Array_Length_ReturnValue_3) == 0x000120, "Member 'BP_GhostTrailManager_C_SetGhostMaterialParams::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.AddMeshToTrail
// 0x0098 (0x0098 - 0x0000)
struct BP_GhostTrailManager_C_AddMeshToTrail final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CacheNum;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_AddSkeletalMeshCache_AddedMesh;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddStaticMeshCache_AddedMesh;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD6[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD8[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD9[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDA[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_AddMeshToTrail) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_AddMeshToTrail");
static_assert(sizeof(BP_GhostTrailManager_C_AddMeshToTrail) == 0x000098, "Wrong size on BP_GhostTrailManager_C_AddMeshToTrail");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, Mesh) == 0x000000, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CacheNum) == 0x000008, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CacheNum' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, L_Mesh) == 0x000010, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, Temp_int_Variable) == 0x000018, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Length_ReturnValue_2) == 0x000028, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_AddSkeletalMeshCache_AddedMesh) == 0x000030, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_AddSkeletalMeshCache_AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Length_ReturnValue_3) == 0x000038, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, Temp_int_Variable_1) == 0x00003C, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_AddStaticMeshCache_AddedMesh) == 0x000040, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_AddStaticMeshCache_AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000058, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_FTrunc_ReturnValue) == 0x000068, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000070, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Multiply_IntInt_ReturnValue) == 0x000084, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddMeshToTrail, CallFunc_Array_Add_ReturnValue_1) == 0x000094, "Member 'BP_GhostTrailManager_C_AddMeshToTrail::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.DestroyGhostAll
// 0x0050 (0x0050 - 0x0000)
struct BP_GhostTrailManager_C_DestroyGhostAll final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DDB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FE_GhostInfo                           CallFunc_Array_Get_Item;                           // 0x0010(0x0038)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_DestroyGhostAll) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_DestroyGhostAll");
static_assert(sizeof(BP_GhostTrailManager_C_DestroyGhostAll) == 0x000050, "Wrong size on BP_GhostTrailManager_C_DestroyGhostAll");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyGhostAll, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GhostTrailManager_C_DestroyGhostAll::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.ChangeMasterRelative
// 0x00E0 (0x00E0 - 0x0000)
struct BP_GhostTrailManager_C_ChangeMasterRelative final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                A;                                                 // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DDC[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0040(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DDD[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_ChangeMasterRelative) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_ChangeMasterRelative");
static_assert(sizeof(BP_GhostTrailManager_C_ChangeMasterRelative) == 0x0000E0, "Wrong size on BP_GhostTrailManager_C_ChangeMasterRelative");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, InTransform) == 0x000000, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::InTransform' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, A) == 0x000030, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::A' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, ReturnValue) == 0x000040, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000094, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ChangeMasterRelative, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_GhostTrailManager_C_ChangeMasterRelative::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SetIgnoreLastInvisible
// 0x0001 (0x0001 - 0x0000)
struct BP_GhostTrailManager_C_SetIgnoreLastInvisible final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_SetIgnoreLastInvisible) == 0x000001, "Wrong alignment on BP_GhostTrailManager_C_SetIgnoreLastInvisible");
static_assert(sizeof(BP_GhostTrailManager_C_SetIgnoreLastInvisible) == 0x000001, "Wrong size on BP_GhostTrailManager_C_SetIgnoreLastInvisible");
static_assert(offsetof(BP_GhostTrailManager_C_SetIgnoreLastInvisible, Flag) == 0x000000, "Member 'BP_GhostTrailManager_C_SetIgnoreLastInvisible::Flag' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SetColor
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailManager_C_SetColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_SetColor) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_SetColor");
static_assert(sizeof(BP_GhostTrailManager_C_SetColor) == 0x000010, "Wrong size on BP_GhostTrailManager_C_SetColor");
static_assert(offsetof(BP_GhostTrailManager_C_SetColor, Color) == 0x000000, "Member 'BP_GhostTrailManager_C_SetColor::Color' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.PrivateCalcVelocity
// 0x0088 (0x0088 - 0x0000)
struct BP_GhostTrailManager_C_PrivateCalcVelocity final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DDE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        LastLocations;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FVector>                        Velocities;                                        // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpLastLocation;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TmpLocation;                                       // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DDF[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_PrivateCalcVelocity) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_PrivateCalcVelocity");
static_assert(sizeof(BP_GhostTrailManager_C_PrivateCalcVelocity) == 0x000088, "Wrong size on BP_GhostTrailManager_C_PrivateCalcVelocity");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, Mesh) == 0x000000, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, Param_Index) == 0x000008, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, LastLocations) == 0x000010, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::LastLocations' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, Velocities) == 0x000020, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::Velocities' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, DeltaSeconds) == 0x000030, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, TmpLastLocation) == 0x000034, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::TmpLastLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, TmpLocation) == 0x000040, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::TmpLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00004C, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000064, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateCalcVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BP_GhostTrailManager_C_PrivateCalcVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.AddStaticMeshCache
// 0x0060 (0x0060 - 0x0000)
struct BP_GhostTrailManager_C_AddStaticMeshCache final
{
public:
	class UStaticMeshComponent*                   AddedMesh;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE0[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_AddStaticMeshCache) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_AddStaticMeshCache");
static_assert(sizeof(BP_GhostTrailManager_C_AddStaticMeshCache) == 0x000060, "Wrong size on BP_GhostTrailManager_C_AddStaticMeshCache");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, AddedMesh) == 0x000000, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, Temp_struct_Variable) == 0x000010, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, Temp_bool_Variable) == 0x000040, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddStaticMeshCache, CallFunc_Array_Add_ReturnValue_1) == 0x000054, "Member 'BP_GhostTrailManager_C_AddStaticMeshCache::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.AddSkeletalMeshCache
// 0x0060 (0x0060 - 0x0000)
struct BP_GhostTrailManager_C_AddSkeletalMeshCache final
{
public:
	class UPoseableMeshComponent*                 AddedMesh;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE2[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_AddSkeletalMeshCache) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_AddSkeletalMeshCache");
static_assert(sizeof(BP_GhostTrailManager_C_AddSkeletalMeshCache) == 0x000060, "Wrong size on BP_GhostTrailManager_C_AddSkeletalMeshCache");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, AddedMesh) == 0x000000, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, Temp_struct_Variable) == 0x000010, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, Temp_bool_Variable) == 0x000040, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddSkeletalMeshCache, CallFunc_Array_Add_ReturnValue_1) == 0x000054, "Member 'BP_GhostTrailManager_C_AddSkeletalMeshCache::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SearchOrAddStaticMeshCache
// 0x0058 (0x0058 - 0x0000)
struct BP_GhostTrailManager_C_SearchOrAddStaticMeshCache final
{
public:
	class UStaticMeshComponent*                   CachedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Tmp;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RetMesh;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE4[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE5[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE6[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddStaticMeshCache_AddedMesh;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_SearchOrAddStaticMeshCache");
static_assert(sizeof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache) == 0x000058, "Wrong size on BP_GhostTrailManager_C_SearchOrAddStaticMeshCache");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CachedMesh) == 0x000000, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CachedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CheckIndex) == 0x000008, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CheckIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, Num) == 0x00000C, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::Num' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, Tmp) == 0x000010, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::Tmp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, RetMesh) == 0x000018, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::RetMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, Temp_bool_Variable) == 0x000020, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, Temp_int_Variable) == 0x000030, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Percent_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_AddStaticMeshCache_AddedMesh) == 0x000048, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_AddStaticMeshCache_AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddStaticMeshCache, CallFunc_IsActive_ReturnValue) == 0x000051, "Member 'BP_GhostTrailManager_C_SearchOrAddStaticMeshCache::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.SearchOrAddSkeletalMeshCache
// 0x0058 (0x0058 - 0x0000)
struct BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache final
{
public:
	class UPoseableMeshComponent*                 CachedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 Tmp;                                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 RetMesh;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE7[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DE8[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE9[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_AddSkeletalMeshCache_AddedMesh;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache");
static_assert(sizeof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache) == 0x000058, "Wrong size on BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CachedMesh) == 0x000000, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CachedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CheckIndex) == 0x000008, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CheckIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, Num) == 0x00000C, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::Num' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, Tmp) == 0x000010, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::Tmp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, RetMesh) == 0x000018, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::RetMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, Temp_bool_Variable) == 0x000020, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, Temp_int_Variable) == 0x000024, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Percent_IntInt_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_AddSkeletalMeshCache_AddedMesh) == 0x000048, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_AddSkeletalMeshCache_AddedMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache, CallFunc_IsActive_ReturnValue) == 0x000052, "Member 'BP_GhostTrailManager_C_SearchOrAddSkeletalMeshCache::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.PrivateRemoveComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_GhostTrailManager_C_PrivateRemoveComponent final
{
public:
	class UMeshComponent*                         Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_PrivateRemoveComponent) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_PrivateRemoveComponent");
static_assert(sizeof(BP_GhostTrailManager_C_PrivateRemoveComponent) == 0x000008, "Wrong size on BP_GhostTrailManager_C_PrivateRemoveComponent");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateRemoveComponent, Component) == 0x000000, "Member 'BP_GhostTrailManager_C_PrivateRemoveComponent::Component' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.PrivateSearchMaterialParamIndex
// 0x0050 (0x0050 - 0x0000)
struct BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex final
{
public:
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Param_Index;                                       // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 TmpList;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEA[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScalarParameterIndex_OutParameterIndex; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetScalarParameterIndex_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEB[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex");
static_assert(sizeof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex) == 0x000050, "Wrong size on BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, Mid) == 0x000000, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::Mid' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, Param_Index) == 0x000008, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, TmpList) == 0x000018, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::TmpList' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_GetScalarParameterIndex_OutParameterIndex) == 0x000040, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_GetScalarParameterIndex_OutParameterIndex' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_GetScalarParameterIndex_ReturnValue) == 0x000044, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_GetScalarParameterIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_SelectInt_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_GhostTrailManager_C_PrivateSearchMaterialParamIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.GetGhostDeltaSeconds
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailManager_C_GetGhostDeltaSeconds final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_GetGhostDeltaSeconds) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_GetGhostDeltaSeconds");
static_assert(sizeof(BP_GhostTrailManager_C_GetGhostDeltaSeconds) == 0x000010, "Wrong size on BP_GhostTrailManager_C_GetGhostDeltaSeconds");
static_assert(offsetof(BP_GhostTrailManager_C_GetGhostDeltaSeconds, DeltaSeconds) == 0x000000, "Member 'BP_GhostTrailManager_C_GetGhostDeltaSeconds::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_GetGhostDeltaSeconds, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000004, "Member 'BP_GhostTrailManager_C_GetGhostDeltaSeconds::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_GetGhostDeltaSeconds, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_GhostTrailManager_C_GetGhostDeltaSeconds::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_GetGhostDeltaSeconds, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_GhostTrailManager_C_GetGhostDeltaSeconds::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.RemoveMeshToTrail
// 0x0038 (0x0038 - 0x0000)
struct BP_GhostTrailManager_C_RemoveMeshToTrail final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CacheNum;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DEC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         L_Mesh;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DED[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_RemoveMeshToTrail) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_RemoveMeshToTrail");
static_assert(sizeof(BP_GhostTrailManager_C_RemoveMeshToTrail) == 0x000038, "Wrong size on BP_GhostTrailManager_C_RemoveMeshToTrail");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, Mesh) == 0x000000, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, CacheNum) == 0x000008, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::CacheNum' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, L_Mesh) == 0x000010, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::L_Mesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000018, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000028, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, CallFunc_Array_RemoveItem_ReturnValue) == 0x000031, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_RemoveMeshToTrail, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000032, "Member 'BP_GhostTrailManager_C_RemoveMeshToTrail::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.ResetMaterialParams
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailManager_C_ResetMaterialParams final
{
public:
	TArray<struct FE_GhostMaterialParam>          Params_0;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_ResetMaterialParams) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_ResetMaterialParams");
static_assert(sizeof(BP_GhostTrailManager_C_ResetMaterialParams) == 0x000010, "Wrong size on BP_GhostTrailManager_C_ResetMaterialParams");
static_assert(offsetof(BP_GhostTrailManager_C_ResetMaterialParams, Params_0) == 0x000000, "Member 'BP_GhostTrailManager_C_ResetMaterialParams::Params_0' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.GetColor
// 0x0010 (0x0010 - 0x0000)
struct BP_GhostTrailManager_C_GetColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_GetColor) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_GetColor");
static_assert(sizeof(BP_GhostTrailManager_C_GetColor) == 0x000010, "Wrong size on BP_GhostTrailManager_C_GetColor");
static_assert(offsetof(BP_GhostTrailManager_C_GetColor, Color) == 0x000000, "Member 'BP_GhostTrailManager_C_GetColor::Color' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.DestroyedComponents
// 0x0058 (0x0058 - 0x0000)
struct BP_GhostTrailManager_C_DestroyedComponents final
{
public:
	class USceneComponent*                        ExternalComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 SkeletalComp;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticComp;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEE[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DEF[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPoseableMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_DestroyedComponents) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_DestroyedComponents");
static_assert(sizeof(BP_GhostTrailManager_C_DestroyedComponents) == 0x000058, "Wrong size on BP_GhostTrailManager_C_DestroyedComponents");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, ExternalComp) == 0x000000, "Member 'BP_GhostTrailManager_C_DestroyedComponents::ExternalComp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, SkeletalComp) == 0x000008, "Member 'BP_GhostTrailManager_C_DestroyedComponents::SkeletalComp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, StaticComp) == 0x000010, "Member 'BP_GhostTrailManager_C_DestroyedComponents::StaticComp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_GhostTrailManager_C_DestroyedComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_GhostTrailManager_C_DestroyedComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_GhostTrailManager_C_DestroyedComponents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'BP_GhostTrailManager_C_DestroyedComponents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_IsValid_ReturnValue_1) == 0x000035, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000036, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_DestroyedComponents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000051, "Member 'BP_GhostTrailManager_C_DestroyedComponents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.AddExternalCache
// 0x0038 (0x0038 - 0x0000)
struct BP_GhostTrailManager_C_AddExternalCache final
{
public:
	TArray<class UPoseableMeshComponent*>         PoseableMeshComps;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UPoseableMeshComponent*                 PoseableMeshComp;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF0[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_AddExternalCache) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_AddExternalCache");
static_assert(sizeof(BP_GhostTrailManager_C_AddExternalCache) == 0x000038, "Wrong size on BP_GhostTrailManager_C_AddExternalCache");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, PoseableMeshComps) == 0x000000, "Member 'BP_GhostTrailManager_C_AddExternalCache::PoseableMeshComps' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, PoseableMeshComp) == 0x000010, "Member 'BP_GhostTrailManager_C_AddExternalCache::PoseableMeshComp' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GhostTrailManager_C_AddExternalCache::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_GhostTrailManager_C_AddExternalCache::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_GhostTrailManager_C_AddExternalCache::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, Temp_bool_Variable) == 0x00002D, "Member 'BP_GhostTrailManager_C_AddExternalCache::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_IsValid_ReturnValue) == 0x00002E, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_AddExternalCache, CallFunc_Array_Add_ReturnValue_1) == 0x000034, "Member 'BP_GhostTrailManager_C_AddExternalCache::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.ClearExternalCache
// 0x0028 (0x0028 - 0x0000)
struct BP_GhostTrailManager_C_ClearExternalCache final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DF2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPoseableMeshComponent*           Temp_object_Variable;                              // 0x0018(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_ClearExternalCache) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_ClearExternalCache");
static_assert(sizeof(BP_GhostTrailManager_C_ClearExternalCache) == 0x000028, "Wrong size on BP_GhostTrailManager_C_ClearExternalCache");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_GhostTrailManager_C_ClearExternalCache::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_GhostTrailManager_C_ClearExternalCache::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_GhostTrailManager_C_ClearExternalCache::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_GhostTrailManager_C_ClearExternalCache::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GhostTrailManager_C_ClearExternalCache::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, Temp_object_Variable) == 0x000018, "Member 'BP_GhostTrailManager_C_ClearExternalCache::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_ClearExternalCache::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_ClearExternalCache, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_GhostTrailManager_C_ClearExternalCache::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.PhotoModeTick
// 0x00C0 (0x00C0 - 0x0000)
struct BP_GhostTrailManager_C_PhotoModeTick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         LMesh;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LLocation;                                         // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF5[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF6[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRSResultCapsule                       CallFunc_CheckCollisionCapsule_Result;             // 0x009C(0x001C)(NoDestructor)
	bool                                          CallFunc_CheckCollisionCapsule_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GhostTrailManager_C_PhotoModeTick) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_PhotoModeTick");
static_assert(sizeof(BP_GhostTrailManager_C_PhotoModeTick) == 0x0000C0, "Wrong size on BP_GhostTrailManager_C_PhotoModeTick");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, ReturnValue) == 0x000000, "Member 'BP_GhostTrailManager_C_PhotoModeTick::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, LMesh) == 0x000008, "Member 'BP_GhostTrailManager_C_PhotoModeTick::LMesh' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, LLocation) == 0x000010, "Member 'BP_GhostTrailManager_C_PhotoModeTick::LLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, Temp_int_Loop_Num_Variable) == 0x000020, "Member 'BP_GhostTrailManager_C_PhotoModeTick::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_GhostTrailManager_C_PhotoModeTick::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_MakeVector_ReturnValue_1) == 0x00003C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_MakeVector_ReturnValue_2) == 0x000054, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_IsVisible_ReturnValue) == 0x00006C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00007C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000088, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000090, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_CheckCollisionCapsule_Result) == 0x00009C, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_CheckCollisionCapsule_Result' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_PhotoModeTick, CallFunc_CheckCollisionCapsule_ReturnValue) == 0x0000B8, "Member 'BP_GhostTrailManager_C_PhotoModeTick::CallFunc_CheckCollisionCapsule_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.EndPhotoMode
// 0x001C (0x001C - 0x0000)
struct BP_GhostTrailManager_C_EndPhotoMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_EndPhotoMode) == 0x000004, "Wrong alignment on BP_GhostTrailManager_C_EndPhotoMode");
static_assert(sizeof(BP_GhostTrailManager_C_EndPhotoMode) == 0x00001C, "Wrong size on BP_GhostTrailManager_C_EndPhotoMode");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, ReturnValue) == 0x000000, "Member 'BP_GhostTrailManager_C_EndPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GhostTrailManager_C_EndPhotoMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_GhostTrailManager_C_EndPhotoMode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GhostTrailManager_C_EndPhotoMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_GhostTrailManager_C_EndPhotoMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GhostTrailManager_C_EndPhotoMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_EndPhotoMode, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GhostTrailManager_C_EndPhotoMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.BeginPhotoMode
// 0x0040 (0x0040 - 0x0000)
struct BP_GhostTrailManager_C_BeginPhotoMode final
{
public:
	float                                         MeshOffset;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeight;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DF9[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DFB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PhotoModeCamera_C*                  CallFunc_GetActorOfClass_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFD[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_BeginPhotoMode) == 0x000008, "Wrong alignment on BP_GhostTrailManager_C_BeginPhotoMode");
static_assert(sizeof(BP_GhostTrailManager_C_BeginPhotoMode) == 0x000040, "Wrong size on BP_GhostTrailManager_C_BeginPhotoMode");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, MeshOffset) == 0x000000, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::MeshOffset' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CapsuleHeight) == 0x000004, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CapsuleRadius) == 0x000008, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, ReturnValue) == 0x00000C, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_GetActorOfClass_ReturnValue) == 0x000028, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_Array_Add_ReturnValue) == 0x000034, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_IsVisible_ReturnValue) == 0x000038, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_IsActive_ReturnValue) == 0x000039, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_BeginPhotoMode, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_GhostTrailManager_C_BeginPhotoMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_GhostTrailManager.BP_GhostTrailManager_C.CalcRandomOffsetLocation
// 0x0110 (0x0110 - 0x0000)
struct BP_GhostTrailManager_C_CalcRandomOffsetLocation final
{
public:
	struct FTransform                             BaseTransform;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                OffsetLocation;                                    // 0x0030(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_OwnerVelocity;                                   // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         L_VelocityRateType;                                // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                L_VelocityRate;                                    // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DFE[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GhostTrailManager_C_CalcRandomOffsetLocation) == 0x000010, "Wrong alignment on BP_GhostTrailManager_C_CalcRandomOffsetLocation");
static_assert(sizeof(BP_GhostTrailManager_C_CalcRandomOffsetLocation) == 0x000110, "Wrong size on BP_GhostTrailManager_C_CalcRandomOffsetLocation");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, BaseTransform) == 0x000000, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::BaseTransform' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, OffsetLocation) == 0x000030, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::OffsetLocation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, L_OwnerVelocity) == 0x00003C, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::L_OwnerVelocity' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, L_VelocityRateType) == 0x000048, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::L_VelocityRateType' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, L_VelocityRate) == 0x00004C, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::L_VelocityRate' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_BreakTransform_Location) == 0x00005C, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_BreakTransform_Rotation) == 0x000068, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_BreakTransform_Scale) == 0x000074, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000080, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Normal_ReturnValue) == 0x00008C, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_GetOwner_ReturnValue) == 0x000098, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_FClamp_ReturnValue) == 0x0000AC, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_GetVelocity_ReturnValue) == 0x0000B0, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_VLerp_ReturnValue) == 0x0000BC, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_RandomUnitVector_ReturnValue) == 0x0000C8, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000D4, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_FMax_ReturnValue) == 0x0000D8, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GhostTrailManager_C_CalcRandomOffsetLocation, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000104, "Member 'BP_GhostTrailManager_C_CalcRandomOffsetLocation::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");

}

