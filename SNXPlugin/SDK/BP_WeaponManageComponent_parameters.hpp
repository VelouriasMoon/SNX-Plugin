#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponManageComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ExecuteUbergraph_BP_WeaponManageComponent
// 0x000C (0x000C - 0x0000)
struct BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent");
static_assert(sizeof(BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent) == 0x00000C, "Wrong size on BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent");
static_assert(offsetof(BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent, EntryPoint) == 0x000000, "Member 'BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent, K2Node_Event_EndPlayReason) == 0x000008, "Member 'BP_WeaponManageComponent_C_ExecuteUbergraph_BP_WeaponManageComponent::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponManageComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_WeaponManageComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_WeaponManageComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_WeaponManageComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_WeaponManageComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_WeaponManageComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WeaponManageComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ReceiveTick");
static_assert(sizeof(BP_WeaponManageComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_WeaponManageComponent_C_ReceiveTick");
static_assert(offsetof(BP_WeaponManageComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WeaponManageComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.CreateWeapon
// 0x0200 (0x0200 - 0x0000)
struct BP_WeaponManageComponent_C_CreateWeapon final
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMainWeapon;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_568A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LWeaponID;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_568B[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_568C[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_24;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_568D[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_568E[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_568F[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x00DC(0x00D0)(NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5690[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5691[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5692[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_25;                              // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue;             // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5693[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_CreateWeapon) == 0x000010, "Wrong alignment on BP_WeaponManageComponent_C_CreateWeapon");
static_assert(sizeof(BP_WeaponManageComponent_C_CreateWeapon) == 0x000200, "Wrong size on BP_WeaponManageComponent_C_CreateWeapon");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, WeaponClass) == 0x000000, "Member 'BP_WeaponManageComponent_C_CreateWeapon::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, SocketName) == 0x000008, "Member 'BP_WeaponManageComponent_C_CreateWeapon::SocketName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, bMainWeapon) == 0x000010, "Member 'BP_WeaponManageComponent_C_CreateWeapon::bMainWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, LWeaponID) == 0x000014, "Member 'BP_WeaponManageComponent_C_CreateWeapon::LWeaponID' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_IsValidClass_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_2) == 0x000024, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_3) == 0x000028, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_4) == 0x00002C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_5) == 0x000030, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_6) == 0x000034, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_7) == 0x000038, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_8) == 0x00003C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_9) == 0x000040, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_10) == 0x000044, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_11) == 0x000048, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_12) == 0x00004C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_13) == 0x000050, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_14) == 0x000054, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_15) == 0x000058, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_16) == 0x00005C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_17) == 0x000060, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_18) == 0x000064, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_19) == 0x000068, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_20) == 0x00006C, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_21) == 0x000070, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_22) == 0x000074, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_23) == 0x000078, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_24) == 0x0000B0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPlayerID_self_CastInput) == 0x0000B8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPlayerID_ReturnValue) == 0x0000C8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_byte_Variable) == 0x0000C9, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPlayerManager_PlayerManager) == 0x0000D0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x0000DC, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPlayerID_self_CastInput_1) == 0x0001B0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetPlayerID_ReturnValue_1) == 0x0001C0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_SelectInt_ReturnValue) == 0x0001C4, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0001C8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_25) == 0x0001CC, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, Temp_int_Variable_26) == 0x0001D0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, K2Node_Select_Default) == 0x0001D4, "Member 'BP_WeaponManageComponent_C_CreateWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_GetActorStatType_ReturnValue) == 0x0001D8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_GetActorStatType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001E0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001E8, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateWeapon, CallFunc_Array_Add_ReturnValue) == 0x0001F0, "Member 'BP_WeaponManageComponent_C_CreateWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetBattleEffect
// 0x0050 (0x0050 - 0x0000)
struct BP_WeaponManageComponent_C_SetBattleEffect final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5694[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               LCopyPlayer;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCopyVisible_bVisible;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5695[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5696[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetBattleEffect) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SetBattleEffect");
static_assert(sizeof(BP_WeaponManageComponent_C_SetBattleEffect) == 0x000050, "Wrong size on BP_WeaponManageComponent_C_SetBattleEffect");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, bBattle) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, LCopyPlayer) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::LCopyPlayer' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_IsCopyVisible_bVisible) == 0x000029, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_IsCopyVisible_bVisible' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000030, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEffect, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_WeaponManageComponent_C_SetBattleEffect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetWeaponVisibility
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponManageComponent_C_SetWeaponVisibility final
{
public:
	bool                                          bVisibility;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bBattle;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWithSubWeapon;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5697[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SASCopyPlayerActor_C*               LCopyPlayer;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       LWeapon;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5698[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCopyVisible_bVisible;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5699[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetWeaponVisibility) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SetWeaponVisibility");
static_assert(sizeof(BP_WeaponManageComponent_C_SetWeaponVisibility) == 0x000060, "Wrong size on BP_WeaponManageComponent_C_SetWeaponVisibility");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, bVisibility) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, bBattle) == 0x000001, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, bWithSubWeapon) == 0x000002, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::bWithSubWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, LCopyPlayer) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::LCopyPlayer' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, LWeapon) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::LWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Loop_Num_Variable) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_IsCopyVisible_bVisible) == 0x000038, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_IsCopyVisible_bVisible' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000048, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialScalarParameter
// 0x0028 (0x0028 - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialScalarParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569B[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWeaponMaterialScalarParameter_bDummy;  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialScalarParameter) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialScalarParameter");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialScalarParameter) == 0x000028, "Wrong size on BP_WeaponManageComponent_C_SetMaterialScalarParameter");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, ParamName) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, Value) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarParameter, CallFunc_SetWeaponMaterialScalarParameter_bDummy) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarParameter::CallFunc_SetWeaponMaterialScalarParameter_bDummy' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialScalarArrayParameter
// 0x0040 (0x0040 - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetWeaponMaterialScalarArrayParameter_bDummy; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter) == 0x000040, "Wrong size on BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, ParamName) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, Value) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::Value' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, Temp_int_Variable) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter, CallFunc_SetWeaponMaterialScalarArrayParameter_bDummy) == 0x000039, "Member 'BP_WeaponManageComponent_C_SetMaterialScalarArrayParameter::CallFunc_SetWeaponMaterialScalarArrayParameter_bDummy' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialVectorParameter
// 0x0034 (0x0034 - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialVectorParameter final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWeaponMaterialVectorParameter_bDummy;  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialVectorParameter) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialVectorParameter");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialVectorParameter) == 0x000034, "Wrong size on BP_WeaponManageComponent_C_SetMaterialVectorParameter");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, ParamName) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, Color) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorParameter, CallFunc_SetWeaponMaterialVectorParameter_bDummy) == 0x000030, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorParameter::CallFunc_SetWeaponMaterialVectorParameter_bDummy' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetShadowEnable
// 0x001C (0x001C - 0x0000)
struct BP_WeaponManageComponent_C_SetShadowEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetShadowEnable) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetShadowEnable");
static_assert(sizeof(BP_WeaponManageComponent_C_SetShadowEnable) == 0x00001C, "Wrong size on BP_WeaponManageComponent_C_SetShadowEnable");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, bEnable) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetShadowEnable, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetShadowEnable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetWeaponHidden
// 0x001C (0x001C - 0x0000)
struct BP_WeaponManageComponent_C_SetWeaponHidden final
{
public:
	bool                                          bHidden;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A1[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetWeaponHidden) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetWeaponHidden");
static_assert(sizeof(BP_WeaponManageComponent_C_SetWeaponHidden) == 0x00001C, "Wrong size on BP_WeaponManageComponent_C_SetWeaponHidden");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, bHidden) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::bHidden' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponHidden, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetWeaponHidden::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.AttachWeapon
// 0x0098 (0x0098 - 0x0000)
struct BP_WeaponManageComponent_C_AttachWeapon final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForceBattle;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SASCopyPlayerActor_C*>       LCopyList;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A3[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56A4[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A5[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SASCopyPlayerActor_C*>       CallFunc_GetCopyPlayerList_CopyPlayerList;         // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A6[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponSocketName_SocketName;           // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A7[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_AttachWeapon) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_AttachWeapon");
static_assert(sizeof(BP_WeaponManageComponent_C_AttachWeapon) == 0x000098, "Wrong size on BP_WeaponManageComponent_C_AttachWeapon");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, bBattle) == 0x000000, "Member 'BP_WeaponManageComponent_C_AttachWeapon::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, ForceBattle) == 0x000001, "Member 'BP_WeaponManageComponent_C_AttachWeapon::ForceBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, LCopyList) == 0x000008, "Member 'BP_WeaponManageComponent_C_AttachWeapon::LCopyList' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Num_Variable_2) == 0x000034, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_IsPlayerStatus_Result) == 0x000039, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003D, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_GetPlayerID_self_CastInput) == 0x000048, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_GetPlayerID_ReturnValue) == 0x000058, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'BP_WeaponManageComponent_C_AttachWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_GetCopyPlayerList_CopyPlayerList) == 0x000060, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_GetCopyPlayerList_CopyPlayerList' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_GetWeaponSocketName_SocketName) == 0x00007C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_GetWeaponSocketName_SocketName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'BP_WeaponManageComponent_C_AttachWeapon::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Less_IntInt_ReturnValue_2) == 0x00008C, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_AttachWeapon, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_WeaponManageComponent_C_AttachWeapon::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.Initialize
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponManageComponent_C_Initialize final
{
public:
	class ARSBattlePlayer_C*                      Param_OwnerPlayer;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Param_AttachMesh;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bCopy;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_Initialize");
static_assert(sizeof(BP_WeaponManageComponent_C_Initialize) == 0x000018, "Wrong size on BP_WeaponManageComponent_C_Initialize");
static_assert(offsetof(BP_WeaponManageComponent_C_Initialize, Param_OwnerPlayer) == 0x000000, "Member 'BP_WeaponManageComponent_C_Initialize::Param_OwnerPlayer' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_Initialize, Param_AttachMesh) == 0x000008, "Member 'BP_WeaponManageComponent_C_Initialize::Param_AttachMesh' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_Initialize, Param_bCopy) == 0x000010, "Member 'BP_WeaponManageComponent_C_Initialize::Param_bCopy' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetLoopAnim
// 0x001C (0x001C - 0x0000)
struct BP_WeaponManageComponent_C_SetLoopAnim final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56A9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetLoopAnim) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetLoopAnim");
static_assert(sizeof(BP_WeaponManageComponent_C_SetLoopAnim) == 0x00001C, "Wrong size on BP_WeaponManageComponent_C_SetLoopAnim");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, bBattle) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetLoopAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetLoopAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetTransAnim
// 0x001C (0x001C - 0x0000)
struct BP_WeaponManageComponent_C_SetTransAnim final
{
public:
	bool                                          bBattle;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetTransAnim) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetTransAnim");
static_assert(sizeof(BP_WeaponManageComponent_C_SetTransAnim) == 0x00001C, "Wrong size on BP_WeaponManageComponent_C_SetTransAnim");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, bBattle) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetTransAnim::bBattle' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetTransAnim::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetTransAnim::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetTransAnim::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetTransAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetTransAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetTransAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetTransAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetBattleEmission
// 0x0020 (0x0020 - 0x0000)
struct BP_WeaponManageComponent_C_SetBattleEmission final
{
public:
	bool                                          ForceIn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagIn;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LerpTimeIn;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetBattleEmission) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetBattleEmission");
static_assert(sizeof(BP_WeaponManageComponent_C_SetBattleEmission) == 0x000020, "Wrong size on BP_WeaponManageComponent_C_SetBattleEmission");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, ForceIn) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::ForceIn' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, FlagIn) == 0x000001, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::FlagIn' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, LerpTimeIn) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::LerpTimeIn' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetBattleEmission, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetBattleEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialAlphaPsychicEmission
// 0x0024 (0x0024 - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission) == 0x000024, "Wrong size on BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, Alpha) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::Alpha' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, ClaimantName) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialAlphaPsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ResetMaterialAlphaPsychicEmission
// 0x0020 (0x0020 - 0x0000)
struct BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56AF[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission");
static_assert(sizeof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission) == 0x000020, "Wrong size on BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, ClaimantName) == 0x000000, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_ResetMaterialAlphaPsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialColorPsychicEmission
// 0x002C (0x002C - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission final
{
public:
	float                                         R;                                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         G;                                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         B;                                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission) == 0x00002C, "Wrong size on BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, R) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::R' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, G) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::G' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, B) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::B' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, ClaimantName) == 0x00000C, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetMaterialColorPsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ResetMaterialColorPsychicEmission
// 0x0020 (0x0020 - 0x0000)
struct BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission final
{
public:
	class FName                                   ClaimantName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B1[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission");
static_assert(sizeof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission) == 0x000020, "Wrong size on BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, ClaimantName) == 0x000000, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::ClaimantName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_ResetMaterialColorPsychicEmission::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.CreateThrowWeapon
// 0x0060 (0x0060 - 0x0000)
struct BP_WeaponManageComponent_C_CreateThrowWeapon final
{
public:
	class UClass*                                 WeaponClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56B2[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EREDActorStatType                             CallFunc_GetActorStatType_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56B3[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_CreateThrowWeapon) == 0x000010, "Wrong alignment on BP_WeaponManageComponent_C_CreateThrowWeapon");
static_assert(sizeof(BP_WeaponManageComponent_C_CreateThrowWeapon) == 0x000060, "Wrong size on BP_WeaponManageComponent_C_CreateThrowWeapon");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, WeaponClass) == 0x000000, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::WeaponClass' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_IsValidClass_ReturnValue) == 0x000040, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_GetActorStatType_ReturnValue) == 0x000041, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_GetActorStatType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CreateThrowWeapon, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_WeaponManageComponent_C_CreateThrowWeapon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.DestroyWeapon
// 0x0038 (0x0038 - 0x0000)
struct BP_WeaponManageComponent_C_DestroyWeapon final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B5[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B6[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_DestroyWeapon) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_DestroyWeapon");
static_assert(sizeof(BP_WeaponManageComponent_C_DestroyWeapon) == 0x000038, "Wrong size on BP_WeaponManageComponent_C_DestroyWeapon");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_DestroyWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_WeaponManageComponent_C_DestroyWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetWeaponVisibilityByIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisibility;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B7[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex");
static_assert(sizeof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex) == 0x000010, "Wrong size on BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex, Param_Index) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex, bVisibility) == 0x000004, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex::bVisibility' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000005, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_WeaponManageComponent_C_SetWeaponVisibilityByIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetSeparateVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponManageComponent_C_SetSeparateVisibility final
{
public:
	bool                                          bSeparate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetSeparateVisibility) == 0x000001, "Wrong alignment on BP_WeaponManageComponent_C_SetSeparateVisibility");
static_assert(sizeof(BP_WeaponManageComponent_C_SetSeparateVisibility) == 0x000001, "Wrong size on BP_WeaponManageComponent_C_SetSeparateVisibility");
static_assert(offsetof(BP_WeaponManageComponent_C_SetSeparateVisibility, bSeparate) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetSeparateVisibility::bSeparate' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ChangeWeaponScale
// 0x0044 (0x0044 - 0x0000)
struct BP_WeaponManageComponent_C_ChangeWeaponScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56B9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BA[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BB[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRelativeScale3D_ReturnValue;      // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ChangeWeaponScale) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ChangeWeaponScale");
static_assert(sizeof(BP_WeaponManageComponent_C_ChangeWeaponScale) == 0x000044, "Wrong size on BP_WeaponManageComponent_C_ChangeWeaponScale");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Scale) == 0x000000, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Scale' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Time) == 0x00000C, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Time' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Not_PreBool_ReturnValue_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Not_PreBool_ReturnValue_2) == 0x000021, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ChangeWeaponScale, CallFunc_GetActorRelativeScale3D_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_ChangeWeaponScale::CallFunc_GetActorRelativeScale3D_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ResetWeaponScale
// 0x0034 (0x0034 - 0x0000)
struct BP_WeaponManageComponent_C_ResetWeaponScale final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BE[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56BF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C0[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRelativeScale3D_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ResetWeaponScale) == 0x000004, "Wrong alignment on BP_WeaponManageComponent_C_ResetWeaponScale");
static_assert(sizeof(BP_WeaponManageComponent_C_ResetWeaponScale) == 0x000034, "Wrong size on BP_WeaponManageComponent_C_ResetWeaponScale");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, Time) == 0x000000, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::Time' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_GetActorRelativeScale3D_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_GetActorRelativeScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetWeaponScale, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_WeaponManageComponent_C_ResetWeaponScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.UpdateWeaponScale
// 0x0080 (0x0080 - 0x0000)
struct BP_WeaponManageComponent_C_UpdateWeaponScale final
{
public:
	struct FVector                                LScale;                                            // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C1[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C2[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_WeaponCh0200_C>   K2Node_DynamicCast_AsBPI_Weapon_Ch_0200;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetWeaponScaleWp0200_bDummy;              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C3[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C4[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_UpdateWeaponScale) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_UpdateWeaponScale");
static_assert(sizeof(BP_WeaponManageComponent_C_UpdateWeaponScale) == 0x000080, "Wrong size on BP_WeaponManageComponent_C_UpdateWeaponScale");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, LScale) == 0x000000, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::LScale' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Loop_Num_Variable_1) == 0x000020, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_GetPlayerID_self_CastInput) == 0x000028, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_GetPlayerID_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, K2Node_DynamicCast_AsBPI_Weapon_Ch_0200) == 0x000040, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::K2Node_DynamicCast_AsBPI_Weapon_Ch_0200' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_SetWeaponScaleWp0200_bDummy) == 0x000052, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_SetWeaponScaleWp0200_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_GetRate_ReturnValue) == 0x000068, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_VEase_ReturnValue) == 0x00006C, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_UpdateWeaponScale, CallFunc_IsOver_ReturnValue) == 0x000078, "Member 'BP_WeaponManageComponent_C_UpdateWeaponScale::CallFunc_IsOver_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SwitchMaterial
// 0x0090 (0x0090 - 0x0000)
struct BP_WeaponManageComponent_C_SwitchMaterial final
{
public:
	struct FMaterialSwitchCache                   MaterialCache;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           ExcludeSlots;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UMaterialInterface*                     NewMaterial;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C5[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C6[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C7[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56C8[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_SwitchMaterial) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SwitchMaterial");
static_assert(sizeof(BP_WeaponManageComponent_C_SwitchMaterial) == 0x000090, "Wrong size on BP_WeaponManageComponent_C_SwitchMaterial");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, MaterialCache) == 0x000000, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::MaterialCache' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, ExcludeSlots) == 0x000010, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::ExcludeSlots' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, NewMaterial) == 0x000020, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, SkelMeshComp) == 0x000028, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Weapon) == 0x000030, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Loop_Num_Variable) == 0x000038, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Loop_Num_Variable_1) == 0x00004C, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_GetExtraMesh_ExtraMesh) == 0x000068, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID) == 0x00007C, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000084, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SwitchMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_WeaponManageComponent_C_SwitchMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.SetMaterialVectorArrayParameter
// 0x0040 (0x0040 - 0x0000)
struct BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter final
{
public:
	TArray<class FName>                           ParamName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   Color;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetWeaponMaterialVectorArrayParameter_bDummy; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter");
static_assert(sizeof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter) == 0x000040, "Wrong size on BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, ParamName) == 0x000000, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::ParamName' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, Color) == 0x000010, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::Color' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, Temp_int_Variable) == 0x000020, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter, CallFunc_SetWeaponMaterialVectorArrayParameter_bDummy) == 0x000039, "Member 'BP_WeaponManageComponent_C_SetMaterialVectorArrayParameter::CallFunc_SetWeaponMaterialVectorArrayParameter_bDummy' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.ResetupSwitchMaterial
// 0x00A8 (0x00A8 - 0x0000)
struct BP_WeaponManageComponent_C_ResetupSwitchMaterial final
{
public:
	struct FMaterialSwitchCache                   MaterialCache;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           ExcludeSlots;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UMaterialInterface*                     NewMaterial;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LayerIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CA[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56CB[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56CC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SwitchMaterialExclude_LayerID;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56CD[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56CE[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_GetExtraMesh_ExtraMesh;                   // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56CF[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_ResetupSwitchMaterial) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_ResetupSwitchMaterial");
static_assert(sizeof(BP_WeaponManageComponent_C_ResetupSwitchMaterial) == 0x0000A8, "Wrong size on BP_WeaponManageComponent_C_ResetupSwitchMaterial");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, MaterialCache) == 0x000000, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::MaterialCache' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, ExcludeSlots) == 0x000010, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::ExcludeSlots' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, NewMaterial) == 0x000020, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, SkelMeshComp) == 0x000028, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, LayerIndex) == 0x000030, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Weapon) == 0x000038, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Loop_Num_Variable) == 0x000040, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Variable) == 0x000044, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Loop_Num_Variable_1) == 0x00005C, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_SwitchMaterialExclude_LayerID) == 0x000068, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_SwitchMaterialExclude_LayerID' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, Temp_int_Variable_1) == 0x000080, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000084, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_GetExtraMesh_ExtraMesh) == 0x000088, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_GetExtraMesh_ExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_ResetupSwitchMaterial, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'BP_WeaponManageComponent_C_ResetupSwitchMaterial::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.RestoreSwtichMaterial
// 0x0030 (0x0030 - 0x0000)
struct BP_WeaponManageComponent_C_RestoreSwtichMaterial final
{
public:
	struct FMaterialSwitchCache                   MaterialCache;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ClearCache;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LayerIndex;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_RestoreSwtichMaterial) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_RestoreSwtichMaterial");
static_assert(sizeof(BP_WeaponManageComponent_C_RestoreSwtichMaterial) == 0x000030, "Wrong size on BP_WeaponManageComponent_C_RestoreSwtichMaterial");
static_assert(offsetof(BP_WeaponManageComponent_C_RestoreSwtichMaterial, MaterialCache) == 0x000000, "Member 'BP_WeaponManageComponent_C_RestoreSwtichMaterial::MaterialCache' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_RestoreSwtichMaterial, ClearCache) == 0x000010, "Member 'BP_WeaponManageComponent_C_RestoreSwtichMaterial::ClearCache' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_RestoreSwtichMaterial, SkelMeshComp) == 0x000018, "Member 'BP_WeaponManageComponent_C_RestoreSwtichMaterial::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_RestoreSwtichMaterial, LayerIndex) == 0x000020, "Member 'BP_WeaponManageComponent_C_RestoreSwtichMaterial::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_RestoreSwtichMaterial, Weapon) == 0x000028, "Member 'BP_WeaponManageComponent_C_RestoreSwtichMaterial::Weapon' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.CompleteRestoreSwitchMaterial
// 0x0048 (0x0048 - 0x0000)
struct BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LayerIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeaponBase_C*                       Weapon;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D3[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_WeaponBase_C*>               CallFunc_GetWeaponList_WeaponList;                 // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D4[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial");
static_assert(sizeof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial) == 0x000048, "Wrong size on BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, SkelMeshComp) == 0x000000, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, LayerIndex) == 0x000008, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::LayerIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, Weapon) == 0x000010, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_GetWeaponList_WeaponList) == 0x000028, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_GetWeaponList_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Less_IntInt_ReturnValue) == 0x00003D, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_WeaponManageComponent_C_CompleteRestoreSwitchMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.GetWeaponList
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponManageComponent_C_GetWeaponList final
{
public:
	TArray<class ABP_WeaponBase_C*>               Param_WeaponList;                                  // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_GetWeaponList) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_GetWeaponList");
static_assert(sizeof(BP_WeaponManageComponent_C_GetWeaponList) == 0x000010, "Wrong size on BP_WeaponManageComponent_C_GetWeaponList");
static_assert(offsetof(BP_WeaponManageComponent_C_GetWeaponList, Param_WeaponList) == 0x000000, "Member 'BP_WeaponManageComponent_C_GetWeaponList::Param_WeaponList' has a wrong offset!");

// Function BP_WeaponManageComponent.BP_WeaponManageComponent_C.GetThrowWeaponList
// 0x0010 (0x0010 - 0x0000)
struct BP_WeaponManageComponent_C_GetThrowWeaponList final
{
public:
	TArray<class ABP_WeaponBase_C*>               Param_ThrowWeaponList;                             // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponManageComponent_C_GetThrowWeaponList) == 0x000008, "Wrong alignment on BP_WeaponManageComponent_C_GetThrowWeaponList");
static_assert(sizeof(BP_WeaponManageComponent_C_GetThrowWeaponList) == 0x000010, "Wrong size on BP_WeaponManageComponent_C_GetThrowWeaponList");
static_assert(offsetof(BP_WeaponManageComponent_C_GetThrowWeaponList, Param_ThrowWeaponList) == 0x000000, "Member 'BP_WeaponManageComponent_C_GetThrowWeaponList::Param_ThrowWeaponList' has a wrong offset!");

}

