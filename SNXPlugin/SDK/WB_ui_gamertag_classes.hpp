#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_gamertag

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_gamertag.WB_ui_gamertag_C
// 0x0050 (0x03F0 - 0x03A0)
class UWB_ui_gamertag_C final : public UUIGamerTag
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Default;                                           // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UREDImageBase*                          Icon_font_1;                                       // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_User_Id_1;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_User_Id_guide;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               UserIDGuide;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              BaseDispSize;                                      // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrentViewportSize;                               // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BaseMouseHitOffsetPos;                             // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              BaseMouseHitOffsetSize;                            // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_gamertag(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_gamertag_C">();
	}
	static class UWB_ui_gamertag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_gamertag_C>();
	}
};
static_assert(alignof(UWB_ui_gamertag_C) == 0x000008, "Wrong alignment on UWB_ui_gamertag_C");
static_assert(sizeof(UWB_ui_gamertag_C) == 0x0003F0, "Wrong size on UWB_ui_gamertag_C");
static_assert(offsetof(UWB_ui_gamertag_C, UberGraphFrame) == 0x0003A0, "Member 'UWB_ui_gamertag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, Default) == 0x0003A8, "Member 'UWB_ui_gamertag_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, Icon_font_1) == 0x0003B0, "Member 'UWB_ui_gamertag_C::Icon_font_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, Text_User_Id_1) == 0x0003B8, "Member 'UWB_ui_gamertag_C::Text_User_Id_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, Text_User_Id_guide) == 0x0003C0, "Member 'UWB_ui_gamertag_C::Text_User_Id_guide' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, UserIDGuide) == 0x0003C8, "Member 'UWB_ui_gamertag_C::UserIDGuide' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, BaseDispSize) == 0x0003D0, "Member 'UWB_ui_gamertag_C::BaseDispSize' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, CurrentViewportSize) == 0x0003D8, "Member 'UWB_ui_gamertag_C::CurrentViewportSize' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, BaseMouseHitOffsetPos) == 0x0003E0, "Member 'UWB_ui_gamertag_C::BaseMouseHitOffsetPos' has a wrong offset!");
static_assert(offsetof(UWB_ui_gamertag_C, BaseMouseHitOffsetSize) == 0x0003E8, "Member 'UWB_ui_gamertag_C::BaseMouseHitOffsetSize' has a wrong offset!");

}

