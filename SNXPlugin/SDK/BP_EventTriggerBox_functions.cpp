#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventTriggerBox

#include "Basic.hpp"

#include "BP_EventTriggerBox_classes.hpp"
#include "BP_EventTriggerBox_parameters.hpp"


namespace SDK
{

// Function BP_EventTriggerBox.BP_EventTriggerBox_C.ExecuteUbergraph_BP_EventTriggerBox
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::ExecuteUbergraph_BP_EventTriggerBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "ExecuteUbergraph_BP_EventTriggerBox");

	Params::BP_EventTriggerBox_C_ExecuteUbergraph_BP_EventTriggerBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.OnBondsProgressEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               TargetID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   bondsProgress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::OnBondsProgressEvent(EPlayerID TargetID, float bondsProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "OnBondsProgressEvent");

	Params::BP_EventTriggerBox_C_OnBondsProgressEvent Parms{};

	Parms.TargetID = TargetID;
	Parms.bondsProgress = bondsProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.SetReturnMoveMainChara
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DestroyedActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::SetReturnMoveMainChara(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "SetReturnMoveMainChara");

	Params::BP_EventTriggerBox_C_SetReturnMoveMainChara Parms{};

	Parms.DestroyedActor = DestroyedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "ReceiveTick");

	Params::BP_EventTriggerBox_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "ReceiveActorEndOverlap");

	Params::BP_EventTriggerBox_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventTriggerBox_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "ReceiveActorBeginOverlap");

	Params::BP_EventTriggerBox_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EventTriggerBox_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.OnEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Played                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventTriggerBox_C::OnEvent(class AActor* OtherActor, bool* Played)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "OnEvent");

	Params::BP_EventTriggerBox_C_OnEvent Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Played != nullptr)
		*Played = Parms.Played;
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.CheckEnableEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventTriggerBox_C::CheckEnableEvent(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "CheckEnableEvent");

	Params::BP_EventTriggerBox_C_CheckEnableEvent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.CheckWallCollisionEnabled
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventTriggerBox_C::CheckWallCollisionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "CheckWallCollisionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventTriggerBox.BP_EventTriggerBox_C.CheckEnableEventBase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventTriggerBox_C::CheckEnableEventBase(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventTriggerBox_C", "CheckEnableEventBase");

	Params::BP_EventTriggerBox_C_CheckEnableEventBase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}

}

