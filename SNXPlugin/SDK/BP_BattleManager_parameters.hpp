#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BattleManager

#include "Basic.hpp"

#include "FEventTriggerCommandData_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_EnemySound_structs.hpp"
#include "Struct_EnemyDeadLogParam_structs.hpp"
#include "EDeadFactor_structs.hpp"
#include "E_SASKind_structs.hpp"


namespace SDK::Params
{

// Function BP_BattleManager.BP_BattleManager_C.OnHpDownEvent__DelegateSignature
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleManager_C_OnHpDownEvent__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterHPEventInfo                  EventInfo;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_OnHpDownEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_BattleManager_C_OnHpDownEvent__DelegateSignature");
static_assert(sizeof(BP_BattleManager_C_OnHpDownEvent__DelegateSignature) == 0x000030, "Wrong size on BP_BattleManager_C_OnHpDownEvent__DelegateSignature");
static_assert(offsetof(BP_BattleManager_C_OnHpDownEvent__DelegateSignature, Actor) == 0x000000, "Member 'BP_BattleManager_C_OnHpDownEvent__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_OnHpDownEvent__DelegateSignature, EventInfo) == 0x000008, "Member 'BP_BattleManager_C_OnHpDownEvent__DelegateSignature::EventInfo' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.ExecuteUbergraph_BP_BattleManager
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Disp_Enemy_Name_Log_displayName;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB1[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLogGetItem_ReturnValue;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB2[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_helpTutoID;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_delaySec;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_2;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseTutoOperation_ReturnValue;           // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartTutoOperation_ReturnValue;           // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB3[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB4[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_3;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFade_ReturnValue;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeAnimation_ReturnValue;              // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB5[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventManager*                          K2Node_DynamicCast_AsEvent_Manager;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCutSceneEventNative_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameOverResult                               CallFunc_GetGameOverResult_Result;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEndGameOver_IsEnd;                      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB6[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager) == 0x000008, "Wrong alignment on BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager");
static_assert(sizeof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager) == 0x0000B0, "Wrong size on BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, EntryPoint) == 0x000000, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_NotEqual_NameName_ReturnValue) == 0x000021, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Is_Disp_Enemy_Name_Log_displayName) == 0x000022, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Is_Disp_Enemy_Name_Log_displayName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000028, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000030, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_SetLogGetItem_ReturnValue) == 0x000039, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_SetLogGetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, Temp_bool_Has_Been_Initd_Variable) == 0x00003A, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_helpTutoID) == 0x00003C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_helpTutoID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_Event_delaySec) == 0x000044, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_Event_delaySec' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetHUDMainGame_HUDMainGame_2) == 0x000048, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetHUDMainGame_HUDMainGame_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_CloseTutoOperation_ReturnValue) == 0x000055, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_CloseTutoOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_StartTutoOperation_ReturnValue) == 0x000056, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_StartTutoOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000068, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetHUDMainGame_HUDMainGame_3) == 0x000078, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetHUDMainGame_HUDMainGame_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsFade_ReturnValue) == 0x000080, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsFadeAnimation_ReturnValue) == 0x000081, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsFadeAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetEventManager_ReturnValue) == 0x000088, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_DynamicCast_AsEvent_Manager) == 0x000090, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_DynamicCast_AsEvent_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsCutSceneEventNative_ReturnValue) == 0x000099, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsCutSceneEventNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsValid_ReturnValue_2) == 0x00009A, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_GetGameOverResult_Result) == 0x00009B, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_GetGameOverResult_Result' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_IsEndGameOver_IsEnd) == 0x00009C, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_IsEndGameOver_IsEnd' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_SwitchEnum_CmpSuccess) == 0x00009D, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, CallFunc_Not_PreBool_ReturnValue) == 0x00009E, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'BP_BattleManager_C_ExecuteUbergraph_BP_BattleManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.StartTutorialOperation
// 0x000C (0x000C - 0x0000)
struct BP_BattleManager_C_StartTutorialOperation final
{
public:
	class FName                                   HelpTutoID;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelaySec;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_StartTutorialOperation) == 0x000004, "Wrong alignment on BP_BattleManager_C_StartTutorialOperation");
static_assert(sizeof(BP_BattleManager_C_StartTutorialOperation) == 0x00000C, "Wrong size on BP_BattleManager_C_StartTutorialOperation");
static_assert(offsetof(BP_BattleManager_C_StartTutorialOperation, HelpTutoID) == 0x000000, "Member 'BP_BattleManager_C_StartTutorialOperation::HelpTutoID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_StartTutorialOperation, DelaySec) == 0x000008, "Member 'BP_BattleManager_C_StartTutorialOperation::DelaySec' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BattleManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BattleManager_C_ReceiveTick");
static_assert(sizeof(BP_BattleManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_BattleManager_C_ReceiveTick");
static_assert(offsetof(BP_BattleManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BattleManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.UpdateBattleMode
// 0x01D8 (0x01D8 - 0x0000)
struct BP_BattleManager_C_UpdateBattleMode final
{
public:
	class ARSBattlePlayer_C*                      LMainPlayer;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbAfterPlayerStealth;                              // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbPlayerStealth;                                   // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB7[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugForceBattleFlag;                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BB9[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue; // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid; // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommandData              CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData; // 0x0050(0x0078)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMissionActive_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBB[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBC[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckBattleLog_StealthLost_ReturnValue;   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayBrainTalkStealthLost_ReturnValue;     // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBD[0x1];                                     // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForceBattle_ReturnValue;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBE[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStealth_bStealth;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStealth_bAfterStealth;            // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistBattleEnemy_bExistEnemy;        // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BBF[0x1];                                     // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_CheckExistBattleEnemy_LastEnemy;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0108(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyFenceEnabled_ReturnValue;            // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC0[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_EnemySound                               CallFunc_GetEnemySound_return;                     // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC1[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForceBattle_ReturnValue_1;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckExistBattleEnemy_bExistEnemy_1;      // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC2[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_CheckExistBattleEnemy_LastEnemy_1;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC3[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerBattle_bDummy;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC4[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPlayerBattle_bDummy_1;                 // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnyDead_Playing;                 // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC5[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue_1;              // 0x01C0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleMode_ReturnValue;                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_UpdateBattleMode) == 0x000008, "Wrong alignment on BP_BattleManager_C_UpdateBattleMode");
static_assert(sizeof(BP_BattleManager_C_UpdateBattleMode) == 0x0001D8, "Wrong size on BP_BattleManager_C_UpdateBattleMode");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, LMainPlayer) == 0x000000, "Member 'BP_BattleManager_C_UpdateBattleMode::LMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, LbAfterPlayerStealth) == 0x000008, "Member 'BP_BattleManager_C_UpdateBattleMode::LbAfterPlayerStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, LbPlayerStealth) == 0x000009, "Member 'BP_BattleManager_C_UpdateBattleMode::LbPlayerStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, PlayerManager) == 0x000010, "Member 'BP_BattleManager_C_UpdateBattleMode::PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, bDebugForceBattleFlag) == 0x000018, "Member 'BP_BattleManager_C_UpdateBattleMode::bDebugForceBattleFlag' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, PlayerList) == 0x000020, "Member 'BP_BattleManager_C_UpdateBattleMode::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_BattleManager_C_UpdateBattleMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetEventManager_EventManager) == 0x000038, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetLevelManager_LevelManager) == 0x000040, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue) == 0x00004A, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid) == 0x00004B, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValidEventCommandEnemyExterminationEvent_IsValid' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData) == 0x000050, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValidEventCommandEnemyExterminationEvent_EventTriggerCommandData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0000C8, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsMissionActive_ReturnValue) == 0x0000D0, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsMissionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetLevelManager_LevelManager_1) == 0x0000D8, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetLevelManager_LevelManager_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1) == 0x0000E0, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BP_BattleManager_C_UpdateBattleMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_CheckBattleLog_StealthLost_ReturnValue) == 0x0000EC, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_CheckBattleLog_StealthLost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Not_PreBool_ReturnValue) == 0x0000ED, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_PlayBrainTalkStealthLost_ReturnValue) == 0x0000EE, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_PlayBrainTalkStealthLost_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BP_BattleManager_C_UpdateBattleMode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsForceBattle_ReturnValue) == 0x0000F4, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsForceBattle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsPlayerStealth_bStealth) == 0x0000FC, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsPlayerStealth_bStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsPlayerStealth_bAfterStealth) == 0x0000FD, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsPlayerStealth_bAfterStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_CheckExistBattleEnemy_bExistEnemy) == 0x0000FE, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_CheckExistBattleEnemy_bExistEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_CheckExistBattleEnemy_LastEnemy) == 0x000100, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_CheckExistBattleEnemy_LastEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetPlayerList_ReturnValue) == 0x000108, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetPlayerManager_PlayerManager) == 0x000118, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000120, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsAnyFenceEnabled_ReturnValue) == 0x000128, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsAnyFenceEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetDebuggingManager_Manager) == 0x000130, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetEnemyManager_Manager) == 0x000138, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValid_ReturnValue_2) == 0x000140, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetEnemySound_return) == 0x000141, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetEnemySound_return' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetSoundManager_SoundManager) == 0x000148, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetSoundManager_SoundManager_1) == 0x000150, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetSoundManager_SoundManager_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000158, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsForceBattle_ReturnValue_1) == 0x000160, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsForceBattle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_CheckExistBattleEnemy_bExistEnemy_1) == 0x000161, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_CheckExistBattleEnemy_bExistEnemy_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_CheckExistBattleEnemy_LastEnemy_1) == 0x000168, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_CheckExistBattleEnemy_LastEnemy_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000180, "Member 'BP_BattleManager_C_UpdateBattleMode::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, K2Node_DynamicCast_bSuccess) == 0x000190, "Member 'BP_BattleManager_C_UpdateBattleMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_SetPlayerBattle_bDummy) == 0x000192, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_SetPlayerBattle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValid_ReturnValue_3) == 0x000193, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Array_Length_ReturnValue_1) == 0x000194, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, Temp_int_Array_Index_Variable_1) == 0x000198, "Member 'BP_BattleManager_C_UpdateBattleMode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Less_IntInt_ReturnValue_1) == 0x00019C, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x0001A8, "Member 'BP_BattleManager_C_UpdateBattleMode::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'BP_BattleManager_C_UpdateBattleMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsValid_ReturnValue_4) == 0x0001B9, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_SetPlayerBattle_bDummy_1) == 0x0001BA, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_SetPlayerBattle_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsPlayingAnyDead_Playing) == 0x0001BB, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsPlayingAnyDead_Playing' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_GetPlayerList_ReturnValue_1) == 0x0001C0, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_GetPlayerList_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleMode, CallFunc_IsBattleMode_ReturnValue) == 0x0001D0, "Member 'BP_BattleManager_C_UpdateBattleMode::CallFunc_IsBattleMode_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.UpdateBattleSound
// 0x0020 (0x0020 - 0x0000)
struct BP_BattleManager_C_UpdateBattleSound final
{
public:
	Enum_EnemySound                               EnemySound;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_EnemySound                               CallFunc_GetEnemySound_return;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattleMode_ReturnValue;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_UpdateBattleSound) == 0x000008, "Wrong alignment on BP_BattleManager_C_UpdateBattleSound");
static_assert(sizeof(BP_BattleManager_C_UpdateBattleSound) == 0x000020, "Wrong size on BP_BattleManager_C_UpdateBattleSound");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, EnemySound) == 0x000000, "Member 'BP_BattleManager_C_UpdateBattleSound::EnemySound' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_BattleManager_C_UpdateBattleSound::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, CallFunc_GetEnemyManager_Manager) == 0x000010, "Member 'BP_BattleManager_C_UpdateBattleSound::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, CallFunc_GetEnemySound_return) == 0x000018, "Member 'BP_BattleManager_C_UpdateBattleSound::CallFunc_GetEnemySound_return' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_BattleManager_C_UpdateBattleSound::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_UpdateBattleSound, CallFunc_IsBattleMode_ReturnValue) == 0x00001A, "Member 'BP_BattleManager_C_UpdateBattleSound::CallFunc_IsBattleMode_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.GetSituation
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_GetSituation final
{
public:
	class UBattleSituationComponent*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_GetSituation) == 0x000008, "Wrong alignment on BP_BattleManager_C_GetSituation");
static_assert(sizeof(BP_BattleManager_C_GetSituation) == 0x000008, "Wrong size on BP_BattleManager_C_GetSituation");
static_assert(offsetof(BP_BattleManager_C_GetSituation, ReturnValue) == 0x000000, "Member 'BP_BattleManager_C_GetSituation::ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetEnemyDead
// 0x06D0 (0x06D0 - 0x0000)
struct BP_BattleManager_C_SetEnemyDead final
{
public:
	class FName                                   Character_ID;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropDataIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EnemyLocation;                                     // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	EDeadFactor                                   DeadFactor;                                        // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC8[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeadActorLevel;                                    // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseDeadCharacterName;                              // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BC9[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DeadCharacterName;                                 // 0x004C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDefeatedMainPlayer;                               // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDispKillEnemyName;                               // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCA[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LogReplaceName;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCHitResult                           DeadHitResult;                                     // 0x0060(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class ARSBattlePlayer_C*                      LPluginRecoveryPlayer;                             // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     LPluginRecoveryPlayerID;                           // 0x0228(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BCB[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AccessoryCrashRecoveryRate;                        // 0x022C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsUnique;                                         // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LIsCV;                                             // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCC[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LogCharacterID;                                    // 0x0234(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LMainPlayerExp;                                    // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LProbability;                                      // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRandomValue;                                      // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 LIntegerList;                                      // 0x0248(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          LFindEnemyDropData;                                // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCD[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleLogParam                        BattleLogParam;                                    // 0x025C(0x0028)(Edit, BlueprintVisible, NoDestructor)
	float                                         LMoneyBonusRate;                                   // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    LPlayerManager;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LExpBonusRate;                                     // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BCE[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LMainPlayer;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LDropCopy;                                         // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BCF[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LDropProbabilityOffset;                            // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LMoney;                                            // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LExp;                                              // 0x02AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      LUserParamManager;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnemyDropDataCell                     LEnemyDropData;                                    // 0x02B8(0x0038)(Edit, BlueprintVisible)
	class FName                                   NewLocalVar_0;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnemyDeadLogDelayTime;                             // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip; // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD0[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetPlayerAccessoryExtendParameter_outParameter; // 0x0308(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item_1;                         // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD1[0x2];                                     // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD2[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD3[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMissionID_ReturnValue;                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD4[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1; // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD5[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD6[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsDriveMode_self_CastInput;               // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDriveMode_bDrive;                       // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD7[0x2];                                     // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattleLogParam                        K2Node_MakeStruct_BattleLogParam;                  // 0x0384(0x0028)(NoDestructor)
	uint8                                         Pad_2BD8[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetRightPlayer_Player;                    // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD9[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetLeftPlayer_Player;                     // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnemyExpDataCell                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x03E0(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDA[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyMoneyDataCell                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0400(0x0018)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDB[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyDropDataCell                     CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0420(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDC[0x3];                                     // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDD[0x3];                                     // 0x0461(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDE[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyDropData*                         CallFunc_GetEnemyDropData_ReturnValue;             // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BDF[0x3];                                     // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetIdFromIndex_ReturnValue;               // 0x0484(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE0[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyDropDataCell                     CallFunc_GetEnemyDropDataAllRound_EnemyDropData;   // 0x0490(0x0038)()
	bool                                          CallFunc_GetEnemyDropDataAllRound_ReturnValue;     // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE1[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     CallFunc_GetSASKindFromPlayerID_SAS;               // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE2[0x2];                                     // 0x04E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccessoryEffect_outValue;              // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAccessoryEffect_ReturnValue;           // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE3[0x3];                                     // 0x04E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE4[0x3];                                     // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE5[0x3];                                     // 0x04F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE6[0x3];                                     // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue_1;    // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE7[0x2];                                     // 0x050A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccessoryGoldBonus_Rate;               // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE8[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE9[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLearnedSkillParameter_bLearned;        // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEA[0x2];                                     // 0x053A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLearnedSkillParameter_Parameter;       // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLearnedSkillParameter_Parameter2;      // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistBattleMember_ReturnValue;          // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEB[0x3];                                     // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddExp_OutMainPlayerExp;                  // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEC[0x3];                                     // 0x0569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBattleBonusRate_Rate;                  // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillExtraType                             Temp_byte_Variable;                                // 0x0574(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BED[0x2];                                     // 0x0576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x057D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEE[0x2];                                     // 0x057E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip_1;        // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEF[0x3];                                     // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param_1;         // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_2;             // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLearnedSkillParameter_bLearned_1;      // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF0[0x2];                                     // 0x05A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLearnedSkillParameter_Parameter_1;     // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLearnedSkillParameter_Parameter2_1;    // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MathExpression_ReturnValue_1;               // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableSASEffect_bEnable;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF1[0x3];                                     // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsEnableSASEffect_Param0;                 // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param1;                 // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param2;                 // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_IsEnableSASEffect_Param3;                 // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x05C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_5;             // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF2[0x2];                                     // 0x05DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_6;             // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF3[0x7];                                     // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveSAS_ForKind_IsActive;             // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x05FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF4[0x2];                                     // 0x05FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_7;             // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0606(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF5[0x1];                                     // 0x0607(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillExtraType                             CallFunc_Array_Get_Item_4;                         // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF6[0x3];                                     // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0628(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0635(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddMoney_ReturnValue;                     // 0x0636(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0637(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetDataDropItemID_itemID;                 // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataDropItemID_itemNum;                // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataDropItemID_ReturnValue;            // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF7[0x3];                                     // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemDataCell_ItemData;                 // 0x0648(0x0080)()
	bool                                          CallFunc_GetItemDataCell_ReturnValue;              // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemRarity                                   CallFunc_GetItemRarity_ReturnValue;                // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BrainTalkBt_EnemyDrop_ReturnValue;        // 0x06CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_SetEnemyDead) == 0x000010, "Wrong alignment on BP_BattleManager_C_SetEnemyDead");
static_assert(sizeof(BP_BattleManager_C_SetEnemyDead) == 0x0006D0, "Wrong size on BP_BattleManager_C_SetEnemyDead");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, Character_ID) == 0x000000, "Member 'BP_BattleManager_C_SetEnemyDead::Character_ID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, DropDataIndex) == 0x000008, "Member 'BP_BattleManager_C_SetEnemyDead::DropDataIndex' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, EnemyLocation) == 0x000010, "Member 'BP_BattleManager_C_SetEnemyDead::EnemyLocation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, DeadFactor) == 0x000040, "Member 'BP_BattleManager_C_SetEnemyDead::DeadFactor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, DeadActorLevel) == 0x000044, "Member 'BP_BattleManager_C_SetEnemyDead::DeadActorLevel' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, UseDeadCharacterName) == 0x000048, "Member 'BP_BattleManager_C_SetEnemyDead::UseDeadCharacterName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, DeadCharacterName) == 0x00004C, "Member 'BP_BattleManager_C_SetEnemyDead::DeadCharacterName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, bDefeatedMainPlayer) == 0x000054, "Member 'BP_BattleManager_C_SetEnemyDead::bDefeatedMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, IsDispKillEnemyName) == 0x000055, "Member 'BP_BattleManager_C_SetEnemyDead::IsDispKillEnemyName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LogReplaceName) == 0x000058, "Member 'BP_BattleManager_C_SetEnemyDead::LogReplaceName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, DeadHitResult) == 0x000060, "Member 'BP_BattleManager_C_SetEnemyDead::DeadHitResult' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LPluginRecoveryPlayer) == 0x000220, "Member 'BP_BattleManager_C_SetEnemyDead::LPluginRecoveryPlayer' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LPluginRecoveryPlayerID) == 0x000228, "Member 'BP_BattleManager_C_SetEnemyDead::LPluginRecoveryPlayerID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, AccessoryCrashRecoveryRate) == 0x00022C, "Member 'BP_BattleManager_C_SetEnemyDead::AccessoryCrashRecoveryRate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LIsUnique) == 0x000230, "Member 'BP_BattleManager_C_SetEnemyDead::LIsUnique' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LIsCV) == 0x000231, "Member 'BP_BattleManager_C_SetEnemyDead::LIsCV' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LogCharacterID) == 0x000234, "Member 'BP_BattleManager_C_SetEnemyDead::LogCharacterID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LMainPlayerExp) == 0x00023C, "Member 'BP_BattleManager_C_SetEnemyDead::LMainPlayerExp' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LProbability) == 0x000240, "Member 'BP_BattleManager_C_SetEnemyDead::LProbability' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LRandomValue) == 0x000244, "Member 'BP_BattleManager_C_SetEnemyDead::LRandomValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LIntegerList) == 0x000248, "Member 'BP_BattleManager_C_SetEnemyDead::LIntegerList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LFindEnemyDropData) == 0x000258, "Member 'BP_BattleManager_C_SetEnemyDead::LFindEnemyDropData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, BattleLogParam) == 0x00025C, "Member 'BP_BattleManager_C_SetEnemyDead::BattleLogParam' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LMoneyBonusRate) == 0x000284, "Member 'BP_BattleManager_C_SetEnemyDead::LMoneyBonusRate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LPlayerManager) == 0x000288, "Member 'BP_BattleManager_C_SetEnemyDead::LPlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LExpBonusRate) == 0x000290, "Member 'BP_BattleManager_C_SetEnemyDead::LExpBonusRate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LMainPlayer) == 0x000298, "Member 'BP_BattleManager_C_SetEnemyDead::LMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LDropCopy) == 0x0002A0, "Member 'BP_BattleManager_C_SetEnemyDead::LDropCopy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LDropProbabilityOffset) == 0x0002A4, "Member 'BP_BattleManager_C_SetEnemyDead::LDropProbabilityOffset' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LMoney) == 0x0002A8, "Member 'BP_BattleManager_C_SetEnemyDead::LMoney' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LExp) == 0x0002AC, "Member 'BP_BattleManager_C_SetEnemyDead::LExp' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LUserParamManager) == 0x0002B0, "Member 'BP_BattleManager_C_SetEnemyDead::LUserParamManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, LEnemyDropData) == 0x0002B8, "Member 'BP_BattleManager_C_SetEnemyDead::LEnemyDropData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, NewLocalVar_0) == 0x0002F0, "Member 'BP_BattleManager_C_SetEnemyDead::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, EnemyDeadLogDelayTime) == 0x0002F8, "Member 'BP_BattleManager_C_SetEnemyDead::EnemyDeadLogDelayTime' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002FC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip) == 0x000300, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryExtendParameter_outParameter) == 0x000308, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryExtendParameter_outParameter' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Get_Item) == 0x000318, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Get_Item_1) == 0x00031C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000320, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000321, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Length_ReturnValue) == 0x000324, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000328, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000330, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue) == 0x000338, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetMissionID_ReturnValue) == 0x00033C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetMissionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000340, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1) == 0x000348, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_1) == 0x000350, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerPawn_ReturnValue) == 0x000358, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_DynamicCast_AsRSBattle_Player) == 0x000360, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_DynamicCast_bSuccess) == 0x000368, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsDriveMode_self_CastInput) == 0x000370, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsDriveMode_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsDriveMode_bDrive) == 0x000380, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsDriveMode_bDrive' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000381, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_MakeStruct_BattleLogParam) == 0x000384, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_MakeStruct_BattleLogParam' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetRightPlayer_Player) == 0x0003B0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetRightPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003B8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLeftPlayer_Player) == 0x0003C0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLeftPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Conv_IntToString_ReturnValue) == 0x0003C8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Conv_StringToName_ReturnValue) == 0x0003D8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_OutRow) == 0x0003E0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000400, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000418, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000420, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000458, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Get_Item_2) == 0x00045C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000460, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Get_Item_3) == 0x000464, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000468, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataBaseManager_Manager) == 0x000470, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetEnemyDropData_ReturnValue) == 0x000478, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetEnemyDropData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_2) == 0x000480, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetIdFromIndex_ReturnValue) == 0x000484, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetIdFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetEnemyDropDataAllRound_EnemyDropData) == 0x000490, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetEnemyDropDataAllRound_EnemyDropData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetEnemyDropDataAllRound_ReturnValue) == 0x0004C8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetEnemyDropDataAllRound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_self_CastInput) == 0x0004D0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_ReturnValue) == 0x0004E0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetSASKindFromPlayerID_SAS) == 0x0004E1, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetSASKindFromPlayerID_SAS' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetAccessoryEffect_outValue) == 0x0004E4, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetAccessoryEffect_outValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetAccessoryEffect_ReturnValue) == 0x0004E8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetAccessoryEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004EC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_3) == 0x0004F0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, Temp_int_Loop_Counter_Variable) == 0x0004F4, "Member 'BP_BattleManager_C_SetEnemyDead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Less_IntInt_ReturnValue) == 0x0004F8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Add_IntInt_ReturnValue) == 0x0004FC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000500, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Add_FloatFloat_ReturnValue) == 0x000504, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000508, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBattleMemberPlayerID_ReturnValue_1) == 0x000509, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBattleMemberPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetAccessoryGoldBonus_Rate) == 0x00050C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetAccessoryGoldBonus_Rate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000510, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000514, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_FFloor_ReturnValue) == 0x000518, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x00051C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000520, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_self_CastInput_1) == 0x000528, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_ReturnValue_1) == 0x000538, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_bLearned) == 0x000539, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_bLearned' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_Parameter) == 0x00053C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_Parameter' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_Parameter2) == 0x000540, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_Parameter2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_MathExpression_ReturnValue) == 0x000544, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsExistBattleMember_ReturnValue) == 0x000548, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsExistBattleMember_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_AddExp_OutMainPlayerExp) == 0x00054C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_AddExp_OutMainPlayerExp' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetMainPlayer_Player) == 0x000550, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerManager_PlayerManager) == 0x000558, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000560, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_4) == 0x000568, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetBattleBonusRate_Rate) == 0x00056C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetBattleBonusRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000570, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, Temp_byte_Variable) == 0x000574, "Member 'BP_BattleManager_C_SetEnemyDead::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsPlayerStatus_Result) == 0x000575, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Find_ReturnValue) == 0x000578, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00057C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00057D, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000580, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_FFloor_ReturnValue_1) == 0x000584, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryEffect_bEquip_1) == 0x000588, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryEffect_bEquip_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerAccessoryEffect_Param_1) == 0x00058C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerAccessoryEffect_Param_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_self_CastInput_2) == 0x000590, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetPlayerID_ReturnValue_2) == 0x0005A0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_bLearned_1) == 0x0005A1, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_bLearned_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_Parameter_1) == 0x0005A4, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetLearnedSkillParameter_Parameter2_1) == 0x0005A8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetLearnedSkillParameter_Parameter2_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_MathExpression_ReturnValue_1) == 0x0005AC, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_MathExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsEnableSASEffect_bEnable) == 0x0005B0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsEnableSASEffect_bEnable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsEnableSASEffect_Param0) == 0x0005B4, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsEnableSASEffect_Param0' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsEnableSASEffect_Param1) == 0x0005B8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsEnableSASEffect_Param1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsEnableSASEffect_Param2) == 0x0005BC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsEnableSASEffect_Param2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsEnableSASEffect_Param3) == 0x0005C0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsEnableSASEffect_Param3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0005C4, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0005C8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Add_FloatFloat_ReturnValue_5) == 0x0005CC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Add_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDebuggingManager_Manager) == 0x0005D0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_5) == 0x0005D8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, K2Node_SwitchEnum_CmpSuccess) == 0x0005D9, "Member 'BP_BattleManager_C_SetEnemyDead::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Add_FloatFloat_ReturnValue_6) == 0x0005DC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Add_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_6) == 0x0005E0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x0005E8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetUserParamManager_UserParamManager) == 0x0005F0, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_RandomFloat_ReturnValue) == 0x0005F8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsActiveSAS_ForKind_IsActive) == 0x0005FC, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsActiveSAS_ForKind_IsActive' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Greater_IntInt_ReturnValue) == 0x0005FD, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Add_FloatFloat_ReturnValue_7) == 0x000600, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Add_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000604, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000605, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_IsValid_ReturnValue_7) == 0x000606, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, Temp_int_Array_Index_Variable) == 0x000608, "Member 'BP_BattleManager_C_SetEnemyDead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_Array_Get_Item_4) == 0x00060C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_BreakTransform_Location) == 0x000610, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_BreakTransform_Rotation) == 0x00061C, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_BreakTransform_Scale) == 0x000628, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000634, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000635, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_AddMoney_ReturnValue) == 0x000636, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_AddMoney_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000637, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataDropItemID_itemID) == 0x000638, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataDropItemID_itemID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataDropItemID_itemNum) == 0x000640, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataDropItemID_itemNum' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetDataDropItemID_ReturnValue) == 0x000644, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetDataDropItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetItemDataCell_ItemData) == 0x000648, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetItemDataCell_ItemData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetItemDataCell_ReturnValue) == 0x0006C8, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetItemDataCell_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_GetItemRarity_ReturnValue) == 0x0006C9, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnemyDead, CallFunc_BrainTalkBt_EnemyDrop_ReturnValue) == 0x0006CA, "Member 'BP_BattleManager_C_SetEnemyDead::CallFunc_BrainTalkBt_EnemyDrop_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.Set Enemy Dead Log Param
// 0x0068 (0x0068 - 0x0000)
struct BP_BattleManager_C_Set_Enemy_Dead_Log_Param final
{
public:
	class FName                                   CharacterId;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Experience;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Money;                                             // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bonus;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DropItemId;                                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropItemNum;                                       // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_EnemyDeadLogParam              K2Node_MakeStruct_struct_EnemyDeadLogParam;        // 0x0020(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_EnemyDeadLogParam              K2Node_SetFieldsInStruct_StructOut;                // 0x0040(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param) == 0x000004, "Wrong alignment on BP_BattleManager_C_Set_Enemy_Dead_Log_Param");
static_assert(sizeof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param) == 0x000068, "Wrong size on BP_BattleManager_C_Set_Enemy_Dead_Log_Param");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, CharacterId) == 0x000000, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::CharacterId' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, Experience) == 0x000008, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::Experience' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, Money) == 0x00000C, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::Money' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, bonus) == 0x000010, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::bonus' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, DropItemId) == 0x000014, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::DropItemId' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, DropItemNum) == 0x00001C, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::DropItemNum' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, K2Node_MakeStruct_struct_EnemyDeadLogParam) == 0x000020, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::K2Node_MakeStruct_struct_EnemyDeadLogParam' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, K2Node_SetFieldsInStruct_StructOut) == 0x000040, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_Log_Param, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_BattleManager_C_Set_Enemy_Dead_Log_Param::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.ListUpBattleActor
// 0x0190 (0x0190 - 0x0000)
struct BP_BattleManager_C_ListUpBattleActor final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dir;                                               // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Num;                                               // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       BaseActor;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActorList;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetList;                                        // 0x0040(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TMap<class AActor*, float>                    LCandidateList;                                    // 0x0050(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	float                                         LAngle;                                            // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LDist;                                             // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LActor;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LTargetList;                                       // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF9[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckTargetableCharacter_ReturnValue;     // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFA[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x00E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x00F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_MinOfFloatArray_IndexOfMinValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MinOfFloatArray_MinValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFB[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFC[0x2];                                     // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFD[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckDistanceFromVector_bResult;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFE[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Acos_ReturnValue;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RadiansToDegrees_ReturnValue;             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BFF[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_ListUpBattleActor) == 0x000008, "Wrong alignment on BP_BattleManager_C_ListUpBattleActor");
static_assert(sizeof(BP_BattleManager_C_ListUpBattleActor) == 0x000190, "Wrong size on BP_BattleManager_C_ListUpBattleActor");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Location) == 0x000000, "Member 'BP_BattleManager_C_ListUpBattleActor::Location' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Distance) == 0x00000C, "Member 'BP_BattleManager_C_ListUpBattleActor::Distance' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Dir) == 0x000010, "Member 'BP_BattleManager_C_ListUpBattleActor::Dir' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Angle) == 0x00001C, "Member 'BP_BattleManager_C_ListUpBattleActor::Angle' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Num) == 0x000020, "Member 'BP_BattleManager_C_ListUpBattleActor::Num' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, BaseActor) == 0x000028, "Member 'BP_BattleManager_C_ListUpBattleActor::BaseActor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, IgnoreActorList) == 0x000030, "Member 'BP_BattleManager_C_ListUpBattleActor::IgnoreActorList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, TargetList) == 0x000040, "Member 'BP_BattleManager_C_ListUpBattleActor::TargetList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, LCandidateList) == 0x000050, "Member 'BP_BattleManager_C_ListUpBattleActor::LCandidateList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, LAngle) == 0x0000A0, "Member 'BP_BattleManager_C_ListUpBattleActor::LAngle' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, LDist) == 0x0000A4, "Member 'BP_BattleManager_C_ListUpBattleActor::LDist' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, LActor) == 0x0000B0, "Member 'BP_BattleManager_C_ListUpBattleActor::LActor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, LTargetList) == 0x0000B8, "Member 'BP_BattleManager_C_ListUpBattleActor::LTargetList' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_BattleManager_C_ListUpBattleActor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Temp_int_Loop_Num_Variable) == 0x0000CC, "Member 'BP_BattleManager_C_ListUpBattleActor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'BP_BattleManager_C_ListUpBattleActor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Array_Find_ReturnValue) == 0x0000D4, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D9, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_CheckTargetableCharacter_ReturnValue) == 0x0000E2, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_CheckTargetableCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Map_Keys_Keys) == 0x0000E8, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Map_Values_Values) == 0x0000F8, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_MinOfFloatArray_IndexOfMinValue) == 0x000108, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_MinOfFloatArray_IndexOfMinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_MinOfFloatArray_MinValue) == 0x00010C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_MinOfFloatArray_MinValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Array_Get_Item) == 0x000110, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Map_Remove_ReturnValue) == 0x00011C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Less_IntInt_ReturnValue_2) == 0x00011D, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Map_Length_ReturnValue) == 0x000124, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_BooleanAND_ReturnValue) == 0x000129, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, K2Node_MathExpression_ReturnValue) == 0x00012C, "Member 'BP_BattleManager_C_ListUpBattleActor::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000130, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_VSizeSquared_ReturnValue) == 0x000134, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000138, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00013C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000140, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000144, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Normal_ReturnValue) == 0x000148, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Normal_ReturnValue_1) == 0x000154, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_CheckDistanceFromVector_bResult) == 0x000160, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_CheckDistanceFromVector_bResult' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Dot_VectorVector_ReturnValue) == 0x000164, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Acos_ReturnValue) == 0x000168, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_RadiansToDegrees_ReturnValue) == 0x00016C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000170, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00017C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000188, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_ListUpBattleActor, CallFunc_Array_Length_ReturnValue_1) == 0x00018C, "Member 'BP_BattleManager_C_ListUpBattleActor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SpawnCoreDrop
// 0x01A0 (0x01A0 - 0x0000)
struct BP_BattleManager_C_SpawnCoreDrop final
{
public:
	int32                                         DropDataIndex;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C00[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnLocation;                                     // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          IsBig;                                             // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C01[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C02[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C03[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemyDropData*                         CallFunc_GetEnemyDropData_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C04[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetIdFromIndex_ReturnValue;               // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C05[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnemyDropDataCell                     CallFunc_GetEnemyDropDataAllRound_EnemyDropData;   // 0x00C0(0x0038)()
	bool                                          CallFunc_GetEnemyDropDataAllRound_ReturnValue;     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C06[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCoreDropItemID_itemID;                 // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCoreDropItemID_itemNum;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCoreDropItemID_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C07[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemDataCell_ItemData;                 // 0x0110(0x0080)()
	bool                                          CallFunc_GetItemDataCell_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EItemRarity                                   CallFunc_GetItemRarity_ReturnValue;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BrainTalkBt_EnemyDrop_ReturnValue;        // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_SpawnCoreDrop) == 0x000010, "Wrong alignment on BP_BattleManager_C_SpawnCoreDrop");
static_assert(sizeof(BP_BattleManager_C_SpawnCoreDrop) == 0x0001A0, "Wrong size on BP_BattleManager_C_SpawnCoreDrop");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, DropDataIndex) == 0x000000, "Member 'BP_BattleManager_C_SpawnCoreDrop::DropDataIndex' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, SpawnLocation) == 0x000010, "Member 'BP_BattleManager_C_SpawnCoreDrop::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, IsBig) == 0x000040, "Member 'BP_BattleManager_C_SpawnCoreDrop::IsBig' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_BreakTransform_Location) == 0x000058, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_BreakTransform_Rotation) == 0x000064, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_BreakTransform_Scale) == 0x000070, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_Conv_StringToName_ReturnValue) == 0x00007C, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000088, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000090, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetDataBaseManager_Manager) == 0x0000A0, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetEnemyDropData_ReturnValue) == 0x0000A8, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetEnemyDropData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetIdFromIndex_ReturnValue) == 0x0000B4, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetIdFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetEnemyDropDataAllRound_EnemyDropData) == 0x0000C0, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetEnemyDropDataAllRound_EnemyDropData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetEnemyDropDataAllRound_ReturnValue) == 0x0000F8, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetEnemyDropDataAllRound_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetCoreDropItemID_itemID) == 0x0000FC, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetCoreDropItemID_itemID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetCoreDropItemID_itemNum) == 0x000104, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetCoreDropItemID_itemNum' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetCoreDropItemID_ReturnValue) == 0x000108, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetCoreDropItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetItemDataCell_ItemData) == 0x000110, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetItemDataCell_ItemData' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetItemDataCell_ReturnValue) == 0x000190, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetItemDataCell_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_GetItemRarity_ReturnValue) == 0x000191, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_GetItemRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SpawnCoreDrop, CallFunc_BrainTalkBt_EnemyDrop_ReturnValue) == 0x000192, "Member 'BP_BattleManager_C_SpawnCoreDrop::CallFunc_BrainTalkBt_EnemyDrop_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.GetBattleSetting
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_GetBattleSetting final
{
public:
	class UBattleSettingComponent*                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_GetBattleSetting) == 0x000008, "Wrong alignment on BP_BattleManager_C_GetBattleSetting");
static_assert(sizeof(BP_BattleManager_C_GetBattleSetting) == 0x000008, "Wrong size on BP_BattleManager_C_GetBattleSetting");
static_assert(offsetof(BP_BattleManager_C_GetBattleSetting, ReturnValue) == 0x000000, "Member 'BP_BattleManager_C_GetBattleSetting::ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetEnableENPCBrainFieldGauge
// 0x0010 (0x0010 - 0x0000)
struct BP_BattleManager_C_SetEnableENPCBrainFieldGauge final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bForce;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C08[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BrainFieldUser;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetEnableENPCBrainFieldGauge) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetEnableENPCBrainFieldGauge");
static_assert(sizeof(BP_BattleManager_C_SetEnableENPCBrainFieldGauge) == 0x000010, "Wrong size on BP_BattleManager_C_SetEnableENPCBrainFieldGauge");
static_assert(offsetof(BP_BattleManager_C_SetEnableENPCBrainFieldGauge, bEnable) == 0x000000, "Member 'BP_BattleManager_C_SetEnableENPCBrainFieldGauge::bEnable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnableENPCBrainFieldGauge, bForce) == 0x000001, "Member 'BP_BattleManager_C_SetEnableENPCBrainFieldGauge::bForce' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetEnableENPCBrainFieldGauge, BrainFieldUser) == 0x000008, "Member 'BP_BattleManager_C_SetEnableENPCBrainFieldGauge::BrainFieldUser' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.AddENPCBrainFieldGaugeByAttack
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack) == 0x000008, "Wrong alignment on BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack");
static_assert(sizeof(BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack) == 0x000008, "Wrong size on BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack");
static_assert(offsetof(BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack, Attacker) == 0x000000, "Member 'BP_BattleManager_C_AddENPCBrainFieldGaugeByAttack::Attacker' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.CallHpDownEventDispatcher
// 0x0030 (0x0030 - 0x0000)
struct BP_BattleManager_C_CallHpDownEventDispatcher final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterHPEventInfo                  EventInfo;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_CallHpDownEventDispatcher) == 0x000008, "Wrong alignment on BP_BattleManager_C_CallHpDownEventDispatcher");
static_assert(sizeof(BP_BattleManager_C_CallHpDownEventDispatcher) == 0x000030, "Wrong size on BP_BattleManager_C_CallHpDownEventDispatcher");
static_assert(offsetof(BP_BattleManager_C_CallHpDownEventDispatcher, Actor) == 0x000000, "Member 'BP_BattleManager_C_CallHpDownEventDispatcher::Actor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CallHpDownEventDispatcher, EventInfo) == 0x000008, "Member 'BP_BattleManager_C_CallHpDownEventDispatcher::EventInfo' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.AddENPCBrainFieldGaugeByDefense
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense) == 0x000008, "Wrong alignment on BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense");
static_assert(sizeof(BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense) == 0x000008, "Wrong size on BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense");
static_assert(offsetof(BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense, Attacker) == 0x000000, "Member 'BP_BattleManager_C_AddENPCBrainFieldGaugeByDefense::Attacker' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetVisibleENPCBrainFieldGauge
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleManager_C_SetVisibleENPCBrainFieldGauge final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFromEnpc;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_SetVisibleENPCBrainFieldGauge) == 0x000001, "Wrong alignment on BP_BattleManager_C_SetVisibleENPCBrainFieldGauge");
static_assert(sizeof(BP_BattleManager_C_SetVisibleENPCBrainFieldGauge) == 0x000002, "Wrong size on BP_BattleManager_C_SetVisibleENPCBrainFieldGauge");
static_assert(offsetof(BP_BattleManager_C_SetVisibleENPCBrainFieldGauge, bVisible) == 0x000000, "Member 'BP_BattleManager_C_SetVisibleENPCBrainFieldGauge::bVisible' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetVisibleENPCBrainFieldGauge, bFromEnpc) == 0x000001, "Member 'BP_BattleManager_C_SetVisibleENPCBrainFieldGauge::bFromEnpc' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetENPCBrainFieldGaugeUpdate
// 0x000C (0x000C - 0x0000)
struct BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate final
{
public:
	bool                                          bUpdate;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C09[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate) == 0x000004, "Wrong alignment on BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate");
static_assert(sizeof(BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate) == 0x00000C, "Wrong size on BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate");
static_assert(offsetof(BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate, bUpdate) == 0x000000, "Member 'BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate::bUpdate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate, ClaimantName) == 0x000004, "Member 'BP_BattleManager_C_SetENPCBrainFieldGaugeUpdate::ClaimantName' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.EndDelayBattleLog
// 0x00B8 (0x00B8 - 0x0000)
struct BP_BattleManager_C_EndDelayBattleLog final
{
public:
	class FName                                   LogCharacterID;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LMainPlayerExp;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalItemID;                                       // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalItemAddNum;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    LocalPlayerManager;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      LocalUserParamManager;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFadeAnimation_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFade_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0A[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0B[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattleLogBuffer*                       CallFunc_GetBattleLogBuffer_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0D[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBattleLogParam>                CallFunc_GetBattleLogBuffer_ReturnValue_1;         // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddExp_OutMainPlayerExp;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C0E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_UniqueNameFromId_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemNum_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECanBeAddedItems                              CallFunc_CheckHaveItemCapacityWithRetNum_canBeAdded; // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C0F[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckHaveItemCapacityWithRetNum_retNum;   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckHaveItemCapacityWithRetNum_ReturnValue; // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddMoney_ReturnValue;                     // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_EndDelayBattleLog) == 0x000008, "Wrong alignment on BP_BattleManager_C_EndDelayBattleLog");
static_assert(sizeof(BP_BattleManager_C_EndDelayBattleLog) == 0x0000B8, "Wrong size on BP_BattleManager_C_EndDelayBattleLog");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LogCharacterID) == 0x000000, "Member 'BP_BattleManager_C_EndDelayBattleLog::LogCharacterID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LMainPlayerExp) == 0x000008, "Member 'BP_BattleManager_C_EndDelayBattleLog::LMainPlayerExp' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LocalItemID) == 0x00000C, "Member 'BP_BattleManager_C_EndDelayBattleLog::LocalItemID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LocalItemAddNum) == 0x000014, "Member 'BP_BattleManager_C_EndDelayBattleLog::LocalItemAddNum' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LocalPlayerManager) == 0x000018, "Member 'BP_BattleManager_C_EndDelayBattleLog::LocalPlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, LocalUserParamManager) == 0x000020, "Member 'BP_BattleManager_C_EndDelayBattleLog::LocalUserParamManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000028, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_IsFadeAnimation_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_IsFadeAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_IsFade_ReturnValue) == 0x000031, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_IsFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BattleManager_C_EndDelayBattleLog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BP_BattleManager_C_EndDelayBattleLog::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_BattleManager_C_EndDelayBattleLog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_GetPlayerManager_PlayerManager) == 0x000048, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_GetUserParamManager_UserParamManager) == 0x000058, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_GetBattleLogBuffer_ReturnValue) == 0x000060, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_GetBattleLogBuffer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_GetBattleLogBuffer_ReturnValue_1) == 0x000070, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_GetBattleLogBuffer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_AddExp_OutMainPlayerExp) == 0x000084, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_AddExp_OutMainPlayerExp' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_Conv_NameToString_ReturnValue) == 0x000088, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_Conv_StringToInt_ReturnValue) == 0x000098, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_NotEqual_NameName_ReturnValue) == 0x00009C, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_UniqueNameFromId_ReturnValue) == 0x0000A0, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_UniqueNameFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_AddItemNum_ReturnValue) == 0x0000A8, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_AddItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_CheckHaveItemCapacityWithRetNum_canBeAdded) == 0x0000A9, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_CheckHaveItemCapacityWithRetNum_canBeAdded' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_CheckHaveItemCapacityWithRetNum_retNum) == 0x0000AC, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_CheckHaveItemCapacityWithRetNum_retNum' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_CheckHaveItemCapacityWithRetNum_ReturnValue) == 0x0000B0, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_CheckHaveItemCapacityWithRetNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, K2Node_SwitchEnum_CmpSuccess) == 0x0000B1, "Member 'BP_BattleManager_C_EndDelayBattleLog::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0000B2, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_EndDelayBattleLog, CallFunc_AddMoney_ReturnValue) == 0x0000B3, "Member 'BP_BattleManager_C_EndDelayBattleLog::CallFunc_AddMoney_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.GetAccessoryGoldBonus
// 0x0050 (0x0050 - 0x0000)
struct BP_BattleManager_C_GetAccessoryGoldBonus final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LRate;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C10[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C11[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C12[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C13[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccessoryEffect_outValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAccessoryEffect_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C14[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAccessoryEffect_outValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAccessoryEffect_ReturnValue_1;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C15[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_GetAccessoryGoldBonus) == 0x000008, "Wrong alignment on BP_BattleManager_C_GetAccessoryGoldBonus");
static_assert(sizeof(BP_BattleManager_C_GetAccessoryGoldBonus) == 0x000050, "Wrong size on BP_BattleManager_C_GetAccessoryGoldBonus");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, Rate) == 0x000000, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::Rate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, LRate) == 0x000004, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::LRate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, Temp_int_Variable) == 0x000008, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, Temp_int_Variable_1) == 0x00000C, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001A, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_MakeLiteralInt_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetAccessoryEffect_outValue) == 0x000034, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetAccessoryEffect_outValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetAccessoryEffect_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetAccessoryEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetAccessoryEffect_outValue_1) == 0x00003C, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetAccessoryEffect_outValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_GetAccessoryEffect_ReturnValue_1) == 0x000040, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_GetAccessoryEffect_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetAccessoryGoldBonus, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_BattleManager_C_GetAccessoryGoldBonus::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.Set Enemy Dead from Event
// 0x0070 (0x0070 - 0x0000)
struct BP_BattleManager_C_Set_Enemy_Dead_from_Event final
{
public:
	int32                                         DeadEnemyLevel;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropDataIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   EnemyId;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDispKillEnemyName;                               // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDeadFactor                                   DeadFactor;                                        // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C16[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LEnemyID;                                          // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UniqueIdFromName_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C17[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C18[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_Set_Enemy_Dead_from_Event) == 0x000010, "Wrong alignment on BP_BattleManager_C_Set_Enemy_Dead_from_Event");
static_assert(sizeof(BP_BattleManager_C_Set_Enemy_Dead_from_Event) == 0x000070, "Wrong size on BP_BattleManager_C_Set_Enemy_Dead_from_Event");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, DeadEnemyLevel) == 0x000000, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::DeadEnemyLevel' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, DropDataIndex) == 0x000004, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::DropDataIndex' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, EnemyId) == 0x000008, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::EnemyId' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, IsDispKillEnemyName) == 0x000010, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::IsDispKillEnemyName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, DeadFactor) == 0x000011, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::DeadFactor' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, LEnemyID) == 0x000014, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::LEnemyID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_UniqueIdFromName_ReturnValue) == 0x00001C, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_UniqueIdFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_Conv_StringToName_ReturnValue) == 0x000034, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_BooleanAND_ReturnValue) == 0x00003C, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Set_Enemy_Dead_from_Event, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_BattleManager_C_Set_Enemy_Dead_from_Event::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.IsExistBattleEnemy
// 0x0001 (0x0001 - 0x0000)
struct BP_BattleManager_C_IsExistBattleEnemy final
{
public:
	bool                                          bExist;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_IsExistBattleEnemy) == 0x000001, "Wrong alignment on BP_BattleManager_C_IsExistBattleEnemy");
static_assert(sizeof(BP_BattleManager_C_IsExistBattleEnemy) == 0x000001, "Wrong size on BP_BattleManager_C_IsExistBattleEnemy");
static_assert(offsetof(BP_BattleManager_C_IsExistBattleEnemy, bExist) == 0x000000, "Member 'BP_BattleManager_C_IsExistBattleEnemy::bExist' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.Is Disp Enemy Name Log
// 0x0068 (0x0068 - 0x0000)
struct BP_BattleManager_C_Is_Disp_Enemy_Name_Log final
{
public:
	class FName                                   EnemyId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayName;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C19[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_UniqueNameFromId_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMissionID_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1B[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log) == 0x000008, "Wrong alignment on BP_BattleManager_C_Is_Disp_Enemy_Name_Log");
static_assert(sizeof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log) == 0x000068, "Wrong size on BP_BattleManager_C_Is_Disp_Enemy_Name_Log");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, EnemyId) == 0x000000, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::EnemyId' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, DisplayName) == 0x000008, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000010, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_Conv_StringToInt_ReturnValue) == 0x00002C, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_UniqueNameFromId_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_UniqueNameFromId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GetMissionID_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GetMissionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00003C, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003D, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00003E, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00003F, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GetEventManager_ReturnValue) == 0x000040, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x000048, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GetProgressID_ProgressID) == 0x00005C, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_Is_Disp_Enemy_Name_Log, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'BP_BattleManager_C_Is_Disp_Enemy_Name_Log::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.SetModeEnpcBrainFieldGauge
// 0x0018 (0x0018 - 0x0000)
struct BP_BattleManager_C_SetModeEnpcBrainFieldGauge final
{
public:
	bool                                          bInBrainField;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BFUser;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_SetModeEnpcBrainFieldGauge) == 0x000008, "Wrong alignment on BP_BattleManager_C_SetModeEnpcBrainFieldGauge");
static_assert(sizeof(BP_BattleManager_C_SetModeEnpcBrainFieldGauge) == 0x000018, "Wrong size on BP_BattleManager_C_SetModeEnpcBrainFieldGauge");
static_assert(offsetof(BP_BattleManager_C_SetModeEnpcBrainFieldGauge, bInBrainField) == 0x000000, "Member 'BP_BattleManager_C_SetModeEnpcBrainFieldGauge::bInBrainField' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetModeEnpcBrainFieldGauge, BFUser) == 0x000008, "Member 'BP_BattleManager_C_SetModeEnpcBrainFieldGauge::BFUser' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_SetModeEnpcBrainFieldGauge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_SetModeEnpcBrainFieldGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.CheckExistBattleEnemy
// 0x0058 (0x0058 - 0x0000)
struct BP_BattleManager_C_CheckExistBattleEnemy final
{
public:
	bool                                          bExistEnemy;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       LastEnemy;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       LLastEnemy;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbExistEnemy;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1E[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C20[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C21[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C22[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> K2Node_DynamicCast_AsBPI_Battle_Character_Interface; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemy_bEnemy;                           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_CheckExistBattleEnemy) == 0x000008, "Wrong alignment on BP_BattleManager_C_CheckExistBattleEnemy");
static_assert(sizeof(BP_BattleManager_C_CheckExistBattleEnemy) == 0x000058, "Wrong size on BP_BattleManager_C_CheckExistBattleEnemy");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, bExistEnemy) == 0x000000, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::bExistEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, LastEnemy) == 0x000008, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::LastEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, LLastEnemy) == 0x000010, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::LLastEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, LbExistEnemy) == 0x000018, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::LbExistEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, Temp_bool_True_if_break_was_hit_Variable) == 0x000019, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, Temp_int_Loop_Num_Variable) == 0x000024, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, K2Node_DynamicCast_AsBPI_Battle_Character_Interface) == 0x000040, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::K2Node_DynamicCast_AsBPI_Battle_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_IsEnemy_bEnemy) == 0x000052, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_IsEnemy_bEnemy' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_IsCharacterDead_ReturnValue) == 0x000053, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_CheckExistBattleEnemy, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_BattleManager_C_CheckExistBattleEnemy::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.GetENPCBrainFieldRate
// 0x0008 (0x0008 - 0x0000)
struct BP_BattleManager_C_GetENPCBrainFieldRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGaugeRate_Rate;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_GetENPCBrainFieldRate) == 0x000004, "Wrong alignment on BP_BattleManager_C_GetENPCBrainFieldRate");
static_assert(sizeof(BP_BattleManager_C_GetENPCBrainFieldRate) == 0x000008, "Wrong size on BP_BattleManager_C_GetENPCBrainFieldRate");
static_assert(offsetof(BP_BattleManager_C_GetENPCBrainFieldRate, Rate) == 0x000000, "Member 'BP_BattleManager_C_GetENPCBrainFieldRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_GetENPCBrainFieldRate, CallFunc_GetGaugeRate_Rate) == 0x000004, "Member 'BP_BattleManager_C_GetENPCBrainFieldRate::CallFunc_GetGaugeRate_Rate' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.IsEnableENPCBrainField
// 0x0002 (0x0002 - 0x0000)
struct BP_BattleManager_C_IsEnableENPCBrainField final
{
public:
	bool                                          bEnableGauge;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableGauge_bEnableGauge;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BattleManager_C_IsEnableENPCBrainField) == 0x000001, "Wrong alignment on BP_BattleManager_C_IsEnableENPCBrainField");
static_assert(sizeof(BP_BattleManager_C_IsEnableENPCBrainField) == 0x000002, "Wrong size on BP_BattleManager_C_IsEnableENPCBrainField");
static_assert(offsetof(BP_BattleManager_C_IsEnableENPCBrainField, bEnableGauge) == 0x000000, "Member 'BP_BattleManager_C_IsEnableENPCBrainField::bEnableGauge' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsEnableENPCBrainField, CallFunc_IsEnableGauge_bEnableGauge) == 0x000001, "Member 'BP_BattleManager_C_IsEnableENPCBrainField::CallFunc_IsEnableGauge_bEnableGauge' has a wrong offset!");

// Function BP_BattleManager.BP_BattleManager_C.IsPlayerStealth
// 0x0028 (0x0028 - 0x0000)
struct BP_BattleManager_C_IsPlayerStealth final
{
public:
	bool                                          bStealth;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAfterStealth;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbAfterStealth;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbStealth;                                         // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C23[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStealthMode_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAfterStealth_bAfterStealth;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C24[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BattleManager_C_IsPlayerStealth) == 0x000008, "Wrong alignment on BP_BattleManager_C_IsPlayerStealth");
static_assert(sizeof(BP_BattleManager_C_IsPlayerStealth) == 0x000028, "Wrong size on BP_BattleManager_C_IsPlayerStealth");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, bStealth) == 0x000000, "Member 'BP_BattleManager_C_IsPlayerStealth::bStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, bAfterStealth) == 0x000001, "Member 'BP_BattleManager_C_IsPlayerStealth::bAfterStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, LbAfterStealth) == 0x000002, "Member 'BP_BattleManager_C_IsPlayerStealth::LbAfterStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, LbStealth) == 0x000003, "Member 'BP_BattleManager_C_IsPlayerStealth::LbStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, LPlayer) == 0x000008, "Member 'BP_BattleManager_C_IsPlayerStealth::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, CallFunc_IsStealthMode_ReturnValue) == 0x000010, "Member 'BP_BattleManager_C_IsPlayerStealth::CallFunc_IsStealthMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, CallFunc_IsAfterStealth_bAfterStealth) == 0x000011, "Member 'BP_BattleManager_C_IsPlayerStealth::CallFunc_IsAfterStealth_bAfterStealth' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_BattleManager_C_IsPlayerStealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_BattleManager_C_IsPlayerStealth::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_BattleManager_C_IsPlayerStealth, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_BattleManager_C_IsPlayerStealth::CallFunc_GetMainPlayer_Player' has a wrong offset!");

}

