#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RenderTargetManager

#include "Basic.hpp"

#include "BP_RenderTargetManager_classes.hpp"
#include "BP_RenderTargetManager_parameters.hpp"


namespace SDK
{

// Function BP_RenderTargetManager.BP_RenderTargetManager_C.ED_ResetRenderTarget__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERenderTargetType                       RenderTargetType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           NewTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::ED_ResetRenderTarget__DelegateSignature(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "ED_ResetRenderTarget__DelegateSignature");

	Params::BP_RenderTargetManager_C_ED_ResetRenderTarget__DelegateSignature Parms{};

	Parms.RenderTargetType = RenderTargetType;
	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.ExecuteUbergraph_BP_RenderTargetManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::ExecuteUbergraph_BP_RenderTargetManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "ExecuteUbergraph_BP_RenderTargetManager");

	Params::BP_RenderTargetManager_C_ExecuteUbergraph_BP_RenderTargetManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.ResetRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::ResetRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "ResetRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.DelayBeginPlay
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::DelayBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "DelayBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetCutSceneFaceRenderTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERenderTargetType                       UsedRenderTargetType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetCutSceneFaceRenderTarget(class UTextureRenderTarget2D** RenderTarget, ERenderTargetType* UsedRenderTargetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetCutSceneFaceRenderTarget");

	Params::BP_RenderTargetManager_C_GetCutSceneFaceRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;

	if (UsedRenderTargetType != nullptr)
		*UsedRenderTargetType = Parms.UsedRenderTargetType;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.Initialize
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.OnRendetTargetTypeFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BitMask                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::OnRendetTargetTypeFlag(int32 BitMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "OnRendetTargetTypeFlag");

	Params::BP_RenderTargetManager_C_OnRendetTargetTypeFlag Parms{};

	Parms.BitMask = BitMask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.OffRenderTargetTypeFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BitMask                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::OffRenderTargetTypeFlag(int32 BitMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "OffRenderTargetTypeFlag");

	Params::BP_RenderTargetManager_C_OffRenderTargetTypeFlag Parms{};

	Parms.BitMask = BitMask;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.IsOnRenderTargetTypeFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BitMask                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_RenderTargetManager_C::IsOnRenderTargetTypeFlag(int32 BitMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "IsOnRenderTargetTypeFlag");

	Params::BP_RenderTargetManager_C_IsOnRenderTargetTypeFlag Parms{};

	Parms.BitMask = BitMask;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetRenderTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERenderTargetType                       RenderTargetType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetRenderTarget(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D** RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetRenderTarget");

	Params::BP_RenderTargetManager_C_GetRenderTarget Parms{};

	Parms.RenderTargetType = RenderTargetType;

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetERenderTargetTypeBitMask
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERenderTargetType                       ERenderTargetType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BitMask                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetERenderTargetTypeBitMask(ERenderTargetType ERenderTargetType, int32* BitMask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetERenderTargetTypeBitMask");

	Params::BP_RenderTargetManager_C_GetERenderTargetTypeBitMask Parms{};

	Parms.ERenderTargetType = ERenderTargetType;

	UObject::ProcessEvent(Func, &Parms);

	if (BitMask != nullptr)
		*BitMask = Parms.BitMask;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetSpecialCutSceneRenderTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ERenderTargetType                       UsedRenderTargetType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetSpecialCutSceneRenderTarget(class UTextureRenderTarget2D** RenderTarget, ERenderTargetType* UsedRenderTargetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetSpecialCutSceneRenderTarget");

	Params::BP_RenderTargetManager_C_GetSpecialCutSceneRenderTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;

	if (UsedRenderTargetType != nullptr)
		*UsedRenderTargetType = Parms.UsedRenderTargetType;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.BeginDebuggingManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RestoreFlag                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::BeginDebuggingManager(int32* RestoreFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "BeginDebuggingManager");

	Params::BP_RenderTargetManager_C_BeginDebuggingManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RestoreFlag != nullptr)
		*RestoreFlag = Parms.RestoreFlag;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.ClearEventRenderTargetFlag
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::ClearEventRenderTargetFlag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "ClearEventRenderTargetFlag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.PrivateCreateCutSceneFaceTarget
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::PrivateCreateCutSceneFaceTarget(class UTextureRenderTarget2D** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "PrivateCreateCutSceneFaceTarget");

	Params::BP_RenderTargetManager_C_PrivateCreateCutSceneFaceTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetScreenTargetSize
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   BaseWidth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BaseHeight                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Allow4k                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Width                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetScreenTargetSize(int32 BaseWidth, int32 BaseHeight, bool Allow4k, int32* Width, int32* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetScreenTargetSize");

	Params::BP_RenderTargetManager_C_GetScreenTargetSize Parms{};

	Parms.BaseWidth = BaseWidth;
	Parms.BaseHeight = BaseHeight;
	Parms.Allow4k = Allow4k;

	UObject::ProcessEvent(Func, &Parms);

	if (Width != nullptr)
		*Width = Parms.Width;

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.EndDebuggingManager
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RestoreFlag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::EndDebuggingManager(int32 RestoreFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "EndDebuggingManager");

	Params::BP_RenderTargetManager_C_EndDebuggingManager Parms{};

	Parms.RestoreFlag = RestoreFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.DebugGetRenderTargetList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UTextureRenderTarget2D*>   RenderTargetList                                       (Parm, OutParm, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::DebugGetRenderTargetList(TArray<class UTextureRenderTarget2D*>* RenderTargetList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "DebugGetRenderTargetList");

	Params::BP_RenderTargetManager_C_DebugGetRenderTargetList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTargetList != nullptr)
		*RenderTargetList = std::move(Parms.RenderTargetList);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.PrivateResetRenderTarget
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InitializeSetting                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForceReset                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_RenderTargetManager_C::PrivateResetRenderTarget(bool InitializeSetting, bool ForceReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "PrivateResetRenderTarget");

	Params::BP_RenderTargetManager_C_PrivateResetRenderTarget Parms{};

	Parms.InitializeSetting = InitializeSetting;
	Parms.ForceReset = ForceReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.DebugForceResetRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_RenderTargetManager_C::DebugForceResetRenderTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "DebugForceResetRenderTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.GetPlatformScreenPercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ScreenPercentage                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_RenderTargetManager_C::GetPlatformScreenPercentage(float* ScreenPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "GetPlatformScreenPercentage");

	Params::BP_RenderTargetManager_C_GetPlatformScreenPercentage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenPercentage != nullptr)
		*ScreenPercentage = Parms.ScreenPercentage;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.InitializeManager
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EManagerProcTiming                      Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_RenderTargetManager_C::InitializeManager(EManagerProcTiming Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "InitializeManager");

	Params::BP_RenderTargetManager_C_InitializeManager Parms{};

	Parms.Timing = Timing;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.FinalizeManager
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EManagerProcTiming                      Timing                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_RenderTargetManager_C::FinalizeManager(EManagerProcTiming Timing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "FinalizeManager");

	Params::BP_RenderTargetManager_C_FinalizeManager Parms{};

	Parms.Timing = Timing;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_RenderTargetManager.BP_RenderTargetManager_C.IsNeedFrameWait
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_RenderTargetManager_C::IsNeedFrameWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_RenderTargetManager_C", "IsNeedFrameWait");

	Params::BP_RenderTargetManager_C_IsNeedFrameWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

