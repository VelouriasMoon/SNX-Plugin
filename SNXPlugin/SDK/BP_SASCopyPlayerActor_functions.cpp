#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SASCopyPlayerActor

#include "Basic.hpp"

#include "BP_SASCopyPlayerActor_classes.hpp"
#include "BP_SASCopyPlayerActor_parameters.hpp"


namespace SDK
{

// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ExecuteUbergraph_BP_SASCopyPlayerActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::ExecuteUbergraph_BP_SASCopyPlayerActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "ExecuteUbergraph_BP_SASCopyPlayerActor");

	Params::BP_SASCopyPlayerActor_C_ExecuteUbergraph_BP_SASCopyPlayerActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterEffectInterface
// (Event, Public, BlueprintEvent)
// Parameters:
// class URSParticleSystemComponentBase*   Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::RegisterEffectInterface(class URSParticleSystemComponentBase* Particle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RegisterEffectInterface");

	Params::BP_SASCopyPlayerActor_C_RegisterEffectInterface Parms{};

	Parms.Particle = Particle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterInterruptTelepoEffectInterface
// (Event, Public, BlueprintEvent)
// Parameters:
// class URSParticleSystemComponentBase*   Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::RegisterInterruptTelepoEffectInterface(class URSParticleSystemComponentBase* Particle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RegisterInterruptTelepoEffectInterface");

	Params::BP_SASCopyPlayerActor_C_RegisterInterruptTelepoEffectInterface Parms{};

	Parms.Particle = Particle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.DelayTickEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::DelayTickEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "DelayTickEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature
// (BlueprintEvent)
// Parameters:
// struct FHCHitResult                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_SASCopyPlayerActor_C::BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature(const struct FHCHitResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");

	Params::BP_SASCopyPlayerActor_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "ReceiveTick");

	Params::BP_SASCopyPlayerActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.AreaChangeFadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::AreaChangeFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "AreaChangeFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCounter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::SetCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCounterWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Wait_on_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetCounterWait(bool Wait_on_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCounterWait");

	Params::BP_SASCopyPlayerActor_C_SetCounterWait Parms{};

	Parms.Wait_on_in = Wait_on_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsBadStausMetalMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::IsBadStausMetalMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsBadStausMetalMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UnregisterNpcDriveForNexusDrive
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::UnregisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UnregisterNpcDriveForNexusDrive");

	Params::BP_SASCopyPlayerActor_C_UnregisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UnregisterDelayDriveEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::UnregisterDelayDriveEnd(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UnregisterDelayDriveEnd");

	Params::BP_SASCopyPlayerActor_C_UnregisterDelayDriveEnd Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterNpcDriveForNexusDrive
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::RegisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RegisterNpcDriveForNexusDrive");

	Params::BP_SASCopyPlayerActor_C_RegisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterDelayDriveEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::RegisterDelayDriveEnd(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RegisterDelayDriveEnd");

	Params::BP_SASCopyPlayerActor_C_RegisterDelayDriveEnd Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.NexusDriveAttackHitRecovery
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bCopyPlayer                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::NexusDriveAttackHitRecovery(const struct FHCHitResult& HitResult, bool bCopyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "NexusDriveAttackHitRecovery");

	Params::BP_SASCopyPlayerActor_C_NexusDriveAttackHitRecovery Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.bCopyPlayer = bCopyPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Setting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                OriginalPlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           AnimBP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESASCopyAttachType                      AttachType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::Setting(class ARSBattlePlayer_C* OriginalPlayer, class UClass* AnimBP, ESASCopyAttachType AttachType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "Setting");

	Params::BP_SASCopyPlayerActor_C_Setting Parms{};

	Parms.OriginalPlayer = OriginalPlayer;
	Parms.AnimBP = AnimBP;
	Parms.AttachType = AttachType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyOn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWithSubWeapon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CopyOn(float Time, bool bWithSubWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CopyOn");

	Params::BP_SASCopyPlayerActor_C_CopyOn Parms{};

	Parms.Time = Time;
	Parms.bWithSubWeapon = bWithSubWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyOff
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::CopyOff(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CopyOff");

	Params::BP_SASCopyPlayerActor_C_CopyOff Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bWithSubWeapon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetVisibility(bool bVisibility, bool bWithSubWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetVisibility");

	Params::BP_SASCopyPlayerActor_C_SetVisibility Parms{};

	Parms.bVisibility = bVisibility;
	Parms.bWithSubWeapon = bWithSubWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCopyMaterialValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::SetCopyMaterialValue(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCopyMaterialValue");

	Params::BP_SASCopyPlayerActor_C_SetCopyMaterialValue Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PlayMontage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SectionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::PlayMontage(class UAnimMontage* Montage, float PlayRate, class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "PlayMontage");

	Params::BP_SASCopyPlayerActor_C_PlayMontage Parms{};

	Parms.Montage = Montage;
	Parms.PlayRate = PlayRate;
	Parms.SectionName = SectionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::StopMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StopMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PrevCheckOnAttackActorHit
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HCHitResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bOK                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::PrevCheckOnAttackActorHit(const struct FHCHitResult& HCHitResult, bool* bOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "PrevCheckOnAttackActorHit");

	Params::BP_SASCopyPlayerActor_C_PrevCheckOnAttackActorHit Parms{};

	Parms.HCHitResult = std::move(HCHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (bOK != nullptr)
		*bOK = Parms.bOK;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SpawnParticle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             AttachPointName                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bUseActorParameter                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ParameterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::SpawnParticle(class UParticleSystem* Particle, class FName AttachPointName, bool bUseActorParameter, class FName ParameterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SpawnParticle");

	Params::BP_SASCopyPlayerActor_C_SpawnParticle Parms{};

	Parms.Particle = Particle;
	Parms.AttachPointName = AttachPointName;
	Parms.bUseActorParameter = bUseActorParameter;
	Parms.ParameterName = ParameterName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopParticle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::StopParticle(class UParticleSystem* Particle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StopParticle");

	Params::BP_SASCopyPlayerActor_C_StopParticle Parms{};

	Parms.Particle = Particle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopParticleAll
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::StopParticleAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StopParticleAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAimRotate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotator                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetAimRotate(const struct FRotator& Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetAimRotate");

	Params::BP_SASCopyPlayerActor_C_SetAimRotate Parms{};

	Parms.Rotator = std::move(Rotator);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetDir
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::SetDir(float Angle, float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetDir");

	Params::BP_SASCopyPlayerActor_C_SetDir Parms{};

	Parms.Angle = Angle;
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateDir
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::UpdateDir()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UpdateDir");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCopyStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESASCopyStatus                          Param_Status                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetCopyStatus(ESASCopyStatus* Param_Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetCopyStatus");

	Params::BP_SASCopyPlayerActor_C_GetCopyStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Status != nullptr)
		*Param_Status = Parms.Param_Status;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAttachLocationType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESASCopyAttachType                      InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::SetAttachLocationType(ESASCopyAttachType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetAttachLocationType");

	Params::BP_SASCopyPlayerActor_C_SetAttachLocationType Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bLerp                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::UpdateLocation(bool bLerp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UpdateLocation");

	Params::BP_SASCopyPlayerActor_C_UpdateLocation Parms{};

	Parms.bLerp = bLerp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetSASCodeActorList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_CableBase_C*>          CodeList                                               (Parm, OutParm, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetSASCodeActorList(TArray<class ABP_CableBase_C*>* CodeList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetSASCodeActorList");

	Params::BP_SASCopyPlayerActor_C_GetSASCodeActorList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CodeList != nullptr)
		*CodeList = std::move(Parms.CodeList);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetBrainCodeActorList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_CableBase_C*>          CodeList                                               (Parm, OutParm, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetBrainCodeActorList(TArray<class ABP_CableBase_C*>* CodeList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetBrainCodeActorList");

	Params::BP_SASCopyPlayerActor_C_GetBrainCodeActorList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CodeList != nullptr)
		*CodeList = std::move(Parms.CodeList);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeaponList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_WeaponBase_C*>         WeaponList                                             (Parm, OutParm, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetWeaponList(TArray<class ABP_WeaponBase_C*>* WeaponList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetWeaponList");

	Params::BP_SASCopyPlayerActor_C_GetWeaponList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponList != nullptr)
		*WeaponList = std::move(Parms.WeaponList);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCostume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    Costume                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::SetCostume(class USkeletalMesh* Costume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCostume");

	Params::BP_SASCopyPlayerActor_C_SetCostume Parms{};

	Parms.Costume = Costume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CopyMeshFitGround
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleLimit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEndFit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CopyMeshFitGround(float InterpSpeed, float AngleLimit, bool bEndFit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CopyMeshFitGround");

	Params::BP_SASCopyPlayerActor_C_CopyMeshFitGround Parms{};

	Parms.InterpSpeed = InterpSpeed;
	Parms.AngleLimit = AngleLimit;
	Parms.bEndFit = bEndFit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CancelCopyMeshFitGround
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_SASCopyPlayerActor_C::CancelCopyMeshFitGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CancelCopyMeshFitGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.OverwriteAttackCollisionInfo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           RefCommonInfo                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FHCSkillCommonInfo               RefSkill                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::OverwriteAttackCollisionInfo(struct FHCCollisionCommonInfo& RefCommonInfo, struct FHCSkillCommonInfo& RefSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "OverwriteAttackCollisionInfo");

	Params::BP_SASCopyPlayerActor_C_OverwriteAttackCollisionInfo Parms{};

	Parms.RefCommonInfo = std::move(RefCommonInfo);
	Parms.RefSkill = std::move(RefSkill);

	UObject::ProcessEvent(Func, &Parms);

	RefCommonInfo = std::move(Parms.RefCommonInfo);
	RefSkill = std::move(Parms.RefSkill);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharactersParameterTableInterface
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharactersParameterTable        ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FCharactersParameterTable ABP_SASCopyPlayerActor_C::GetCharactersParameterTableInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetCharactersParameterTableInterface");

	Params::BP_SASCopyPlayerActor_C_GetCharactersParameterTableInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcFinalDamageByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::CalcFinalDamageByDefence(float Damage, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcFinalDamageByDefence");

	Params::BP_SASCopyPlayerActor_C_CalcFinalDamageByDefence Parms{};

	Parms.Damage = Damage;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcFinalDamageByAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::CalcFinalDamageByAttack(float Damage, class AActor* DefenseActor, const struct FHCSkillCommonInfo& SkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcFinalDamageByAttack");

	Params::BP_SASCopyPlayerActor_C_CalcFinalDamageByAttack Parms{};

	Parms.Damage = Damage;
	Parms.DefenseActor = DefenseActor;
	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefPhysicsDefence                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefObjDefence                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlameDefence                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectricPhysics                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::CalcDefence(float& RefPhysicsDefence, float& RefObjDefence, float& RefFlameDefence, float& RefElectricPhysics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcDefence");

	Params::BP_SASCopyPlayerActor_C_CalcDefence Parms{};

	Parms.RefPhysicsDefence = RefPhysicsDefence;
	Parms.RefObjDefence = RefObjDefence;
	Parms.RefFlameDefence = RefFlameDefence;
	Parms.RefElectricPhysics = RefElectricPhysics;

	UObject::ProcessEvent(Func, &Parms);

	RefPhysicsDefence = Parms.RefPhysicsDefence;
	RefObjDefence = Parms.RefObjDefence;
	RefFlameDefence = Parms.RefFlameDefence;
	RefElectricPhysics = Parms.RefElectricPhysics;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDamageByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefPhysicsDamage                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefObjDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlameDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectricDamage                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCriticalDamageRate                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::CalcDamageByDefence(float& RefPhysicsDamage, float& RefObjDamage, float& RefFlameDamage, float& RefElectricDamage, float& RefCriticalDamageRate, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcDamageByDefence");

	Params::BP_SASCopyPlayerActor_C_CalcDamageByDefence Parms{};

	Parms.RefPhysicsDamage = RefPhysicsDamage;
	Parms.RefObjDamage = RefObjDamage;
	Parms.RefFlameDamage = RefFlameDamage;
	Parms.RefElectricDamage = RefElectricDamage;
	Parms.RefCriticalDamageRate = RefCriticalDamageRate;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	RefPhysicsDamage = Parms.RefPhysicsDamage;
	RefObjDamage = Parms.RefObjDamage;
	RefFlameDamage = Parms.RefFlameDamage;
	RefElectricDamage = Parms.RefElectricDamage;
	RefCriticalDamageRate = Parms.RefCriticalDamageRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcDamageByAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefPhysicsDamage                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefObjDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlameDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectricDamage                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCriticalDamageRate                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::CalcDamageByAttack(float& RefPhysicsDamage, float& RefObjDamage, float& RefFlameDamage, float& RefElectricDamage, float& RefCriticalDamageRate, class AActor* DefenseActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcDamageByAttack");

	Params::BP_SASCopyPlayerActor_C_CalcDamageByAttack Parms{};

	Parms.RefPhysicsDamage = RefPhysicsDamage;
	Parms.RefObjDamage = RefObjDamage;
	Parms.RefFlameDamage = RefFlameDamage;
	Parms.RefElectricDamage = RefElectricDamage;
	Parms.RefCriticalDamageRate = RefCriticalDamageRate;
	Parms.DefenseActor = DefenseActor;

	UObject::ProcessEvent(Func, &Parms);

	RefPhysicsDamage = Parms.RefPhysicsDamage;
	RefObjDamage = Parms.RefObjDamage;
	RefFlameDamage = Parms.RefFlameDamage;
	RefElectricDamage = Parms.RefElectricDamage;
	RefCriticalDamageRate = Parms.RefCriticalDamageRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcCritical
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Critical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAssassinAttack                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::CalcCritical(float Critical, class AActor* DefenseActor, bool bAssassinAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcCritical");

	Params::BP_SASCopyPlayerActor_C_CalcCritical Parms{};

	Parms.Critical = Critical;
	Parms.DefenseActor = DefenseActor;
	Parms.bAssassinAttack = bAssassinAttack;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcAccumulationByDefence
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefWince                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefKnockback                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefLaunch                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlame                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectric                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlooded                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefOil                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefConfusion                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashScale                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashCapCheckRate                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           AttackActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::CalcAccumulationByDefence(float& RefWince, float& RefKnockback, float& RefDown, float& RefLaunch, float& RefFlame, float& RefElectric, float& RefFlooded, float& RefOil, float& RefConfusion, float& RefCrashScale, float& RefCrashCapCheckRate, class AActor* AttackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcAccumulationByDefence");

	Params::BP_SASCopyPlayerActor_C_CalcAccumulationByDefence Parms{};

	Parms.RefWince = RefWince;
	Parms.RefKnockback = RefKnockback;
	Parms.RefDown = RefDown;
	Parms.RefLaunch = RefLaunch;
	Parms.RefFlame = RefFlame;
	Parms.RefElectric = RefElectric;
	Parms.RefFlooded = RefFlooded;
	Parms.RefOil = RefOil;
	Parms.RefConfusion = RefConfusion;
	Parms.RefCrashScale = RefCrashScale;
	Parms.RefCrashCapCheckRate = RefCrashCapCheckRate;
	Parms.AttackActor = AttackActor;

	UObject::ProcessEvent(Func, &Parms);

	RefWince = Parms.RefWince;
	RefKnockback = Parms.RefKnockback;
	RefDown = Parms.RefDown;
	RefLaunch = Parms.RefLaunch;
	RefFlame = Parms.RefFlame;
	RefElectric = Parms.RefElectric;
	RefFlooded = Parms.RefFlooded;
	RefOil = Parms.RefOil;
	RefConfusion = Parms.RefConfusion;
	RefCrashScale = Parms.RefCrashScale;
	RefCrashCapCheckRate = Parms.RefCrashCapCheckRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CalcAccumulationByAttack
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   RefWince                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefKnockback                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefLaunch                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlame                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefElectric                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefFlooded                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefOil                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefConfusion                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashScale                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RefCrashCapCheckRate                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DefenseActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EHCSkillAttackType                      AttackType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCopyActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCSkillCommonInfo               SkillInfo                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::CalcAccumulationByAttack(float& RefWince, float& RefKnockback, float& RefDown, float& RefLaunch, float& RefFlame, float& RefElectric, float& RefFlooded, float& RefOil, float& RefConfusion, float& RefCrashScale, float& RefCrashCapCheckRate, class AActor* DefenseActor, EHCSkillAttackType AttackType, bool bCopyActor, const struct FHCSkillCommonInfo& SkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CalcAccumulationByAttack");

	Params::BP_SASCopyPlayerActor_C_CalcAccumulationByAttack Parms{};

	Parms.RefWince = RefWince;
	Parms.RefKnockback = RefKnockback;
	Parms.RefDown = RefDown;
	Parms.RefLaunch = RefLaunch;
	Parms.RefFlame = RefFlame;
	Parms.RefElectric = RefElectric;
	Parms.RefFlooded = RefFlooded;
	Parms.RefOil = RefOil;
	Parms.RefConfusion = RefConfusion;
	Parms.RefCrashScale = RefCrashScale;
	Parms.RefCrashCapCheckRate = RefCrashCapCheckRate;
	Parms.DefenseActor = DefenseActor;
	Parms.AttackType = AttackType;
	Parms.bCopyActor = bCopyActor;
	Parms.SkillInfo = std::move(SkillInfo);

	UObject::ProcessEvent(Func, &Parms);

	RefWince = Parms.RefWince;
	RefKnockback = Parms.RefKnockback;
	RefDown = Parms.RefDown;
	RefLaunch = Parms.RefLaunch;
	RefFlame = Parms.RefFlame;
	RefElectric = Parms.RefElectric;
	RefFlooded = Parms.RefFlooded;
	RefOil = Parms.RefOil;
	RefConfusion = Parms.RefConfusion;
	RefCrashScale = Parms.RefCrashScale;
	RefCrashCapCheckRate = Parms.RefCrashCapCheckRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPsychicFieldDamageRateToBoss
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsPsychicFieldDamageRateToBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsPsychicFieldDamageRateToBoss");

	Params::BP_SASCopyPlayerActor_C_IsPsychicFieldDamageRateToBoss Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMaxDamageRateLimit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::GetMaxDamageRateLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetMaxDamageRateLimit");

	Params::BP_SASCopyPlayerActor_C_GetMaxDamageRateLimit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMaxCrashScaleLimit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::GetMaxCrashScaleLimit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetMaxCrashScaleLimit");

	Params::BP_SASCopyPlayerActor_C_GetMaxCrashScaleLimit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreCritical
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsIgnoreCritical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsIgnoreCritical");

	Params::BP_SASCopyPlayerActor_C_IsIgnoreCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndSASChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::EndSASChance(bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EndSASChance");

	Params::BP_SASCopyPlayerActor_C_EndSASChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StartSASChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::StartSASChance(float Time, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StartSASChance");

	Params::BP_SASCopyPlayerActor_C_StartSASChance Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CancelMeshFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CancelMeshFitGround(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CancelMeshFitGround");

	Params::BP_SASCopyPlayerActor_C_CancelMeshFitGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetMeshFitGroundCheckLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CheckHeight                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetMeshFitGroundCheckLocation(struct FVector* Location, float* CheckHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetMeshFitGroundCheckLocation");

	Params::BP_SASCopyPlayerActor_C_GetMeshFitGroundCheckLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (CheckHeight != nullptr)
		*CheckHeight = Parms.CheckHeight;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.MeshFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleLimit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEndFit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::MeshFitGround(float InterpSpeed, float AngleLimit, bool bEndFit, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "MeshFitGround");

	Params::BP_SASCopyPlayerActor_C_MeshFitGround Parms{};

	Parms.InterpSpeed = InterpSpeed;
	Parms.AngleLimit = AngleLimit;
	Parms.bEndFit = bEndFit;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accelerating                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetAccelerating(bool Accelerating, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetAccelerating");

	Params::BP_SASCopyPlayerActor_C_SetAccelerating Parms{};

	Parms.Accelerating = Accelerating;

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accelerating                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::GetAccelerating(bool* Accelerating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetAccelerating");

	Params::BP_SASCopyPlayerActor_C_GetAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accelerating != nullptr)
		*Accelerating = Parms.Accelerating;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetLockOnTargetInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetLockOnTargetInterface(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetLockOnTargetInterface");

	Params::BP_SASCopyPlayerActor_C_GetLockOnTargetInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetNotifyAttackData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNotifyAttackData               Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetNotifyAttackData(const struct FFNotifyAttackData& Data, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetNotifyAttackData");

	Params::BP_SASCopyPlayerActor_C_SetNotifyAttackData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetActorStartPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetActorStartPoint(struct FVector* StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetActorStartPoint");

	Params::BP_SASCopyPlayerActor_C_GetActorStartPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocation != nullptr)
		*StartLocation = std::move(Parms.StartLocation);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StartVisionFog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::StartVisionFog(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StartVisionFog");

	Params::BP_SASCopyPlayerActor_C_StartVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCounterSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsCounterSuccess(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsCounterSuccess");

	Params::BP_SASCopyPlayerActor_C_IsCounterSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCharacterVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetCharacterVisibility(bool bVisibility, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCharacterVisibility");

	Params::BP_SASCopyPlayerActor_C_SetCharacterVisibility Parms{};

	Parms.bVisibility = bVisibility;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetHitStopInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCRestictedHitStopType                 HitStopType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCritical                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetHitStopInterface(EHCRestictedHitStopType HitStopType, bool bCritical, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetHitStopInterface");

	Params::BP_SASCopyPlayerActor_C_SetHitStopInterface Parms{};

	Parms.HitStopType = HitStopType;
	Parms.bCritical = bCritical;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseDither                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Param_CameraDither                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::UpdateCameraDither(float DeltaSeconds, bool UseDither, float* Param_CameraDither)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UpdateCameraDither");

	Params::BP_SASCopyPlayerActor_C_UpdateCameraDither Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.UseDither = UseDither;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CameraDither != nullptr)
		*Param_CameraDither = Parms.Param_CameraDither;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SetDitherValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetCameraDither(float SetDitherValue, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetCameraDither");

	Params::BP_SASCopyPlayerActor_C_SetCameraDither Parms{};

	Parms.SetDitherValue = SetDitherValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetUseCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUse                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetUseCameraDither(bool bUse, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetUseCameraDither");

	Params::BP_SASCopyPlayerActor_C_SetUseCameraDither Parms{};

	Parms.bUse = bUse;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCounterWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWait                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsCounterWait(bool* bWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsCounterWait");

	Params::BP_SASCopyPlayerActor_C_IsCounterWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bWait != nullptr)
		*bWait = Parms.bWait;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RequestDie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::RequestDie(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RequestDie");

	Params::BP_SASCopyPlayerActor_C_RequestDie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndVisionFog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::EndVisionFog(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EndVisionFog");

	Params::BP_SASCopyPlayerActor_C_EndVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EnableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNormalAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPsychicAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReactionSRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReactionLRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DownRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAcceptAll                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::EnableReactionCoefficient(bool bNormalAttack, bool bPsychicAttack, float ReactionSRate, float ReactionLRate, float DownRate, float CrashRate, bool bAcceptAll, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EnableReactionCoefficient");

	Params::BP_SASCopyPlayerActor_C_EnableReactionCoefficient Parms{};

	Parms.bNormalAttack = bNormalAttack;
	Parms.bPsychicAttack = bPsychicAttack;
	Parms.ReactionSRate = ReactionSRate;
	Parms.ReactionLRate = ReactionLRate;
	Parms.DownRate = DownRate;
	Parms.CrashRate = CrashRate;
	Parms.bAcceptAll = bAcceptAll;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.DisableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNormalAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPsychicAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::DisableReactionCoefficient(bool bNormalAttack, bool bPsychicAttack, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "DisableReactionCoefficient");

	Params::BP_SASCopyPlayerActor_C_DisableReactionCoefficient Parms{};

	Parms.bNormalAttack = bNormalAttack;
	Parms.bPsychicAttack = bPsychicAttack;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SpawnSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class FName                             AttachName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SpawnSequencerEffectInterface(class FName ClaimantName, class UParticleSystem* Template, const struct FTransform& Transform, class FName AttachName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SpawnSequencerEffectInterface");

	Params::BP_SASCopyPlayerActor_C_SpawnSequencerEffectInterface Parms{};

	Parms.ClaimantName = ClaimantName;
	Parms.Template = Template;
	Parms.Transform = std::move(Transform);
	Parms.AttachName = AttachName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::EndSequencerEffectInterface(class FName ClaimantName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EndSequencerEffectInterface");

	Params::BP_SASCopyPlayerActor_C_EndSequencerEffectInterface Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.UpdateSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::UpdateSequencerEffectInterface(float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "UpdateSequencerEffectInterface");

	Params::BP_SASCopyPlayerActor_C_UpdateSequencerEffectInterface Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsInScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InScreen                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsInScreen(bool* InScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsInScreen");

	Params::BP_SASCopyPlayerActor_C_IsInScreen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InScreen != nullptr)
		*InScreen = Parms.InScreen;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.Get Event Bind Mesh Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     MeshComponent                                          (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::Get_Event_Bind_Mesh_Component(TArray<class UStaticMeshComponent*>* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "Get Event Bind Mesh Component");

	Params::BP_SASCopyPlayerActor_C_Get_Event_Bind_Mesh_Component Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComponent != nullptr)
		*MeshComponent = std::move(Parms.MeshComponent);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.RegisterBrainFieldNormalTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InNormalTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::RegisterBrainFieldNormalTransform(const struct FTransform& InNormalTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "RegisterBrainFieldNormalTransform");

	Params::BP_SASCopyPlayerActor_C_RegisterBrainFieldNormalTransform Parms{};

	Parms.InNormalTransform = std::move(InNormalTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CheckNoDamagePopUpFromAttacker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoPopUp                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CheckNoDamagePopUpFromAttacker(bool* bNoPopUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CheckNoDamagePopUpFromAttacker");

	Params::BP_SASCopyPlayerActor_C_CheckNoDamagePopUpFromAttacker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoPopUp != nullptr)
		*bNoPopUp = Parms.bNoPopUp;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetGroupIDInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   GroupID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubGroupID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetGroupIDInterface(bool* bSuccess, int32* GroupID, int32* SubGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetGroupIDInterface");

	Params::BP_SASCopyPlayerActor_C_GetGroupIDInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (GroupID != nullptr)
		*GroupID = Parms.GroupID;

	if (SubGroupID != nullptr)
		*SubGroupID = Parms.SubGroupID;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.StopMovementImmediately
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::StopMovementImmediately(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "StopMovementImmediately");

	Params::BP_SASCopyPlayerActor_C_StopMovementImmediately Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPsychicObjectThrowParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Apply                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Directshot_throw_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Directshot_homing_speed                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Combo_throw_speed                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Combo_homing_speed                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   brainfield_throw_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   brainfield_homing_speed                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intercept_throw_speed                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intercept_homing_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetPsychicObjectThrowParameter(bool* Apply, float* Directshot_throw_speed, float* Directshot_homing_speed, float* Combo_throw_speed, float* Combo_homing_speed, float* brainfield_throw_speed, float* brainfield_homing_speed, float* Intercept_throw_speed, float* Intercept_homing_speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetPsychicObjectThrowParameter");

	Params::BP_SASCopyPlayerActor_C_GetPsychicObjectThrowParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Apply != nullptr)
		*Apply = Parms.Apply;

	if (Directshot_throw_speed != nullptr)
		*Directshot_throw_speed = Parms.Directshot_throw_speed;

	if (Directshot_homing_speed != nullptr)
		*Directshot_homing_speed = Parms.Directshot_homing_speed;

	if (Combo_throw_speed != nullptr)
		*Combo_throw_speed = Parms.Combo_throw_speed;

	if (Combo_homing_speed != nullptr)
		*Combo_homing_speed = Parms.Combo_homing_speed;

	if (brainfield_throw_speed != nullptr)
		*brainfield_throw_speed = Parms.brainfield_throw_speed;

	if (brainfield_homing_speed != nullptr)
		*brainfield_homing_speed = Parms.brainfield_homing_speed;

	if (Intercept_throw_speed != nullptr)
		*Intercept_throw_speed = Parms.Intercept_throw_speed;

	if (Intercept_homing_speed != nullptr)
		*Intercept_homing_speed = Parms.Intercept_homing_speed;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterSkillTableWithReplace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       OrgTable                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SkillName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillCommonInfo                                        (Parm, OutParm)

void ABP_SASCopyPlayerActor_C::GetCharacterSkillTableWithReplace(class UDataTable*& OrgTable, class FName SkillName, struct FHCSkillCommonInfo* SkillCommonInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetCharacterSkillTableWithReplace");

	Params::BP_SASCopyPlayerActor_C_GetCharacterSkillTableWithReplace Parms{};

	Parms.OrgTable = OrgTable;
	Parms.SkillName = SkillName;

	UObject::ProcessEvent(Func, &Parms);

	OrgTable = Parms.OrgTable;

	if (SkillCommonInfo != nullptr)
		*SkillCommonInfo = std::move(Parms.SkillCommonInfo);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.ReserveCrashVisionShockWave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EffectDelayTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::ReserveCrashVisionShockWave(float EffectDelayTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "ReserveCrashVisionShockWave");

	Params::BP_SASCopyPlayerActor_C_ReserveCrashVisionShockWave Parms{};

	Parms.EffectDelayTime = EffectDelayTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetIgnoreVisionSimulatorScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIgnore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::SetIgnoreVisionSimulatorScore(bool bIgnore, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetIgnoreVisionSimulatorScore");

	Params::BP_SASCopyPlayerActor_C_SetIgnoreVisionSimulatorScore Parms{};

	Parms.bIgnore = bIgnore;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetProxyMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetProxyMesh(class UMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetProxyMesh");

	Params::BP_SASCopyPlayerActor_C_GetProxyMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetProxyRequestedPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Player                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetProxyRequestedPlayer(class ARSBattlePlayer_C** Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetProxyRequestedPlayer");

	Params::BP_SASCopyPlayerActor_C_GetProxyRequestedPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player != nullptr)
		*Player = Parms.Player;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPlayerCopy
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsPlayerCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsPlayerCopy");

	Params::BP_SASCopyPlayerActor_C_IsPlayerCopy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsExistPlayerCopy
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsExistPlayerCopy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsExistPlayerCopy");

	Params::BP_SASCopyPlayerActor_C_IsExistPlayerCopy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPlayerWeaponManage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_WeaponManageComponent_C*      WeaponManage                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetPlayerWeaponManage(class UBP_WeaponManageComponent_C** WeaponManage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetPlayerWeaponManage");

	Params::BP_SASCopyPlayerActor_C_GetPlayerWeaponManage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponManage != nullptr)
		*WeaponManage = Parms.WeaponManage;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetHitEffectPriorityInterface
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFHitEffectPriority                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EFHitEffectPriority ABP_SASCopyPlayerActor_C::GetHitEffectPriorityInterface()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetHitEffectPriorityInterface");

	Params::BP_SASCopyPlayerActor_C_GetHitEffectPriorityInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CheckExecuteAnimNotifyCharacterKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharaExecuteNotifyKind                 Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bExecute                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CheckExecuteAnimNotifyCharacterKind(ECharaExecuteNotifyKind Kind, bool* bExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CheckExecuteAnimNotifyCharacterKind");

	Params::BP_SASCopyPlayerActor_C_CheckExecuteAnimNotifyCharacterKind Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	if (bExecute != nullptr)
		*bExecute = Parms.bExecute;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsObstacleHitCheckToActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PTarget                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsObstacleHitCheckToActor(class AActor* PTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsObstacleHitCheckToActor");

	Params::BP_SASCopyPlayerActor_C_IsObstacleHitCheckToActor Parms{};

	Parms.PTarget = PTarget;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsObstacleHitCheck
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PPrimitive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           PAttacker                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsObstacleHitCheck(class UPrimitiveComponent* PPrimitive, class AActor* PAttacker, const struct FVector& EndPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsObstacleHitCheck");

	Params::BP_SASCopyPlayerActor_C_IsObstacleHitCheck Parms{};

	Parms.PPrimitive = PPrimitive;
	Parms.PAttacker = PAttacker;
	Parms.EndPosition = std::move(EndPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreHitCheck
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PPrimitive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitPosition                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsIgnoreHitCheck(class UPrimitiveComponent* PPrimitive, const struct FVector& HitPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsIgnoreHitCheck");

	Params::BP_SASCopyPlayerActor_C_IsIgnoreHitCheck Parms{};

	Parms.PPrimitive = PPrimitive;
	Parms.HitPosition = std::move(HitPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsIgnoreAccelerator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillExtraType                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsIgnoreAccelerator(EHCSkillExtraType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsIgnoreAccelerator");

	Params::BP_SASCopyPlayerActor_C_IsIgnoreAccelerator Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCheckFriendlyFire
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsCheckFriendlyFire(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsCheckFriendlyFire");

	Params::BP_SASCopyPlayerActor_C_IsCheckFriendlyFire Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetHitCheckIgnoredActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* ABP_SASCopyPlayerActor_C::GetHitCheckIgnoredActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetHitCheckIgnoredActor");

	Params::BP_SASCopyPlayerActor_C_GetHitCheckIgnoredActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.AttachmentVisibilityOffOnHead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOff                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::AttachmentVisibilityOffOnHead(bool bOff, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "AttachmentVisibilityOffOnHead");

	Params::BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnHead Parms{};

	Parms.bOff = bOff;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.DestroyAttachmentMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  DestroyMeshComponent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::DestroyAttachmentMeshComponent(class USceneComponent* DestroyMeshComponent, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "DestroyAttachmentMeshComponent");

	Params::BP_SASCopyPlayerActor_C_DestroyAttachmentMeshComponent Parms{};

	Parms.DestroyMeshComponent = DestroyMeshComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EquipAttachmentInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerAttachment                       Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentItemID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPlayerID                               EquipPlayerID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EquipMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::EquipAttachmentInterface(EPlayerAttachment Param_Index, int32 AttachmentItemID, EPlayerID EquipPlayerID, int32 EquipMeshIndex, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EquipAttachmentInterface");

	Params::BP_SASCopyPlayerActor_C_EquipAttachmentInterface Parms{};

	Parms.Param_Index = Param_Index;
	Parms.AttachmentItemID = AttachmentItemID;
	Parms.EquipPlayerID = EquipPlayerID;
	Parms.EquipMeshIndex = EquipMeshIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAttachedCharacterMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               EquipPlayerID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EquipMeshIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetAttachedCharacterMesh(EPlayerID EquipPlayerID, int32 EquipMeshIndex, class USkeletalMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetAttachedCharacterMesh");

	Params::BP_SASCopyPlayerActor_C_GetAttachedCharacterMesh Parms{};

	Parms.EquipPlayerID = EquipPlayerID;
	Parms.EquipMeshIndex = EquipMeshIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.AttachmentVisibilityOffOnBackBody
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FadeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::AttachmentVisibilityOffOnBackBody(bool bVisibility, float FadeTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "AttachmentVisibilityOffOnBackBody");

	Params::BP_SASCopyPlayerActor_C_AttachmentVisibilityOffOnBackBody Parms{};

	Parms.bVisibility = bVisibility;
	Parms.FadeTime = FadeTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsRegisterNpcDriveForNexusDrive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsRegisterNpcDriveForNexusDrive(EPlayerID PlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsRegisterNpcDriveForNexusDrive");

	Params::BP_SASCopyPlayerActor_C_IsRegisterNpcDriveForNexusDrive Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsRegisterActiveSasKindAny
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsRegisterActiveSasKindAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsRegisterActiveSasKindAny");

	Params::BP_SASCopyPlayerActor_C_IsRegisterActiveSasKindAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsActiveNexusDriveSas
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKindNative                         Kind                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsActiveNexusDriveSas(E_SASKindNative Kind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsActiveNexusDriveSas");

	Params::BP_SASCopyPlayerActor_C_IsActiveNexusDriveSas Parms{};

	Parms.Kind = Kind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsActiveNexusDriveAny
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsActiveNexusDriveAny()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsActiveNexusDriveAny");

	Params::BP_SASCopyPlayerActor_C_IsActiveNexusDriveAny Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveTelepoDamageRateForJewelPool
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutWinceRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockbackRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDownRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               InSkill                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::GetNexusDriveTelepoDamageRateForJewelPool(float* OutCrashRate, float* OutWinceRate, float* OutKnockbackRate, float* OutDownRate, const struct FHCSkillCommonInfo& InSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveTelepoDamageRateForJewelPool");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveTelepoDamageRateForJewelPool Parms{};

	Parms.InSkill = std::move(InSkill);

	UObject::ProcessEvent(Func, &Parms);

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutWinceRate != nullptr)
		*OutWinceRate = Parms.OutWinceRate;

	if (OutKnockbackRate != nullptr)
		*OutKnockbackRate = Parms.OutKnockbackRate;

	if (OutDownRate != nullptr)
		*OutDownRate = Parms.OutDownRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveTelepoAttackRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutDamageRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutWinceRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockbackRate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDownRate                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               InSkill                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::GetNexusDriveTelepoAttackRate(float* OutDamageRate, float* OutCrashRate, float* OutWinceRate, float* OutKnockbackRate, float* OutDownRate, const struct FHCSkillCommonInfo& InSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveTelepoAttackRate");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveTelepoAttackRate Parms{};

	Parms.InSkill = std::move(InSkill);

	UObject::ProcessEvent(Func, &Parms);

	if (OutDamageRate != nullptr)
		*OutDamageRate = Parms.OutDamageRate;

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutWinceRate != nullptr)
		*OutWinceRate = Parms.OutWinceRate;

	if (OutKnockbackRate != nullptr)
		*OutKnockbackRate = Parms.OutKnockbackRate;

	if (OutDownRate != nullptr)
		*OutDownRate = Parms.OutDownRate;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveStealth_AttackParam
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCrashRate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutKnockback                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutDown                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::GetNexusDriveStealth_AttackParam(float* OutCrashRate, float* OutKnockback, float* OutDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveStealth_AttackParam");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveStealth_AttackParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutCrashRate != nullptr)
		*OutCrashRate = Parms.OutCrashRate;

	if (OutKnockback != nullptr)
		*OutKnockback = Parms.OutKnockback;

	if (OutDown != nullptr)
		*OutDown = Parms.OutDown;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDrivePsychic_PsychicFieldDown
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutDown                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::GetNexusDrivePsychic_PsychicFieldDown(float* OutDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDrivePsychic_PsychicFieldDown");

	Params::BP_SASCopyPlayerActor_C_GetNexusDrivePsychic_PsychicFieldDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDown != nullptr)
		*OutDown = Parms.OutDown;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveMetal_DamageRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::GetNexusDriveMetal_DamageRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveMetal_DamageRate");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveMetal_DamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveCombinationVisionCost
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   OutCost                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKindNative                         SasKind                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::GetNexusDriveCombinationVisionCost(float* OutCost, E_SASKindNative SasKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveCombinationVisionCost");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveCombinationVisionCost Parms{};

	Parms.SasKind = SasKind;

	UObject::ProcessEvent(Func, &Parms);

	if (OutCost != nullptr)
		*OutCost = Parms.OutCost;

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNexusDriveAccelerator_DamageRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_SASCopyPlayerActor_C::GetNexusDriveAccelerator_DamageRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNexusDriveAccelerator_DamageRate");

	Params::BP_SASCopyPlayerActor_C_GetNexusDriveAccelerator_DamageRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.SetPhotoModeDither
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::SetPhotoModeDither(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "SetPhotoModeDither");

	Params::BP_SASCopyPlayerActor_C_SetPhotoModeDither Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.EndPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::EndPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "EndPhotoMode");

	Params::BP_SASCopyPlayerActor_C_EndPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.BeginPhotoMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::BeginPhotoMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "BeginPhotoMode");

	Params::BP_SASCopyPlayerActor_C_BeginPhotoMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeSkeletalMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USkeletalMeshComponent* ABP_SASCopyPlayerActor_C::GetPhotoModeSkeletalMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetPhotoModeSkeletalMesh");

	Params::BP_SASCopyPlayerActor_C_GetPhotoModeSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeDitherDataName
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class FName ABP_SASCopyPlayerActor_C::GetPhotoModeDitherDataName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetPhotoModeDitherDataName");

	Params::BP_SASCopyPlayerActor_C_GetPhotoModeDitherDataName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPhotoModeManualOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsPhotoModeManualOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsPhotoModeManualOverlap");

	Params::BP_SASCopyPlayerActor_C_IsPhotoModeManualOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetPhotoModeManualOverlapCapsule
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCapsuleComponent*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UCapsuleComponent* ABP_SASCopyPlayerActor_C::GetPhotoModeManualOverlapCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetPhotoModeManualOverlapCapsule");

	Params::BP_SASCopyPlayerActor_C_GetPhotoModeManualOverlapCapsule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.PhotoModeTick
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::PhotoModeTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "PhotoModeTick");

	Params::BP_SASCopyPlayerActor_C_PhotoModeTick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsCopyVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bVisible                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsCopyVisible(bool* bVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsCopyVisible");

	Params::BP_SASCopyPlayerActor_C_IsCopyVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bVisible != nullptr)
		*bVisible = Parms.bVisible;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetNotifyAttackData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FFNotifyAttackData               Data                                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetNotifyAttackData(struct FFNotifyAttackData* Data) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetNotifyAttackData");

	Params::BP_SASCopyPlayerActor_C_GetNotifyAttackData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakTargetComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*                  WeakComponent                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetWeakTargetComponent(class USceneComponent** WeakComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetWeakTargetComponent");

	Params::BP_SASCopyPlayerActor_C_GetWeakTargetComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeakComponent != nullptr)
		*WeakComponent = Parms.WeakComponent;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakUIPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetWeakUIPoint(int32 Param_Index, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetWeakUIPoint");

	Params::BP_SASCopyPlayerActor_C_GetWeakUIPoint Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetTopTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetTopTargetPoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetTopTargetPoint");

	Params::BP_SASCopyPlayerActor_C_GetTopTargetPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetWeakTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          AttackerPos                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetWeakTargetPoint(const struct FVector& AttackerPos, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetWeakTargetPoint");

	Params::BP_SASCopyPlayerActor_C_GetWeakTargetPoint Parms{};

	Parms.AttackerPos = std::move(AttackerPos);

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsMetalMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMetal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsMetalMode(bool* bMetal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsMetalMode");

	Params::BP_SASCopyPlayerActor_C_IsMetalMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMetal != nullptr)
		*bMetal = Parms.bMetal;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnemy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsEnemy(bool* bEnemy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsEnemy");

	Params::BP_SASCopyPlayerActor_C_IsEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnemy != nullptr)
		*bEnemy = Parms.bEnemy;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bPlayer                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsPlayer(bool* bPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsPlayer");

	Params::BP_SASCopyPlayerActor_C_IsPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPlayer != nullptr)
		*bPlayer = Parms.bPlayer;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// ETeamKind                               Param_Team                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetTeam(ETeamKind* Param_Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetTeam");

	Params::BP_SASCopyPlayerActor_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Team != nullptr)
		*Param_Team = Parms.Param_Team;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.isForceCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsForceCritical(bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "isForceCritical");

	Params::BP_SASCopyPlayerActor_C_IsForceCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.CanTakeBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    CanTake                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::CanTakeBrainField(bool* CanTake) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "CanTakeBrainField");

	Params::BP_SASCopyPlayerActor_C_CanTakeBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanTake != nullptr)
		*CanTake = Parms.CanTake;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsHitWeak_ChangeDefaultEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ChangeDefault                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsHitWeak_ChangeDefaultEffect(bool* ChangeDefault) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsHitWeak_ChangeDefaultEffect");

	Params::BP_SASCopyPlayerActor_C_IsHitWeak_ChangeDefaultEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeDefault != nullptr)
		*ChangeDefault = Parms.ChangeDefault;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnableSlashEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsEnableSlashEffect(struct FHCHitResult& HitResult, bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsEnableSlashEffect");

	Params::BP_SASCopyPlayerActor_C_IsEnableSlashEffect Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsBrainCrashAccessInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bAccess                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsBrainCrashAccessInterface(bool* bAccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsBrainCrashAccessInterface");

	Params::BP_SASCopyPlayerActor_C_IsBrainCrashAccessInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAccess != nullptr)
		*bAccess = Parms.bAccess;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetAutoAimRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetAutoAimRate(float* Rate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetAutoAimRate");

	Params::BP_SASCopyPlayerActor_C_GetAutoAimRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterLV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   LV                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetCharacterLV(int32* LV) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetCharacterLV");

	Params::BP_SASCopyPlayerActor_C_GetCharacterLV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LV != nullptr)
		*LV = Parms.LV;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsEnableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReactionSRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReactionLRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DownRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAcceptAll                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsEnableReactionCoefficient(bool* bEnable, float* ReactionSRate, float* ReactionLRate, float* DownRate, float* CrashRate, bool* bAcceptAll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsEnableReactionCoefficient");

	Params::BP_SASCopyPlayerActor_C_IsEnableReactionCoefficient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;

	if (ReactionSRate != nullptr)
		*ReactionSRate = Parms.ReactionSRate;

	if (ReactionLRate != nullptr)
		*ReactionLRate = Parms.ReactionLRate;

	if (DownRate != nullptr)
		*DownRate = Parms.DownRate;

	if (CrashRate != nullptr)
		*CrashRate = Parms.CrashRate;

	if (bAcceptAll != nullptr)
		*bAcceptAll = Parms.bAcceptAll;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsAttackerMainPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMainPlayer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_SASCopyPlayerActor_C::IsAttackerMainPlayer(bool* bMainPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsAttackerMainPlayer");

	Params::BP_SASCopyPlayerActor_C_IsAttackerMainPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMainPlayer != nullptr)
		*bMainPlayer = Parms.bMainPlayer;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.GetCharacterReplaceSkillTable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UDataTable*                       Original                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       SkillTable                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_SASCopyPlayerActor_C::GetCharacterReplaceSkillTable(class UDataTable* Original, class UDataTable** SkillTable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "GetCharacterReplaceSkillTable");

	Params::BP_SASCopyPlayerActor_C_GetCharacterReplaceSkillTable Parms{};

	Parms.Original = Original;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillTable != nullptr)
		*SkillTable = Parms.SkillTable;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsOnGround
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsOnGround(bool bIncludeObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsOnGround");

	Params::BP_SASCopyPlayerActor_C_IsOnGround Parms{};

	Parms.bIncludeObject = bIncludeObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SASCopyPlayerActor.BP_SASCopyPlayerActor_C.IsDisableDamageHit
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_SASCopyPlayerActor_C::IsDisableDamageHit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SASCopyPlayerActor_C", "IsDisableDamageHit");

	Params::BP_SASCopyPlayerActor_C_IsDisableDamageHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

