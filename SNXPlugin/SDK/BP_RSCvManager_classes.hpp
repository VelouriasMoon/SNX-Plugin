#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RSCvManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RSCvManager.BP_RSCvManager_C
// 0x00B8 (0x0208 - 0x0150)
class UBP_RSCvManager_C final : public URSCvManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0150(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FSoftObjPtrSoundCueSheet>       TmpCvCueSheets;                                    // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 TmpTagStrings;                                     // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Dbgstr;                                            // 0x0178(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsDlc1Available;                                   // 0x0188(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IdDlc2Available;                                   // 0x0189(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDlc3Available;                                   // 0x018A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3929[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneManager*                          SceneManager;                                      // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DLCBondsFlagName;                                  // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastDLCBondsFlagName;                              // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSoundCvCueSheets>   DLC_CueSheetList;                                  // 0x01A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsKarenEPProgress;                                 // 0x01F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392A[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TmpDLCBondsFlag;                                   // 0x01FC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RSCvManager(int32 EntryPoint);
	void OnChangeScenarioFlag();
	void OnEndBondsEpisode();
	void OnStartBondsEpisode();
	void SetMVarPlayingEventType();
	void OnChangeEventStat();
	void OnAreaLoad(EChangeAreaStatus Status, bool IsChangeLocation);
	void OnStartTitle();
	void OnChangerProgress();
	void OnChangeVoiceLanguage();
	void Finalize();
	void Initialize();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	class FString GetChapterStringFromProgressId(int32 ProgressId);
	bool LoadCmnCueSheets();
	bool LoadSenarioCueSheet();
	bool LoadCueSheet(class USoundAtomCueSheet* CueSheet);
	bool UnLoadCueSheet(class USoundAtomCueSheet* CueSheet);
	bool LoadCueSheetFromDtRef(const class FString& RowName);
	bool UnLoadCueSheetFromDtRef(const class FString& RowName);
	bool UnLoadCueSheetAll();
	void Dbg_print();
	bool LoadDLCCmnCueSheets();
	bool LoadDLCSenarioCueSheet();
	bool LoadDLCCUeSuheetFromDtRef(class FName RowName);
	bool UnLoadDLCCUeSuheetFromDtRef(class FName RowName);
	bool Un_Load_DLCCue_Sheet_All();
	void SetUpDLC_CueSheetList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RSCvManager_C">();
	}
	static class UBP_RSCvManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_RSCvManager_C>();
	}
};
static_assert(alignof(UBP_RSCvManager_C) == 0x000008, "Wrong alignment on UBP_RSCvManager_C");
static_assert(sizeof(UBP_RSCvManager_C) == 0x000208, "Wrong size on UBP_RSCvManager_C");
static_assert(offsetof(UBP_RSCvManager_C, UberGraphFrame) == 0x000150, "Member 'UBP_RSCvManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, TmpCvCueSheets) == 0x000158, "Member 'UBP_RSCvManager_C::TmpCvCueSheets' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, TmpTagStrings) == 0x000168, "Member 'UBP_RSCvManager_C::TmpTagStrings' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, Dbgstr) == 0x000178, "Member 'UBP_RSCvManager_C::Dbgstr' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, IsDlc1Available) == 0x000188, "Member 'UBP_RSCvManager_C::IsDlc1Available' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, IdDlc2Available) == 0x000189, "Member 'UBP_RSCvManager_C::IdDlc2Available' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, IsDlc3Available) == 0x00018A, "Member 'UBP_RSCvManager_C::IsDlc3Available' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, SceneManager) == 0x000190, "Member 'UBP_RSCvManager_C::SceneManager' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, DLCBondsFlagName) == 0x000198, "Member 'UBP_RSCvManager_C::DLCBondsFlagName' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, LastDLCBondsFlagName) == 0x0001A0, "Member 'UBP_RSCvManager_C::LastDLCBondsFlagName' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, DLC_CueSheetList) == 0x0001A8, "Member 'UBP_RSCvManager_C::DLC_CueSheetList' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, IsKarenEPProgress) == 0x0001F8, "Member 'UBP_RSCvManager_C::IsKarenEPProgress' has a wrong offset!");
static_assert(offsetof(UBP_RSCvManager_C, TmpDLCBondsFlag) == 0x0001FC, "Member 'UBP_RSCvManager_C::TmpDLCBondsFlag' has a wrong offset!");

}

