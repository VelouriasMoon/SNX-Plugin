#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SeeThroughJustDodgeCutin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SeeThroughJustDodgeCutin.BP_SeeThroughJustDodgeCutin_C
// 0x0028 (0x0258 - 0x0230)
class ABP_SeeThroughJustDodgeCutin_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_CutinManager_C*                     CutinManager;                                      // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CutinCharacterClass;                               // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SeeThroughJustDodgeCutinCharacter_C* CutinCharacter;                                    // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SeeThroughJustDodgeCutin(int32 EntryPoint);
	void LoadDefaultCutinMesh();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void Private_EndCutin();
	void OnStartCutin();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void OnLoaded_72457A974DB0B931466E24B19E36270D(class UObject* Loaded);
	void OnLoaded_E65E3FAD42EFFA57EA2FD3B977AF3D96(class UObject* Loaded);
	void LoadAsset();
	void PrivateInitialize();
	void Set_Active_Cutin_Actor(bool Active);
	void IsPlayingCutin(bool* bPlaying);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SeeThroughJustDodgeCutin_C">();
	}
	static class ABP_SeeThroughJustDodgeCutin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SeeThroughJustDodgeCutin_C>();
	}
};
static_assert(alignof(ABP_SeeThroughJustDodgeCutin_C) == 0x000008, "Wrong alignment on ABP_SeeThroughJustDodgeCutin_C");
static_assert(sizeof(ABP_SeeThroughJustDodgeCutin_C) == 0x000258, "Wrong size on ABP_SeeThroughJustDodgeCutin_C");
static_assert(offsetof(ABP_SeeThroughJustDodgeCutin_C, UberGraphFrame) == 0x000230, "Member 'ABP_SeeThroughJustDodgeCutin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SeeThroughJustDodgeCutin_C, DefaultSceneRoot) == 0x000238, "Member 'ABP_SeeThroughJustDodgeCutin_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SeeThroughJustDodgeCutin_C, CutinManager) == 0x000240, "Member 'ABP_SeeThroughJustDodgeCutin_C::CutinManager' has a wrong offset!");
static_assert(offsetof(ABP_SeeThroughJustDodgeCutin_C, CutinCharacterClass) == 0x000248, "Member 'ABP_SeeThroughJustDodgeCutin_C::CutinCharacterClass' has a wrong offset!");
static_assert(offsetof(ABP_SeeThroughJustDodgeCutin_C, CutinCharacter) == 0x000250, "Member 'ABP_SeeThroughJustDodgeCutin_C::CutinCharacter' has a wrong offset!");

}

