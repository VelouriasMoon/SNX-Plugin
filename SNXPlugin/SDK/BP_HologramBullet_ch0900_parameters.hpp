#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HologramBullet_ch0900

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AttackCollisionInfoBP_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HologramBullet_ch0900.BP_HologramBullet_ch0900_C.Fire
// 0x02F8 (0x02F8 - 0x0000)
struct BP_HologramBullet_ch0900_C_Fire final
{
public:
	class AActor*                                 Param_AttackOwner;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_FirePoint;                                   // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dir;                                               // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttackCollisionInfoBP                 Param_CollisionInfo;                               // 0x0020(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          Param_bDisableImpactParticle;                      // 0x00E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSuccess;                                          // 0x00E1(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_416C[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LAttackHeight;                                     // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fire_bSuccess;                            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_416D[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_416E[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_416F[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0138(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0148(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4170[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x026C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HologramBullet_ch0900_C_Fire) == 0x000008, "Wrong alignment on BP_HologramBullet_ch0900_C_Fire");
static_assert(sizeof(BP_HologramBullet_ch0900_C_Fire) == 0x0002F8, "Wrong size on BP_HologramBullet_ch0900_C_Fire");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Param_AttackOwner) == 0x000000, "Member 'BP_HologramBullet_ch0900_C_Fire::Param_AttackOwner' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Param_FirePoint) == 0x000008, "Member 'BP_HologramBullet_ch0900_C_Fire::Param_FirePoint' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Dir) == 0x000014, "Member 'BP_HologramBullet_ch0900_C_Fire::Dir' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Param_CollisionInfo) == 0x000020, "Member 'BP_HologramBullet_ch0900_C_Fire::Param_CollisionInfo' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Param_bDisableImpactParticle) == 0x0000E0, "Member 'BP_HologramBullet_ch0900_C_Fire::Param_bDisableImpactParticle' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, bSuccess) == 0x0000E1, "Member 'BP_HologramBullet_ch0900_C_Fire::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, LAttackHeight) == 0x0000E4, "Member 'BP_HologramBullet_ch0900_C_Fire::LAttackHeight' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Fire_bSuccess) == 0x0000E8, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Fire_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_MakeVector_ReturnValue_1) == 0x0000FC, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_GetHitManager_Manager) == 0x000118, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000120, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, K2Node_MakeArray_Array) == 0x000128, "Member 'BP_HologramBullet_ch0900_C_Fire::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, Temp_object_Variable) == 0x000138, "Member 'BP_HologramBullet_ch0900_C_Fire::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000148, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0001D0, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_IsValid_ReturnValue) == 0x0001D1, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D2, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D3, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_Location) == 0x0001DC, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E8, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_Normal) == 0x0001F4, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_HitItem) == 0x000230, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_FaceIndex) == 0x000234, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_TraceStart) == 0x000238, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_BreakHitResult_TraceEnd) == 0x000244, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000250, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_FMax_ReturnValue) == 0x000254, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000258, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000260, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00026C, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_Fire, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002F4, "Member 'BP_HologramBullet_ch0900_C_Fire::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_HologramBullet_ch0900.BP_HologramBullet_ch0900_C.OnUpdate
// 0x0008 (0x0008 - 0x0000)
struct BP_HologramBullet_ch0900_C_OnUpdate final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HologramBullet_ch0900_C_OnUpdate) == 0x000004, "Wrong alignment on BP_HologramBullet_ch0900_C_OnUpdate");
static_assert(sizeof(BP_HologramBullet_ch0900_C_OnUpdate) == 0x000008, "Wrong size on BP_HologramBullet_ch0900_C_OnUpdate");
static_assert(offsetof(BP_HologramBullet_ch0900_C_OnUpdate, DeltaSeconds) == 0x000000, "Member 'BP_HologramBullet_ch0900_C_OnUpdate::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_OnUpdate, bDummy) == 0x000004, "Member 'BP_HologramBullet_ch0900_C_OnUpdate::bDummy' has a wrong offset!");

// Function BP_HologramBullet_ch0900.BP_HologramBullet_ch0900_C.OnAttackEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_HologramBullet_ch0900_C_OnAttackEnd final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4171[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnAttackEnd_bDummy;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HologramBullet_ch0900_C_OnAttackEnd) == 0x000008, "Wrong alignment on BP_HologramBullet_ch0900_C_OnAttackEnd");
static_assert(sizeof(BP_HologramBullet_ch0900_C_OnAttackEnd) == 0x000018, "Wrong size on BP_HologramBullet_ch0900_C_OnAttackEnd");
static_assert(offsetof(BP_HologramBullet_ch0900_C_OnAttackEnd, bDummy) == 0x000000, "Member 'BP_HologramBullet_ch0900_C_OnAttackEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_OnAttackEnd, CallFunc_GetHitManager_Manager) == 0x000008, "Member 'BP_HologramBullet_ch0900_C_OnAttackEnd::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_HologramBullet_ch0900_C_OnAttackEnd, CallFunc_OnAttackEnd_bDummy) == 0x000010, "Member 'BP_HologramBullet_ch0900_C_OnAttackEnd::CallFunc_OnAttackEnd_bDummy' has a wrong offset!");

}

