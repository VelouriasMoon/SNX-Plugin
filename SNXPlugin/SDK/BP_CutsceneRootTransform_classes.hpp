#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CutsceneRootTransform

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CutsceneRootTransform.BP_CutsceneRootTransform_C
// 0x0028 (0x0258 - 0x0230)
class ABP_CutsceneRootTransform_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ECutsceneRootTransformID                      ID;                                                // 0x0248(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6842[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name_BP_CutsceneRootTransform_C;                   // 0x024C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CutsceneRootTransform(int32 EntryPoint);
	void Setup();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CutsceneRootTransform_C">();
	}
	static class ABP_CutsceneRootTransform_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CutsceneRootTransform_C>();
	}
};
static_assert(alignof(ABP_CutsceneRootTransform_C) == 0x000008, "Wrong alignment on ABP_CutsceneRootTransform_C");
static_assert(sizeof(ABP_CutsceneRootTransform_C) == 0x000258, "Wrong size on ABP_CutsceneRootTransform_C");
static_assert(offsetof(ABP_CutsceneRootTransform_C, UberGraphFrame) == 0x000230, "Member 'ABP_CutsceneRootTransform_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CutsceneRootTransform_C, Arrow) == 0x000238, "Member 'ABP_CutsceneRootTransform_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_CutsceneRootTransform_C, DefaultSceneRoot) == 0x000240, "Member 'ABP_CutsceneRootTransform_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CutsceneRootTransform_C, ID) == 0x000248, "Member 'ABP_CutsceneRootTransform_C::ID' has a wrong offset!");
static_assert(offsetof(ABP_CutsceneRootTransform_C, Name_BP_CutsceneRootTransform_C) == 0x00024C, "Member 'ABP_CutsceneRootTransform_C::Name_BP_CutsceneRootTransform_C' has a wrong offset!");

}

