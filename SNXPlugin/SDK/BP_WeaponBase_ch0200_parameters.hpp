#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponBase_ch0200

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EPlayerComboPattern_structs.hpp"


namespace SDK::Params
{

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.ExecuteUbergraph_BP_WeaponBase_ch0200
// 0x0008 (0x0008 - 0x0000)
struct BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bON;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginRangeParticle_bDummy;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndRangeParticle_bDummy;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200) == 0x000004, "Wrong alignment on BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200");
static_assert(sizeof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200) == 0x000008, "Wrong size on BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200");
static_assert(offsetof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200, EntryPoint) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200, K2Node_Event_bON) == 0x000004, "Member 'BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200::K2Node_Event_bON' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200, CallFunc_BeginRangeParticle_bDummy) == 0x000005, "Member 'BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200::CallFunc_BeginRangeParticle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200, CallFunc_EndRangeParticle_bDummy) == 0x000006, "Member 'BP_WeaponBase_ch0200_C_ExecuteUbergraph_BP_WeaponBase_ch0200::CallFunc_EndRangeParticle_bDummy' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.SetBattleEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponBase_ch0200_C_SetBattleEffect final
{
public:
	bool                                          bON;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_SetBattleEffect) == 0x000001, "Wrong alignment on BP_WeaponBase_ch0200_C_SetBattleEffect");
static_assert(sizeof(BP_WeaponBase_ch0200_C_SetBattleEffect) == 0x000001, "Wrong size on BP_WeaponBase_ch0200_C_SetBattleEffect");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetBattleEffect, bON) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_SetBattleEffect::bON' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.Attach
// 0x0030 (0x0030 - 0x0000)
struct BP_WeaponBase_ch0200_C_Attach final
{
public:
	class ARSBattlePlayer_C*                      Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_wp0200_C*                          K2Node_DynamicCast_AsABP_Wp_0200;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_Attach) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0200_C_Attach");
static_assert(sizeof(BP_WeaponBase_ch0200_C_Attach) == 0x000030, "Wrong size on BP_WeaponBase_ch0200_C_Attach");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, Param_Owner) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_Attach::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, Component) == 0x000008, "Member 'BP_WeaponBase_ch0200_C_Attach::Component' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, SocketName) == 0x000010, "Member 'BP_WeaponBase_ch0200_C_Attach::SocketName' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_ch0200_C_Attach::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, K2Node_DynamicCast_AsABP_Wp_0200) == 0x000020, "Member 'BP_WeaponBase_ch0200_C_Attach::K2Node_DynamicCast_AsABP_Wp_0200' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_Attach, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_WeaponBase_ch0200_C_Attach::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.EndRangeParticle
// 0x0028 (0x0028 - 0x0000)
struct BP_WeaponBase_ch0200_C_EndRangeParticle final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F4[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84F5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class URSParticleSystemComponentBase*   Temp_object_Variable;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_EndRangeParticle) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0200_C_EndRangeParticle");
static_assert(sizeof(BP_WeaponBase_ch0200_C_EndRangeParticle) == 0x000028, "Wrong size on BP_WeaponBase_ch0200_C_EndRangeParticle");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, bDummy) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_EndRangeParticle, Temp_object_Variable) == 0x000020, "Member 'BP_WeaponBase_ch0200_C_EndRangeParticle::Temp_object_Variable' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.BeginRangeParticle
// 0x0068 (0x0068 - 0x0000)
struct BP_WeaponBase_ch0200_C_BeginRangeParticle final
{
public:
	bool                                          bDummy;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        LParticleData;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_2;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F7[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerComboPattern                           Temp_byte_Variable;                                // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F8[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EndRangeParticle_bDummy;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_BeginRangeParticle) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0200_C_BeginRangeParticle");
static_assert(sizeof(BP_WeaponBase_ch0200_C_BeginRangeParticle) == 0x000068, "Wrong size on BP_WeaponBase_ch0200_C_BeginRangeParticle");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, bDummy) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, LParticleData) == 0x000008, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::LParticleData' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_object_Variable) == 0x000010, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_object_Variable_1) == 0x000018, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_object_Variable_2) == 0x000020, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_IsControlAI_bAI) == 0x000048, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, Temp_byte_Variable) == 0x00004A, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004B, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_IsVisible_ReturnValue) == 0x00004C, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, K2Node_Select_Default) == 0x000050, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000058, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_BeginRangeParticle, CallFunc_EndRangeParticle_bDummy) == 0x000060, "Member 'BP_WeaponBase_ch0200_C_BeginRangeParticle::CallFunc_EndRangeParticle_bDummy' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.SetRangeParticleType
// 0x0018 (0x0018 - 0x0000)
struct BP_WeaponBase_ch0200_C_SetRangeParticleType final
{
public:
	EPlayerComboPattern                           ComboPattern;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginRangeParticle_bDummy;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F9[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_SetRangeParticleType) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0200_C_SetRangeParticleType");
static_assert(sizeof(BP_WeaponBase_ch0200_C_SetRangeParticleType) == 0x000018, "Wrong size on BP_WeaponBase_ch0200_C_SetRangeParticleType");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, ComboPattern) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::ComboPattern' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, bDummy) == 0x000001, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, CallFunc_BeginRangeParticle_bDummy) == 0x000002, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::CallFunc_BeginRangeParticle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetRangeParticleType, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_WeaponBase_ch0200_C_SetRangeParticleType::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.SetTargetInRange
// 0x0005 (0x0005 - 0x0000)
struct BP_WeaponBase_ch0200_C_SetTargetInRange final
{
public:
	bool                                          bInRange;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginRangeParticle_bDummy;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndRangeParticle_bDummy;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_SetTargetInRange) == 0x000001, "Wrong alignment on BP_WeaponBase_ch0200_C_SetTargetInRange");
static_assert(sizeof(BP_WeaponBase_ch0200_C_SetTargetInRange) == 0x000005, "Wrong size on BP_WeaponBase_ch0200_C_SetTargetInRange");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetTargetInRange, bInRange) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_SetTargetInRange::bInRange' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetTargetInRange, bDummy) == 0x000001, "Member 'BP_WeaponBase_ch0200_C_SetTargetInRange::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetTargetInRange, CallFunc_BeginRangeParticle_bDummy) == 0x000002, "Member 'BP_WeaponBase_ch0200_C_SetTargetInRange::CallFunc_BeginRangeParticle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetTargetInRange, CallFunc_EndRangeParticle_bDummy) == 0x000003, "Member 'BP_WeaponBase_ch0200_C_SetTargetInRange::CallFunc_EndRangeParticle_bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetTargetInRange, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'BP_WeaponBase_ch0200_C_SetTargetInRange::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C.SetWeaponScaleWp0200
// 0x0028 (0x0028 - 0x0000)
struct BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200 final
{
public:
	struct FVector                                InScale;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84FA[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UABP_wp0200_C*                          K2Node_DynamicCast_AsABP_Wp_0200;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200) == 0x000008, "Wrong alignment on BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200");
static_assert(sizeof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200) == 0x000028, "Wrong size on BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200, InScale) == 0x000000, "Member 'BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200::InScale' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200, bDummy) == 0x00000C, "Member 'BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200::bDummy' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200, K2Node_DynamicCast_AsABP_Wp_0200) == 0x000018, "Member 'BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200::K2Node_DynamicCast_AsABP_Wp_0200' has a wrong offset!");
static_assert(offsetof(BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_WeaponBase_ch0200_C_SetWeaponScaleWp0200::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

