#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_Wait

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTT_ch_Wait.BTT_ch_Wait_C.ExecuteUbergraph_BTT_ch_Wait
// 0x0068 (0x0068 - 0x0000)
struct BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D65[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D66[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D67[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D68[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait) == 0x000008, "Wrong alignment on BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait");
static_assert(sizeof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait) == 0x000068, "Wrong size on BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, EntryPoint) == 0x000000, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_OwnerController_1) == 0x000018, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_ControlledPawn_1) == 0x000020, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_OwnerController) == 0x000028, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_ControlledPawn) == 0x000030, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_DynamicCast_AsRSBattle_Player) == 0x000040, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_DynamicCast_AsRSBattle_Player_1) == 0x000050, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_DynamicCast_AsRSBattle_Player_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, CallFunc_RandomFloatInRange_ReturnValue) == 0x00005C, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BTT_ch_Wait_C_ExecuteUbergraph_BTT_ch_Wait::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BTT_ch_Wait.BTT_ch_Wait_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_Wait_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Wait_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_Wait_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_Wait_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_Wait_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_Wait_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Wait_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_Wait_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_ch_Wait.BTT_ch_Wait_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Wait_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Wait_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_ch_Wait_C_ReceiveAbortAI");
static_assert(sizeof(BTT_ch_Wait_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_ch_Wait_C_ReceiveAbortAI");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_ch_Wait_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Wait_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_Wait.BTT_ch_Wait_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_Wait_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_Wait_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_Wait_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_Wait_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_Wait_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_Wait_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_Wait_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_Wait_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

