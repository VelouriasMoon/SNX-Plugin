#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_BrainTalk_DataBase

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.GetRowItem
// 0x00A0 (0x00A0 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_GetRowItem final
{
public:
	class UDataTable*                             BrainTalkDataTable;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4566[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4567[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainTalkData                         RowItem;                                           // 0x0020(0x0028)(Parm, OutParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4568[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4569[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainTalkData                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456A[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_GetRowItem) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_GetRowItem");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_GetRowItem) == 0x0000A0, "Wrong size on BPFL_BrainTalk_DataBase_C_GetRowItem");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, BrainTalkDataTable) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::BrainTalkDataTable' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, Param_Index) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, __WorldContext) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, IsSuccess) == 0x000018, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::IsSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, RowItem) == 0x000020, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::RowItem' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_Array_Get_Item) == 0x00005C, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000090, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_GetRowItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BPFL_BrainTalk_DataBase_C_GetRowItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.StartBrainTalk
// 0x0080 (0x0080 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_StartBrainTalk final
{
public:
	class FName                                   BrainTalkID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBrainTalkCategory                            Category;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEventCallEnable;                                 // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGameOverCheck;                                   // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456B[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBrainTalkMasterData                   BrainTalkMasterData;                               // 0x0018(0x0030)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABrainTalkManager*                      BrainTalkManager;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBrainTalkBt_PlayInfo                  K2Node_MakeStruct_BrainTalkBt_PlayInfo;            // 0x0050(0x0030)()
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_StartBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_StartBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_StartBrainTalk) == 0x000080, "Wrong size on BPFL_BrainTalk_DataBase_C_StartBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, BrainTalkID) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::BrainTalkID' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, Category) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::Category' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, IsEventCallEnable) == 0x000009, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::IsEventCallEnable' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, IsGameOverCheck) == 0x00000A, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::IsGameOverCheck' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, __WorldContext) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, BrainTalkMasterData) == 0x000018, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::BrainTalkMasterData' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, BrainTalkManager) == 0x000048, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk, K2Node_MakeStruct_BrainTalkBt_PlayInfo) == 0x000050, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk::K2Node_MakeStruct_BrainTalkBt_PlayInfo' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.EndBrainTalk
// 0x0018 (0x0018 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_EndBrainTalk final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_EndBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_EndBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_EndBrainTalk) == 0x000018, "Wrong size on BPFL_BrainTalk_DataBase_C_EndBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_EndBrainTalk, __WorldContext) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_EndBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_EndBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_EndBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_EndBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_EndBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.SetBrainTalk
// 0x0058 (0x0058 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_SetBrainTalk final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_456C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetDataTable_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetRowItem_IsSuccess;                     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456E[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainTalkData                         CallFunc_GetRowItem_RowItem;                       // 0x0030(0x0028)()
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_SetBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_SetBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_SetBrainTalk) == 0x000058, "Wrong size on BPFL_BrainTalk_DataBase_C_SetBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, Param_Index) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::Param_Index' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, __WorldContext) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, IsSuccess) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::IsSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000018, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, CallFunc_GetDataTable_ReturnValue) == 0x000020, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::CallFunc_GetDataTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, CallFunc_GetRowItem_IsSuccess) == 0x000029, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::CallFunc_GetRowItem_IsSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_SetBrainTalk, CallFunc_GetRowItem_RowItem) == 0x000030, "Member 'BPFL_BrainTalk_DataBase_C_SetBrainTalk::CallFunc_GetRowItem_RowItem' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.InitializeBrainTalk
// 0x0088 (0x0088 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_InitializeBrainTalk final
{
public:
	struct FBrainTalkMasterData                   BrainTalkData;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FBrainTalk_CategoryDatatable           CategoryDatatable;                                 // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_456F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_InitializeBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk) == 0x000088, "Wrong size on BPFL_BrainTalk_DataBase_C_InitializeBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, BrainTalkData) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::BrainTalkData' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, CategoryDatatable) == 0x000030, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::CategoryDatatable' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, __WorldContext) == 0x000060, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, CallFunc_GetUserParamManager_UserParamManager) == 0x000068, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000078, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_InitializeBrainTalk, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BPFL_BrainTalk_DataBase_C_InitializeBrainTalk::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.PauseBrainTalk
// 0x0030 (0x0030 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_PauseBrainTalk final
{
public:
	bool                                          IsPause;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4570[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSGameInstance*                        K2Node_DynamicCast_AsRSGame_Instance;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4571[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_PauseBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk) == 0x000030, "Wrong size on BPFL_BrainTalk_DataBase_C_PauseBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, IsPause) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::IsPause' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, __WorldContext) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, K2Node_DynamicCast_AsRSGame_Instance) == 0x000018, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::K2Node_DynamicCast_AsRSGame_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalk, CallFunc_GetBrainTalkManager_ReturnValue) == 0x000028, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalk::CallFunc_GetBrainTalkManager_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.StopBrainTalk
// 0x0020 (0x0020 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_StopBrainTalk final
{
public:
	bool                                          IsOpenHold;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsLowerPriorityOnly;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4572[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLowerPriority_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNoStopBrainTalk_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_StopBrainTalk) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_StopBrainTalk");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_StopBrainTalk) == 0x000020, "Wrong size on BPFL_BrainTalk_DataBase_C_StopBrainTalk");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, IsOpenHold) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::IsOpenHold' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, IsLowerPriorityOnly) == 0x000001, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::IsLowerPriorityOnly' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, __WorldContext) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, CallFunc_IsLowerPriority_ReturnValue) == 0x000019, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::CallFunc_IsLowerPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StopBrainTalk, CallFunc_IsNoStopBrainTalk_ReturnValue) == 0x00001A, "Member 'BPFL_BrainTalk_DataBase_C_StopBrainTalk::CallFunc_IsNoStopBrainTalk_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.PauseBrainTalkAtStartTalkEventBefore
// 0x0018 (0x0018 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore) == 0x000018, "Wrong size on BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore, __WorldContext) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtStartTalkEventBefore::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.PauseBrainTalkAtEndTalkEventAfter
// 0x0018 (0x0018 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter) == 0x000018, "Wrong size on BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter, __WorldContext) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000008, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BPFL_BrainTalk_DataBase_C_PauseBrainTalkAtEndTalkEventAfter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BPFL_BrainTalk_DataBase.BPFL_BrainTalk_DataBase_C.StartBrainTalk_Tag
// 0x02E0 (0x02E0 - 0x0000)
struct BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag final
{
public:
	struct FBrainTalkBt_PlayInfo                  PlayInfo;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsEventCallEnable;                                 // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGameOverCheck;                                   // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4573[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBrainTalkMasterData                   BrainTalkMasterData;                               // 0x0040(0x0030)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABrainTalkManager*                      BrainTalkManager;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4574[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTimingEnableCheck_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue; // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBrainTalkOnceCheck_InSaveData_Find_ReturnValue; // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameOverCheck_ReturnValue;              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDoEventCheck_ReturnValue;               // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4575[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFindBrainTalkOnceCheck_LoadReset_ReturnValue; // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4576[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_1; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4577[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_2; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4578[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainTalkMasterData                   CallFunc_GetCategoryDataTableRow_RowData;          // 0x0160(0x0030)()
	bool                                          CallFunc_GetCategoryDataTableRow_ReturnValue;      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4579[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBrainTalk_CategoryDatatable           K2Node_MakeStruct_BrainTalk_CategoryDatatable;     // 0x0198(0x0030)()
	EBrainTalkPriorityCheckResult                 CallFunc_GetPriorityCheck_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_3; // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457A[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_4; // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457B[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FBrainTalk_CategoryDatatable           K2Node_MakeStruct_BrainTalk_CategoryDatatable_1;   // 0x0298(0x0030)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x02C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetBrainTalk_IsSuccess;                   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag) == 0x000008, "Wrong alignment on BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag");
static_assert(sizeof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag) == 0x0002E0, "Wrong size on BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, PlayInfo) == 0x000000, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::PlayInfo' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, IsEventCallEnable) == 0x000030, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::IsEventCallEnable' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, IsGameOverCheck) == 0x000031, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::IsGameOverCheck' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, __WorldContext) == 0x000038, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, BrainTalkMasterData) == 0x000040, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::BrainTalkMasterData' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, BrainTalkManager) == 0x000070, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000078, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetUserParamManager_UserParamManager) == 0x000088, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsTimingEnableCheck_ReturnValue) == 0x000091, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsTimingEnableCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue) == 0x000092, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsBrainTalkOnceCheck_InSaveData_Find_ReturnValue) == 0x000093, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsBrainTalkOnceCheck_InSaveData_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsGameOverCheck_ReturnValue) == 0x000094, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsGameOverCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsDoEventCheck_ReturnValue) == 0x000095, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsDoEventCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_IsFindBrainTalkOnceCheck_LoadReset_ReturnValue) == 0x0000B8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_IsFindBrainTalkOnceCheck_LoadReset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0000C0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0000D0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000100, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000110, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000120, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_1) == 0x000130, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Conv_NameToString_ReturnValue_3) == 0x000138, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000148, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_2) == 0x000158, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetCategoryDataTableRow_RowData) == 0x000160, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetCategoryDataTableRow_RowData' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetCategoryDataTableRow_ReturnValue) == 0x000190, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetCategoryDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, K2Node_MakeStruct_BrainTalk_CategoryDatatable) == 0x000198, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::K2Node_MakeStruct_BrainTalk_CategoryDatatable' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetPriorityCheck_ReturnValue) == 0x0001C8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetPriorityCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, K2Node_SwitchEnum_CmpSuccess) == 0x0001C9, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_3) == 0x0001CA, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0001D0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_4) == 0x0001E0, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_GetDebugDispBrainTalkLogFlag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0001E8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001F8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000208, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000218, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000228, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000238, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000248, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000258, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000268, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000278, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000288, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, K2Node_MakeStruct_BrainTalk_CategoryDatatable_1) == 0x000298, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::K2Node_MakeStruct_BrainTalk_CategoryDatatable_1' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_Concat_StrStr_ReturnValue_16) == 0x0002C8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag, CallFunc_SetBrainTalk_IsSuccess) == 0x0002D8, "Member 'BPFL_BrainTalk_DataBase_C_StartBrainTalk_Tag::CallFunc_SetBrainTalk_IsSuccess' has a wrong offset!");

}

