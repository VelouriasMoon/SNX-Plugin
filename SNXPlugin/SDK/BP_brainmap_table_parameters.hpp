#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_brainmap_table

#include "Basic.hpp"

#include "Struct_ui_brainmap_info_structs.hpp"


namespace SDK::Params
{

// Function BP_brainmap_table.BP_brainmap_table_C.GetBrainmapTableData
// 0x00C0 (0x00C0 - 0x0000)
struct BP_brainmap_table_C_GetBrainmapTableData final
{
public:
	bool                                          IsKasane;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50FE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ui_brainmap_info               Data;                                              // 0x0010(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	struct FStruct_ui_brainmap_info               _Return;                                           // 0x0040(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       TableKasane;                                       // 0x0070(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       TableYuito;                                        // 0x0080(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       CallFunc_GetBrainmapTable_Table;                   // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_brainmap_table_C_GetBrainmapTableData) == 0x000008, "Wrong alignment on BP_brainmap_table_C_GetBrainmapTableData");
static_assert(sizeof(BP_brainmap_table_C_GetBrainmapTableData) == 0x0000C0, "Wrong size on BP_brainmap_table_C_GetBrainmapTableData");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, IsKasane) == 0x000000, "Member 'BP_brainmap_table_C_GetBrainmapTableData::IsKasane' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, Param_Index) == 0x000004, "Member 'BP_brainmap_table_C_GetBrainmapTableData::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, __WorldContext) == 0x000008, "Member 'BP_brainmap_table_C_GetBrainmapTableData::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, Data) == 0x000010, "Member 'BP_brainmap_table_C_GetBrainmapTableData::Data' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, _Return) == 0x000040, "Member 'BP_brainmap_table_C_GetBrainmapTableData::_Return' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, TableKasane) == 0x000070, "Member 'BP_brainmap_table_C_GetBrainmapTableData::TableKasane' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, TableYuito) == 0x000080, "Member 'BP_brainmap_table_C_GetBrainmapTableData::TableYuito' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, K2Node_MakeArray_Array) == 0x000090, "Member 'BP_brainmap_table_C_GetBrainmapTableData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, CallFunc_GetBrainmapTable_Table) == 0x0000A0, "Member 'BP_brainmap_table_C_GetBrainmapTableData::CallFunc_GetBrainmapTable_Table' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTableData, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'BP_brainmap_table_C_GetBrainmapTableData::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_brainmap_table.BP_brainmap_table_C.GetBrainmapTable
// 0x0060 (0x0060 - 0x0000)
struct BP_brainmap_table_C_GetBrainmapTable final
{
public:
	bool                                          IsKasane;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50FF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       Table;                                             // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       _TableKasane;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       _TableYuito;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FStruct_ui_brainmap_info>       K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_brainmap_table_C_GetBrainmapTable) == 0x000008, "Wrong alignment on BP_brainmap_table_C_GetBrainmapTable");
static_assert(sizeof(BP_brainmap_table_C_GetBrainmapTable) == 0x000060, "Wrong size on BP_brainmap_table_C_GetBrainmapTable");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, IsKasane) == 0x000000, "Member 'BP_brainmap_table_C_GetBrainmapTable::IsKasane' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, __WorldContext) == 0x000008, "Member 'BP_brainmap_table_C_GetBrainmapTable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, Table) == 0x000010, "Member 'BP_brainmap_table_C_GetBrainmapTable::Table' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, _TableKasane) == 0x000020, "Member 'BP_brainmap_table_C_GetBrainmapTable::_TableKasane' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, _TableYuito) == 0x000030, "Member 'BP_brainmap_table_C_GetBrainmapTable::_TableYuito' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_brainmap_table_C_GetBrainmapTable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_brainmap_table_C_GetBrainmapTable, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_brainmap_table_C_GetBrainmapTable::K2Node_MakeArray_Array_1' has a wrong offset!");

}

