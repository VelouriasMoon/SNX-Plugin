#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Trade_List_Parts_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Trade_List_Parts_1.WB_ui_Trade_List_Parts_1_C
// 0x00E8 (0x0540 - 0x0458)
class UWB_ui_Trade_List_Parts_1_C final : public UUIItemTradeListIndex
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0458(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Change_trade_Item_out_max;                         // 0x0460(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_trade_Item_in_max;                          // 0x0468(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2_max;                                      // 0x0470(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1_in_max;                                   // 0x0478(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1_max;                                      // 0x0480(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_max;                                       // 0x0488(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_trade_Item_enough_out;                      // 0x0490(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_trade_Item_enough_in;                       // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2_enough;                                   // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_trade_Item_out;                             // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Change_trade_Item_in;                              // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_2;                                          // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_enough_in;                                  // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_enough;                                     // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_enough;                                    // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1_in;                                       // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Select_1;                                          // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base_1;                                            // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_select;                                       // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_1;                                           // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Ghost_frame;                                       // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_category;                                     // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_new;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_wish;                                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Item_icon_frame_2;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_trade_list_1;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_trade_list_1_num;                             // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_Trade_List_Parts_1(int32 EntryPoint);
	void Construct();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	bool SetItemInfo(const class FName& ItemId, int32 TradeItemIndex, bool CanTrade, int32 TakeNum);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Trade_List_Parts_1_C">();
	}
	static class UWB_ui_Trade_List_Parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Trade_List_Parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_Trade_List_Parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_Trade_List_Parts_1_C");
static_assert(sizeof(UWB_ui_Trade_List_Parts_1_C) == 0x000540, "Wrong size on UWB_ui_Trade_List_Parts_1_C");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, UberGraphFrame) == 0x000458, "Member 'UWB_ui_Trade_List_Parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_out_max) == 0x000460, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_out_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_in_max) == 0x000468, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_in_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_2_max) == 0x000470, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_2_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_1_in_max) == 0x000478, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_1_in_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_1_max) == 0x000480, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_1_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Default_max) == 0x000488, "Member 'UWB_ui_Trade_List_Parts_1_C::Default_max' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_enough_out) == 0x000490, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_enough_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_enough_in) == 0x000498, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_enough_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_2_enough) == 0x0004A0, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_2_enough' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_out) == 0x0004A8, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Change_trade_Item_in) == 0x0004B0, "Member 'UWB_ui_Trade_List_Parts_1_C::Change_trade_Item_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_2) == 0x0004B8, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_enough_in) == 0x0004C0, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_enough_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_enough) == 0x0004C8, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_enough' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Default_enough) == 0x0004D0, "Member 'UWB_ui_Trade_List_Parts_1_C::Default_enough' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_1_in) == 0x0004D8, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_1_in' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Select_1) == 0x0004E0, "Member 'UWB_ui_Trade_List_Parts_1_C::Select_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Default) == 0x0004E8, "Member 'UWB_ui_Trade_List_Parts_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Base_1) == 0x0004F0, "Member 'UWB_ui_Trade_List_Parts_1_C::Base_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Base_select) == 0x0004F8, "Member 'UWB_ui_Trade_List_Parts_1_C::Base_select' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Frame_1) == 0x000500, "Member 'UWB_ui_Trade_List_Parts_1_C::Frame_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Ghost_frame) == 0x000508, "Member 'UWB_ui_Trade_List_Parts_1_C::Ghost_frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Icon_category) == 0x000510, "Member 'UWB_ui_Trade_List_Parts_1_C::Icon_category' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Icon_new) == 0x000518, "Member 'UWB_ui_Trade_List_Parts_1_C::Icon_new' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Icon_wish) == 0x000520, "Member 'UWB_ui_Trade_List_Parts_1_C::Icon_wish' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Item_icon_frame_2) == 0x000528, "Member 'UWB_ui_Trade_List_Parts_1_C::Item_icon_frame_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Text_trade_list_1) == 0x000530, "Member 'UWB_ui_Trade_List_Parts_1_C::Text_trade_list_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Trade_List_Parts_1_C, Text_trade_list_1_num) == 0x000538, "Member 'UWB_ui_Trade_List_Parts_1_C::Text_trade_list_1_num' has a wrong offset!");

}

