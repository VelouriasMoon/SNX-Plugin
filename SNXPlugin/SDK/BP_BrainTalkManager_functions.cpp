#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrainTalkManager

#include "Basic.hpp"

#include "BP_BrainTalkManager_classes.hpp"
#include "BP_BrainTalkManager_parameters.hpp"


namespace SDK
{

// Function BP_BrainTalkManager.BP_BrainTalkManager_C.ExecuteUbergraph_BP_BrainTalkManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrainTalkManager_C::ExecuteUbergraph_BP_BrainTalkManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "ExecuteUbergraph_BP_BrainTalkManager");

	Params::BP_BrainTalkManager_C_ExecuteUbergraph_BP_BrainTalkManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.DoBrainTalk_QuestNpcNearbyCanBeOrdered
// (Event, Public, BlueprintEvent)

void ABP_BrainTalkManager_C::DoBrainTalk_QuestNpcNearbyCanBeOrdered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "DoBrainTalk_QuestNpcNearbyCanBeOrdered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.StopBrainTalk_BPFL_FromNative
// (Event, Public, BlueprintEvent)

void ABP_BrainTalkManager_C::StopBrainTalk_BPFL_FromNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "StopBrainTalk_BPFL_FromNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.StartBrainTalk_FromNative2_2
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FBrainTalkBt_PlayInfo            Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsEventCallEnable                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Param_IsGameOverCheck                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_BrainTalkManager_C::StartBrainTalk_FromNative2_2(const struct FBrainTalkBt_PlayInfo& Info, const bool IsEventCallEnable, const bool Param_IsGameOverCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "StartBrainTalk_FromNative2_2");

	Params::BP_BrainTalkManager_C_StartBrainTalk_FromNative2_2 Parms{};

	Parms.Info = std::move(Info);
	Parms.IsEventCallEnable = IsEventCallEnable;
	Parms.Param_IsGameOverCheck = Param_IsGameOverCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.InitializeStrongestWeaponIdList
// (Event, Public, BlueprintEvent)

void ABP_BrainTalkManager_C::InitializeStrongestWeaponIdList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "InitializeStrongestWeaponIdList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.StartBrainTalk_FromNative
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FBrainTalkMasterData             BrainTalkData                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FBrainTalk_CategoryDatatable     CategoryDatatable                                      (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_BrainTalkManager_C::StartBrainTalk_FromNative(const struct FBrainTalkMasterData& BrainTalkData, const struct FBrainTalk_CategoryDatatable& CategoryDatatable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "StartBrainTalk_FromNative");

	Params::BP_BrainTalkManager_C_StartBrainTalk_FromNative Parms{};

	Parms.BrainTalkData = std::move(BrainTalkData);
	Parms.CategoryDatatable = std::move(CategoryDatatable);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.StartBrainTalk_FromNative2
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             BrainTalkID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBrainTalkCategory                      Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BrainTalkManager_C::StartBrainTalk_FromNative2(class FName BrainTalkID, EBrainTalkCategory Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "StartBrainTalk_FromNative2");

	Params::BP_BrainTalkManager_C_StartBrainTalk_FromNative2 Parms{};

	Parms.BrainTalkID = BrainTalkID;
	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.BrainTalk_QuestNpcNearbyCanBeOrdered_Work
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BrainTalkManager_C::BrainTalk_QuestNpcNearbyCanBeOrdered_Work()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "BrainTalk_QuestNpcNearbyCanBeOrdered_Work");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.GetBrainTalkBt_ReturnToTheAjito_EnemyNumMax
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_BrainTalkManager_C::GetBrainTalkBt_ReturnToTheAjito_EnemyNumMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "GetBrainTalkBt_ReturnToTheAjito_EnemyNumMax");

	Params::BP_BrainTalkManager_C_GetBrainTalkBt_ReturnToTheAjito_EnemyNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.GetBrainTalkBt_GiveItemsFromFriendsWithAjito_EnemyNumMax
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_BrainTalkManager_C::GetBrainTalkBt_GiveItemsFromFriendsWithAjito_EnemyNumMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "GetBrainTalkBt_GiveItemsFromFriendsWithAjito_EnemyNumMax");

	Params::BP_BrainTalkManager_C_GetBrainTalkBt_GiveItemsFromFriendsWithAjito_EnemyNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_BrainTalkManager.BP_BrainTalkManager_C.GetBrainTalkBt_GiveItemsFromFriendsWithField_ScoreNumMax
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_BrainTalkManager_C::GetBrainTalkBt_GiveItemsFromFriendsWithField_ScoreNumMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BrainTalkManager_C", "GetBrainTalkBt_GiveItemsFromFriendsWithField_ScoreNumMax");

	Params::BP_BrainTalkManager_C_GetBrainTalkBt_GiveItemsFromFriendsWithField_ScoreNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

