#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Keyword

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ui_Keyword.WB_ui_Keyword_C.ExecuteUbergraph_WB_ui_Keyword
// 0x0080 (0x0080 - 0x0000)
struct WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText& Text)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FText& Text, ETextCommit CommitMethod)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_State;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x0030(0x0018)(ConstParm)
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0048(0x0018)(ConstParm)
	ETextCommit                                   K2Node_CustomEvent_CommitMethod;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5768[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword) == 0x000008, "Wrong alignment on WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword");
static_assert(sizeof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword) == 0x000080, "Wrong size on WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, EntryPoint) == 0x000000, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_Event_State) == 0x000024, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_Event_SubState) == 0x000028, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_CustomEvent_Text_1) == 0x000030, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_CustomEvent_Text) == 0x000048, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_CustomEvent_CommitMethod) == 0x000060, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_CustomEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, K2Node_SwitchEnum_CmpSuccess) == 0x000061, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, CallFunc_Len_ReturnValue) == 0x000078, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'WB_ui_Keyword_C_ExecuteUbergraph_WB_ui_Keyword::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_Keyword.WB_ui_Keyword_C.Event_OnTextCommitted
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_Keyword_C_Event_OnTextCommitted final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Keyword_C_Event_OnTextCommitted) == 0x000008, "Wrong alignment on WB_ui_Keyword_C_Event_OnTextCommitted");
static_assert(sizeof(WB_ui_Keyword_C_Event_OnTextCommitted) == 0x000020, "Wrong size on WB_ui_Keyword_C_Event_OnTextCommitted");
static_assert(offsetof(WB_ui_Keyword_C_Event_OnTextCommitted, Text) == 0x000000, "Member 'WB_ui_Keyword_C_Event_OnTextCommitted::Text' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_Event_OnTextCommitted, CommitMethod) == 0x000018, "Member 'WB_ui_Keyword_C_Event_OnTextCommitted::CommitMethod' has a wrong offset!");

// Function WB_ui_Keyword.WB_ui_Keyword_C.Event_OnTextChanged
// 0x0018 (0x0018 - 0x0000)
struct WB_ui_Keyword_C_Event_OnTextChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_ui_Keyword_C_Event_OnTextChanged) == 0x000008, "Wrong alignment on WB_ui_Keyword_C_Event_OnTextChanged");
static_assert(sizeof(WB_ui_Keyword_C_Event_OnTextChanged) == 0x000018, "Wrong size on WB_ui_Keyword_C_Event_OnTextChanged");
static_assert(offsetof(WB_ui_Keyword_C_Event_OnTextChanged, Text) == 0x000000, "Member 'WB_ui_Keyword_C_Event_OnTextChanged::Text' has a wrong offset!");

// Function WB_ui_Keyword.WB_ui_Keyword_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_Keyword_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Keyword_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_Keyword_C_UpdateState");
static_assert(sizeof(WB_ui_Keyword_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_Keyword_C_UpdateState");
static_assert(offsetof(WB_ui_Keyword_C_UpdateState, State) == 0x000000, "Member 'WB_ui_Keyword_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_Keyword_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_Keyword_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_Keyword.WB_ui_Keyword_C.isWindows
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_Keyword_C_IsWindows final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5769[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_Keyword_C_IsWindows) == 0x000008, "Wrong alignment on WB_ui_Keyword_C_IsWindows");
static_assert(sizeof(WB_ui_Keyword_C_IsWindows) == 0x000020, "Wrong size on WB_ui_Keyword_C_IsWindows");
static_assert(offsetof(WB_ui_Keyword_C_IsWindows, ReturnValue) == 0x000000, "Member 'WB_ui_Keyword_C_IsWindows::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_IsWindows, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'WB_ui_Keyword_C_IsWindows::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_Keyword_C_IsWindows, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'WB_ui_Keyword_C_IsWindows::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

}

