#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameOverSystemComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ExecuteUbergraph_BP_GameOverSystemComponent
// 0x01A0 (0x01A0 - 0x0000)
struct BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E96[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SeamlessCameraRoot_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E97[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GameOverCameraTopViewRoot_C*        CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E98[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E99[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9A[0x8];                                     // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventCameraRoot_C*                  CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9B[0xF];                                     // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	class ARSLevelSequenceActor*                  CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9C[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CancelSequencerMarkPause_Successsed;      // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9D[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent");
static_assert(sizeof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent) == 0x0001A0, "Wrong size on BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, EntryPoint) == 0x000000, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000040, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000048, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000050, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeLiteralByte_ReturnValue) == 0x000058, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeTransform_ReturnValue_1) == 0x000060, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000090, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000098, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, Temp_bool_IsClosed_Variable) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000A1, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_GetOwner_ReturnValue_1) == 0x0000A8, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, K2Node_Event_EndPlayReason) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, K2Node_Event_DeltaSeconds) == 0x0000C4, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeTransform_ReturnValue_2) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000100, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000108, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000110, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_MakeTransform_ReturnValue_3) == 0x000120, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_GetSequencePlayer_ReturnValue) == 0x000150, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000158, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000170, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000178, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x00017C, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_CancelSequencerMarkPause_Successsed) == 0x00018C, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_CancelSequencerMarkPause_Successsed' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000190, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000198, "Member 'BP_GameOverSystemComponent_C_ExecuteUbergraph_BP_GameOverSystemComponent::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GameOverSystemComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GameOverSystemComponent_C_ReceiveTick");
static_assert(sizeof(BP_GameOverSystemComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_GameOverSystemComponent_C_ReceiveTick");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GameOverSystemComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GameOverSystemComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GameOverSystemComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_GameOverSystemComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GameOverSystemComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GameOverSystemComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateFinishGameOver
// 0x0240 (0x0240 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateFinishGameOver final
{
public:
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVisionFogRate_Rate;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA1[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_PlayerCameraReset_self_CastInput;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA2[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform; // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform_1; // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA3[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult_1;    // 0x014C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue_1;       // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RevivePlayer_bSuccess;                    // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA4[0x1];                                     // 0x01D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerEnd_self_CastInput;        // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerEnd_ReturnValue;           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA5[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x01F8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA6[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA7[0x1];                                     // 0x021B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA8[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerEnd_self_CastInput_1;      // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerEnd_ReturnValue_1;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateFinishGameOver) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateFinishGameOver");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateFinishGameOver) == 0x000240, "Wrong size on BP_GameOverSystemComponent_C_PrivateFinishGameOver");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, Temp_int_Loop_Num_Variable) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetPostProcessManager_Manager) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetVisionFogRate_Rate) == 0x00001C, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetVisionFogRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000038, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_PlayerCameraReset_self_CastInput) == 0x000048, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_PlayerCameraReset_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_PlayerCameraReset_Dummy) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform_1) == 0x000090, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_PrivateCalcRecoverFinishTransform_FinishTransform_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000148, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_K2_SetActorTransform_SweepHitResult_1) == 0x00014C, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_K2_SetActorTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_K2_SetActorTransform_ReturnValue_1) == 0x0001D4, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_K2_SetActorTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue_3) == 0x0001D5, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_RevivePlayer_bSuccess) == 0x0001D6, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_RevivePlayer_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_BattleSequencerEnd_self_CastInput) == 0x0001D8, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_BattleSequencerEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_BattleSequencerEnd_ReturnValue) == 0x0001E8, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_BattleSequencerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetPlayerManager_PlayerManager) == 0x0001F0, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_GetPlayerList_ReturnValue) == 0x0001F8, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, Temp_int_Loop_Counter_Variable) == 0x000208, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue_4) == 0x00020C, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, K2Node_DynamicCast_AsRSBattle_Player) == 0x000210, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_SetInvalidDamage_Dummy) == 0x000219, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_Less_IntInt_ReturnValue) == 0x00021A, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_Add_IntInt_ReturnValue) == 0x00021C, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_IsValid_ReturnValue_5) == 0x000224, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_BattleSequencerEnd_self_CastInput_1) == 0x000228, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_BattleSequencerEnd_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateFinishGameOver, CallFunc_BattleSequencerEnd_ReturnValue_1) == 0x000238, "Member 'BP_GameOverSystemComponent_C_PrivateFinishGameOver::CallFunc_BattleSequencerEnd_ReturnValue_1' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventStartUIGameOver
// 0x0028 (0x0028 - 0x0000)
struct BP_GameOverSystemComponent_C_EventStartUIGameOver final
{
public:
	class AIntroTutorialManager*                  CallFunc_GetIntroTutorialManager_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseTutoTips_ReturnValue;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseTutoOperation_ReturnValue;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA9[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_IntroTutorialManager_C*             K2Node_DynamicCast_AsBP_Intro_Tutorial_Manager;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndIntroTutorial_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventStartUIGameOver) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventStartUIGameOver");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventStartUIGameOver) == 0x000028, "Wrong size on BP_GameOverSystemComponent_C_EventStartUIGameOver");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_GetIntroTutorialManager_ReturnValue) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_GetIntroTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_CloseTutoTips_ReturnValue) == 0x000012, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_CloseTutoTips_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_CloseTutoOperation_ReturnValue) == 0x000013, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_CloseTutoOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, K2Node_DynamicCast_AsBP_Intro_Tutorial_Manager) == 0x000018, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::K2Node_DynamicCast_AsBP_Intro_Tutorial_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartUIGameOver, CallFunc_EndIntroTutorial_ReturnValue) == 0x000021, "Member 'BP_GameOverSystemComponent_C_EventStartUIGameOver::CallFunc_EndIntroTutorial_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkDeadBlur
// 0x0018 (0x0018 - 0x0000)
struct BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur final
{
public:
	class ABrainTalkManager*                      BrainTalkManager;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur) == 0x000018, "Wrong size on BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur, BrainTalkManager) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur::BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDeadBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkDead
// 0x0018 (0x0018 - 0x0000)
struct BP_GameOverSystemComponent_C_EventBrainTalkDead final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EAA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_PLDead_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventBrainTalkDead) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventBrainTalkDead");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventBrainTalkDead) == 0x000018, "Wrong size on BP_GameOverSystemComponent_C_EventBrainTalkDead");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDead, Type) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDead::Type' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDead, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDead::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDead, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkDead, CallFunc_BrainTalkBt_PLDead_ReturnValue) == 0x000011, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkDead::CallFunc_BrainTalkBt_PLDead_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateSetupPostProcess
// 0x0030 (0x0030 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateSetupPostProcess final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EAB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EAC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_GetPerformPostProcess_PostProcess;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateSetupPostProcess");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess) == 0x000030, "Wrong size on BP_GameOverSystemComponent_C_PrivateSetupPostProcess");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, Rate) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::Rate' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, CallFunc_GetPostProcessManager_Manager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, CallFunc_GetPerformPostProcess_PostProcess) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::CallFunc_GetPerformPostProcess_PostProcess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupPostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateSetupPostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainFieldOut
// 0x0008 (0x0008 - 0x0000)
struct BP_GameOverSystemComponent_C_EventBrainFieldOut final
{
public:
	class ABP_BrainFieldManager_C*                BrainFieldManager;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventBrainFieldOut) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventBrainFieldOut");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventBrainFieldOut) == 0x000008, "Wrong size on BP_GameOverSystemComponent_C_EventBrainFieldOut");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainFieldOut, BrainFieldManager) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventBrainFieldOut::BrainFieldManager' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRecoverEffectPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_GameOverSystemComponent_C_EventRecoverEffectPlayer final
{
public:
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventRecoverEffectPlayer) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventRecoverEffectPlayer");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventRecoverEffectPlayer) == 0x000010, "Wrong size on BP_GameOverSystemComponent_C_EventRecoverEffectPlayer");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRecoverEffectPlayer, MainPlayer) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventRecoverEffectPlayer::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRecoverEffectPlayer, PlayerManager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventRecoverEffectPlayer::PlayerManager' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingDeadGameOver
// 0x0001 (0x0001 - 0x0000)
struct BP_GameOverSystemComponent_C_IsPlayingDeadGameOver final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_IsPlayingDeadGameOver) == 0x000001, "Wrong alignment on BP_GameOverSystemComponent_C_IsPlayingDeadGameOver");
static_assert(sizeof(BP_GameOverSystemComponent_C_IsPlayingDeadGameOver) == 0x000001, "Wrong size on BP_GameOverSystemComponent_C_IsPlayingDeadGameOver");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingDeadGameOver, IsPlaying) == 0x000000, "Member 'BP_GameOverSystemComponent_C_IsPlayingDeadGameOver::IsPlaying' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateLoadAsset
// 0x0020 (0x0020 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateLoadAsset final
{
public:
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EAD[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateLoadAsset) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateLoadAsset");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateLoadAsset) == 0x000020, "Wrong size on BP_GameOverSystemComponent_C_PrivateLoadAsset");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateLoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateLoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateLoadAsset, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateLoadAsset::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateLoadAsset, K2Node_DynamicCast_AsMaterial_Interface) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateLoadAsset::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateLoadAsset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateLoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.StartDeadRecover
// 0x0050 (0x0050 - 0x0000)
struct BP_GameOverSystemComponent_C_StartDeadRecover final
{
public:
	class ARSBattleCharacter_C*                   RecoverCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EAE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EAF[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_StartDeadRecover) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_StartDeadRecover");
static_assert(sizeof(BP_GameOverSystemComponent_C_StartDeadRecover) == 0x000050, "Wrong size on BP_GameOverSystemComponent_C_StartDeadRecover");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, RecoverCharacter) == 0x000000, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::RecoverCharacter' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_GetPlayerList_ReturnValue) == 0x000028, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, K2Node_DynamicCast_AsRSBattle_Player) == 0x000040, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_StartDeadRecover, CallFunc_SetInvalidDamage_Dummy) == 0x000049, "Member 'BP_GameOverSystemComponent_C_StartDeadRecover::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateStartSequence
// 0x02A0 (0x02A0 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateStartSequence final
{
public:
	class ULevelSequence*                         InSequencer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB0[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB1[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue;   // 0x003C(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EB2[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB3[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSequencerMarkPause_Successsed;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB4[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQualifiedFrameTime                    CallFunc_SetSequencerMarkPause_SequencerFullTime;  // 0x009C(0x0010)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EB5[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCustomRestoreTransform_UseRestoreTransform; // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUserIsPlayer_IsPlayer;                  // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList; // 0x00E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB6[0xE];                                     // 0x00F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class FText>                           K2Node_MakeArray_Array_3;                          // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_4;                          // 0x0170(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBinding;     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingPlayer; // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingSASCode; // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingBrainCode; // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB7[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayerFromText_IsBindingWeapon; // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_5;                          // 0x0198(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1; // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDList_IsFind_1;  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB8[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayer_IsBinding;             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingPlayer;       // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingSASCode;      // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayer_IsBindingBrainCode;    // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EB9[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayer_IsBindingWeapon;       // 0x01C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue;             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EBA[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EBB[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_6;                          // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_7;                          // 0x0200(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EBC[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_8;                          // 0x0228(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingID_IsFind_1;      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EBD[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneObjectBindingID             CallFunc_GetSequenceObjectBindingID_ReturnValue_1; // 0x0244(0x0018)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EBE[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array_9;                          // 0x0260(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBinding_1;   // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingPlayer_1; // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingSASCode_1; // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BindingEventPlayerFromText_IsBindingBrainCode_1; // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EBF[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_BindingEventPlayerFromText_IsBindingWeapon_1; // 0x0278(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0288(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_2;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateStartSequence) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateStartSequence");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateStartSequence) == 0x0002A0, "Wrong size on BP_GameOverSystemComponent_C_PrivateStartSequence");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, InSequencer) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::InSequencer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, Player) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetEnemyManager_Manager) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingID_IsFind) == 0x000038, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingID_IsFind' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingID_ReturnValue) == 0x00003C, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetBattleManager_BattleManager) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequencePlayer_ReturnValue) == 0x000070, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000078, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_SetSequencerMarkPause_Successsed) == 0x000098, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_SetSequencerMarkPause_Successsed' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_SetSequencerMarkPause_SequencerFullTime) == 0x00009C, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_SetSequencerMarkPause_SequencerFullTime' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetBrainFieldManager_Manager) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_HasCustomRestoreTransform_UseRestoreTransform) == 0x0000BC, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_HasCustomRestoreTransform_UseRestoreTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_3) == 0x0000BD, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsUserIsPlayer_IsPlayer) == 0x0000BE, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsUserIsPlayer_IsPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_InBranField_InBrainDield) == 0x0000BF, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_2) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList) == 0x0000E0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingIDList_IsFind) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingIDList_IsFind' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_4) == 0x0000F1, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetRelativeTransform_ReturnValue) == 0x000100, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x000130, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_3) == 0x000160, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_4) == 0x000170, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBinding) == 0x000180, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingPlayer) == 0x000181, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingSASCode) == 0x000182, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingBrainCode) == 0x000183, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingWeapon) == 0x000188, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_5) == 0x000198, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1) == 0x0001A8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingIDList_OutBindingIDList_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingIDList_IsFind_1) == 0x0001B8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingIDList_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_Array_Length_ReturnValue) == 0x0001BC, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayer_IsBinding) == 0x0001C0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayer_IsBinding' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayer_IsBindingPlayer) == 0x0001C1, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayer_IsBindingPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayer_IsBindingSASCode) == 0x0001C2, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayer_IsBindingSASCode' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayer_IsBindingBrainCode) == 0x0001C3, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayer_IsBindingBrainCode' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayer_IsBindingWeapon) == 0x0001C8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayer_IsBindingWeapon' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSoundManager_SoundManager) == 0x0001D8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_5) == 0x0001E0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_ChangeSoundState_ReturnValue) == 0x0001E1, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_ChangeSoundState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, Temp_int_Loop_Num_Variable) == 0x0001E4, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_6) == 0x0001F0, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_7) == 0x000200, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetPlayerManager_PlayerManager) == 0x000210, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetOwner_ReturnValue) == 0x000218, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_IsValid_ReturnValue_6) == 0x000220, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_8) == 0x000228, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetMainPlayer_Player) == 0x000238, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingID_IsFind_1) == 0x000240, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingID_IsFind_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequenceObjectBindingID_ReturnValue_1) == 0x000244, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequenceObjectBindingID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_MakeArray_Array_9) == 0x000260, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_MakeArray_Array_9' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBinding_1) == 0x000270, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBinding_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingPlayer_1) == 0x000271, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingSASCode_1) == 0x000272, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingSASCode_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingBrainCode_1) == 0x000273, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingBrainCode_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_BindingEventPlayerFromText_IsBindingWeapon_1) == 0x000278, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_BindingEventPlayerFromText_IsBindingWeapon_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, K2Node_CreateDelegate_OutputDelegate_1) == 0x000288, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateStartSequence, CallFunc_GetSequencePlayer_ReturnValue_2) == 0x000298, "Member 'BP_GameOverSystemComponent_C_PrivateStartSequence::CallFunc_GetSequencePlayer_ReturnValue_2' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingAny
// 0x0004 (0x0004 - 0x0000)
struct BP_GameOverSystemComponent_C_IsPlayingAny final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDeadRecover_IsPlaying;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingDeadGameOver_IsPlaying;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_IsPlayingAny) == 0x000001, "Wrong alignment on BP_GameOverSystemComponent_C_IsPlayingAny");
static_assert(sizeof(BP_GameOverSystemComponent_C_IsPlayingAny) == 0x000004, "Wrong size on BP_GameOverSystemComponent_C_IsPlayingAny");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingAny, IsPlaying) == 0x000000, "Member 'BP_GameOverSystemComponent_C_IsPlayingAny::IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingAny, CallFunc_IsPlayingDeadRecover_IsPlaying) == 0x000001, "Member 'BP_GameOverSystemComponent_C_IsPlayingAny::CallFunc_IsPlayingDeadRecover_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingAny, CallFunc_IsPlayingDeadGameOver_IsPlaying) == 0x000002, "Member 'BP_GameOverSystemComponent_C_IsPlayingAny::CallFunc_IsPlayingDeadGameOver_IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingAny, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_GameOverSystemComponent_C_IsPlayingAny::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventPlayerStandup
// 0x0018 (0x0018 - 0x0000)
struct BP_GameOverSystemComponent_C_EventPlayerStandup final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RevivePlayer_bSuccess;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventPlayerStandup) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventPlayerStandup");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventPlayerStandup) == 0x000018, "Wrong size on BP_GameOverSystemComponent_C_EventPlayerStandup");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventPlayerStandup, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventPlayerStandup::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventPlayerStandup, CallFunc_GetMainPlayer_Player) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventPlayerStandup::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventPlayerStandup, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventPlayerStandup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventPlayerStandup, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_GameOverSystemComponent_C_EventPlayerStandup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventPlayerStandup, CallFunc_RevivePlayer_bSuccess) == 0x000012, "Member 'BP_GameOverSystemComponent_C_EventPlayerStandup::CallFunc_RevivePlayer_bSuccess' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateBrainFieldSwitchBG
// 0x0038 (0x0038 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG final
{
public:
	bool                                          IsBrainField;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                BrainFieldManager;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsBrainField)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG) == 0x000038, "Wrong size on BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, IsBrainField) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::IsBrainField' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, BrainFieldManager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::BrainFieldManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, CallFunc_GetBrainFieldManager_Manager) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, CallFunc_GetSequencePlayer_ReturnValue) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldSwitchBG::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRecoverCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_GameOverSystemComponent_C_EventRecoverCamera final
{
public:
	class UCameraComponent*                       PlayerCamera;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventRecoverCamera) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventRecoverCamera");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventRecoverCamera) == 0x000010, "Wrong size on BP_GameOverSystemComponent_C_EventRecoverCamera");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRecoverCamera, PlayerCamera) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventRecoverCamera::PlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRecoverCamera, MainPlayer) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventRecoverCamera::MainPlayer' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateSetupRecoverCamera
// 0x0030 (0x0030 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera final
{
public:
	class UCameraComponent*                       PlayerCamera;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC2[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera) == 0x000030, "Wrong size on BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, PlayerCamera) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::PlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, MainPlayer) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateSetupRecoverCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventEraseHUD
// 0x0038 (0x0038 - 0x0000)
struct BP_GameOverSystemComponent_C_EventEraseHUD final
{
public:
	class UCameraComponent*                       PlayerCamera;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventEraseHUD) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventEraseHUD");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventEraseHUD) == 0x000038, "Wrong size on BP_GameOverSystemComponent_C_EventEraseHUD");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, PlayerCamera) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::PlayerCamera' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, MainPlayer) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000020, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventEraseHUD, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_GameOverSystemComponent_C_EventEraseHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateEraseHUD
// 0x0010 (0x0010 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateEraseHUD final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateEraseHUD) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateEraseHUD");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateEraseHUD) == 0x000010, "Wrong size on BP_GameOverSystemComponent_C_PrivateEraseHUD");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateEraseHUD, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateEraseHUD::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateEraseHUD, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateEraseHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.UpdateRecoverCamera
// 0x0020 (0x0020 - 0x0000)
struct BP_GameOverSystemComponent_C_UpdateRecoverCamera final
{
public:
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_PlayerCameraReset_self_CastInput;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayerCameraReset_Dummy;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_UpdateRecoverCamera) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_UpdateRecoverCamera");
static_assert(sizeof(BP_GameOverSystemComponent_C_UpdateRecoverCamera) == 0x000020, "Wrong size on BP_GameOverSystemComponent_C_UpdateRecoverCamera");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecoverCamera, PlayerManager) == 0x000000, "Member 'BP_GameOverSystemComponent_C_UpdateRecoverCamera::PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecoverCamera, CallFunc_PlayerCameraReset_self_CastInput) == 0x000008, "Member 'BP_GameOverSystemComponent_C_UpdateRecoverCamera::CallFunc_PlayerCameraReset_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecoverCamera, CallFunc_PlayerCameraReset_Dummy) == 0x000018, "Member 'BP_GameOverSystemComponent_C_UpdateRecoverCamera::CallFunc_PlayerCameraReset_Dummy' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecoverCamera, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_GameOverSystemComponent_C_UpdateRecoverCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventStartCutEvent
// 0x0038 (0x0038 - 0x0000)
struct BP_GameOverSystemComponent_C_EventStartCutEvent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput;      // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC4[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventInterface>       CallFunc_BattleSequencerStart_self_CastInput_1;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BattleSequencerStart_ReturnValue_1;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventStartCutEvent) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventStartCutEvent");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventStartCutEvent) == 0x000038, "Wrong size on BP_GameOverSystemComponent_C_EventStartCutEvent");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_BattleSequencerStart_self_CastInput) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_BattleSequencerStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_BattleSequencerStart_ReturnValue) == 0x000018, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_BattleSequencerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_BattleSequencerStart_self_CastInput_1) == 0x000020, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_BattleSequencerStart_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventStartCutEvent, CallFunc_BattleSequencerStart_ReturnValue_1) == 0x000030, "Member 'BP_GameOverSystemComponent_C_EventStartCutEvent::CallFunc_BattleSequencerStart_ReturnValue_1' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.UpdateRecover
// 0x0090 (0x0090 - 0x0000)
struct BP_GameOverSystemComponent_C_UpdateRecover final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC5[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC6[0xE];                                     // 0x0042(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC7[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameOverSystemComponent_C_UpdateRecover) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_UpdateRecover");
static_assert(sizeof(BP_GameOverSystemComponent_C_UpdateRecover) == 0x000090, "Wrong size on BP_GameOverSystemComponent_C_UpdateRecover");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, SkelMeshComp) == 0x000000, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_GetSocketTransform_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000050, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_IsValid_ReturnValue_3) == 0x000081, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_UpdateRecover, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000088, "Member 'BP_GameOverSystemComponent_C_UpdateRecover::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateCalcRecoverStartTransform
// 0x0200 (0x0200 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform final
{
public:
	class ARSBattlePlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   NPC;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             FinishTransform;                                   // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	float                                         AddRotation;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CheckIndex;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPlayerBackward;                                 // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerRight;                                    // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerLeft;                                     // 0x004A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerForward;                                  // 0x004B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CollisionCheckRotation;                            // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitLeft;                                           // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EC8[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            HitResult;                                         // 0x0060(0x0040)(Edit, BlueprintVisible)
	struct FRotator                               Rotation;                                          // 0x00A0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Location;                                          // 0x00AC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC9[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x00F0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ECA[0xC];                                     // 0x0174(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform) == 0x000200, "Wrong size on BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, Player) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, NPC) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::NPC' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, FinishTransform) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::FinishTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, AddRotation) == 0x000040, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::AddRotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CheckIndex) == 0x000044, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CheckIndex' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitPlayerBackward) == 0x000048, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitPlayerBackward' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitPlayerRight) == 0x000049, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitPlayerRight' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitPlayerLeft) == 0x00004A, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitPlayerLeft' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitPlayerForward) == 0x00004B, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitPlayerForward' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CollisionCheckRotation) == 0x00004C, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CollisionCheckRotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitLeft) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitLeft' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, HitResult) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, Rotation) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, Location) == 0x0000AC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_GetTransform_ReturnValue_1) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Location_1) == 0x000144, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Rotation_1) == 0x000150, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Scale_1) == 0x00015C, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Roll) == 0x000168, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Pitch) == 0x00016C, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Yaw) == 0x000170, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Location_2) == 0x0001B0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Rotation_2) == 0x0001BC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakTransform_Scale_2) == 0x0001C8, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Roll_1) == 0x0001D4, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Pitch_1) == 0x0001D8, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_BreakRotator_Yaw_1) == 0x0001DC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001EC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform, CallFunc_MakeRotator_ReturnValue) == 0x0001F0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverStartTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateCalcRecoverFinishTransform
// 0x0150 (0x0150 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform final
{
public:
	struct FTransform                             BaseTransform;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             RestoreRelativeTransform;                          // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class ARSBattleCharacter_C*                   Character;                                         // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ECB[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FinishTransform;                                   // 0x0070(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ECC[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform) == 0x000150, "Wrong size on BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, BaseTransform) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::BaseTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, RestoreRelativeTransform) == 0x000030, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::RestoreRelativeTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, Character) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::Character' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, FinishTransform) == 0x000070, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::FinishTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Rotation) == 0x0000AC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Location_1) == 0x0000C4, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Rotation_1) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakTransform_Scale_1) == 0x0000DC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Roll) == 0x0000E8, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Pitch) == 0x0000EC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Yaw) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Roll_1) == 0x0000F4, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Pitch_1) == 0x0000F8, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_BreakRotator_Yaw_1) == 0x0000FC, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000100, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_GameOverSystemComponent_C_PrivateCalcRecoverFinishTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventCameraTopView
// 0x0610 (0x0610 - 0x0000)
struct BP_GameOverSystemComponent_C_EventCameraTopView final
{
public:
	bool                                          UpdateTransform;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ECD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattleCharacter_C*>           IgnoreActors;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CollisionCheckRotation;                            // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         AddRotation;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerRight;                                    // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerLeft;                                     // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerBackward;                                 // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HitPlayerForward;                                  // 0x0043(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ECE[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            HitResult;                                         // 0x0048(0x0040)(Edit, BlueprintVisible)
	int32                                         CheckIndex;                                        // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ECF[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      Player;                                            // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED0[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PrivateCalcRecoverStartTransform_FinishTransform; // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED1[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED2[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ED3[0xC];                                     // 0x0194(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ED4[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED5[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0244(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED6[0x1];                                     // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED7[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0368(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x03B8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x03C8(0x0018)()
	class UNavigationSystemV1*                    CallFunc_GetNavigationSystem_ReturnValue;          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED8[0x6];                                     // 0x03F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ch0200_C>         K2Node_DynamicCast_AsBPI_Ch_0200;                  // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetWeaponAnimStateInterface_bDummy;       // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x040B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ED9[0x4];                                     // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue;               // 0x0410(0x0040)(ConstParm)
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue_1;             // 0x0450(0x0040)(ConstParm)
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue_2;             // 0x0490(0x0040)(ConstParm)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EDA[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerCollisionCheckResult            CallFunc_GetAsyncResult_ReturnValue_3;             // 0x04E0(0x0040)(ConstParm)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x053C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0548(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EDB[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_CapsuleTraceSingleForObjects_OutHit;      // 0x0564(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleForObjects_ReturnValue; // 0x05EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EDC[0x3];                                     // 0x05ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventCameraTopView) == 0x000010, "Wrong alignment on BP_GameOverSystemComponent_C_EventCameraTopView");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventCameraTopView) == 0x000610, "Wrong size on BP_GameOverSystemComponent_C_EventCameraTopView");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, UpdateTransform) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::UpdateTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, IgnoreActors) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::IgnoreActors' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, Location) == 0x000018, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CollisionCheckRotation) == 0x000024, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CollisionCheckRotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, AddRotation) == 0x000030, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::AddRotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, Rotation) == 0x000034, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, HitPlayerRight) == 0x000040, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::HitPlayerRight' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, HitPlayerLeft) == 0x000041, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::HitPlayerLeft' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, HitPlayerBackward) == 0x000042, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::HitPlayerBackward' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, HitPlayerForward) == 0x000043, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::HitPlayerForward' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, HitResult) == 0x000048, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::HitResult' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CheckIndex) == 0x000088, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CheckIndex' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, Player) == 0x000090, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_SwitchInteger_CmpSuccess) == 0x000098, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_PrivateCalcRecoverStartTransform_FinishTransform) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_PrivateCalcRecoverStartTransform_FinishTransform' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Roll) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Pitch) == 0x0000D4, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Yaw) == 0x0000D8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000DC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000164, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Roll_1) == 0x000168, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Pitch_1) == 0x00016C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Yaw_1) == 0x000170, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000174, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_MakeRotator_ReturnValue) == 0x000178, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000184, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001A0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakTransform_Location) == 0x0001D0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakTransform_Rotation) == 0x0001DC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakTransform_Scale) == 0x0001E8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Roll_2) == 0x0001F4, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Pitch_2) == 0x0001F8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Yaw_2) == 0x0001FC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Array_Add_ReturnValue) == 0x000200, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Array_Add_ReturnValue_1) == 0x000204, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000208, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_MakeArray_Array) == 0x000218, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_VectorVector_ReturnValue) == 0x000228, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, Temp_bool_Variable) == 0x000234, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000238, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000244, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002CC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_bBlockingHit) == 0x0002CD, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002CE, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_Time) == 0x0002D0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_Distance) == 0x0002D4, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_Location) == 0x0002D8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E4, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_Normal) == 0x0002F0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_ImpactNormal) == 0x0002FC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_HitItem) == 0x000328, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_FaceIndex) == 0x00032C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_TraceStart) == 0x000330, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakHitResult_TraceEnd) == 0x00033C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Not_PreBool_ReturnValue) == 0x000348, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_MakeRotFromX_ReturnValue) == 0x00034C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Roll_3) == 0x000358, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Pitch_3) == 0x00035C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Yaw_3) == 0x000360, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000364, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_MakeStruct_FormatArgumentData) == 0x000368, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_MakeArray_Array_1) == 0x0003A8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_MakeArray_Array_2) == 0x0003B8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Format_ReturnValue) == 0x0003C8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetNavigationSystem_ReturnValue) == 0x0003E0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetNavigationSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, Temp_int_Variable) == 0x0003E8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_IntInt_ReturnValue) == 0x0003EC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0003F0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BooleanAND_ReturnValue) == 0x0003F1, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_DynamicCast_AsBPI_Ch_0200) == 0x0003F8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_DynamicCast_AsBPI_Ch_0200' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, K2Node_DynamicCast_bSuccess) == 0x000408, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_DoesImplementInterface_ReturnValue) == 0x000409, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_SetWeaponAnimStateInterface_bDummy) == 0x00040A, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_SetWeaponAnimStateInterface_bDummy' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_IsValid_ReturnValue_1) == 0x00040B, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetAsyncResult_ReturnValue) == 0x000410, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetAsyncResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetAsyncResult_ReturnValue_1) == 0x000450, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetAsyncResult_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetAsyncResult_ReturnValue_2) == 0x000490, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetAsyncResult_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x0004D0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetAsyncResult_ReturnValue_3) == 0x0004E0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetAsyncResult_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Roll_4) == 0x000520, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Pitch_4) == 0x000524, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_BreakRotator_Yaw_4) == 0x000528, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00052C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_FloatFloat_ReturnValue) == 0x000538, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_Add_VectorVector_ReturnValue_3) == 0x00053C, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_MakeRotator_ReturnValue_1) == 0x000548, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000554, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000560, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_CapsuleTraceSingleForObjects_OutHit) == 0x000564, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_CapsuleTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_CapsuleTraceSingleForObjects_ReturnValue) == 0x0005EC, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_CapsuleTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetPlayerManager_PlayerManager) == 0x0005F0, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_GetMainPlayer_Player) == 0x0005F8, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventCameraTopView, CallFunc_IsValid_ReturnValue_2) == 0x000600, "Member 'BP_GameOverSystemComponent_C_EventCameraTopView::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.ReloadPlayer
// 0x00F0 (0x00F0 - 0x0000)
struct BP_GameOverSystemComponent_C_ReloadPlayer final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EDD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          RecoverSequenceAsset;                              // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ULevelSequence>          GameOverSequenceAsset;                             // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EDE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EDF[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE0[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          K2Node_Select_Default;                             // 0x0080(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_DynamicCast_AsLevel_Sequence_1;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE1[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ULevelSequence>          K2Node_Select_Default_1;                           // 0x00C0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_ReloadPlayer) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_ReloadPlayer");
static_assert(sizeof(BP_GameOverSystemComponent_C_ReloadPlayer) == 0x0000F0, "Wrong size on BP_GameOverSystemComponent_C_ReloadPlayer");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, PlayerId) == 0x000000, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, RecoverSequenceAsset) == 0x000008, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::RecoverSequenceAsset' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, GameOverSequenceAsset) == 0x000030, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::GameOverSequenceAsset' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, Temp_bool_Variable) == 0x000058, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_LoadSoftObject_ReturnValue) == 0x000060, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000068, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_DynamicCast_AsLevel_Sequence) == 0x000070, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_DynamicCast_AsLevel_Sequence' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, Temp_bool_Variable_1) == 0x000079, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007A, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_Select_Default) == 0x000080, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0000A8, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_DynamicCast_AsLevel_Sequence_1) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_DynamicCast_AsLevel_Sequence_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B9, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0000BA, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, K2Node_Select_Default_1) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_ReloadPlayer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'BP_GameOverSystemComponent_C_ReloadPlayer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventBrainTalkRevival
// 0x0040 (0x0040 - 0x0000)
struct BP_GameOverSystemComponent_C_EventBrainTalkRevival final
{
public:
	EPlayerID                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE3[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE4[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BrainTalkBt_Revival_ReturnValue;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventBrainTalkRevival) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_EventBrainTalkRevival");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventBrainTalkRevival) == 0x000040, "Wrong size on BP_GameOverSystemComponent_C_EventBrainTalkRevival");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, Temp_byte_Variable) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000011, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000018, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, K2Node_DynamicCast_AsPlayer_Interface) == 0x000028, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_GetPlayerID_ReturnValue) == 0x000039, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventBrainTalkRevival, CallFunc_BrainTalkBt_Revival_ReturnValue) == 0x00003A, "Member 'BP_GameOverSystemComponent_C_EventBrainTalkRevival::CallFunc_BrainTalkBt_Revival_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.EventRevivePlayer
// 0x0002 (0x0002 - 0x0000)
struct BP_GameOverSystemComponent_C_EventRevivePlayer final
{
public:
	bool                                          CallFunc_RevivePlayer_bSuccess;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_EventRevivePlayer) == 0x000001, "Wrong alignment on BP_GameOverSystemComponent_C_EventRevivePlayer");
static_assert(sizeof(BP_GameOverSystemComponent_C_EventRevivePlayer) == 0x000002, "Wrong size on BP_GameOverSystemComponent_C_EventRevivePlayer");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRevivePlayer, CallFunc_RevivePlayer_bSuccess) == 0x000000, "Member 'BP_GameOverSystemComponent_C_EventRevivePlayer::CallFunc_RevivePlayer_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_EventRevivePlayer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_GameOverSystemComponent_C_EventRevivePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateBrainFieldClose
// 0x0018 (0x0018 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateBrainFieldClose final
{
public:
	class ABP_BrainFieldManager_C*                BrainFieldManager;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateBrainFieldClose) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateBrainFieldClose");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateBrainFieldClose) == 0x000018, "Wrong size on BP_GameOverSystemComponent_C_PrivateBrainFieldClose");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldClose, BrainFieldManager) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldClose::BrainFieldManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldClose, CallFunc_GetBrainFieldManager_Manager) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldClose::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateBrainFieldClose, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateBrainFieldClose::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivatePlayEnpcBattleVoice
// 0x0128 (0x0128 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice final
{
public:
	int32                                         LVoiceno;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LIsYuito;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LSelectEnpc;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LEnemyList;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE6[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ENpcInterface_C>  CallFunc_Is_Unique_Enpc_Type_self_CastInput;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Unique_Enpc_Type_IsUnique;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE7[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EE8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EE9[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetGameOverVoiceData_VoiceData;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_ReplaceNotifySound_Native_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EEA[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EEB[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EEC[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EED[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EEE[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EEF[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EF0[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EF1[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsEnemyPlayer_self_CastInput;             // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice) == 0x000128, "Wrong size on BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, LVoiceno) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::LVoiceno' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, LIsYuito) == 0x000004, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::LIsYuito' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, LSelectEnpc) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::LSelectEnpc' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, LEnemyList) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Is_Unique_Enpc_Type_self_CastInput) == 0x000030, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Is_Unique_Enpc_Type_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Is_Unique_Enpc_Type_IsUnique) == 0x000040, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Is_Unique_Enpc_Type_IsUnique' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetSoundManager_SoundManager) == 0x000050, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetGameOverVoiceData_VoiceData) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetGameOverVoiceData_VoiceData' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_ReplaceNotifySound_Native_ReturnValue) == 0x000068, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_ReplaceNotifySound_Native_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_PlayVoice_ReturnValue) == 0x000078, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetPlayerManager_PlayerManager) == 0x000080, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000088, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetPlayerID_self_CastInput) == 0x000090, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetPlayerID_ReturnValue) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, K2Node_SwitchEnum_CmpSuccess) == 0x0000A2, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsValid_ReturnValue_2) == 0x0000A3, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetEnemyManager_Manager) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_GetEnemyList_ReturnValue) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000E0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Array_AddUnique_ReturnValue) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsDead_self_CastInput) == 0x0000F8, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsDead_bDead) == 0x000108, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsEnemyPlayer_self_CastInput) == 0x000110, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsEnemyPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x000120, "Member 'BP_GameOverSystemComponent_C_PrivatePlayEnpcBattleVoice::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.IsPlayingDeadRecover
// 0x0001 (0x0001 - 0x0000)
struct BP_GameOverSystemComponent_C_IsPlayingDeadRecover final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_IsPlayingDeadRecover) == 0x000001, "Wrong alignment on BP_GameOverSystemComponent_C_IsPlayingDeadRecover");
static_assert(sizeof(BP_GameOverSystemComponent_C_IsPlayingDeadRecover) == 0x000001, "Wrong size on BP_GameOverSystemComponent_C_IsPlayingDeadRecover");
static_assert(offsetof(BP_GameOverSystemComponent_C_IsPlayingDeadRecover, IsPlaying) == 0x000000, "Member 'BP_GameOverSystemComponent_C_IsPlayingDeadRecover::IsPlaying' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateGetGameOverBrainTalkID
// 0x0250 (0x0250 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID final
{
public:
	class FName                                   BrainTalkID;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EPlayerID>                             LNpcList;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LTalkID;                                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF2[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_27;                             // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_43;                             // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_45;                             // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_46;                             // 0x019C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_47;                             // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_48;                             // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_49;                             // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_50;                             // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_51;                             // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_52;                             // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_53;                             // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable;                  // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_Array_Get_Item;                           // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EF3[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF4[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF5[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EF6[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetRightPlayer_Player;                    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetLeftPlayer_Player;                     // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDisableAction_bEnable_1;                // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID) == 0x000250, "Wrong size on BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, BrainTalkID) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::BrainTalkID' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, LNpcList) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::LNpcList' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, LPlayer) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, LTalkID) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::LTalkID' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_1) == 0x000030, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_2) == 0x000038, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_3) == 0x000040, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_4) == 0x000048, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_5) == 0x000050, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_6) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_7) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_8) == 0x000068, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_9) == 0x000070, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_10) == 0x000078, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_11) == 0x000080, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_12) == 0x000088, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_13) == 0x000090, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_14) == 0x000098, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_15) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_16) == 0x0000A8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_17) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_18) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_19) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_20) == 0x0000C8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_21) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_22) == 0x0000D8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_23) == 0x0000E0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_24) == 0x0000E8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_25) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_26) == 0x0000F8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_byte_Variable) == 0x000100, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_27) == 0x000104, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_28) == 0x00010C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_29) == 0x000114, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_30) == 0x00011C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_31) == 0x000124, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_32) == 0x00012C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_33) == 0x000134, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_34) == 0x00013C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_35) == 0x000144, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_36) == 0x00014C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_37) == 0x000154, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_38) == 0x00015C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_39) == 0x000164, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_40) == 0x00016C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_41) == 0x000174, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_42) == 0x00017C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_43) == 0x000184, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_44) == 0x00018C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_45) == 0x000194, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_46) == 0x00019C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_47) == 0x0001A4, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_48) == 0x0001AC, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_49) == 0x0001B4, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_50) == 0x0001BC, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_51) == 0x0001C4, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_52) == 0x0001CC, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_name_Variable_53) == 0x0001D4, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_name_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, Temp_byte_Variable_1) == 0x0001DC, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_IsValid_ReturnValue) == 0x0001DD, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_IsDisableAction_bEnable) == 0x0001DE, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_IsDisableAction_bEnable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_Array_Get_Item) == 0x0001DF, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, K2Node_Select_Default) == 0x0001E0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, K2Node_Select_Default_1) == 0x0001E8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001F0, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetPlayerID_self_CastInput) == 0x0001F8, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetPlayerID_ReturnValue) == 0x000208, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_Array_Add_ReturnValue) == 0x00020C, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetPlayerID_self_CastInput_1) == 0x000210, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetPlayerID_ReturnValue_1) == 0x000220, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_Array_Add_ReturnValue_1) == 0x000224, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetPlayerManager_PlayerManager) == 0x000228, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetRightPlayer_Player) == 0x000238, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetRightPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetLeftPlayer_Player) == 0x000240, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetLeftPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000248, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000249, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID, CallFunc_IsDisableAction_bEnable_1) == 0x00024A, "Member 'BP_GameOverSystemComponent_C_PrivateGetGameOverBrainTalkID::CallFunc_IsDisableAction_bEnable_1' has a wrong offset!");

// Function BP_GameOverSystemComponent.BP_GameOverSystemComponent_C.PrivateGetRecoverBrainTalkID
// 0x03F0 (0x03F0 - 0x0000)
struct BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID final
{
public:
	class FName                                   BrainTalkID;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LTalkID;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_20;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF7[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_25;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_40;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_41;                             // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_42;                             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_43;                             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_44;                             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_45;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_46;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_47;                             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_48;                             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_49;                             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_50;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_51;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF8[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_52;                             // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_53;                             // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_54;                             // 0x01CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_55;                             // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_56;                             // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_57;                             // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_58;                             // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_59;                             // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_60;                             // 0x01FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_61;                             // 0x0204(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_62;                             // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_63;                             // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_64;                             // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_65;                             // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_66;                             // 0x022C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_67;                             // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_68;                             // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_69;                             // 0x0244(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_70;                             // 0x024C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_71;                             // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_72;                             // 0x025C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_73;                             // 0x0264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_74;                             // 0x026C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_75;                             // 0x0274(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_76;                             // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_77;                             // 0x0284(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_78;                             // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_2;                              // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EF9[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_79;                             // 0x029C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_80;                             // 0x02A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_81;                             // 0x02AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_82;                             // 0x02B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_83;                             // 0x02BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_84;                             // 0x02C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_85;                             // 0x02CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_86;                             // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_87;                             // 0x02DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_88;                             // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_89;                             // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_90;                             // 0x02F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_91;                             // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_92;                             // 0x0304(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_93;                             // 0x030C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_94;                             // 0x0314(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_95;                             // 0x031C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_96;                             // 0x0324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_97;                             // 0x032C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_98;                             // 0x0334(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_99;                             // 0x033C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_100;                            // 0x0344(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_101;                            // 0x034C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_102;                            // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_103;                            // 0x035C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_104;                            // 0x0364(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_105;                            // 0x036C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_3;                              // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFA[0x3];                                     // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_106;                            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_107;                            // 0x039C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_4;                              // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFB[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_3;                           // 0x03AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x03B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_5;                           // 0x03BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EFC[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EFD[0x5];                                     // 0x03DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID) == 0x000008, "Wrong alignment on BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID");
static_assert(sizeof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID) == 0x0003F0, "Wrong size on BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, BrainTalkID) == 0x000000, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::BrainTalkID' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, LTalkID) == 0x000008, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::LTalkID' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable) == 0x000010, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_1) == 0x000018, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_2) == 0x000020, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_3) == 0x000028, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_4) == 0x000030, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_5) == 0x000038, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_6) == 0x000040, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_7) == 0x000048, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_8) == 0x000050, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_9) == 0x000058, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_10) == 0x000060, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_11) == 0x000068, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_12) == 0x000070, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_13) == 0x000078, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_14) == 0x000080, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_15) == 0x000088, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_16) == 0x000090, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_17) == 0x000098, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_18) == 0x0000A0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_19) == 0x0000A8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_20) == 0x0000B0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_21) == 0x0000B8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_22) == 0x0000C0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_23) == 0x0000C8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_24) == 0x0000D0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_int_Variable) == 0x0000D8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_byte_Variable) == 0x0000DC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_25) == 0x0000E0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_26) == 0x0000E8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_27) == 0x0000F0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_28) == 0x0000F8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_29) == 0x000100, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_30) == 0x000108, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_31) == 0x000110, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_32) == 0x000118, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_33) == 0x000120, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_34) == 0x000128, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_35) == 0x000130, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_36) == 0x000138, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_37) == 0x000140, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_38) == 0x000148, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_39) == 0x000150, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_40) == 0x000158, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_41) == 0x000160, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_42) == 0x000168, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_43) == 0x000170, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_44) == 0x000178, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_45) == 0x000180, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_46) == 0x000188, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_47) == 0x000190, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_48) == 0x000198, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_49) == 0x0001A0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_50) == 0x0001A8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_51) == 0x0001B0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_byte_Variable_1) == 0x0001B8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_52) == 0x0001BC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_53) == 0x0001C4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_54) == 0x0001CC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_55) == 0x0001D4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_56) == 0x0001DC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_57) == 0x0001E4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_58) == 0x0001EC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_59) == 0x0001F4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_60) == 0x0001FC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_61) == 0x000204, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_62) == 0x00020C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_63) == 0x000214, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_64) == 0x00021C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_65) == 0x000224, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_66) == 0x00022C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_67) == 0x000234, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_68) == 0x00023C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_69) == 0x000244, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_70) == 0x00024C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_71) == 0x000254, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_72) == 0x00025C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_73) == 0x000264, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_74) == 0x00026C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_75) == 0x000274, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_76) == 0x00027C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_77) == 0x000284, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_78) == 0x00028C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_int_Variable_1) == 0x000294, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_byte_Variable_2) == 0x000298, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_79) == 0x00029C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_80) == 0x0002A4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_81) == 0x0002AC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_81' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_82) == 0x0002B4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_82' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_83) == 0x0002BC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_83' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_84) == 0x0002C4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_84' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_85) == 0x0002CC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_85' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_86) == 0x0002D4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_86' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_87) == 0x0002DC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_87' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_88) == 0x0002E4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_88' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_89) == 0x0002EC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_89' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_90) == 0x0002F4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_90' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_91) == 0x0002FC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_91' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_92) == 0x000304, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_92' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_93) == 0x00030C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_93' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_94) == 0x000314, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_94' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_95) == 0x00031C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_95' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_96) == 0x000324, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_96' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_97) == 0x00032C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_97' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_98) == 0x000334, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_98' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_99) == 0x00033C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_99' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_100) == 0x000344, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_100' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_101) == 0x00034C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_101' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_102) == 0x000354, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_102' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_103) == 0x00035C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_103' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_104) == 0x000364, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_104' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_105) == 0x00036C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_105' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_byte_Variable_3) == 0x000374, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default) == 0x000378, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default_1) == 0x000380, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default_2) == 0x000388, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_106) == 0x000390, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_106' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000398, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_name_Variable_107) == 0x00039C, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_name_Variable_107' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x0003A4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, Temp_byte_Variable_4) == 0x0003A8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default_3) == 0x0003AC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default_4) == 0x0003B4, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_Select_Default_5) == 0x0003BC, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_DynamicCast_AsPlayer_Interface) == 0x0003C8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, K2Node_DynamicCast_bSuccess) == 0x0003D8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_GetPlayerID_ReturnValue) == 0x0003D9, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_IsValid_ReturnValue) == 0x0003DA, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_GetPlayerManager_PlayerManager) == 0x0003E0, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x0003E8, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003E9, "Member 'BP_GameOverSystemComponent_C_PrivateGetRecoverBrainTalkID::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

