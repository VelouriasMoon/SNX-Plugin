#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ParticleManager

#include "Basic.hpp"

#include "BP_ParticleManager_classes.hpp"
#include "BP_ParticleManager_parameters.hpp"


namespace SDK
{

// Function BP_ParticleManager.BP_ParticleManager_C.ExecuteUbergraph_BP_ParticleManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::ExecuteUbergraph_BP_ParticleManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "ExecuteUbergraph_BP_ParticleManager");

	Params::BP_ParticleManager_C_ExecuteUbergraph_BP_ParticleManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.DelayBeginPlay
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_ParticleManager_C::DelayBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "DelayBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ParticleManager.BP_ParticleManager_C.HideBGEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ToHide                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::HideBGEffect(bool ToHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "HideBGEffect");

	Params::BP_ParticleManager_C_HideBGEffect Parms{};

	Parms.ToHide = ToHide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.UnregistEffectBackGroundMother
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackGroundMother_C*     MotherActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::UnregistEffectBackGroundMother(class ABP_EffectBackGroundMother_C* MotherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "UnregistEffectBackGroundMother");

	Params::BP_ParticleManager_C_UnregistEffectBackGroundMother Parms{};

	Parms.MotherActor = MotherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.UnregistEffectBackGround
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackground_C*           EffectBackground                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::UnregistEffectBackGround(class ABP_EffectBackground_C* EffectBackground)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "UnregistEffectBackGround");

	Params::BP_ParticleManager_C_UnregistEffectBackGround Parms{};

	Parms.EffectBackground = EffectBackground;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "ReceiveEndPlay");

	Params::BP_ParticleManager_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "ReceiveTick");

	Params::BP_ParticleManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnAcceleratorEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnAcceleratorEnd");

	Params::BP_ParticleManager_C_OnAcceleratorEnd Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnAcceleratorStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAcceleratorParam                Parameter                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bHologram                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnAcceleratorStart");

	Params::BP_ParticleManager_C_OnAcceleratorStart Parms{};

	Parms.Parameter = std::move(Parameter);
	Parms.Param_Owner = Param_Owner;
	Parms.bHologram = bHologram;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnPsychicEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnPsychicEnd");

	Params::BP_ParticleManager_C_OnPsychicEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnPsychicStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASPsychicParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnPsychicStart");

	Params::BP_ParticleManager_C_OnPsychicStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnCutInEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ParticleManager_C::OnCutInEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnCutInEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnCutInStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ParticleManager_C::OnCutInStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnCutInStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnCopyEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnCopyEnd");

	Params::BP_ParticleManager_C_OnCopyEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnCopyStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCopyParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnCopyStart");

	Params::BP_ParticleManager_C_OnCopyStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnStealthEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnStealthEnd");

	Params::BP_ParticleManager_C_OnStealthEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnStealthStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASStealthParam                Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnStealthStart");

	Params::BP_ParticleManager_C_OnStealthStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnTelepoEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnTelepoEnd");

	Params::BP_ParticleManager_C_OnTelepoEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnTelepoStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASTelepoParam                 Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnTelepoStart");

	Params::BP_ParticleManager_C_OnTelepoStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnSeeThroughEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnSeeThroughEnd");

	Params::BP_ParticleManager_C_OnSeeThroughEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnSeeThroughStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASSeeThroughParam             Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnSeeThroughStart");

	Params::BP_ParticleManager_C_OnSeeThroughStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnMetalEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnMetalEnd");

	Params::BP_ParticleManager_C_OnMetalEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnMetalStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASMetalParam                  Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnMetalStart");

	Params::BP_ParticleManager_C_OnMetalStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnFireEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnFireEnd");

	Params::BP_ParticleManager_C_OnFireEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnFireStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASFireParam                   Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnFireStart");

	Params::BP_ParticleManager_C_OnFireStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnElectricEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RemainTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnElectricEnd");

	Params::BP_ParticleManager_C_OnElectricEnd Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;
	Parms.RemainTime = RemainTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnElectricStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASElectricParam               Param                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnElectricStart");

	Params::BP_ParticleManager_C_OnElectricStart Parms{};

	Parms.Param = std::move(Param);
	Parms.Param_Owner = Param_Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.StopEventPaticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UBP_RSParticleBackgroundComponent_C*BackGroundComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Stop                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::StopEventPaticles(const class FString& EventName, class UBP_RSParticleBackgroundComponent_C* BackGroundComponent, bool* Stop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "StopEventPaticles");

	Params::BP_ParticleManager_C_StopEventPaticles Parms{};

	Parms.EventName = std::move(EventName);
	Parms.BackGroundComponent = BackGroundComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Stop != nullptr)
		*Stop = Parms.Stop;
}


// Function BP_ParticleManager.BP_ParticleManager_C.PlayEventParticles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UBP_RSParticleBackgroundComponent_C*BackGroundComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Play                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::PlayEventParticles(const class FString& EventName, class UBP_RSParticleBackgroundComponent_C* BackGroundComponent, bool* Play)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "PlayEventParticles");

	Params::BP_ParticleManager_C_PlayEventParticles Parms{};

	Parms.EventName = std::move(EventName);
	Parms.BackGroundComponent = BackGroundComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Play != nullptr)
		*Play = Parms.Play;
}


// Function BP_ParticleManager.BP_ParticleManager_C.PrivateUnregistEffectBackground
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackground_C*           Background                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::PrivateUnregistEffectBackground(class ABP_EffectBackground_C* Background)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "PrivateUnregistEffectBackground");

	Params::BP_ParticleManager_C_PrivateUnregistEffectBackground Parms{};

	Parms.Background = Background;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.PrivateUnregistEffectBackgroundMother
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackGroundMother_C*     Background                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::PrivateUnregistEffectBackgroundMother(class ABP_EffectBackGroundMother_C* Background)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "PrivateUnregistEffectBackgroundMother");

	Params::BP_ParticleManager_C_PrivateUnregistEffectBackgroundMother Parms{};

	Parms.Background = Background;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ParticleManager.BP_ParticleManager_C.SetupStageParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URSParticleSystemComponentBase*   RSParticleSystemComp                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSetup                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::SetupStageParam(const struct FVector& Location, class URSParticleSystemComponentBase* RSParticleSystemComp, bool* IsSetup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "SetupStageParam");

	Params::BP_ParticleManager_C_SetupStageParam Parms{};

	Parms.Location = std::move(Location);
	Parms.RSParticleSystemComp = RSParticleSystemComp;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSetup != nullptr)
		*IsSetup = Parms.IsSetup;
}


// Function BP_ParticleManager.BP_ParticleManager_C.TickPauseEventStart
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URSParticleSystemComponentBase*>SetupParticleComps                                     (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_ParticleManager_C::TickPauseEventStart(TArray<class URSParticleSystemComponentBase*>* SetupParticleComps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "TickPauseEventStart");

	Params::BP_ParticleManager_C_TickPauseEventStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SetupParticleComps != nullptr)
		*SetupParticleComps = std::move(Parms.SetupParticleComps);
}


// Function BP_ParticleManager.BP_ParticleManager_C.TickPauseEventRestore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URSParticleSystemComponentBase*>RestoreParticleComps                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_ParticleManager_C::TickPauseEventRestore(TArray<class URSParticleSystemComponentBase*>& RestoreParticleComps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "TickPauseEventRestore");

	Params::BP_ParticleManager_C_TickPauseEventRestore Parms{};

	Parms.RestoreParticleComps = std::move(RestoreParticleComps);

	UObject::ProcessEvent(Func, &Parms);

	RestoreParticleComps = std::move(Parms.RestoreParticleComps);
}


// Function BP_ParticleManager.BP_ParticleManager_C.SAS_CommonStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFSASCommand                     SAS_Command                                            (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "SAS_CommonStart");

	Params::BP_ParticleManager_C_SAS_CommonStart Parms{};

	Parms.SAS_Command = std::move(SAS_Command);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.SAS_CommonEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCancelSASCost                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   RemainTime                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "SAS_CommonEnd");

	Params::BP_ParticleManager_C_SAS_CommonEnd Parms{};

	Parms.SAS_Kind = SAS_Kind;
	Parms.bCancelSASCost = bCancelSASCost;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;

	if (RemainTime != nullptr)
		*RemainTime = Parms.RemainTime;
}


// Function BP_ParticleManager.BP_ParticleManager_C.GetLandingTemplate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  Template                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::GetLandingTemplate(EPhysicalSurface SurfaceType, class UParticleSystem** Template)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "GetLandingTemplate");

	Params::BP_ParticleManager_C_GetLandingTemplate Parms{};

	Parms.SurfaceType = SurfaceType;

	UObject::ProcessEvent(Func, &Parms);

	if (Template != nullptr)
		*Template = Parms.Template;
}


// Function BP_ParticleManager.BP_ParticleManager_C.GetFootStepTemplate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPhysicalSurface                        SurfaceType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  Template                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::GetFootStepTemplate(EPhysicalSurface SurfaceType, class UParticleSystem** Template)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "GetFootStepTemplate");

	Params::BP_ParticleManager_C_GetFootStepTemplate Parms{};

	Parms.SurfaceType = SurfaceType;

	UObject::ProcessEvent(Func, &Parms);

	if (Template != nullptr)
		*Template = Parms.Template;
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnBeginConnectEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  ParticleSystem                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEffectConnectPoint                     SourceConnectPoint                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SourceSocketName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEffectConnectPoint                     TargetConnectPoint                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             TargetSocketName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundAtomCue*                    PlaySound                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::OnBeginConnectEffect(class UParticleSystem* ParticleSystem, class FName ObjectName, EEffectConnectPoint SourceConnectPoint, class FName SourceSocketName, EEffectConnectPoint TargetConnectPoint, class FName TargetSocketName, class USoundAtomCue* PlaySound, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnBeginConnectEffect");

	Params::BP_ParticleManager_C_OnBeginConnectEffect Parms{};

	Parms.ParticleSystem = ParticleSystem;
	Parms.ObjectName = ObjectName;
	Parms.SourceConnectPoint = SourceConnectPoint;
	Parms.SourceSocketName = SourceSocketName;
	Parms.TargetConnectPoint = TargetConnectPoint;
	Parms.TargetSocketName = TargetSocketName;
	Parms.PlaySound = PlaySound;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.OnEndConnectEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::OnEndConnectEffect(class FName ObjectName, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "OnEndConnectEffect");

	Params::BP_ParticleManager_C_OnEndConnectEffect Parms{};

	Parms.ObjectName = ObjectName;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.RegistEffectBackGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackground_C*           EffectBackground                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ArrayNumber                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::RegistEffectBackGround(class ABP_EffectBackground_C* EffectBackground, int32* ArrayNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "RegistEffectBackGround");

	Params::BP_ParticleManager_C_RegistEffectBackGround Parms{};

	Parms.EffectBackground = EffectBackground;

	UObject::ProcessEvent(Func, &Parms);

	if (ArrayNumber != nullptr)
		*ArrayNumber = Parms.ArrayNumber;
}


// Function BP_ParticleManager.BP_ParticleManager_C.ResetParticleArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::ResetParticleArray(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "ResetParticleArray");

	Params::BP_ParticleManager_C_ResetParticleArray Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.CalledAtEventStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::CalledAtEventStart(const class FString& EventName, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "CalledAtEventStart");

	Params::BP_ParticleManager_C_CalledAtEventStart Parms{};

	Parms.EventName = std::move(EventName);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.CalledAtEventEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::CalledAtEventEnd(const class FString& EventName, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "CalledAtEventEnd");

	Params::BP_ParticleManager_C_CalledAtEventEnd Parms{};

	Parms.EventName = std::move(EventName);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_ParticleManager.BP_ParticleManager_C.RegistEffectBackGroundMother
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EffectBackGroundMother_C*     MotherActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ArrayNumber                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ParticleManager_C::RegistEffectBackGroundMother(class ABP_EffectBackGroundMother_C* MotherActor, int32* ArrayNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "RegistEffectBackGroundMother");

	Params::BP_ParticleManager_C_RegistEffectBackGroundMother Parms{};

	Parms.MotherActor = MotherActor;

	UObject::ProcessEvent(Func, &Parms);

	if (ArrayNumber != nullptr)
		*ArrayNumber = Parms.ArrayNumber;
}


// Function BP_ParticleManager.BP_ParticleManager_C.IsAcceleratorValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::IsAcceleratorValid(bool* Valid) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "IsAcceleratorValid");

	Params::BP_ParticleManager_C_IsAcceleratorValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BP_ParticleManager.BP_ParticleManager_C.IsAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Accelerating                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ParticleManager_C::IsAccelerating(bool* Accelerating) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ParticleManager_C", "IsAccelerating");

	Params::BP_ParticleManager_C_IsAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accelerating != nullptr)
		*Accelerating = Parms.Accelerating;
}

}

