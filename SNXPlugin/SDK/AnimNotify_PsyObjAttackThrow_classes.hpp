#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_PsyObjAttackThrow

#include "Basic.hpp"

#include "ECharaExecuteNotifyKind_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotify_PsyObjAttackThrow.AnimNotify_PsyObjAttackThrow_C
// 0x0018 (0x0050 - 0x0038)
class UAnimNotify_PsyObjAttackThrow_C final : public UAnimNotify
{
public:
	float                                         ThrowSpeed;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingSpeed;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnemyDirectShot;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_327C[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EnemyAttackRowName;                                // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharaExecuteNotifyKind                       ExecuteKind;                                       // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotify_PsyObjAttackThrow_C">();
	}
	static class UAnimNotify_PsyObjAttackThrow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PsyObjAttackThrow_C>();
	}
};
static_assert(alignof(UAnimNotify_PsyObjAttackThrow_C) == 0x000008, "Wrong alignment on UAnimNotify_PsyObjAttackThrow_C");
static_assert(sizeof(UAnimNotify_PsyObjAttackThrow_C) == 0x000050, "Wrong size on UAnimNotify_PsyObjAttackThrow_C");
static_assert(offsetof(UAnimNotify_PsyObjAttackThrow_C, ThrowSpeed) == 0x000038, "Member 'UAnimNotify_PsyObjAttackThrow_C::ThrowSpeed' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PsyObjAttackThrow_C, HomingSpeed) == 0x00003C, "Member 'UAnimNotify_PsyObjAttackThrow_C::HomingSpeed' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PsyObjAttackThrow_C, bEnemyDirectShot) == 0x000040, "Member 'UAnimNotify_PsyObjAttackThrow_C::bEnemyDirectShot' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PsyObjAttackThrow_C, EnemyAttackRowName) == 0x000044, "Member 'UAnimNotify_PsyObjAttackThrow_C::EnemyAttackRowName' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PsyObjAttackThrow_C, ExecuteKind) == 0x00004C, "Member 'UAnimNotify_PsyObjAttackThrow_C::ExecuteKind' has a wrong offset!");

}

