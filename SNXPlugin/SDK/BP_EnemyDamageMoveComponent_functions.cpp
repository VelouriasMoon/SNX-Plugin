#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyDamageMoveComponent

#include "Basic.hpp"

#include "BP_EnemyDamageMoveComponent_classes.hpp"
#include "BP_EnemyDamageMoveComponent_parameters.hpp"


namespace SDK
{

// Function BP_EnemyDamageMoveComponent.BP_EnemyDamageMoveComponent_C.ExecuteUbergraph_BP_EnemyDamageMoveComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyDamageMoveComponent_C::ExecuteUbergraph_BP_EnemyDamageMoveComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyDamageMoveComponent_C", "ExecuteUbergraph_BP_EnemyDamageMoveComponent");

	Params::BP_EnemyDamageMoveComponent_C_ExecuteUbergraph_BP_EnemyDamageMoveComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyDamageMoveComponent.BP_EnemyDamageMoveComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyDamageMoveComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyDamageMoveComponent_C", "ReceiveTick");

	Params::BP_EnemyDamageMoveComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyDamageMoveComponent.BP_EnemyDamageMoveComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_EnemyDamageMoveComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyDamageMoveComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyDamageMoveComponent.BP_EnemyDamageMoveComponent_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyDamageMoveComponent_C::Update(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyDamageMoveComponent_C", "Update");

	Params::BP_EnemyDamageMoveComponent_C_Update Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyDamageMoveComponent.BP_EnemyDamageMoveComponent_C.Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DamageDir                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Power                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DeadMove                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyDamageMoveComponent_C::Start(const struct FVector& DamageDir, float Power, bool DeadMove, class AActor* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyDamageMoveComponent_C", "Start");

	Params::BP_EnemyDamageMoveComponent_C_Start Parms{};

	Parms.DamageDir = std::move(DamageDir);
	Parms.Power = Power;
	Parms.DeadMove = DeadMove;
	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}

}

