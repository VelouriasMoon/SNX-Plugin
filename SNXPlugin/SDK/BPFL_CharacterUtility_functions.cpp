#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_CharacterUtility

#include "Basic.hpp"

#include "BPFL_CharacterUtility_classes.hpp"
#include "BPFL_CharacterUtility_parameters.hpp"


namespace SDK
{

// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.BackupCharacterParameter
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             BaseCharacter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBackupTable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bBackupBasic                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCopyCharacterParameterStruct    BackupData                                             (Parm, OutParm, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::BackupCharacterParameter(class ARSBattleCharacter_C* BaseCharacter, bool bBackupTable, bool bBackupBasic, class UObject* __WorldContext, struct FCopyCharacterParameterStruct* BackupData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "BackupCharacterParameter");

	Params::BPFL_CharacterUtility_C_BackupCharacterParameter Parms{};

	Parms.BaseCharacter = BaseCharacter;
	Parms.bBackupTable = bBackupTable;
	Parms.bBackupBasic = bBackupBasic;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BackupData != nullptr)
		*BackupData = std::move(Parms.BackupData);
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.RestoreCharacterParameter
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCopyCharacterParameterStruct    BackupData                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bRestoreTable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bRestoreBasic                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bResetCrash                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::RestoreCharacterParameter(const struct FCopyCharacterParameterStruct& BackupData, class ARSBattleCharacter_C* Character, bool bRestoreTable, bool bRestoreBasic, bool bResetCrash, class UObject* __WorldContext, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "RestoreCharacterParameter");

	Params::BPFL_CharacterUtility_C_RestoreCharacterParameter Parms{};

	Parms.BackupData = std::move(BackupData);
	Parms.Character = Character;
	Parms.bRestoreTable = bRestoreTable;
	Parms.bRestoreBasic = bRestoreBasic;
	Parms.bResetCrash = bResetCrash;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetGenderTypeForCharaID
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CharaID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETextGender                             TextGenderType                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetGenderTypeForCharaID(const class FString& CharaID, class UObject* __WorldContext, ETextGender* TextGenderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetGenderTypeForCharaID");

	Params::BPFL_CharacterUtility_C_GetGenderTypeForCharaID Parms{};

	Parms.CharaID = std::move(CharaID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TextGenderType != nullptr)
		*TextGenderType = Parms.TextGenderType;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.ChangePlayerLockTarget
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Src                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Dst                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bChange                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::ChangePlayerLockTarget(class ARSBattleCharacter_C* Src, class ARSBattleCharacter_C* Dst, class UObject* __WorldContext, bool* bChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "ChangePlayerLockTarget");

	Params::BPFL_CharacterUtility_C_ChangePlayerLockTarget Parms{};

	Parms.Src = Src;
	Parms.Dst = Dst;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bChange != nullptr)
		*bChange = Parms.bChange;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CameraAttentionStartForActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      ActorCurveIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ChangeFov                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   TargetFov                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      FovCurveIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnableOffsetAngleVt                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OffsetAngleVtIn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnableOffsetDist                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   OffsetDistIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::CameraAttentionStartForActor(class AActor* TargetActor, class UCurveFloat* ActorCurveIn, bool ChangeFov, float TargetFov, class UCurveFloat* FovCurveIn, bool bEnableOffsetAngleVt, float OffsetAngleVtIn, bool bEnableOffsetDist, float OffsetDistIn, class UObject* __WorldContext, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "CameraAttentionStartForActor");

	Params::BPFL_CharacterUtility_C_CameraAttentionStartForActor Parms{};

	Parms.TargetActor = TargetActor;
	Parms.ActorCurveIn = ActorCurveIn;
	Parms.ChangeFov = ChangeFov;
	Parms.TargetFov = TargetFov;
	Parms.FovCurveIn = FovCurveIn;
	Parms.bEnableOffsetAngleVt = bEnableOffsetAngleVt;
	Parms.OffsetAngleVtIn = OffsetAngleVtIn;
	Parms.bEnableOffsetDist = bEnableOffsetDist;
	Parms.OffsetDistIn = OffsetDistIn;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CameraAttentionEndForActor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      ActorCurveOut                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      FovCurveOut                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::CameraAttentionEndForActor(class UCurveFloat* ActorCurveOut, class UCurveFloat* FovCurveOut, class UObject* __WorldContext, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "CameraAttentionEndForActor");

	Params::BPFL_CharacterUtility_C_CameraAttentionEndForActor Parms{};

	Parms.ActorCurveOut = ActorCurveOut;
	Parms.FovCurveOut = FovCurveOut;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.SetRestrictDriveBegin
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRestrict                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::SetRestrictDriveBegin(bool bRestrict, class UObject* __WorldContext, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "SetRestrictDriveBegin");

	Params::BPFL_CharacterUtility_C_SetRestrictDriveBegin Parms{};

	Parms.bRestrict = bRestrict;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetAttackOwner
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Owner                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetAttackOwner(struct FHCHitResult& HitResult, class UObject* __WorldContext, class AActor** Owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetAttackOwner");

	Params::BPFL_CharacterUtility_C_GetAttackOwner Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (Owner != nullptr)
		*Owner = Parms.Owner;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.CanTelepoPlayer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CanDo                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::CanTelepoPlayer(class AActor* Character, class UObject* __WorldContext, bool* CanDo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "CanTelepoPlayer");

	Params::BPFL_CharacterUtility_C_CanTelepoPlayer Parms{};

	Parms.Character = Character;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CanDo != nullptr)
		*CanDo = Parms.CanDo;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetNearestPlayerSideCharacter
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class ARSBattleCharacter_C*             BaseChara                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LimitDistance                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             FindChara                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetNearestPlayerSideCharacter(class ARSBattleCharacter_C* BaseChara, float LimitDistance, class UObject* __WorldContext, class ARSBattleCharacter_C** FindChara, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetNearestPlayerSideCharacter");

	Params::BPFL_CharacterUtility_C_GetNearestPlayerSideCharacter Parms{};

	Parms.BaseChara = BaseChara;
	Parms.LimitDistance = LimitDistance;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FindChara != nullptr)
		*FindChara = Parms.FindChara;

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetCamaraEyeOffsetLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetCamaraEyeOffsetLocation(float Offset, class UObject* __WorldContext, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetCamaraEyeOffsetLocation");

	Params::BPFL_CharacterUtility_C_GetCamaraEyeOffsetLocation Parms{};

	Parms.Offset = Offset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetGroundLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          baseLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFind                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetGroundLocation(const struct FVector& baseLocation, class UObject* __WorldContext, bool* bFind, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetGroundLocation");

	Params::BPFL_CharacterUtility_C_GetGroundLocation Parms{};

	Parms.baseLocation = std::move(baseLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bFind != nullptr)
		*bFind = Parms.bFind;

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.GetTarget2CamaraOffsetLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_CharacterUtility_C::GetTarget2CamaraOffsetLocation(const struct FVector& TargetLocation, float Offset, class UObject* __WorldContext, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "GetTarget2CamaraOffsetLocation");

	Params::BPFL_CharacterUtility_C_GetTarget2CamaraOffsetLocation Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.Offset = Offset;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BPFL_CharacterUtility.BPFL_CharacterUtility_C.IsAttackedByMainPlayer
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMainPlayer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_CharacterUtility_C::IsAttackedByMainPlayer(struct FHCHitResult& HitResult, class UObject* __WorldContext, bool* bMainPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_CharacterUtility_C", "IsAttackedByMainPlayer");

	Params::BPFL_CharacterUtility_C_IsAttackedByMainPlayer Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (bMainPlayer != nullptr)
		*bMainPlayer = Parms.bMainPlayer;
}

}

