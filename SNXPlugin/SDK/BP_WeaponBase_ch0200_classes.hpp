#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponBase_ch0200

#include "Basic.hpp"

#include "EPlayerComboPattern_structs.hpp"
#include "BP_WeaponBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WeaponBase_ch0200.BP_WeaponBase_ch0200_C
// 0x0030 (0x0440 - 0x0410)
class ABP_WeaponBase_ch0200_C : public ABP_WeaponBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_WeaponBase_ch0200_C;             // 0x0410(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EPlayerComboPattern                           CurrentRangeParticlePattern;                       // 0x0418(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerComboPattern                           SpawndRangeParticlePattern;                        // 0x0419(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTargetInRange;                                    // 0x041A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84F2[0x5];                                     // 0x041B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           RangeParticleAttachList;                           // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class URSParticleSystemComponentBase*> RangeParticleHandleList;                           // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_WeaponBase_ch0200(int32 EntryPoint);
	void SetBattleEffect(bool bON);
	void Attach(class ARSBattlePlayer_C* Param_Owner, class USceneComponent* Component, class FName SocketName);
	void EndRangeParticle(bool* bDummy);
	void BeginRangeParticle(bool* bDummy);
	void SetRangeParticleType(EPlayerComboPattern ComboPattern, bool* bDummy);
	void SetTargetInRange(bool bInRange, bool* bDummy);
	void SetWeaponScaleWp0200(const struct FVector& InScale, bool* bDummy);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WeaponBase_ch0200_C">();
	}
	static class ABP_WeaponBase_ch0200_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WeaponBase_ch0200_C>();
	}
};
static_assert(alignof(ABP_WeaponBase_ch0200_C) == 0x000008, "Wrong alignment on ABP_WeaponBase_ch0200_C");
static_assert(sizeof(ABP_WeaponBase_ch0200_C) == 0x000440, "Wrong size on ABP_WeaponBase_ch0200_C");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, UberGraphFrame_BP_WeaponBase_ch0200_C) == 0x000410, "Member 'ABP_WeaponBase_ch0200_C::UberGraphFrame_BP_WeaponBase_ch0200_C' has a wrong offset!");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, CurrentRangeParticlePattern) == 0x000418, "Member 'ABP_WeaponBase_ch0200_C::CurrentRangeParticlePattern' has a wrong offset!");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, SpawndRangeParticlePattern) == 0x000419, "Member 'ABP_WeaponBase_ch0200_C::SpawndRangeParticlePattern' has a wrong offset!");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, bTargetInRange) == 0x00041A, "Member 'ABP_WeaponBase_ch0200_C::bTargetInRange' has a wrong offset!");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, RangeParticleAttachList) == 0x000420, "Member 'ABP_WeaponBase_ch0200_C::RangeParticleAttachList' has a wrong offset!");
static_assert(offsetof(ABP_WeaponBase_ch0200_C, RangeParticleHandleList) == 0x000430, "Member 'ABP_WeaponBase_ch0200_C::RangeParticleHandleList' has a wrong offset!");

}

