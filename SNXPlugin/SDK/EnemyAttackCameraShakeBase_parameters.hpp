#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyAttackCameraShakeBase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function EnemyAttackCameraShakeBase.EnemyAttackCameraShakeBase_C.ExecuteUbergraph_EnemyAttackCameraShakeBase
// 0x0008 (0x0008 - 0x0000)
struct EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Scale;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase) == 0x000004, "Wrong alignment on EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase");
static_assert(sizeof(EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase) == 0x000008, "Wrong size on EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase, EntryPoint) == 0x000000, "Member 'EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase, K2Node_Event_Scale) == 0x000004, "Member 'EnemyAttackCameraShakeBase_C_ExecuteUbergraph_EnemyAttackCameraShakeBase::K2Node_Event_Scale' has a wrong offset!");

// Function EnemyAttackCameraShakeBase.EnemyAttackCameraShakeBase_C.ReceivePlayShake
// 0x0004 (0x0004 - 0x0000)
struct EnemyAttackCameraShakeBase_C_ReceivePlayShake final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyAttackCameraShakeBase_C_ReceivePlayShake) == 0x000004, "Wrong alignment on EnemyAttackCameraShakeBase_C_ReceivePlayShake");
static_assert(sizeof(EnemyAttackCameraShakeBase_C_ReceivePlayShake) == 0x000004, "Wrong size on EnemyAttackCameraShakeBase_C_ReceivePlayShake");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_ReceivePlayShake, Scale) == 0x000000, "Member 'EnemyAttackCameraShakeBase_C_ReceivePlayShake::Scale' has a wrong offset!");

// Function EnemyAttackCameraShakeBase.EnemyAttackCameraShakeBase_C.BlueprintUpdateCameraShake
// 0x1050 (0x1050 - 0x0000)
struct EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E1[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimalViewInfo                       POV;                                               // 0x0010(0x0810)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FMinimalViewInfo                       ModifiedPOV;                                       // 0x0820(0x0810)(Parm, OutParm)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53E2[0x3];                                     // 0x1031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x1034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x1038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x1044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake) == 0x000010, "Wrong alignment on EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake");
static_assert(sizeof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake) == 0x001050, "Wrong size on EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, DeltaTime) == 0x000000, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::DeltaTime' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, Alpha) == 0x000004, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::Alpha' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, POV) == 0x000010, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::POV' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, ModifiedPOV) == 0x000820, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::ModifiedPOV' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x001030, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x001034, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_Divide_FloatFloat_ReturnValue) == 0x001038, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_FClamp_ReturnValue) == 0x00103C, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_GetFloatValue_ReturnValue) == 0x001040, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x001044, "Member 'EnemyAttackCameraShakeBase_C_BlueprintUpdateCameraShake::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

