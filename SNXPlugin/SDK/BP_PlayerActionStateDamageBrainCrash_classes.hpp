#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateDamageBrainCrash

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateDamageBrainCrash.BP_PlayerActionStateDamageBrainCrash_C
// 0x0030 (0x0118 - 0x00E8)
class UBP_PlayerActionStateDamageBrainCrash_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	class FName                                   ClaimantName;                                      // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FloatCurve;                                        // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FloatTimer;                                        // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x00FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNotifyFly;                                        // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotifyDamage;                                     // 0x0109(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotifyDead;                                       // 0x010A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bNotifyEnd;                                        // 0x010B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BrainCrashEffectOffset;                            // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndWaitTimer;                                      // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NormalWaitTimer;                                   // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	int32 Enter(int32 Param);
	int32 Update();
	bool Transition();
	int32 Exit(int32 NextStateIndex);
	void NotifyFly();
	void NotifyDamage();
	void NotifyDead();
	void NotifyEnd();

	void CalcParticleLocation(struct FVector* Location) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateDamageBrainCrash_C">();
	}
	static class UBP_PlayerActionStateDamageBrainCrash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateDamageBrainCrash_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateDamageBrainCrash_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateDamageBrainCrash_C");
static_assert(sizeof(UBP_PlayerActionStateDamageBrainCrash_C) == 0x000118, "Wrong size on UBP_PlayerActionStateDamageBrainCrash_C");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, ClaimantName) == 0x0000E8, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, FloatCurve) == 0x0000F0, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::FloatCurve' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, FloatTimer) == 0x0000F8, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::FloatTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, StartLocation) == 0x0000FC, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::StartLocation' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, bNotifyFly) == 0x000108, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::bNotifyFly' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, bNotifyDamage) == 0x000109, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::bNotifyDamage' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, bNotifyDead) == 0x00010A, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::bNotifyDead' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, bNotifyEnd) == 0x00010B, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::bNotifyEnd' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, BrainCrashEffectOffset) == 0x00010C, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::BrainCrashEffectOffset' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, EndWaitTimer) == 0x000110, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::EndWaitTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateDamageBrainCrash_C, NormalWaitTimer) == 0x000114, "Member 'UBP_PlayerActionStateDamageBrainCrash_C::NormalWaitTimer' has a wrong offset!");

}

