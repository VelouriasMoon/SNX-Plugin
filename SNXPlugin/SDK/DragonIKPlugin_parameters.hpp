#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DragonIKPlugin

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function DragonIKPlugin.DragonIK_Library.CustomLookRotation
// 0x0024 (0x0024 - 0x0000)
struct DragonIK_Library_CustomLookRotation final
{
public:
	struct FVector                                LookAt;                                            // 0x0000(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                UpDirection;                                       // 0x000C(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(DragonIK_Library_CustomLookRotation) == 0x000004, "Wrong alignment on DragonIK_Library_CustomLookRotation");
static_assert(sizeof(DragonIK_Library_CustomLookRotation) == 0x000024, "Wrong size on DragonIK_Library_CustomLookRotation");
static_assert(offsetof(DragonIK_Library_CustomLookRotation, LookAt) == 0x000000, "Member 'DragonIK_Library_CustomLookRotation::LookAt' has a wrong offset!");
static_assert(offsetof(DragonIK_Library_CustomLookRotation, UpDirection) == 0x00000C, "Member 'DragonIK_Library_CustomLookRotation::UpDirection' has a wrong offset!");
static_assert(offsetof(DragonIK_Library_CustomLookRotation, ReturnValue) == 0x000018, "Member 'DragonIK_Library_CustomLookRotation::ReturnValue' has a wrong offset!");

}

