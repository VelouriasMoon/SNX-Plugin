#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshModelingTools

#include "Basic.hpp"

#include "InteractiveToolsFramework_classes.hpp"
#include "MeshModelingTools_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "ModelingOperators_structs.hpp"


namespace SDK
{

// Class MeshModelingTools.AddPrimitiveTool
// 0x0058 (0x00E0 - 0x0088)
class UAddPrimitiveTool final : public USingleClickTool
{
public:
	uint8                                         Pad_1374[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UProceduralShapeToolProperties*         ShapeSettings;                                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewMesh*                           PreviewMesh;                                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULastActorInfo*                         LastGenerated;                                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1375[0x30];                                    // 0x00B0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPrimitiveTool">();
	}
	static class UAddPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPrimitiveTool>();
	}
};
static_assert(alignof(UAddPrimitiveTool) == 0x000008, "Wrong alignment on UAddPrimitiveTool");
static_assert(sizeof(UAddPrimitiveTool) == 0x0000E0, "Wrong size on UAddPrimitiveTool");
static_assert(offsetof(UAddPrimitiveTool, ShapeSettings) == 0x000090, "Member 'UAddPrimitiveTool::ShapeSettings' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, MaterialProperties) == 0x000098, "Member 'UAddPrimitiveTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, PreviewMesh) == 0x0000A0, "Member 'UAddPrimitiveTool::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, LastGenerated) == 0x0000A8, "Member 'UAddPrimitiveTool::LastGenerated' has a wrong offset!");

// Class MeshModelingTools.EditNormalsToolProperties
// 0x0010 (0x0060 - 0x0050)
class UEditNormalsToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bRecomputeNormals;                                 // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENormalCalculationMethod                      NormalCalculationMethod;                           // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFixInconsistentNormals;                           // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvertNormals;                                    // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESplitNormalMethod                            SplitNormalMethod;                                 // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1376[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SharpEdgeAngleThreshold;                           // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSharpVertices;                               // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1377[0x3];                                     // 0x005D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditNormalsToolProperties">();
	}
	static class UEditNormalsToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditNormalsToolProperties>();
	}
};
static_assert(alignof(UEditNormalsToolProperties) == 0x000008, "Wrong alignment on UEditNormalsToolProperties");
static_assert(sizeof(UEditNormalsToolProperties) == 0x000060, "Wrong size on UEditNormalsToolProperties");
static_assert(offsetof(UEditNormalsToolProperties, bRecomputeNormals) == 0x000050, "Member 'UEditNormalsToolProperties::bRecomputeNormals' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, NormalCalculationMethod) == 0x000051, "Member 'UEditNormalsToolProperties::NormalCalculationMethod' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, bFixInconsistentNormals) == 0x000052, "Member 'UEditNormalsToolProperties::bFixInconsistentNormals' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, bInvertNormals) == 0x000053, "Member 'UEditNormalsToolProperties::bInvertNormals' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, SplitNormalMethod) == 0x000054, "Member 'UEditNormalsToolProperties::SplitNormalMethod' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, SharpEdgeAngleThreshold) == 0x000058, "Member 'UEditNormalsToolProperties::SharpEdgeAngleThreshold' has a wrong offset!");
static_assert(offsetof(UEditNormalsToolProperties, bAllowSharpVertices) == 0x00005C, "Member 'UEditNormalsToolProperties::bAllowSharpVertices' has a wrong offset!");

// Class MeshModelingTools.AddPatchToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UAddPatchToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_1378[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPatchToolBuilder">();
	}
	static class UAddPatchToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPatchToolBuilder>();
	}
};
static_assert(alignof(UAddPatchToolBuilder) == 0x000008, "Wrong alignment on UAddPatchToolBuilder");
static_assert(sizeof(UAddPatchToolBuilder) == 0x000030, "Wrong size on UAddPatchToolBuilder");

// Class MeshModelingTools.AlignObjectsToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UAlignObjectsToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AlignObjectsToolBuilder">();
	}
	static class UAlignObjectsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlignObjectsToolBuilder>();
	}
};
static_assert(alignof(UAlignObjectsToolBuilder) == 0x000008, "Wrong alignment on UAlignObjectsToolBuilder");
static_assert(sizeof(UAlignObjectsToolBuilder) == 0x000028, "Wrong size on UAlignObjectsToolBuilder");

// Class MeshModelingTools.EditNormalsAdvancedProperties
// 0x0000 (0x0050 - 0x0050)
class UEditNormalsAdvancedProperties final : public UInteractiveToolPropertySet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditNormalsAdvancedProperties">();
	}
	static class UEditNormalsAdvancedProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditNormalsAdvancedProperties>();
	}
};
static_assert(alignof(UEditNormalsAdvancedProperties) == 0x000008, "Wrong alignment on UEditNormalsAdvancedProperties");
static_assert(sizeof(UEditNormalsAdvancedProperties) == 0x000050, "Wrong size on UEditNormalsAdvancedProperties");

// Class MeshModelingTools.UVProjectionAdvancedProperties
// 0x0000 (0x0050 - 0x0050)
class UUVProjectionAdvancedProperties final : public UInteractiveToolPropertySet
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionAdvancedProperties">();
	}
	static class UUVProjectionAdvancedProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionAdvancedProperties>();
	}
};
static_assert(alignof(UUVProjectionAdvancedProperties) == 0x000008, "Wrong alignment on UUVProjectionAdvancedProperties");
static_assert(sizeof(UUVProjectionAdvancedProperties) == 0x000050, "Wrong size on UUVProjectionAdvancedProperties");

// Class MeshModelingTools.AddPatchToolProperties
// 0x0010 (0x0060 - 0x0050)
class UAddPatchToolProperties final : public UInteractiveToolPropertySet
{
public:
	float                                         Width;                                             // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subdivisions;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Shift;                                             // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPatchToolProperties">();
	}
	static class UAddPatchToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPatchToolProperties>();
	}
};
static_assert(alignof(UAddPatchToolProperties) == 0x000008, "Wrong alignment on UAddPatchToolProperties");
static_assert(sizeof(UAddPatchToolProperties) == 0x000060, "Wrong size on UAddPatchToolProperties");
static_assert(offsetof(UAddPatchToolProperties, Width) == 0x000050, "Member 'UAddPatchToolProperties::Width' has a wrong offset!");
static_assert(offsetof(UAddPatchToolProperties, Rotation) == 0x000054, "Member 'UAddPatchToolProperties::Rotation' has a wrong offset!");
static_assert(offsetof(UAddPatchToolProperties, Subdivisions) == 0x000058, "Member 'UAddPatchToolProperties::Subdivisions' has a wrong offset!");
static_assert(offsetof(UAddPatchToolProperties, Shift) == 0x00005C, "Member 'UAddPatchToolProperties::Shift' has a wrong offset!");

// Class MeshModelingTools.EditPivotToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UEditPivotToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditPivotToolBuilder">();
	}
	static class UEditPivotToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditPivotToolBuilder>();
	}
};
static_assert(alignof(UEditPivotToolBuilder) == 0x000008, "Wrong alignment on UEditPivotToolBuilder");
static_assert(sizeof(UEditPivotToolBuilder) == 0x000028, "Wrong size on UEditPivotToolBuilder");

// Class MeshModelingTools.AddPatchTool
// 0x0078 (0x0100 - 0x0088)
class UAddPatchTool final : public USingleClickTool
{
public:
	uint8                                         Pad_1379[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAddPatchToolProperties*                ShapeSettings;                                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewMesh*                           PreviewMesh;                                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_137A[0x58];                                    // 0x00A8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPatchTool">();
	}
	static class UAddPatchTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPatchTool>();
	}
};
static_assert(alignof(UAddPatchTool) == 0x000008, "Wrong alignment on UAddPatchTool");
static_assert(sizeof(UAddPatchTool) == 0x000100, "Wrong size on UAddPatchTool");
static_assert(offsetof(UAddPatchTool, ShapeSettings) == 0x000090, "Member 'UAddPatchTool::ShapeSettings' has a wrong offset!");
static_assert(offsetof(UAddPatchTool, MaterialProperties) == 0x000098, "Member 'UAddPatchTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UAddPatchTool, PreviewMesh) == 0x0000A0, "Member 'UAddPatchTool::PreviewMesh' has a wrong offset!");

// Class MeshModelingTools.EditPivotToolProperties
// 0x0008 (0x0058 - 0x0050)
class UEditPivotToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bEnableSnapDragging;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEditPivotSnapDragRotationMode                RotationMode;                                      // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_137B[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditPivotToolProperties">();
	}
	static class UEditPivotToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditPivotToolProperties>();
	}
};
static_assert(alignof(UEditPivotToolProperties) == 0x000008, "Wrong alignment on UEditPivotToolProperties");
static_assert(sizeof(UEditPivotToolProperties) == 0x000058, "Wrong size on UEditPivotToolProperties");
static_assert(offsetof(UEditPivotToolProperties, bEnableSnapDragging) == 0x000050, "Member 'UEditPivotToolProperties::bEnableSnapDragging' has a wrong offset!");
static_assert(offsetof(UEditPivotToolProperties, RotationMode) == 0x000051, "Member 'UEditPivotToolProperties::RotationMode' has a wrong offset!");

// Class MeshModelingTools.AddPrimitiveToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UAddPrimitiveToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_137C[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPrimitiveToolBuilder">();
	}
	static class UAddPrimitiveToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPrimitiveToolBuilder>();
	}
};
static_assert(alignof(UAddPrimitiveToolBuilder) == 0x000008, "Wrong alignment on UAddPrimitiveToolBuilder");
static_assert(sizeof(UAddPrimitiveToolBuilder) == 0x000030, "Wrong size on UAddPrimitiveToolBuilder");

// Class MeshModelingTools.EditPivotToolActionPropertySet
// 0x0010 (0x0060 - 0x0050)
class UEditPivotToolActionPropertySet final : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_137D[0x8];                                     // 0x0050(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseWorldBox;                                      // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_137E[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Back();
	void Bottom();
	void Center();
	void Front();
	void Left();
	void Right();
	void Top();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditPivotToolActionPropertySet">();
	}
	static class UEditPivotToolActionPropertySet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditPivotToolActionPropertySet>();
	}
};
static_assert(alignof(UEditPivotToolActionPropertySet) == 0x000008, "Wrong alignment on UEditPivotToolActionPropertySet");
static_assert(sizeof(UEditPivotToolActionPropertySet) == 0x000060, "Wrong size on UEditPivotToolActionPropertySet");
static_assert(offsetof(UEditPivotToolActionPropertySet, bUseWorldBox) == 0x000058, "Member 'UEditPivotToolActionPropertySet::bUseWorldBox' has a wrong offset!");

// Class MeshModelingTools.ProceduralShapeToolProperties
// 0x0028 (0x0078 - 0x0050)
class UProceduralShapeToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bInstanceIfPossible;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_137F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EMakeMeshShapeType                            Shape;                                             // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FeatureRadius;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Slices;                                            // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subdivisions;                                      // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMakeMeshPolygroupMode                        PolygroupMode;                                     // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMakeMeshPlacementType                        PlaceMode;                                         // 0x006D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMakeMeshPivotLocation                        PivotLocation;                                     // 0x006E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1380[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rotation;                                          // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlignShapeToPlacementSurface;                     // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1381[0x3];                                     // 0x0075(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralShapeToolProperties">();
	}
	static class UProceduralShapeToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralShapeToolProperties>();
	}
};
static_assert(alignof(UProceduralShapeToolProperties) == 0x000008, "Wrong alignment on UProceduralShapeToolProperties");
static_assert(sizeof(UProceduralShapeToolProperties) == 0x000078, "Wrong size on UProceduralShapeToolProperties");
static_assert(offsetof(UProceduralShapeToolProperties, bInstanceIfPossible) == 0x000050, "Member 'UProceduralShapeToolProperties::bInstanceIfPossible' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Shape) == 0x000054, "Member 'UProceduralShapeToolProperties::Shape' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Width) == 0x000058, "Member 'UProceduralShapeToolProperties::Width' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Height) == 0x00005C, "Member 'UProceduralShapeToolProperties::Height' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, FeatureRadius) == 0x000060, "Member 'UProceduralShapeToolProperties::FeatureRadius' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Slices) == 0x000064, "Member 'UProceduralShapeToolProperties::Slices' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Subdivisions) == 0x000068, "Member 'UProceduralShapeToolProperties::Subdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, PolygroupMode) == 0x00006C, "Member 'UProceduralShapeToolProperties::PolygroupMode' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, PlaceMode) == 0x00006D, "Member 'UProceduralShapeToolProperties::PlaceMode' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, PivotLocation) == 0x00006E, "Member 'UProceduralShapeToolProperties::PivotLocation' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Rotation) == 0x000070, "Member 'UProceduralShapeToolProperties::Rotation' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, bAlignShapeToPlacementSurface) == 0x000074, "Member 'UProceduralShapeToolProperties::bAlignShapeToPlacementSurface' has a wrong offset!");

// Class MeshModelingTools.EditPivotTool
// 0x0170 (0x0200 - 0x0090)
class alignas(0x10) UEditPivotTool final : public UMultiSelectionTool
{
public:
	uint8                                         Pad_1382[0x8];                                     // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditPivotToolProperties*               TransformProps;                                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEditPivotToolActionPropertySet*        EditPivotActions;                                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1383[0xD0];                                    // 0x00A8(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEditPivotTarget>               ActiveGizmos;                                      // 0x0178(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1384[0x78];                                    // 0x0188(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditPivotTool">();
	}
	static class UEditPivotTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditPivotTool>();
	}
};
static_assert(alignof(UEditPivotTool) == 0x000010, "Wrong alignment on UEditPivotTool");
static_assert(sizeof(UEditPivotTool) == 0x000200, "Wrong size on UEditPivotTool");
static_assert(offsetof(UEditPivotTool, TransformProps) == 0x000098, "Member 'UEditPivotTool::TransformProps' has a wrong offset!");
static_assert(offsetof(UEditPivotTool, EditPivotActions) == 0x0000A0, "Member 'UEditPivotTool::EditPivotActions' has a wrong offset!");
static_assert(offsetof(UEditPivotTool, ActiveGizmos) == 0x000178, "Member 'UEditPivotTool::ActiveGizmos' has a wrong offset!");

// Class MeshModelingTools.LastActorInfo
// 0x0030 (0x0058 - 0x0028)
class ULastActorInfo final : public UObject
{
public:
	uint8                                         Pad_1385[0x10];                                    // 0x0028(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            StaticMesh;                                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProceduralShapeToolProperties*         ShapeSettings;                                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LastActorInfo">();
	}
	static class ULastActorInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULastActorInfo>();
	}
};
static_assert(alignof(ULastActorInfo) == 0x000008, "Wrong alignment on ULastActorInfo");
static_assert(sizeof(ULastActorInfo) == 0x000058, "Wrong size on ULastActorInfo");
static_assert(offsetof(ULastActorInfo, Actor) == 0x000038, "Member 'ULastActorInfo::Actor' has a wrong offset!");
static_assert(offsetof(ULastActorInfo, StaticMesh) == 0x000040, "Member 'ULastActorInfo::StaticMesh' has a wrong offset!");
static_assert(offsetof(ULastActorInfo, ShapeSettings) == 0x000048, "Member 'ULastActorInfo::ShapeSettings' has a wrong offset!");
static_assert(offsetof(ULastActorInfo, MaterialProperties) == 0x000050, "Member 'ULastActorInfo::MaterialProperties' has a wrong offset!");

// Class MeshModelingTools.AlignObjectsToolProperties
// 0x0010 (0x0060 - 0x0050)
class UAlignObjectsToolProperties final : public UInteractiveToolPropertySet
{
public:
	EAlignObjectsAlignTypes                       AlignType;                                         // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlignObjectsAlignToOptions                   AlignTo;                                           // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAlignObjectsBoxPoint                         BoxPosition;                                       // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlignX;                                           // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlignY;                                           // 0x005D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlignZ;                                           // 0x005E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1386[0x1];                                     // 0x005F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AlignObjectsToolProperties">();
	}
	static class UAlignObjectsToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlignObjectsToolProperties>();
	}
};
static_assert(alignof(UAlignObjectsToolProperties) == 0x000008, "Wrong alignment on UAlignObjectsToolProperties");
static_assert(sizeof(UAlignObjectsToolProperties) == 0x000060, "Wrong size on UAlignObjectsToolProperties");
static_assert(offsetof(UAlignObjectsToolProperties, AlignType) == 0x000050, "Member 'UAlignObjectsToolProperties::AlignType' has a wrong offset!");
static_assert(offsetof(UAlignObjectsToolProperties, AlignTo) == 0x000054, "Member 'UAlignObjectsToolProperties::AlignTo' has a wrong offset!");
static_assert(offsetof(UAlignObjectsToolProperties, BoxPosition) == 0x000058, "Member 'UAlignObjectsToolProperties::BoxPosition' has a wrong offset!");
static_assert(offsetof(UAlignObjectsToolProperties, bAlignX) == 0x00005C, "Member 'UAlignObjectsToolProperties::bAlignX' has a wrong offset!");
static_assert(offsetof(UAlignObjectsToolProperties, bAlignY) == 0x00005D, "Member 'UAlignObjectsToolProperties::bAlignY' has a wrong offset!");
static_assert(offsetof(UAlignObjectsToolProperties, bAlignZ) == 0x00005E, "Member 'UAlignObjectsToolProperties::bAlignZ' has a wrong offset!");

// Class MeshModelingTools.AlignObjectsTool
// 0x00B0 (0x0140 - 0x0090)
class UAlignObjectsTool final : public UMultiSelectionTool
{
public:
	uint8                                         Pad_1387[0x8];                                     // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UAlignObjectsToolProperties*            AlignProps;                                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1388[0xA0];                                    // 0x00A0(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AlignObjectsTool">();
	}
	static class UAlignObjectsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlignObjectsTool>();
	}
};
static_assert(alignof(UAlignObjectsTool) == 0x000008, "Wrong alignment on UAlignObjectsTool");
static_assert(sizeof(UAlignObjectsTool) == 0x000140, "Wrong size on UAlignObjectsTool");
static_assert(offsetof(UAlignObjectsTool, AlignProps) == 0x000098, "Member 'UAlignObjectsTool::AlignProps' has a wrong offset!");

// Class MeshModelingTools.BakeTransformToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UBakeTransformToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_1389[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BakeTransformToolBuilder">();
	}
	static class UBakeTransformToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBakeTransformToolBuilder>();
	}
};
static_assert(alignof(UBakeTransformToolBuilder) == 0x000008, "Wrong alignment on UBakeTransformToolBuilder");
static_assert(sizeof(UBakeTransformToolBuilder) == 0x000030, "Wrong size on UBakeTransformToolBuilder");

// Class MeshModelingTools.BakeTransformToolProperties
// 0x0008 (0x0058 - 0x0050)
class UBakeTransformToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bBakeRotation;                                     // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBakeScaleMethod                              BakeScale;                                         // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRecenterPivot;                                    // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138A[0x5];                                     // 0x0053(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BakeTransformToolProperties">();
	}
	static class UBakeTransformToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBakeTransformToolProperties>();
	}
};
static_assert(alignof(UBakeTransformToolProperties) == 0x000008, "Wrong alignment on UBakeTransformToolProperties");
static_assert(sizeof(UBakeTransformToolProperties) == 0x000058, "Wrong size on UBakeTransformToolProperties");
static_assert(offsetof(UBakeTransformToolProperties, bBakeRotation) == 0x000050, "Member 'UBakeTransformToolProperties::bBakeRotation' has a wrong offset!");
static_assert(offsetof(UBakeTransformToolProperties, BakeScale) == 0x000051, "Member 'UBakeTransformToolProperties::BakeScale' has a wrong offset!");
static_assert(offsetof(UBakeTransformToolProperties, bRecenterPivot) == 0x000052, "Member 'UBakeTransformToolProperties::bRecenterPivot' has a wrong offset!");

// Class MeshModelingTools.BakeTransformTool
// 0x0028 (0x00B8 - 0x0090)
class UBakeTransformTool final : public UMultiSelectionTool
{
public:
	class UBakeTransformToolProperties*           BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_138B[0x20];                                    // 0x0098(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BakeTransformTool">();
	}
	static class UBakeTransformTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBakeTransformTool>();
	}
};
static_assert(alignof(UBakeTransformTool) == 0x000008, "Wrong alignment on UBakeTransformTool");
static_assert(sizeof(UBakeTransformTool) == 0x0000B8, "Wrong size on UBakeTransformTool");
static_assert(offsetof(UBakeTransformTool, BasicProperties) == 0x000090, "Member 'UBakeTransformTool::BasicProperties' has a wrong offset!");

// Class MeshModelingTools.CombineMeshesToolBuilder
// 0x0010 (0x0038 - 0x0028)
class UCombineMeshesToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_138C[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesToolBuilder">();
	}
	static class UCombineMeshesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesToolBuilder>();
	}
};
static_assert(alignof(UCombineMeshesToolBuilder) == 0x000008, "Wrong alignment on UCombineMeshesToolBuilder");
static_assert(sizeof(UCombineMeshesToolBuilder) == 0x000038, "Wrong size on UCombineMeshesToolBuilder");

// Class MeshModelingTools.CombineMeshesToolProperties
// 0x0008 (0x0058 - 0x0050)
class UCombineMeshesToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bDeleteSourceActors;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138D[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesToolProperties">();
	}
	static class UCombineMeshesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesToolProperties>();
	}
};
static_assert(alignof(UCombineMeshesToolProperties) == 0x000008, "Wrong alignment on UCombineMeshesToolProperties");
static_assert(sizeof(UCombineMeshesToolProperties) == 0x000058, "Wrong size on UCombineMeshesToolProperties");
static_assert(offsetof(UCombineMeshesToolProperties, bDeleteSourceActors) == 0x000050, "Member 'UCombineMeshesToolProperties::bDeleteSourceActors' has a wrong offset!");

// Class MeshModelingTools.CombineMeshesTool
// 0x0020 (0x00B0 - 0x0090)
class UCombineMeshesTool final : public UMultiSelectionTool
{
public:
	class UCombineMeshesToolProperties*           BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_138E[0x18];                                    // 0x0098(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesTool">();
	}
	static class UCombineMeshesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesTool>();
	}
};
static_assert(alignof(UCombineMeshesTool) == 0x000008, "Wrong alignment on UCombineMeshesTool");
static_assert(sizeof(UCombineMeshesTool) == 0x0000B0, "Wrong size on UCombineMeshesTool");
static_assert(offsetof(UCombineMeshesTool, BasicProperties) == 0x000090, "Member 'UCombineMeshesTool::BasicProperties' has a wrong offset!");

// Class MeshModelingTools.ConvertToPolygonsToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UConvertToPolygonsToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConvertToPolygonsToolBuilder">();
	}
	static class UConvertToPolygonsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConvertToPolygonsToolBuilder>();
	}
};
static_assert(alignof(UConvertToPolygonsToolBuilder) == 0x000008, "Wrong alignment on UConvertToPolygonsToolBuilder");
static_assert(sizeof(UConvertToPolygonsToolBuilder) == 0x000028, "Wrong size on UConvertToPolygonsToolBuilder");

// Class MeshModelingTools.ConvertToPolygonsToolProperties
// 0x0010 (0x0060 - 0x0050)
class UConvertToPolygonsToolProperties final : public UInteractiveToolPropertySet
{
public:
	EConvertToPolygonsMode                        ConversionMode;                                    // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleTolerance;                                    // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCalculateNormals;                                 // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGroupColors;                                  // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138F[0x6];                                     // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConvertToPolygonsToolProperties">();
	}
	static class UConvertToPolygonsToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConvertToPolygonsToolProperties>();
	}
};
static_assert(alignof(UConvertToPolygonsToolProperties) == 0x000008, "Wrong alignment on UConvertToPolygonsToolProperties");
static_assert(sizeof(UConvertToPolygonsToolProperties) == 0x000060, "Wrong size on UConvertToPolygonsToolProperties");
static_assert(offsetof(UConvertToPolygonsToolProperties, ConversionMode) == 0x000050, "Member 'UConvertToPolygonsToolProperties::ConversionMode' has a wrong offset!");
static_assert(offsetof(UConvertToPolygonsToolProperties, AngleTolerance) == 0x000054, "Member 'UConvertToPolygonsToolProperties::AngleTolerance' has a wrong offset!");
static_assert(offsetof(UConvertToPolygonsToolProperties, bCalculateNormals) == 0x000058, "Member 'UConvertToPolygonsToolProperties::bCalculateNormals' has a wrong offset!");
static_assert(offsetof(UConvertToPolygonsToolProperties, bShowGroupColors) == 0x000059, "Member 'UConvertToPolygonsToolProperties::bShowGroupColors' has a wrong offset!");

// Class MeshModelingTools.ConvertToPolygonsTool
// 0x0478 (0x0500 - 0x0088)
class alignas(0x10) UConvertToPolygonsTool final : public USingleSelectionTool
{
public:
	class UConvertToPolygonsToolProperties*       Settings;                                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewMesh*                           PreviewMesh;                                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1390[0x468];                                   // 0x0098(0x0468)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConvertToPolygonsTool">();
	}
	static class UConvertToPolygonsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConvertToPolygonsTool>();
	}
};
static_assert(alignof(UConvertToPolygonsTool) == 0x000010, "Wrong alignment on UConvertToPolygonsTool");
static_assert(sizeof(UConvertToPolygonsTool) == 0x000500, "Wrong size on UConvertToPolygonsTool");
static_assert(offsetof(UConvertToPolygonsTool, Settings) == 0x000088, "Member 'UConvertToPolygonsTool::Settings' has a wrong offset!");
static_assert(offsetof(UConvertToPolygonsTool, PreviewMesh) == 0x000090, "Member 'UConvertToPolygonsTool::PreviewMesh' has a wrong offset!");

// Class MeshModelingTools.DeformMeshPolygonsToolBuilder
// 0x0000 (0x0030 - 0x0030)
class UDeformMeshPolygonsToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeformMeshPolygonsToolBuilder">();
	}
	static class UDeformMeshPolygonsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeformMeshPolygonsToolBuilder>();
	}
};
static_assert(alignof(UDeformMeshPolygonsToolBuilder) == 0x000008, "Wrong alignment on UDeformMeshPolygonsToolBuilder");
static_assert(sizeof(UDeformMeshPolygonsToolBuilder) == 0x000030, "Wrong size on UDeformMeshPolygonsToolBuilder");

// Class MeshModelingTools.DeformMeshPolygonsTransformProperties
// 0x0020 (0x0070 - 0x0050)
class UDeformMeshPolygonsTransformProperties final : public UInteractiveToolPropertySet
{
public:
	EGroupTopologyDeformationStrategy             DeformationStrategy;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuickTransformerMode                         TransformMode;                                     // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectFaces;                                      // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectEdges;                                      // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectVertices;                                   // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWireframe;                                    // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x0056(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1391[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	EWeightScheme                                 SelectedWeightScheme;                              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1392[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HandleWeight;                                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPostFixHandles;                                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1393[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeformMeshPolygonsTransformProperties">();
	}
	static class UDeformMeshPolygonsTransformProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeformMeshPolygonsTransformProperties>();
	}
};
static_assert(alignof(UDeformMeshPolygonsTransformProperties) == 0x000008, "Wrong alignment on UDeformMeshPolygonsTransformProperties");
static_assert(sizeof(UDeformMeshPolygonsTransformProperties) == 0x000070, "Wrong size on UDeformMeshPolygonsTransformProperties");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, DeformationStrategy) == 0x000050, "Member 'UDeformMeshPolygonsTransformProperties::DeformationStrategy' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, TransformMode) == 0x000051, "Member 'UDeformMeshPolygonsTransformProperties::TransformMode' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bSelectFaces) == 0x000052, "Member 'UDeformMeshPolygonsTransformProperties::bSelectFaces' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bSelectEdges) == 0x000053, "Member 'UDeformMeshPolygonsTransformProperties::bSelectEdges' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bSelectVertices) == 0x000054, "Member 'UDeformMeshPolygonsTransformProperties::bSelectVertices' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bShowWireframe) == 0x000055, "Member 'UDeformMeshPolygonsTransformProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bSnapToWorldGrid) == 0x000056, "Member 'UDeformMeshPolygonsTransformProperties::bSnapToWorldGrid' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, SelectedWeightScheme) == 0x000058, "Member 'UDeformMeshPolygonsTransformProperties::SelectedWeightScheme' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, HandleWeight) == 0x000060, "Member 'UDeformMeshPolygonsTransformProperties::HandleWeight' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTransformProperties, bPostFixHandles) == 0x000068, "Member 'UDeformMeshPolygonsTransformProperties::bPostFixHandles' has a wrong offset!");

// Class MeshModelingTools.RemoveOccludedTrianglesAdvancedProperties
// 0x0008 (0x0058 - 0x0050)
class URemoveOccludedTrianglesAdvancedProperties final : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_1394[0x8];                                     // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveOccludedTrianglesAdvancedProperties">();
	}
	static class URemoveOccludedTrianglesAdvancedProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveOccludedTrianglesAdvancedProperties>();
	}
};
static_assert(alignof(URemoveOccludedTrianglesAdvancedProperties) == 0x000008, "Wrong alignment on URemoveOccludedTrianglesAdvancedProperties");
static_assert(sizeof(URemoveOccludedTrianglesAdvancedProperties) == 0x000058, "Wrong size on URemoveOccludedTrianglesAdvancedProperties");

// Class MeshModelingTools.DeformMeshPolygonsTool
// 0x15B0 (0x1670 - 0x00C0)
class alignas(0x10) UDeformMeshPolygonsTool final : public UMeshSurfacePointTool
{
public:
	uint8                                         Pad_1395[0x8];                                     // 0x00C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleDynamicMeshComponent*            DynamicMeshComponent;                              // 0x00C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeformMeshPolygonsTransformProperties* TransformProps;                                    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1396[0x1598];                                  // 0x00D8(0x1598)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeformMeshPolygonsTool">();
	}
	static class UDeformMeshPolygonsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeformMeshPolygonsTool>();
	}
};
static_assert(alignof(UDeformMeshPolygonsTool) == 0x000010, "Wrong alignment on UDeformMeshPolygonsTool");
static_assert(sizeof(UDeformMeshPolygonsTool) == 0x001670, "Wrong size on UDeformMeshPolygonsTool");
static_assert(offsetof(UDeformMeshPolygonsTool, DynamicMeshComponent) == 0x0000C8, "Member 'UDeformMeshPolygonsTool::DynamicMeshComponent' has a wrong offset!");
static_assert(offsetof(UDeformMeshPolygonsTool, TransformProps) == 0x0000D0, "Member 'UDeformMeshPolygonsTool::TransformProps' has a wrong offset!");

// Class MeshModelingTools.DisplaceMeshToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UDisplaceMeshToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisplaceMeshToolBuilder">();
	}
	static class UDisplaceMeshToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisplaceMeshToolBuilder>();
	}
};
static_assert(alignof(UDisplaceMeshToolBuilder) == 0x000008, "Wrong alignment on UDisplaceMeshToolBuilder");
static_assert(sizeof(UDisplaceMeshToolBuilder) == 0x000028, "Wrong size on UDisplaceMeshToolBuilder");

// Class MeshModelingTools.DisplaceMeshTool
// 0x02C8 (0x0350 - 0x0088)
class UDisplaceMeshTool final : public USingleSelectionTool
{
public:
	EDisplaceMeshToolDisplaceType                 DisplacementType;                                  // 0x0088(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1397[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplaceIntensity;                                 // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RandomSeed;                                        // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subdivisions;                                      // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             DisplacementMap;                                   // 0x0098(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplaceFrequency;                                 // 0x00A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DisplacePhaseShift;                                // 0x00A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1398[0x2A8];                                   // 0x00A8(0x02A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisplaceMeshTool">();
	}
	static class UDisplaceMeshTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisplaceMeshTool>();
	}
};
static_assert(alignof(UDisplaceMeshTool) == 0x000008, "Wrong alignment on UDisplaceMeshTool");
static_assert(sizeof(UDisplaceMeshTool) == 0x000350, "Wrong size on UDisplaceMeshTool");
static_assert(offsetof(UDisplaceMeshTool, DisplacementType) == 0x000088, "Member 'UDisplaceMeshTool::DisplacementType' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, DisplaceIntensity) == 0x00008C, "Member 'UDisplaceMeshTool::DisplaceIntensity' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, RandomSeed) == 0x000090, "Member 'UDisplaceMeshTool::RandomSeed' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, Subdivisions) == 0x000094, "Member 'UDisplaceMeshTool::Subdivisions' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, DisplacementMap) == 0x000098, "Member 'UDisplaceMeshTool::DisplacementMap' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, DisplaceFrequency) == 0x0000A0, "Member 'UDisplaceMeshTool::DisplaceFrequency' has a wrong offset!");
static_assert(offsetof(UDisplaceMeshTool, DisplacePhaseShift) == 0x0000A4, "Member 'UDisplaceMeshTool::DisplacePhaseShift' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UDrawPolygonToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_1399[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolBuilder">();
	}
	static class UDrawPolygonToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolBuilder>();
	}
};
static_assert(alignof(UDrawPolygonToolBuilder) == 0x000008, "Wrong alignment on UDrawPolygonToolBuilder");
static_assert(sizeof(UDrawPolygonToolBuilder) == 0x000030, "Wrong size on UDrawPolygonToolBuilder");

// Class MeshModelingTools.SmoothMeshTool
// 0x0290 (0x0318 - 0x0088)
class USmoothMeshTool final : public USingleSelectionTool
{
public:
	uint8                                         Pad_139A[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	ESmoothMeshToolSmoothType                     SmoothType;                                        // 0x0090(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139B[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothSpeed;                                       // 0x0094(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         SmoothIterations;                                  // 0x0098(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139C[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_139D[0x270];                                   // 0x00A8(0x0270)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmoothMeshTool">();
	}
	static class USmoothMeshTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmoothMeshTool>();
	}
};
static_assert(alignof(USmoothMeshTool) == 0x000008, "Wrong alignment on USmoothMeshTool");
static_assert(sizeof(USmoothMeshTool) == 0x000318, "Wrong size on USmoothMeshTool");
static_assert(offsetof(USmoothMeshTool, SmoothType) == 0x000090, "Member 'USmoothMeshTool::SmoothType' has a wrong offset!");
static_assert(offsetof(USmoothMeshTool, SmoothSpeed) == 0x000094, "Member 'USmoothMeshTool::SmoothSpeed' has a wrong offset!");
static_assert(offsetof(USmoothMeshTool, SmoothIterations) == 0x000098, "Member 'USmoothMeshTool::SmoothIterations' has a wrong offset!");
static_assert(offsetof(USmoothMeshTool, Preview) == 0x0000A0, "Member 'USmoothMeshTool::Preview' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonToolStandardProperties
// 0x0018 (0x0068 - 0x0050)
class UDrawPolygonToolStandardProperties final : public UInteractiveToolPropertySet
{
public:
	EDrawPolygonDrawMode                          PolygonType;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrawPolygonOutputMode                        OutputMode;                                        // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139E[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FeatureSizeRatio;                                  // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExtrudeHeight;                                     // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Steps;                                             // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSelfIntersections;                           // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGizmo;                                        // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_139F[0x6];                                     // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolStandardProperties">();
	}
	static class UDrawPolygonToolStandardProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolStandardProperties>();
	}
};
static_assert(alignof(UDrawPolygonToolStandardProperties) == 0x000008, "Wrong alignment on UDrawPolygonToolStandardProperties");
static_assert(sizeof(UDrawPolygonToolStandardProperties) == 0x000068, "Wrong size on UDrawPolygonToolStandardProperties");
static_assert(offsetof(UDrawPolygonToolStandardProperties, PolygonType) == 0x000050, "Member 'UDrawPolygonToolStandardProperties::PolygonType' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, OutputMode) == 0x000051, "Member 'UDrawPolygonToolStandardProperties::OutputMode' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, FeatureSizeRatio) == 0x000054, "Member 'UDrawPolygonToolStandardProperties::FeatureSizeRatio' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, ExtrudeHeight) == 0x000058, "Member 'UDrawPolygonToolStandardProperties::ExtrudeHeight' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, Steps) == 0x00005C, "Member 'UDrawPolygonToolStandardProperties::Steps' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, bAllowSelfIntersections) == 0x000060, "Member 'UDrawPolygonToolStandardProperties::bAllowSelfIntersections' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, bShowGizmo) == 0x000061, "Member 'UDrawPolygonToolStandardProperties::bShowGizmo' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonToolSnapProperties
// 0x0018 (0x0068 - 0x0050)
class UDrawPolygonToolSnapProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bEnableSnapping;                                   // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToVertices;                                   // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToEdges;                                      // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToAngles;                                     // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToLengths;                                    // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A0[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SegmentLength;                                     // 0x0058(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitSceneObjects;                                  // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A1[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         HitNormalOffset;                                   // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A2[0x4];                                     // 0x0064(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolSnapProperties">();
	}
	static class UDrawPolygonToolSnapProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolSnapProperties>();
	}
};
static_assert(alignof(UDrawPolygonToolSnapProperties) == 0x000008, "Wrong alignment on UDrawPolygonToolSnapProperties");
static_assert(sizeof(UDrawPolygonToolSnapProperties) == 0x000068, "Wrong size on UDrawPolygonToolSnapProperties");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bEnableSnapping) == 0x000050, "Member 'UDrawPolygonToolSnapProperties::bEnableSnapping' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToWorldGrid) == 0x000051, "Member 'UDrawPolygonToolSnapProperties::bSnapToWorldGrid' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToVertices) == 0x000052, "Member 'UDrawPolygonToolSnapProperties::bSnapToVertices' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToEdges) == 0x000053, "Member 'UDrawPolygonToolSnapProperties::bSnapToEdges' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToAngles) == 0x000054, "Member 'UDrawPolygonToolSnapProperties::bSnapToAngles' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToLengths) == 0x000055, "Member 'UDrawPolygonToolSnapProperties::bSnapToLengths' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, SegmentLength) == 0x000058, "Member 'UDrawPolygonToolSnapProperties::SegmentLength' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bHitSceneObjects) == 0x00005C, "Member 'UDrawPolygonToolSnapProperties::bHitSceneObjects' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, HitNormalOffset) == 0x000060, "Member 'UDrawPolygonToolSnapProperties::HitNormalOffset' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonTool
// 0x0520 (0x05A0 - 0x0080)
class alignas(0x10) UDrawPolygonTool final : public UInteractiveTool
{
public:
	uint8                                         Pad_13A3[0x8];                                     // 0x0080(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrawPolygonToolStandardProperties*     PolygonProperties;                                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDrawPolygonToolSnapProperties*         SnapProperties;                                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13A4[0xB0];                                    // 0x00A0(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	class UPreviewMesh*                           PreviewMesh;                                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformGizmo*                        PlaneTransformGizmo;                               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        PlaneTransformProxy;                               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13A5[0x408];                                   // 0x0168(0x0408)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaneDistanceFromHitMechanic*          HeightMechanic;                                    // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13A6[0x28];                                    // 0x0578(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonTool">();
	}
	static class UDrawPolygonTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonTool>();
	}
};
static_assert(alignof(UDrawPolygonTool) == 0x000010, "Wrong alignment on UDrawPolygonTool");
static_assert(sizeof(UDrawPolygonTool) == 0x0005A0, "Wrong size on UDrawPolygonTool");
static_assert(offsetof(UDrawPolygonTool, PolygonProperties) == 0x000088, "Member 'UDrawPolygonTool::PolygonProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, SnapProperties) == 0x000090, "Member 'UDrawPolygonTool::SnapProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, MaterialProperties) == 0x000098, "Member 'UDrawPolygonTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PreviewMesh) == 0x000150, "Member 'UDrawPolygonTool::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PlaneTransformGizmo) == 0x000158, "Member 'UDrawPolygonTool::PlaneTransformGizmo' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PlaneTransformProxy) == 0x000160, "Member 'UDrawPolygonTool::PlaneTransformProxy' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, HeightMechanic) == 0x000570, "Member 'UDrawPolygonTool::HeightMechanic' has a wrong offset!");

// Class MeshModelingTools.DrawPolyPathToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UDrawPolyPathToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	uint8                                         Pad_13A7[0x8];                                     // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolyPathToolBuilder">();
	}
	static class UDrawPolyPathToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolyPathToolBuilder>();
	}
};
static_assert(alignof(UDrawPolyPathToolBuilder) == 0x000008, "Wrong alignment on UDrawPolyPathToolBuilder");
static_assert(sizeof(UDrawPolyPathToolBuilder) == 0x000038, "Wrong size on UDrawPolyPathToolBuilder");

// Class MeshModelingTools.DrawPolyPathProperties
// 0x0020 (0x0070 - 0x0050)
class UDrawPolyPathProperties final : public UInteractiveToolPropertySet
{
public:
	EDrawPolyPathOutputMode                       OutputType;                                        // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrawPolyPathWidthMode                        WidthMode;                                         // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrawPolyPathHeightMode                       HeightMode;                                        // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RampStartRatio;                                    // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A8[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolyPathProperties">();
	}
	static class UDrawPolyPathProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolyPathProperties>();
	}
};
static_assert(alignof(UDrawPolyPathProperties) == 0x000008, "Wrong alignment on UDrawPolyPathProperties");
static_assert(sizeof(UDrawPolyPathProperties) == 0x000070, "Wrong size on UDrawPolyPathProperties");
static_assert(offsetof(UDrawPolyPathProperties, OutputType) == 0x000050, "Member 'UDrawPolyPathProperties::OutputType' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, WidthMode) == 0x000054, "Member 'UDrawPolyPathProperties::WidthMode' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, Width) == 0x000058, "Member 'UDrawPolyPathProperties::Width' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, HeightMode) == 0x00005C, "Member 'UDrawPolyPathProperties::HeightMode' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, Height) == 0x000060, "Member 'UDrawPolyPathProperties::Height' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, RampStartRatio) == 0x000064, "Member 'UDrawPolyPathProperties::RampStartRatio' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathProperties, bSnapToWorldGrid) == 0x000068, "Member 'UDrawPolyPathProperties::bSnapToWorldGrid' has a wrong offset!");

// Class MeshModelingTools.DrawPolyPathExtrudeProperties
// 0x0008 (0x0058 - 0x0050)
class UDrawPolyPathExtrudeProperties final : public UInteractiveToolPropertySet
{
public:
	EDrawPolyPathExtrudeDirection                 Direction;                                         // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13A9[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolyPathExtrudeProperties">();
	}
	static class UDrawPolyPathExtrudeProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolyPathExtrudeProperties>();
	}
};
static_assert(alignof(UDrawPolyPathExtrudeProperties) == 0x000008, "Wrong alignment on UDrawPolyPathExtrudeProperties");
static_assert(sizeof(UDrawPolyPathExtrudeProperties) == 0x000058, "Wrong size on UDrawPolyPathExtrudeProperties");
static_assert(offsetof(UDrawPolyPathExtrudeProperties, Direction) == 0x000050, "Member 'UDrawPolyPathExtrudeProperties::Direction' has a wrong offset!");

// Class MeshModelingTools.DrawPolyPathTool
// 0x0190 (0x0210 - 0x0080)
class alignas(0x10) UDrawPolyPathTool final : public UInteractiveTool
{
public:
	uint8                                         Pad_13AA[0x20];                                    // 0x0080(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrawPolyPathProperties*                TransformProps;                                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDrawPolyPathExtrudeProperties*         ExtrudeProperties;                                 // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13AB[0x88];                                    // 0x00B8(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UConstructionPlaneMechanic*             PlaneMechanic;                                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13AC[0xA0];                                    // 0x0148(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditPreviewMesh*                   EditPreview;                                       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlaneDistanceFromHitMechanic*          ExtrudeHeightMechanic;                             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpatialCurveDistanceMechanic*          CurveDistMechanic;                                 // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCollectSurfacePathMechanic*            SurfacePathMechanic;                               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13AD[0x8];                                     // 0x0208(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolyPathTool">();
	}
	static class UDrawPolyPathTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolyPathTool>();
	}
};
static_assert(alignof(UDrawPolyPathTool) == 0x000010, "Wrong alignment on UDrawPolyPathTool");
static_assert(sizeof(UDrawPolyPathTool) == 0x000210, "Wrong size on UDrawPolyPathTool");
static_assert(offsetof(UDrawPolyPathTool, TransformProps) == 0x0000A0, "Member 'UDrawPolyPathTool::TransformProps' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, ExtrudeProperties) == 0x0000A8, "Member 'UDrawPolyPathTool::ExtrudeProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, MaterialProperties) == 0x0000B0, "Member 'UDrawPolyPathTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, PlaneMechanic) == 0x000140, "Member 'UDrawPolyPathTool::PlaneMechanic' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, EditPreview) == 0x0001E8, "Member 'UDrawPolyPathTool::EditPreview' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, ExtrudeHeightMechanic) == 0x0001F0, "Member 'UDrawPolyPathTool::ExtrudeHeightMechanic' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, CurveDistMechanic) == 0x0001F8, "Member 'UDrawPolyPathTool::CurveDistMechanic' has a wrong offset!");
static_assert(offsetof(UDrawPolyPathTool, SurfacePathMechanic) == 0x000200, "Member 'UDrawPolyPathTool::SurfacePathMechanic' has a wrong offset!");

// Class MeshModelingTools.DynamicMeshBrushTool
// 0x0040 (0x01F8 - 0x01B8)
class UDynamicMeshBrushTool : public UBaseBrushTool
{
public:
	class UPreviewMesh*                           PreviewMesh;                                       // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13AE[0x38];                                    // 0x01C0(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicMeshBrushTool">();
	}
	static class UDynamicMeshBrushTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicMeshBrushTool>();
	}
};
static_assert(alignof(UDynamicMeshBrushTool) == 0x000008, "Wrong alignment on UDynamicMeshBrushTool");
static_assert(sizeof(UDynamicMeshBrushTool) == 0x0001F8, "Wrong size on UDynamicMeshBrushTool");
static_assert(offsetof(UDynamicMeshBrushTool, PreviewMesh) == 0x0001B8, "Member 'UDynamicMeshBrushTool::PreviewMesh' has a wrong offset!");

// Class MeshModelingTools.DynamicMeshSculptToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UDynamicMeshSculptToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	uint8                                         Pad_13AF[0x8];                                     // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicMeshSculptToolBuilder">();
	}
	static class UDynamicMeshSculptToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicMeshSculptToolBuilder>();
	}
};
static_assert(alignof(UDynamicMeshSculptToolBuilder) == 0x000008, "Wrong alignment on UDynamicMeshSculptToolBuilder");
static_assert(sizeof(UDynamicMeshSculptToolBuilder) == 0x000038, "Wrong size on UDynamicMeshSculptToolBuilder");

// Class MeshModelingTools.SculptBrushProperties
// 0x0008 (0x0070 - 0x0068)
class USculptBrushProperties final : public UBrushBaseProperties
{
public:
	float                                         Depth;                                             // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitBackFaces;                                     // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B0[0x3];                                     // 0x006D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SculptBrushProperties">();
	}
	static class USculptBrushProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<USculptBrushProperties>();
	}
};
static_assert(alignof(USculptBrushProperties) == 0x000008, "Wrong alignment on USculptBrushProperties");
static_assert(sizeof(USculptBrushProperties) == 0x000070, "Wrong size on USculptBrushProperties");
static_assert(offsetof(USculptBrushProperties, Depth) == 0x000068, "Member 'USculptBrushProperties::Depth' has a wrong offset!");
static_assert(offsetof(USculptBrushProperties, bHitBackFaces) == 0x00006C, "Member 'USculptBrushProperties::bHitBackFaces' has a wrong offset!");

// Class MeshModelingTools.BrushSculptProperties
// 0x0018 (0x0068 - 0x0050)
class UBrushSculptProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bIsRemeshingEnabled;                               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDynamicMeshSculptBrushType                   PrimaryBrushType;                                  // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B1[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PrimaryBrushSpeed;                                 // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreserveUVFlow;                                   // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeTarget;                                     // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B2[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SmoothBrushSpeed;                                  // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDetailPreservingSmooth;                           // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B3[0x7];                                     // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BrushSculptProperties">();
	}
	static class UBrushSculptProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBrushSculptProperties>();
	}
};
static_assert(alignof(UBrushSculptProperties) == 0x000008, "Wrong alignment on UBrushSculptProperties");
static_assert(sizeof(UBrushSculptProperties) == 0x000068, "Wrong size on UBrushSculptProperties");
static_assert(offsetof(UBrushSculptProperties, bIsRemeshingEnabled) == 0x000050, "Member 'UBrushSculptProperties::bIsRemeshingEnabled' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, PrimaryBrushType) == 0x000051, "Member 'UBrushSculptProperties::PrimaryBrushType' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, PrimaryBrushSpeed) == 0x000054, "Member 'UBrushSculptProperties::PrimaryBrushSpeed' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, bPreserveUVFlow) == 0x000058, "Member 'UBrushSculptProperties::bPreserveUVFlow' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, bFreezeTarget) == 0x000059, "Member 'UBrushSculptProperties::bFreezeTarget' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, SmoothBrushSpeed) == 0x00005C, "Member 'UBrushSculptProperties::SmoothBrushSpeed' has a wrong offset!");
static_assert(offsetof(UBrushSculptProperties, bDetailPreservingSmooth) == 0x000060, "Member 'UBrushSculptProperties::bDetailPreservingSmooth' has a wrong offset!");

// Class MeshModelingTools.PlaneBrushProperties
// 0x0008 (0x0058 - 0x0050)
class UPlaneBrushProperties final : public UInteractiveToolPropertySet
{
public:
	EPlaneBrushSideMode                           WhichSide;                                         // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B4[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneBrushProperties">();
	}
	static class UPlaneBrushProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneBrushProperties>();
	}
};
static_assert(alignof(UPlaneBrushProperties) == 0x000008, "Wrong alignment on UPlaneBrushProperties");
static_assert(sizeof(UPlaneBrushProperties) == 0x000058, "Wrong size on UPlaneBrushProperties");
static_assert(offsetof(UPlaneBrushProperties, WhichSide) == 0x000050, "Member 'UPlaneBrushProperties::WhichSide' has a wrong offset!");

// Class MeshModelingTools.FixedPlaneBrushProperties
// 0x0020 (0x0070 - 0x0050)
class UFixedPlaneBrushProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bPropertySetEnabled;                               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGizmo;                                        // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToGrid;                                       // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B5[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Position;                                          // 0x0054(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FQuat                                  Rotation;                                          // 0x0060(0x0010)(Edit, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FixedPlaneBrushProperties">();
	}
	static class UFixedPlaneBrushProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFixedPlaneBrushProperties>();
	}
};
static_assert(alignof(UFixedPlaneBrushProperties) == 0x000010, "Wrong alignment on UFixedPlaneBrushProperties");
static_assert(sizeof(UFixedPlaneBrushProperties) == 0x000070, "Wrong size on UFixedPlaneBrushProperties");
static_assert(offsetof(UFixedPlaneBrushProperties, bPropertySetEnabled) == 0x000050, "Member 'UFixedPlaneBrushProperties::bPropertySetEnabled' has a wrong offset!");
static_assert(offsetof(UFixedPlaneBrushProperties, bShowGizmo) == 0x000051, "Member 'UFixedPlaneBrushProperties::bShowGizmo' has a wrong offset!");
static_assert(offsetof(UFixedPlaneBrushProperties, bSnapToGrid) == 0x000052, "Member 'UFixedPlaneBrushProperties::bSnapToGrid' has a wrong offset!");
static_assert(offsetof(UFixedPlaneBrushProperties, Position) == 0x000054, "Member 'UFixedPlaneBrushProperties::Position' has a wrong offset!");
static_assert(offsetof(UFixedPlaneBrushProperties, Rotation) == 0x000060, "Member 'UFixedPlaneBrushProperties::Rotation' has a wrong offset!");

// Class MeshModelingTools.SculptMaxBrushProperties
// 0x0008 (0x0058 - 0x0050)
class USculptMaxBrushProperties final : public UInteractiveToolPropertySet
{
public:
	float                                         MaxHeight;                                         // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFreezeCurrentHeight;                              // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B6[0x3];                                     // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SculptMaxBrushProperties">();
	}
	static class USculptMaxBrushProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<USculptMaxBrushProperties>();
	}
};
static_assert(alignof(USculptMaxBrushProperties) == 0x000008, "Wrong alignment on USculptMaxBrushProperties");
static_assert(sizeof(USculptMaxBrushProperties) == 0x000058, "Wrong size on USculptMaxBrushProperties");
static_assert(offsetof(USculptMaxBrushProperties, MaxHeight) == 0x000050, "Member 'USculptMaxBrushProperties::MaxHeight' has a wrong offset!");
static_assert(offsetof(USculptMaxBrushProperties, bFreezeCurrentHeight) == 0x000054, "Member 'USculptMaxBrushProperties::bFreezeCurrentHeight' has a wrong offset!");

// Class MeshModelingTools.MeshConstraintProperties
// 0x0008 (0x0058 - 0x0050)
class UMeshConstraintProperties : public UInteractiveToolPropertySet
{
public:
	bool                                          bPreserveSharpEdges;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMeshBoundaryConstraint                       MeshBoundaryConstraint;                            // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGroupBoundaryConstraint                      GroupBoundaryConstraint;                           // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMaterialBoundaryConstraint                   MaterialBoundaryConstraint;                        // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreventNormalFlips;                               // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B7[0x3];                                     // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshConstraintProperties">();
	}
	static class UMeshConstraintProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshConstraintProperties>();
	}
};
static_assert(alignof(UMeshConstraintProperties) == 0x000008, "Wrong alignment on UMeshConstraintProperties");
static_assert(sizeof(UMeshConstraintProperties) == 0x000058, "Wrong size on UMeshConstraintProperties");
static_assert(offsetof(UMeshConstraintProperties, bPreserveSharpEdges) == 0x000050, "Member 'UMeshConstraintProperties::bPreserveSharpEdges' has a wrong offset!");
static_assert(offsetof(UMeshConstraintProperties, MeshBoundaryConstraint) == 0x000051, "Member 'UMeshConstraintProperties::MeshBoundaryConstraint' has a wrong offset!");
static_assert(offsetof(UMeshConstraintProperties, GroupBoundaryConstraint) == 0x000052, "Member 'UMeshConstraintProperties::GroupBoundaryConstraint' has a wrong offset!");
static_assert(offsetof(UMeshConstraintProperties, MaterialBoundaryConstraint) == 0x000053, "Member 'UMeshConstraintProperties::MaterialBoundaryConstraint' has a wrong offset!");
static_assert(offsetof(UMeshConstraintProperties, bPreventNormalFlips) == 0x000054, "Member 'UMeshConstraintProperties::bPreventNormalFlips' has a wrong offset!");

// Class MeshModelingTools.RemeshProperties
// 0x0008 (0x0060 - 0x0058)
class URemeshProperties : public UMeshConstraintProperties
{
public:
	float                                         SmoothingStrength;                                 // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlips;                                            // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSplits;                                           // 0x005D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCollapses;                                        // 0x005E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B8[0x1];                                     // 0x005F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemeshProperties">();
	}
	static class URemeshProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemeshProperties>();
	}
};
static_assert(alignof(URemeshProperties) == 0x000008, "Wrong alignment on URemeshProperties");
static_assert(sizeof(URemeshProperties) == 0x000060, "Wrong size on URemeshProperties");
static_assert(offsetof(URemeshProperties, SmoothingStrength) == 0x000058, "Member 'URemeshProperties::SmoothingStrength' has a wrong offset!");
static_assert(offsetof(URemeshProperties, bFlips) == 0x00005C, "Member 'URemeshProperties::bFlips' has a wrong offset!");
static_assert(offsetof(URemeshProperties, bSplits) == 0x00005D, "Member 'URemeshProperties::bSplits' has a wrong offset!");
static_assert(offsetof(URemeshProperties, bCollapses) == 0x00005E, "Member 'URemeshProperties::bCollapses' has a wrong offset!");

// Class MeshModelingTools.BrushRemeshProperties
// 0x0010 (0x0070 - 0x0060)
class UBrushRemeshProperties final : public URemeshProperties
{
public:
	bool                                          bEnableRemeshing;                                  // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13B9[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TriangleSize;                                      // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreserveDetail;                                    // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13BA[0x4];                                     // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BrushRemeshProperties">();
	}
	static class UBrushRemeshProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBrushRemeshProperties>();
	}
};
static_assert(alignof(UBrushRemeshProperties) == 0x000008, "Wrong alignment on UBrushRemeshProperties");
static_assert(sizeof(UBrushRemeshProperties) == 0x000070, "Wrong size on UBrushRemeshProperties");
static_assert(offsetof(UBrushRemeshProperties, bEnableRemeshing) == 0x000060, "Member 'UBrushRemeshProperties::bEnableRemeshing' has a wrong offset!");
static_assert(offsetof(UBrushRemeshProperties, TriangleSize) == 0x000064, "Member 'UBrushRemeshProperties::TriangleSize' has a wrong offset!");
static_assert(offsetof(UBrushRemeshProperties, PreserveDetail) == 0x000068, "Member 'UBrushRemeshProperties::PreserveDetail' has a wrong offset!");

// Class MeshModelingTools.DynamicMeshSculptTool
// 0x0BF0 (0x0CB0 - 0x00C0)
class alignas(0x10) UDynamicMeshSculptTool final : public UMeshSurfacePointTool
{
public:
	class USculptBrushProperties*                 BrushProperties;                                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBrushSculptProperties*                 SculptProperties;                                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlaneBrushProperties*                  PlaneBrushProperties;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USculptMaxBrushProperties*              SculptMaxBrushProperties;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBrushRemeshProperties*                 RemeshProperties;                                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFixedPlaneBrushProperties*             GizmoProperties;                                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshEditingViewProperties*             ViewProperties;                                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13BB[0x38];                                    // 0x00F8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UBrushStampIndicator*                   BrushIndicator;                                    // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               BrushIndicatorMaterial;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPreviewMesh*                           BrushIndicatorMesh;                                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOctreeDynamicMeshComponent*            DynamicMeshComponent;                              // 0x0148(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               ActiveOverrideMaterial;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13BC[0xB40];                                   // 0x0158(0x0B40)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformGizmo*                        PlaneTransformGizmo;                               // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTransformProxy*                        PlaneTransformProxy;                               // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_13BD[0x8];                                     // 0x0CA8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicMeshSculptTool">();
	}
	static class UDynamicMeshSculptTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicMeshSculptTool>();
	}
};
static_assert(alignof(UDynamicMeshSculptTool) == 0x000010, "Wrong alignment on UDynamicMeshSculptTool");
static_assert(sizeof(UDynamicMeshSculptTool) == 0x000CB0, "Wrong size on UDynamicMeshSculptTool");
static_assert(offsetof(UDynamicMeshSculptTool, BrushProperties) == 0x0000C0, "Member 'UDynamicMeshSculptTool::BrushProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, SculptProperties) == 0x0000C8, "Member 'UDynamicMeshSculptTool::SculptProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, PlaneBrushProperties) == 0x0000D0, "Member 'UDynamicMeshSculptTool::PlaneBrushProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, SculptMaxBrushProperties) == 0x0000D8, "Member 'UDynamicMeshSculptTool::SculptMaxBrushProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, RemeshProperties) == 0x0000E0, "Member 'UDynamicMeshSculptTool::RemeshProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, GizmoProperties) == 0x0000E8, "Member 'UDynamicMeshSculptTool::GizmoProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, ViewProperties) == 0x0000F0, "Member 'UDynamicMeshSculptTool::ViewProperties' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, BrushIndicator) == 0x000130, "Member 'UDynamicMeshSculptTool::BrushIndicator' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, BrushIndicatorMaterial) == 0x000138, "Member 'UDynamicMeshSculptTool::BrushIndicatorMaterial' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, BrushIndicatorMesh) == 0x000140, "Member 'UDynamicMeshSculptTool::BrushIndicatorMesh' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, DynamicMeshComponent) == 0x000148, "Member 'UDynamicMeshSculptTool::DynamicMeshComponent' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, ActiveOverrideMaterial) == 0x000150, "Member 'UDynamicMeshSculptTool::ActiveOverrideMaterial' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, PlaneTransformGizmo) == 0x000C98, "Member 'UDynamicMeshSculptTool::PlaneTransformGizmo' has a wrong offset!");
static_assert(offsetof(UDynamicMeshSculptTool, PlaneTransformProxy) == 0x000CA0, "Member 'UDynamicMeshSculptTool::PlaneTransformProxy' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UEditMeshPolygonsToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	uint8                                         Pad_13BE[0x8];                                     // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolBuilder">();
	}
	static class UEditMeshPolygonsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolBuilder>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolBuilder) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolBuilder");
static_assert(sizeof(UEditMeshPolygonsToolBuilder) == 0x000038, "Wrong size on UEditMeshPolygonsToolBuilder");

// Class MeshModelingTools.PolyEditTransformProperties
// 0x0010 (0x0060 - 0x0050)
class UPolyEditTransformProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowWireframe;                                    // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13BF[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	ELocalFrameMode                               LocalFrameMode;                                    // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockRotation;                                     // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C0[0x6];                                     // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditTransformProperties">();
	}
	static class UPolyEditTransformProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditTransformProperties>();
	}
};
static_assert(alignof(UPolyEditTransformProperties) == 0x000008, "Wrong alignment on UPolyEditTransformProperties");
static_assert(sizeof(UPolyEditTransformProperties) == 0x000060, "Wrong size on UPolyEditTransformProperties");
static_assert(offsetof(UPolyEditTransformProperties, bShowWireframe) == 0x000050, "Member 'UPolyEditTransformProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UPolyEditTransformProperties, LocalFrameMode) == 0x000054, "Member 'UPolyEditTransformProperties::LocalFrameMode' has a wrong offset!");
static_assert(offsetof(UPolyEditTransformProperties, bLockRotation) == 0x000058, "Member 'UPolyEditTransformProperties::bLockRotation' has a wrong offset!");
static_assert(offsetof(UPolyEditTransformProperties, bSnapToWorldGrid) == 0x000059, "Member 'UPolyEditTransformProperties::bSnapToWorldGrid' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolActionPropertySet
// 0x0008 (0x0058 - 0x0050)
class UEditMeshPolygonsToolActionPropertySet : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_13C1[0x8];                                     // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActionPropertySet">();
	}
	static class UEditMeshPolygonsToolActionPropertySet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActionPropertySet>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActionPropertySet) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActionPropertySet");
static_assert(sizeof(UEditMeshPolygonsToolActionPropertySet) == 0x000058, "Wrong size on UEditMeshPolygonsToolActionPropertySet");

// Class MeshModelingTools.EditMeshPolygonsToolActions
// 0x0000 (0x0058 - 0x0058)
class UEditMeshPolygonsToolActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void CutFaces();
	void Decompose();
	void Delete();
	void Disconnect();
	void Extrude();
	void Flip();
	void Inset();
	void Merge();
	void Offset();
	void Outset();
	void RecalcNormals();
	void Retriangulate();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActions">();
	}
	static class UEditMeshPolygonsToolActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActions");
static_assert(sizeof(UEditMeshPolygonsToolActions) == 0x000058, "Wrong size on UEditMeshPolygonsToolActions");

// Class MeshModelingTools.EditMeshPolygonsToolActions_Triangles
// 0x0000 (0x0058 - 0x0058)
class UEditMeshPolygonsToolActions_Triangles final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void CutFaces();
	void Delete();
	void Disconnect();
	void Extrude();
	void Flip();
	void Inset();
	void Offset();
	void Outset();
	void Poke();
	void RecalcNormals();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActions_Triangles">();
	}
	static class UEditMeshPolygonsToolActions_Triangles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActions_Triangles>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActions_Triangles) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActions_Triangles");
static_assert(sizeof(UEditMeshPolygonsToolActions_Triangles) == 0x000058, "Wrong size on UEditMeshPolygonsToolActions_Triangles");

// Class MeshModelingTools.EditMeshPolygonsToolUVActions
// 0x0000 (0x0058 - 0x0058)
class UEditMeshPolygonsToolUVActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void PlanarProjection();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolUVActions">();
	}
	static class UEditMeshPolygonsToolUVActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolUVActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolUVActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolUVActions");
static_assert(sizeof(UEditMeshPolygonsToolUVActions) == 0x000058, "Wrong size on UEditMeshPolygonsToolUVActions");

// Class MeshModelingTools.EditMeshPolygonsToolEdgeActions
// 0x0000 (0x0058 - 0x0058)
class UEditMeshPolygonsToolEdgeActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void FillHole();
	void Straighten();
	void Weld();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolEdgeActions">();
	}
	static class UEditMeshPolygonsToolEdgeActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolEdgeActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolEdgeActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolEdgeActions");
static_assert(sizeof(UEditMeshPolygonsToolEdgeActions) == 0x000058, "Wrong size on UEditMeshPolygonsToolEdgeActions");

// Class MeshModelingTools.EditMeshPolygonsToolEdgeActions_Triangles
// 0x0000 (0x0058 - 0x0058)
class UEditMeshPolygonsToolEdgeActions_Triangles final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void Collapse();
	void FillHole();
	void Flip();
	void Split();
	void Weld();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolEdgeActions_Triangles">();
	}
	static class UEditMeshPolygonsToolEdgeActions_Triangles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolEdgeActions_Triangles>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolEdgeActions_Triangles) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolEdgeActions_Triangles");
static_assert(sizeof(UEditMeshPolygonsToolEdgeActions_Triangles) == 0x000058, "Wrong size on UEditMeshPolygonsToolEdgeActions_Triangles");

// Class MeshModelingTools.PolyEditExtrudeProperties
// 0x0008 (0x0058 - 0x0050)
class UPolyEditExtrudeProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditExtrudeDirection                     Direction;                                         // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C2[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditExtrudeProperties">();
	}
	static class UPolyEditExtrudeProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditExtrudeProperties>();
	}
};
static_assert(alignof(UPolyEditExtrudeProperties) == 0x000008, "Wrong alignment on UPolyEditExtrudeProperties");
static_assert(sizeof(UPolyEditExtrudeProperties) == 0x000058, "Wrong size on UPolyEditExtrudeProperties");
static_assert(offsetof(UPolyEditExtrudeProperties, Direction) == 0x000050, "Member 'UPolyEditExtrudeProperties::Direction' has a wrong offset!");

// Class MeshModelingTools.PolyEditCutProperties
// 0x0008 (0x0058 - 0x0050)
class UPolyEditCutProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditCutPlaneOrientation                  Orientation;                                       // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToVertices;                                   // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C3[0x3];                                     // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditCutProperties">();
	}
	static class UPolyEditCutProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditCutProperties>();
	}
};
static_assert(alignof(UPolyEditCutProperties) == 0x000008, "Wrong alignment on UPolyEditCutProperties");
static_assert(sizeof(UPolyEditCutProperties) == 0x000058, "Wrong size on UPolyEditCutProperties");
static_assert(offsetof(UPolyEditCutProperties, Orientation) == 0x000050, "Member 'UPolyEditCutProperties::Orientation' has a wrong offset!");
static_assert(offsetof(UPolyEditCutProperties, bSnapToVertices) == 0x000054, "Member 'UPolyEditCutProperties::bSnapToVertices' has a wrong offset!");

// Class MeshModelingTools.PolyEditSetUVProperties
// 0x0008 (0x0058 - 0x0050)
class UPolyEditSetUVProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowMaterial;                                     // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13C4[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditSetUVProperties">();
	}
	static class UPolyEditSetUVProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditSetUVProperties>();
	}
};
static_assert(alignof(UPolyEditSetUVProperties) == 0x000008, "Wrong alignment on UPolyEditSetUVProperties");
static_assert(sizeof(UPolyEditSetUVProperties) == 0x000058, "Wrong size on UPolyEditSetUVProperties");
static_assert(offsetof(UPolyEditSetUVProperties, bShowMaterial) == 0x000050, "Member 'UPolyEditSetUVProperties::bShowMaterial' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsTool
// 0x0900 (0x09C0 - 0x00C0)
class alignas(0x10) UEditMeshPolygonsTool final : public UMeshSurfacePointTool
{
public:
	uint8                                         Pad_13C5[0x10];                                    // 0x00C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleDynamicMeshComponent*            DynamicMeshComponent;                              // 0x00D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditTransformProperties*           TransformProps;                                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C6[0x120];                                   // 0x00E0(0x0120)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditMeshPolygonsToolActions*           EditActions;                                       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolActions_Triangles* EditActions_Triangles;                             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolEdgeActions*       EditEdgeActions;                                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolEdgeActions_Triangles* EditEdgeActions_Triangles;                         // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolUVActions*         EditUVActions;                                     // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditExtrudeProperties*             ExtrudeProperties;                                 // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C7[0x90];                                    // 0x0230(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditCutProperties*                 CutProperties;                                     // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditSetUVProperties*               SetUVProperties;                                   // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolygonSelectionMechanic*              SelectionMechanic;                                 // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C8[0x8];                                     // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultiTransformer*                      MultiTransformer;                                  // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C9[0x3A8];                                   // 0x02E8(0x03A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditPreviewMesh*                   EditPreview;                                       // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13CA[0x8];                                     // 0x0698(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaneDistanceFromHitMechanic*          ExtrudeHeightMechanic;                             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpatialCurveDistanceMechanic*          CurveDistMechanic;                                 // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCollectSurfacePathMechanic*            SurfacePathMechanic;                               // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13CB[0x308];                                   // 0x06B8(0x0308)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsTool">();
	}
	static class UEditMeshPolygonsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsTool>();
	}
};
static_assert(alignof(UEditMeshPolygonsTool) == 0x000010, "Wrong alignment on UEditMeshPolygonsTool");
static_assert(sizeof(UEditMeshPolygonsTool) == 0x0009C0, "Wrong size on UEditMeshPolygonsTool");
static_assert(offsetof(UEditMeshPolygonsTool, DynamicMeshComponent) == 0x0000D0, "Member 'UEditMeshPolygonsTool::DynamicMeshComponent' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, TransformProps) == 0x0000D8, "Member 'UEditMeshPolygonsTool::TransformProps' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditActions) == 0x000200, "Member 'UEditMeshPolygonsTool::EditActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditActions_Triangles) == 0x000208, "Member 'UEditMeshPolygonsTool::EditActions_Triangles' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditEdgeActions) == 0x000210, "Member 'UEditMeshPolygonsTool::EditEdgeActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditEdgeActions_Triangles) == 0x000218, "Member 'UEditMeshPolygonsTool::EditEdgeActions_Triangles' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditUVActions) == 0x000220, "Member 'UEditMeshPolygonsTool::EditUVActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, ExtrudeProperties) == 0x000228, "Member 'UEditMeshPolygonsTool::ExtrudeProperties' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, CutProperties) == 0x0002C0, "Member 'UEditMeshPolygonsTool::CutProperties' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, SetUVProperties) == 0x0002C8, "Member 'UEditMeshPolygonsTool::SetUVProperties' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, SelectionMechanic) == 0x0002D0, "Member 'UEditMeshPolygonsTool::SelectionMechanic' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, MultiTransformer) == 0x0002E0, "Member 'UEditMeshPolygonsTool::MultiTransformer' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditPreview) == 0x000690, "Member 'UEditMeshPolygonsTool::EditPreview' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, ExtrudeHeightMechanic) == 0x0006A0, "Member 'UEditMeshPolygonsTool::ExtrudeHeightMechanic' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, CurveDistMechanic) == 0x0006A8, "Member 'UEditMeshPolygonsTool::CurveDistMechanic' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, SurfacePathMechanic) == 0x0006B0, "Member 'UEditMeshPolygonsTool::SurfacePathMechanic' has a wrong offset!");

// Class MeshModelingTools.EditNormalsToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UEditNormalsToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_13CC[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditNormalsToolBuilder">();
	}
	static class UEditNormalsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditNormalsToolBuilder>();
	}
};
static_assert(alignof(UEditNormalsToolBuilder) == 0x000008, "Wrong alignment on UEditNormalsToolBuilder");
static_assert(sizeof(UEditNormalsToolBuilder) == 0x000030, "Wrong size on UEditNormalsToolBuilder");

// Class MeshModelingTools.EditNormalsOperatorFactory
// 0x0018 (0x0040 - 0x0028)
class UEditNormalsOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_13CD[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditNormalsTool*                       Tool;                                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13CE[0x8];                                     // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditNormalsOperatorFactory">();
	}
	static class UEditNormalsOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditNormalsOperatorFactory>();
	}
};
static_assert(alignof(UEditNormalsOperatorFactory) == 0x000008, "Wrong alignment on UEditNormalsOperatorFactory");
static_assert(sizeof(UEditNormalsOperatorFactory) == 0x000040, "Wrong size on UEditNormalsOperatorFactory");
static_assert(offsetof(UEditNormalsOperatorFactory, Tool) == 0x000030, "Member 'UEditNormalsOperatorFactory::Tool' has a wrong offset!");

// Class MeshModelingTools.EditNormalsTool
// 0x0070 (0x0100 - 0x0090)
class alignas(0x10) UEditNormalsTool final : public UMultiSelectionTool
{
public:
	class UEditNormalsToolProperties*             BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditNormalsAdvancedProperties*         AdvancedProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshOpPreviewWithBackgroundCompute*> Previews;                                          // 0x00A0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13CF[0x50];                                    // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditNormalsTool">();
	}
	static class UEditNormalsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditNormalsTool>();
	}
};
static_assert(alignof(UEditNormalsTool) == 0x000010, "Wrong alignment on UEditNormalsTool");
static_assert(sizeof(UEditNormalsTool) == 0x000100, "Wrong size on UEditNormalsTool");
static_assert(offsetof(UEditNormalsTool, BasicProperties) == 0x000090, "Member 'UEditNormalsTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UEditNormalsTool, AdvancedProperties) == 0x000098, "Member 'UEditNormalsTool::AdvancedProperties' has a wrong offset!");
static_assert(offsetof(UEditNormalsTool, Previews) == 0x0000A0, "Member 'UEditNormalsTool::Previews' has a wrong offset!");

// Class MeshModelingTools.EditUVIslandsToolBuilder
// 0x0000 (0x0030 - 0x0030)
class UEditUVIslandsToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditUVIslandsToolBuilder">();
	}
	static class UEditUVIslandsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditUVIslandsToolBuilder>();
	}
};
static_assert(alignof(UEditUVIslandsToolBuilder) == 0x000008, "Wrong alignment on UEditUVIslandsToolBuilder");
static_assert(sizeof(UEditUVIslandsToolBuilder) == 0x000030, "Wrong size on UEditUVIslandsToolBuilder");

// Class MeshModelingTools.EditUVIslandsTool
// 0x02F0 (0x03B0 - 0x00C0)
class alignas(0x10) UEditUVIslandsTool final : public UMeshSurfacePointTool
{
public:
	uint8                                         Pad_13D0[0x8];                                     // 0x00C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleDynamicMeshComponent*            DynamicMeshComponent;                              // 0x00C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolygonSelectionMechanic*              SelectionMechanic;                                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13D1[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMultiTransformer*                      MultiTransformer;                                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13D2[0x2C8];                                   // 0x00E8(0x02C8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditUVIslandsTool">();
	}
	static class UEditUVIslandsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditUVIslandsTool>();
	}
};
static_assert(alignof(UEditUVIslandsTool) == 0x000010, "Wrong alignment on UEditUVIslandsTool");
static_assert(sizeof(UEditUVIslandsTool) == 0x0003B0, "Wrong size on UEditUVIslandsTool");
static_assert(offsetof(UEditUVIslandsTool, DynamicMeshComponent) == 0x0000C8, "Member 'UEditUVIslandsTool::DynamicMeshComponent' has a wrong offset!");
static_assert(offsetof(UEditUVIslandsTool, SelectionMechanic) == 0x0000D0, "Member 'UEditUVIslandsTool::SelectionMechanic' has a wrong offset!");
static_assert(offsetof(UEditUVIslandsTool, MultiTransformer) == 0x0000E0, "Member 'UEditUVIslandsTool::MultiTransformer' has a wrong offset!");

// Class MeshModelingTools.MeshAnalysisProperties
// 0x0020 (0x0070 - 0x0050)
class UMeshAnalysisProperties final : public UInteractiveToolPropertySet
{
public:
	class FString                                 SurfaceArea;                                       // 0x0050(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Volume;                                            // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshAnalysisProperties">();
	}
	static class UMeshAnalysisProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshAnalysisProperties>();
	}
};
static_assert(alignof(UMeshAnalysisProperties) == 0x000008, "Wrong alignment on UMeshAnalysisProperties");
static_assert(sizeof(UMeshAnalysisProperties) == 0x000070, "Wrong size on UMeshAnalysisProperties");
static_assert(offsetof(UMeshAnalysisProperties, SurfaceArea) == 0x000050, "Member 'UMeshAnalysisProperties::SurfaceArea' has a wrong offset!");
static_assert(offsetof(UMeshAnalysisProperties, Volume) == 0x000060, "Member 'UMeshAnalysisProperties::Volume' has a wrong offset!");

// Class MeshModelingTools.MeshInspectorToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UMeshInspectorToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshInspectorToolBuilder">();
	}
	static class UMeshInspectorToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshInspectorToolBuilder>();
	}
};
static_assert(alignof(UMeshInspectorToolBuilder) == 0x000008, "Wrong alignment on UMeshInspectorToolBuilder");
static_assert(sizeof(UMeshInspectorToolBuilder) == 0x000028, "Wrong size on UMeshInspectorToolBuilder");

// Class MeshModelingTools.MeshInspectorProperties
// 0x0010 (0x0060 - 0x0050)
class UMeshInspectorProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bWireframe;                                        // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoundaryEdges;                                    // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPolygonBorders;                                   // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUVSeams;                                          // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalSeams;                                      // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNormalVectors;                                    // 0x0055(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTangentVectors;                                   // 0x0056(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D3[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NormalLength;                                      // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TangentLength;                                     // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshInspectorProperties">();
	}
	static class UMeshInspectorProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshInspectorProperties>();
	}
};
static_assert(alignof(UMeshInspectorProperties) == 0x000008, "Wrong alignment on UMeshInspectorProperties");
static_assert(sizeof(UMeshInspectorProperties) == 0x000060, "Wrong size on UMeshInspectorProperties");
static_assert(offsetof(UMeshInspectorProperties, bWireframe) == 0x000050, "Member 'UMeshInspectorProperties::bWireframe' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bBoundaryEdges) == 0x000051, "Member 'UMeshInspectorProperties::bBoundaryEdges' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bPolygonBorders) == 0x000052, "Member 'UMeshInspectorProperties::bPolygonBorders' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bUVSeams) == 0x000053, "Member 'UMeshInspectorProperties::bUVSeams' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bNormalSeams) == 0x000054, "Member 'UMeshInspectorProperties::bNormalSeams' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bNormalVectors) == 0x000055, "Member 'UMeshInspectorProperties::bNormalVectors' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, bTangentVectors) == 0x000056, "Member 'UMeshInspectorProperties::bTangentVectors' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, NormalLength) == 0x000058, "Member 'UMeshInspectorProperties::NormalLength' has a wrong offset!");
static_assert(offsetof(UMeshInspectorProperties, TangentLength) == 0x00005C, "Member 'UMeshInspectorProperties::TangentLength' has a wrong offset!");

// Class MeshModelingTools.MeshInspectorTool
// 0x0068 (0x00F0 - 0x0088)
class UMeshInspectorTool final : public USingleSelectionTool
{
public:
	class UMeshInspectorProperties*               Settings;                                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExistingMeshMaterialProperties*        MaterialSettings;                                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13D4[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPreviewMesh*                           PreviewMesh;                                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultMaterial;                                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13D5[0x40];                                    // 0x00B0(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshInspectorTool">();
	}
	static class UMeshInspectorTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshInspectorTool>();
	}
};
static_assert(alignof(UMeshInspectorTool) == 0x000008, "Wrong alignment on UMeshInspectorTool");
static_assert(sizeof(UMeshInspectorTool) == 0x0000F0, "Wrong size on UMeshInspectorTool");
static_assert(offsetof(UMeshInspectorTool, Settings) == 0x000088, "Member 'UMeshInspectorTool::Settings' has a wrong offset!");
static_assert(offsetof(UMeshInspectorTool, MaterialSettings) == 0x000090, "Member 'UMeshInspectorTool::MaterialSettings' has a wrong offset!");
static_assert(offsetof(UMeshInspectorTool, PreviewMesh) == 0x0000A0, "Member 'UMeshInspectorTool::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UMeshInspectorTool, DefaultMaterial) == 0x0000A8, "Member 'UMeshInspectorTool::DefaultMaterial' has a wrong offset!");

// Class MeshModelingTools.NewMeshMaterialProperties
// 0x0010 (0x0060 - 0x0050)
class UNewMeshMaterialProperties final : public UInteractiveToolPropertySet
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0050(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UVScale;                                           // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldSpaceUVScale;                                // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWireframe;                                        // 0x005D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowExtendedOptions;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D6[0x1];                                     // 0x005F(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NewMeshMaterialProperties">();
	}
	static class UNewMeshMaterialProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNewMeshMaterialProperties>();
	}
};
static_assert(alignof(UNewMeshMaterialProperties) == 0x000008, "Wrong alignment on UNewMeshMaterialProperties");
static_assert(sizeof(UNewMeshMaterialProperties) == 0x000060, "Wrong size on UNewMeshMaterialProperties");
static_assert(offsetof(UNewMeshMaterialProperties, Material) == 0x000050, "Member 'UNewMeshMaterialProperties::Material' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, UVScale) == 0x000058, "Member 'UNewMeshMaterialProperties::UVScale' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bWorldSpaceUVScale) == 0x00005C, "Member 'UNewMeshMaterialProperties::bWorldSpaceUVScale' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bWireframe) == 0x00005D, "Member 'UNewMeshMaterialProperties::bWireframe' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bShowExtendedOptions) == 0x00005E, "Member 'UNewMeshMaterialProperties::bShowExtendedOptions' has a wrong offset!");

// Class MeshModelingTools.ExistingMeshMaterialProperties
// 0x0018 (0x0068 - 0x0050)
class UExistingMeshMaterialProperties final : public UInteractiveToolPropertySet
{
public:
	ESetMeshMaterialMode                          MaterialMode;                                      // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D7[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckerDensity;                                    // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               CheckerMaterial;                                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExistingMeshMaterialProperties">();
	}
	static class UExistingMeshMaterialProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExistingMeshMaterialProperties>();
	}
};
static_assert(alignof(UExistingMeshMaterialProperties) == 0x000008, "Wrong alignment on UExistingMeshMaterialProperties");
static_assert(sizeof(UExistingMeshMaterialProperties) == 0x000068, "Wrong size on UExistingMeshMaterialProperties");
static_assert(offsetof(UExistingMeshMaterialProperties, MaterialMode) == 0x000050, "Member 'UExistingMeshMaterialProperties::MaterialMode' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, CheckerDensity) == 0x000054, "Member 'UExistingMeshMaterialProperties::CheckerDensity' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, OverrideMaterial) == 0x000058, "Member 'UExistingMeshMaterialProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, CheckerMaterial) == 0x000060, "Member 'UExistingMeshMaterialProperties::CheckerMaterial' has a wrong offset!");

// Class MeshModelingTools.MeshEditingViewProperties
// 0x0028 (0x0078 - 0x0050)
class UMeshEditingViewProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowWireframe;                                    // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D8[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EMeshEditingMaterialModes                     MaterialMode;                                      // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlatShading;                                      // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13D9[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x005C(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13DA[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Image;                                             // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshEditingViewProperties">();
	}
	static class UMeshEditingViewProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshEditingViewProperties>();
	}
};
static_assert(alignof(UMeshEditingViewProperties) == 0x000008, "Wrong alignment on UMeshEditingViewProperties");
static_assert(sizeof(UMeshEditingViewProperties) == 0x000078, "Wrong size on UMeshEditingViewProperties");
static_assert(offsetof(UMeshEditingViewProperties, bShowWireframe) == 0x000050, "Member 'UMeshEditingViewProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, MaterialMode) == 0x000054, "Member 'UMeshEditingViewProperties::MaterialMode' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, bFlatShading) == 0x000058, "Member 'UMeshEditingViewProperties::bFlatShading' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, Color) == 0x00005C, "Member 'UMeshEditingViewProperties::Color' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, Image) == 0x000070, "Member 'UMeshEditingViewProperties::Image' has a wrong offset!");

// Class MeshModelingTools.MeshSelectionToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UMeshSelectionToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	uint8                                         Pad_13DB[0x8];                                     // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionToolBuilder">();
	}
	static class UMeshSelectionToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionToolBuilder>();
	}
};
static_assert(alignof(UMeshSelectionToolBuilder) == 0x000008, "Wrong alignment on UMeshSelectionToolBuilder");
static_assert(sizeof(UMeshSelectionToolBuilder) == 0x000038, "Wrong size on UMeshSelectionToolBuilder");

// Class MeshModelingTools.MeshSelectionToolActionPropertySet
// 0x0008 (0x0058 - 0x0050)
class UMeshSelectionToolActionPropertySet : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_13DC[0x8];                                     // 0x0050(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionToolActionPropertySet">();
	}
	static class UMeshSelectionToolActionPropertySet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionToolActionPropertySet>();
	}
};
static_assert(alignof(UMeshSelectionToolActionPropertySet) == 0x000008, "Wrong alignment on UMeshSelectionToolActionPropertySet");
static_assert(sizeof(UMeshSelectionToolActionPropertySet) == 0x000058, "Wrong size on UMeshSelectionToolActionPropertySet");

// Class MeshModelingTools.MeshSelectionEditActions
// 0x0000 (0x0058 - 0x0058)
class UMeshSelectionEditActions final : public UMeshSelectionToolActionPropertySet
{
public:
	void Clear();
	void ExpandToConnected();
	void Grow();
	void Invert();
	void OptimizeSelection();
	void SelectAll();
	void SelectLargestComponentByArea();
	void SelectLargestComponentByTriCount();
	void Shrink();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionEditActions">();
	}
	static class UMeshSelectionEditActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionEditActions>();
	}
};
static_assert(alignof(UMeshSelectionEditActions) == 0x000008, "Wrong alignment on UMeshSelectionEditActions");
static_assert(sizeof(UMeshSelectionEditActions) == 0x000058, "Wrong size on UMeshSelectionEditActions");

// Class MeshModelingTools.MeshSelectionMeshEditActions
// 0x0000 (0x0058 - 0x0058)
class UMeshSelectionMeshEditActions final : public UMeshSelectionToolActionPropertySet
{
public:
	void CreatePolygroup();
	void DeleteTriangles();
	void DisconnectTriangles();
	void FlipNormals();
	void SeparateTriangles();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionMeshEditActions">();
	}
	static class UMeshSelectionMeshEditActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionMeshEditActions>();
	}
};
static_assert(alignof(UMeshSelectionMeshEditActions) == 0x000008, "Wrong alignment on UMeshSelectionMeshEditActions");
static_assert(sizeof(UMeshSelectionMeshEditActions) == 0x000058, "Wrong size on UMeshSelectionMeshEditActions");

// Class MeshModelingTools.MeshSelectionToolProperties
// 0x0010 (0x0060 - 0x0050)
class UMeshSelectionToolProperties final : public UInteractiveToolPropertySet
{
public:
	EMeshSelectionToolPrimaryMode                 SelectionMode;                                     // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AngleTolerance;                                    // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHitBackFaces;                                     // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWireframe;                                    // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13DD[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	EMeshFacesColorMode                           FaceColorMode;                                     // 0x005C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionToolProperties">();
	}
	static class UMeshSelectionToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionToolProperties>();
	}
};
static_assert(alignof(UMeshSelectionToolProperties) == 0x000008, "Wrong alignment on UMeshSelectionToolProperties");
static_assert(sizeof(UMeshSelectionToolProperties) == 0x000060, "Wrong size on UMeshSelectionToolProperties");
static_assert(offsetof(UMeshSelectionToolProperties, SelectionMode) == 0x000050, "Member 'UMeshSelectionToolProperties::SelectionMode' has a wrong offset!");
static_assert(offsetof(UMeshSelectionToolProperties, AngleTolerance) == 0x000054, "Member 'UMeshSelectionToolProperties::AngleTolerance' has a wrong offset!");
static_assert(offsetof(UMeshSelectionToolProperties, bHitBackFaces) == 0x000058, "Member 'UMeshSelectionToolProperties::bHitBackFaces' has a wrong offset!");
static_assert(offsetof(UMeshSelectionToolProperties, bShowWireframe) == 0x000059, "Member 'UMeshSelectionToolProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UMeshSelectionToolProperties, FaceColorMode) == 0x00005C, "Member 'UMeshSelectionToolProperties::FaceColorMode' has a wrong offset!");

// Class MeshModelingTools.MeshSelectionTool
// 0x03C8 (0x05C0 - 0x01F8)
class alignas(0x10) UMeshSelectionTool final : public UDynamicMeshBrushTool
{
public:
	class UMeshSelectionToolProperties*           SelectionProps;                                    // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshSelectionEditActions*              SelectionActions;                                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshSelectionToolActionPropertySet*    EditActions;                                       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshSelectionSet*                      Selection;                                         // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                         SpawnedActors;                                     // 0x0218(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13DE[0x398];                                   // 0x0228(0x0398)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSelectionTool">();
	}
	static class UMeshSelectionTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSelectionTool>();
	}
};
static_assert(alignof(UMeshSelectionTool) == 0x000010, "Wrong alignment on UMeshSelectionTool");
static_assert(sizeof(UMeshSelectionTool) == 0x0005C0, "Wrong size on UMeshSelectionTool");
static_assert(offsetof(UMeshSelectionTool, SelectionProps) == 0x0001F8, "Member 'UMeshSelectionTool::SelectionProps' has a wrong offset!");
static_assert(offsetof(UMeshSelectionTool, SelectionActions) == 0x000200, "Member 'UMeshSelectionTool::SelectionActions' has a wrong offset!");
static_assert(offsetof(UMeshSelectionTool, EditActions) == 0x000208, "Member 'UMeshSelectionTool::EditActions' has a wrong offset!");
static_assert(offsetof(UMeshSelectionTool, Selection) == 0x000210, "Member 'UMeshSelectionTool::Selection' has a wrong offset!");
static_assert(offsetof(UMeshSelectionTool, SpawnedActors) == 0x000218, "Member 'UMeshSelectionTool::SpawnedActors' has a wrong offset!");

// Class MeshModelingTools.MeshSpaceDeformerToolBuilder
// 0x0000 (0x0030 - 0x0030)
class UMeshSpaceDeformerToolBuilder final : public UMeshSurfacePointToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSpaceDeformerToolBuilder">();
	}
	static class UMeshSpaceDeformerToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSpaceDeformerToolBuilder>();
	}
};
static_assert(alignof(UMeshSpaceDeformerToolBuilder) == 0x000008, "Wrong alignment on UMeshSpaceDeformerToolBuilder");
static_assert(sizeof(UMeshSpaceDeformerToolBuilder) == 0x000030, "Wrong size on UMeshSpaceDeformerToolBuilder");

// Class MeshModelingTools.SpaceDeformerOperatorFactory
// 0x0010 (0x0038 - 0x0028)
class USpaceDeformerOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_13DF[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshSpaceDeformerTool*                 SpaceDeformerTool;                                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpaceDeformerOperatorFactory">();
	}
	static class USpaceDeformerOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpaceDeformerOperatorFactory>();
	}
};
static_assert(alignof(USpaceDeformerOperatorFactory) == 0x000008, "Wrong alignment on USpaceDeformerOperatorFactory");
static_assert(sizeof(USpaceDeformerOperatorFactory) == 0x000038, "Wrong size on USpaceDeformerOperatorFactory");
static_assert(offsetof(USpaceDeformerOperatorFactory, SpaceDeformerTool) == 0x000030, "Member 'USpaceDeformerOperatorFactory::SpaceDeformerTool' has a wrong offset!");

// Class MeshModelingTools.MeshSpaceDeformerTool
// 0x00F0 (0x01B0 - 0x00C0)
class UMeshSpaceDeformerTool final : public UMeshSurfacePointTool
{
public:
	ENonlinearOperationType                       SelectedOperationType;                             // 0x00C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13E0[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpperBoundsInterval;                               // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LowerBoundsInterval;                               // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ModifierPercent;                                   // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGizmoTransformChangeStateTarget*       StateTarget;                                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13E1[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13E2[0x20];                                    // 0x00E8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GizmoCenter;                                       // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13E3[0xC];                                     // 0x0114(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  GizmoOrientation;                                  // 0x0120(0x0010)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UIntervalGizmo*                         IntervalGizmo;                                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformGizmo*                        TransformGizmo;                                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        TransformProxy;                                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGizmoLocalFloatParameterSource*        UpIntervalSource;                                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGizmoLocalFloatParameterSource*        DownIntervalSource;                                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGizmoLocalFloatParameterSource*        ForwardIntervalSource;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13E4[0x50];                                    // 0x0160(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshSpaceDeformerTool">();
	}
	static class UMeshSpaceDeformerTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshSpaceDeformerTool>();
	}
};
static_assert(alignof(UMeshSpaceDeformerTool) == 0x000010, "Wrong alignment on UMeshSpaceDeformerTool");
static_assert(sizeof(UMeshSpaceDeformerTool) == 0x0001B0, "Wrong size on UMeshSpaceDeformerTool");
static_assert(offsetof(UMeshSpaceDeformerTool, SelectedOperationType) == 0x0000C0, "Member 'UMeshSpaceDeformerTool::SelectedOperationType' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, UpperBoundsInterval) == 0x0000C4, "Member 'UMeshSpaceDeformerTool::UpperBoundsInterval' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, LowerBoundsInterval) == 0x0000C8, "Member 'UMeshSpaceDeformerTool::LowerBoundsInterval' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, ModifierPercent) == 0x0000CC, "Member 'UMeshSpaceDeformerTool::ModifierPercent' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, StateTarget) == 0x0000D0, "Member 'UMeshSpaceDeformerTool::StateTarget' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, Preview) == 0x0000E0, "Member 'UMeshSpaceDeformerTool::Preview' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, GizmoCenter) == 0x000108, "Member 'UMeshSpaceDeformerTool::GizmoCenter' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, GizmoOrientation) == 0x000120, "Member 'UMeshSpaceDeformerTool::GizmoOrientation' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, IntervalGizmo) == 0x000130, "Member 'UMeshSpaceDeformerTool::IntervalGizmo' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, TransformGizmo) == 0x000138, "Member 'UMeshSpaceDeformerTool::TransformGizmo' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, TransformProxy) == 0x000140, "Member 'UMeshSpaceDeformerTool::TransformProxy' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, UpIntervalSource) == 0x000148, "Member 'UMeshSpaceDeformerTool::UpIntervalSource' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, DownIntervalSource) == 0x000150, "Member 'UMeshSpaceDeformerTool::DownIntervalSource' has a wrong offset!");
static_assert(offsetof(UMeshSpaceDeformerTool, ForwardIntervalSource) == 0x000158, "Member 'UMeshSpaceDeformerTool::ForwardIntervalSource' has a wrong offset!");

// Class MeshModelingTools.MeshStatisticsProperties
// 0x0030 (0x0080 - 0x0050)
class UMeshStatisticsProperties final : public UInteractiveToolPropertySet
{
public:
	class FString                                 Mesh;                                              // 0x0050(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UV;                                                // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Attributes;                                        // 0x0070(0x0010)(Edit, ZeroConstructor, EditConst, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshStatisticsProperties">();
	}
	static class UMeshStatisticsProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshStatisticsProperties>();
	}
};
static_assert(alignof(UMeshStatisticsProperties) == 0x000008, "Wrong alignment on UMeshStatisticsProperties");
static_assert(sizeof(UMeshStatisticsProperties) == 0x000080, "Wrong size on UMeshStatisticsProperties");
static_assert(offsetof(UMeshStatisticsProperties, Mesh) == 0x000050, "Member 'UMeshStatisticsProperties::Mesh' has a wrong offset!");
static_assert(offsetof(UMeshStatisticsProperties, UV) == 0x000060, "Member 'UMeshStatisticsProperties::UV' has a wrong offset!");
static_assert(offsetof(UMeshStatisticsProperties, Attributes) == 0x000070, "Member 'UMeshStatisticsProperties::Attributes' has a wrong offset!");

// Class MeshModelingTools.PlaneCutToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UPlaneCutToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_13E5[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneCutToolBuilder">();
	}
	static class UPlaneCutToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneCutToolBuilder>();
	}
};
static_assert(alignof(UPlaneCutToolBuilder) == 0x000008, "Wrong alignment on UPlaneCutToolBuilder");
static_assert(sizeof(UPlaneCutToolBuilder) == 0x000030, "Wrong size on UPlaneCutToolBuilder");

// Class MeshModelingTools.AcceptOutputProperties
// 0x0008 (0x0058 - 0x0050)
class UAcceptOutputProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bExportSeparatedPiecesAsNewMeshAssets;             // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13E6[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AcceptOutputProperties">();
	}
	static class UAcceptOutputProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAcceptOutputProperties>();
	}
};
static_assert(alignof(UAcceptOutputProperties) == 0x000008, "Wrong alignment on UAcceptOutputProperties");
static_assert(sizeof(UAcceptOutputProperties) == 0x000058, "Wrong size on UAcceptOutputProperties");
static_assert(offsetof(UAcceptOutputProperties, bExportSeparatedPiecesAsNewMeshAssets) == 0x000050, "Member 'UAcceptOutputProperties::bExportSeparatedPiecesAsNewMeshAssets' has a wrong offset!");

// Class MeshModelingTools.PlaneCutToolProperties
// 0x0010 (0x0060 - 0x0050)
class UPlaneCutToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bSnapToWorldGrid;                                  // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bKeepBothHalves;                                   // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13E7[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpacingBetweenHalves;                              // 0x0054(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFillCutHole;                                      // 0x0058(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowPreview;                                      // 0x0059(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFillSpans;                                        // 0x005A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13E8[0x5];                                     // 0x005B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneCutToolProperties">();
	}
	static class UPlaneCutToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneCutToolProperties>();
	}
};
static_assert(alignof(UPlaneCutToolProperties) == 0x000008, "Wrong alignment on UPlaneCutToolProperties");
static_assert(sizeof(UPlaneCutToolProperties) == 0x000060, "Wrong size on UPlaneCutToolProperties");
static_assert(offsetof(UPlaneCutToolProperties, bSnapToWorldGrid) == 0x000050, "Member 'UPlaneCutToolProperties::bSnapToWorldGrid' has a wrong offset!");
static_assert(offsetof(UPlaneCutToolProperties, bKeepBothHalves) == 0x000051, "Member 'UPlaneCutToolProperties::bKeepBothHalves' has a wrong offset!");
static_assert(offsetof(UPlaneCutToolProperties, SpacingBetweenHalves) == 0x000054, "Member 'UPlaneCutToolProperties::SpacingBetweenHalves' has a wrong offset!");
static_assert(offsetof(UPlaneCutToolProperties, bFillCutHole) == 0x000058, "Member 'UPlaneCutToolProperties::bFillCutHole' has a wrong offset!");
static_assert(offsetof(UPlaneCutToolProperties, bShowPreview) == 0x000059, "Member 'UPlaneCutToolProperties::bShowPreview' has a wrong offset!");
static_assert(offsetof(UPlaneCutToolProperties, bFillSpans) == 0x00005A, "Member 'UPlaneCutToolProperties::bFillSpans' has a wrong offset!");

// Class MeshModelingTools.PlaneCutOperatorFactory
// 0x0018 (0x0040 - 0x0028)
class UPlaneCutOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_13E9[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaneCutTool*                          CutTool;                                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13EA[0x8];                                     // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneCutOperatorFactory">();
	}
	static class UPlaneCutOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneCutOperatorFactory>();
	}
};
static_assert(alignof(UPlaneCutOperatorFactory) == 0x000008, "Wrong alignment on UPlaneCutOperatorFactory");
static_assert(sizeof(UPlaneCutOperatorFactory) == 0x000040, "Wrong size on UPlaneCutOperatorFactory");
static_assert(offsetof(UPlaneCutOperatorFactory, CutTool) == 0x000030, "Member 'UPlaneCutOperatorFactory::CutTool' has a wrong offset!");

// Class MeshModelingTools.PlaneCutTool
// 0x00E0 (0x0170 - 0x0090)
class UPlaneCutTool final : public UMultiSelectionTool
{
public:
	uint8                                         Pad_13EB[0x8];                                     // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaneCutToolProperties*                BasicProperties;                                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAcceptOutputProperties*                AcceptProperties;                                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                CutPlaneOrigin;                                    // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13EC[0xC];                                     // 0x00B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CutPlaneOrientation;                               // 0x00C0(0x0010)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UMeshOpPreviewWithBackgroundCompute*> Previews;                                          // 0x00D0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UDynamicMeshReplacementChangeTarget*> MeshesToCut;                                       // 0x00E0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13ED[0x68];                                    // 0x00F0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformGizmo*                        PlaneTransformGizmo;                               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        PlaneTransformProxy;                               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13EE[0x8];                                     // 0x0168(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Cut();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneCutTool">();
	}
	static class UPlaneCutTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneCutTool>();
	}
};
static_assert(alignof(UPlaneCutTool) == 0x000010, "Wrong alignment on UPlaneCutTool");
static_assert(sizeof(UPlaneCutTool) == 0x000170, "Wrong size on UPlaneCutTool");
static_assert(offsetof(UPlaneCutTool, BasicProperties) == 0x000098, "Member 'UPlaneCutTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, AcceptProperties) == 0x0000A0, "Member 'UPlaneCutTool::AcceptProperties' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, CutPlaneOrigin) == 0x0000A8, "Member 'UPlaneCutTool::CutPlaneOrigin' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, CutPlaneOrientation) == 0x0000C0, "Member 'UPlaneCutTool::CutPlaneOrientation' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, Previews) == 0x0000D0, "Member 'UPlaneCutTool::Previews' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, MeshesToCut) == 0x0000E0, "Member 'UPlaneCutTool::MeshesToCut' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, PlaneTransformGizmo) == 0x000158, "Member 'UPlaneCutTool::PlaneTransformGizmo' has a wrong offset!");
static_assert(offsetof(UPlaneCutTool, PlaneTransformProxy) == 0x000160, "Member 'UPlaneCutTool::PlaneTransformProxy' has a wrong offset!");

// Class MeshModelingTools.PositionPlaneGizmoBuilder
// 0x0000 (0x0028 - 0x0028)
class UPositionPlaneGizmoBuilder final : public UInteractiveGizmoBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PositionPlaneGizmoBuilder">();
	}
	static class UPositionPlaneGizmoBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPositionPlaneGizmoBuilder>();
	}
};
static_assert(alignof(UPositionPlaneGizmoBuilder) == 0x000008, "Wrong alignment on UPositionPlaneGizmoBuilder");
static_assert(sizeof(UPositionPlaneGizmoBuilder) == 0x000028, "Wrong size on UPositionPlaneGizmoBuilder");

// Class MeshModelingTools.PositionPlaneGizmo
// 0x04E8 (0x0520 - 0x0038)
class alignas(0x10) UPositionPlaneGizmo final : public UInteractiveGizmo
{
public:
	uint8                                         Pad_13EF[0x50];                                    // 0x0038(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UPreviewMesh*                           CenterBallShape;                                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                      CenterBallMaterial;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F0[0x488];                                   // 0x0098(0x0488)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PositionPlaneGizmo">();
	}
	static class UPositionPlaneGizmo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPositionPlaneGizmo>();
	}
};
static_assert(alignof(UPositionPlaneGizmo) == 0x000010, "Wrong alignment on UPositionPlaneGizmo");
static_assert(sizeof(UPositionPlaneGizmo) == 0x000520, "Wrong size on UPositionPlaneGizmo");
static_assert(offsetof(UPositionPlaneGizmo, CenterBallShape) == 0x000088, "Member 'UPositionPlaneGizmo::CenterBallShape' has a wrong offset!");
static_assert(offsetof(UPositionPlaneGizmo, CenterBallMaterial) == 0x000090, "Member 'UPositionPlaneGizmo::CenterBallMaterial' has a wrong offset!");

// Class MeshModelingTools.PositionPlaneOnSceneInputBehavior
// 0x0030 (0x00B0 - 0x0080)
class UPositionPlaneOnSceneInputBehavior final : public UAnyButtonInputBehavior
{
public:
	uint8                                         Pad_13F1[0x30];                                    // 0x0080(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PositionPlaneOnSceneInputBehavior">();
	}
	static class UPositionPlaneOnSceneInputBehavior* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPositionPlaneOnSceneInputBehavior>();
	}
};
static_assert(alignof(UPositionPlaneOnSceneInputBehavior) == 0x000008, "Wrong alignment on UPositionPlaneOnSceneInputBehavior");
static_assert(sizeof(UPositionPlaneOnSceneInputBehavior) == 0x0000B0, "Wrong size on UPositionPlaneOnSceneInputBehavior");

// Class MeshModelingTools.RemeshMeshToolBuilder
// 0x0008 (0x0030 - 0x0028)
class URemeshMeshToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_13F2[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemeshMeshToolBuilder">();
	}
	static class URemeshMeshToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemeshMeshToolBuilder>();
	}
};
static_assert(alignof(URemeshMeshToolBuilder) == 0x000008, "Wrong alignment on URemeshMeshToolBuilder");
static_assert(sizeof(URemeshMeshToolBuilder) == 0x000030, "Wrong size on URemeshMeshToolBuilder");

// Class MeshModelingTools.RemeshMeshToolProperties
// 0x0018 (0x0078 - 0x0060)
class URemeshMeshToolProperties final : public URemeshProperties
{
public:
	int32                                         TargetTriangleCount;                               // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERemeshSmoothingType                          SmoothingType;                                     // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F3[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RemeshIterations;                                  // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDiscardAttributes;                                // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWireframe;                                    // 0x006D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGroupColors;                                  // 0x006E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseTargetEdgeLength;                              // 0x006F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TargetEdgeLength;                                  // 0x0070(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReproject;                                        // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F4[0x3];                                     // 0x0075(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemeshMeshToolProperties">();
	}
	static class URemeshMeshToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemeshMeshToolProperties>();
	}
};
static_assert(alignof(URemeshMeshToolProperties) == 0x000008, "Wrong alignment on URemeshMeshToolProperties");
static_assert(sizeof(URemeshMeshToolProperties) == 0x000078, "Wrong size on URemeshMeshToolProperties");
static_assert(offsetof(URemeshMeshToolProperties, TargetTriangleCount) == 0x000060, "Member 'URemeshMeshToolProperties::TargetTriangleCount' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, SmoothingType) == 0x000064, "Member 'URemeshMeshToolProperties::SmoothingType' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, RemeshIterations) == 0x000068, "Member 'URemeshMeshToolProperties::RemeshIterations' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, bDiscardAttributes) == 0x00006C, "Member 'URemeshMeshToolProperties::bDiscardAttributes' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, bShowWireframe) == 0x00006D, "Member 'URemeshMeshToolProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, bShowGroupColors) == 0x00006E, "Member 'URemeshMeshToolProperties::bShowGroupColors' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, bUseTargetEdgeLength) == 0x00006F, "Member 'URemeshMeshToolProperties::bUseTargetEdgeLength' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, TargetEdgeLength) == 0x000070, "Member 'URemeshMeshToolProperties::TargetEdgeLength' has a wrong offset!");
static_assert(offsetof(URemeshMeshToolProperties, bReproject) == 0x000074, "Member 'URemeshMeshToolProperties::bReproject' has a wrong offset!");

// Class MeshModelingTools.RemeshMeshTool
// 0x0178 (0x0200 - 0x0088)
class alignas(0x10) URemeshMeshTool final : public USingleSelectionTool
{
public:
	uint8                                         Pad_13F5[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class URemeshMeshToolProperties*              BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshStatisticsProperties*              MeshStatisticsProperties;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F6[0x158];                                   // 0x00A8(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemeshMeshTool">();
	}
	static class URemeshMeshTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemeshMeshTool>();
	}
};
static_assert(alignof(URemeshMeshTool) == 0x000010, "Wrong alignment on URemeshMeshTool");
static_assert(sizeof(URemeshMeshTool) == 0x000200, "Wrong size on URemeshMeshTool");
static_assert(offsetof(URemeshMeshTool, BasicProperties) == 0x000090, "Member 'URemeshMeshTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(URemeshMeshTool, MeshStatisticsProperties) == 0x000098, "Member 'URemeshMeshTool::MeshStatisticsProperties' has a wrong offset!");
static_assert(offsetof(URemeshMeshTool, Preview) == 0x0000A0, "Member 'URemeshMeshTool::Preview' has a wrong offset!");

// Class MeshModelingTools.RemoveOccludedTrianglesToolBuilder
// 0x0008 (0x0030 - 0x0028)
class URemoveOccludedTrianglesToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_13F7[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveOccludedTrianglesToolBuilder">();
	}
	static class URemoveOccludedTrianglesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveOccludedTrianglesToolBuilder>();
	}
};
static_assert(alignof(URemoveOccludedTrianglesToolBuilder) == 0x000008, "Wrong alignment on URemoveOccludedTrianglesToolBuilder");
static_assert(sizeof(URemoveOccludedTrianglesToolBuilder) == 0x000030, "Wrong size on URemoveOccludedTrianglesToolBuilder");

// Class MeshModelingTools.RemoveOccludedTrianglesToolProperties
// 0x0020 (0x0070 - 0x0050)
class URemoveOccludedTrianglesToolProperties final : public UInteractiveToolPropertySet
{
public:
	EOcclusionCalculationUIMode                   OcclusionTestMethod;                               // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOcclusionTriangleSamplingUIMode              TriangleSampling;                                  // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F8[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        WindingIsoValue;                                   // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddRandomRays;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AddTriangleSamples;                                // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlySelfOcclude;                                  // 0x0068(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13F9[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveOccludedTrianglesToolProperties">();
	}
	static class URemoveOccludedTrianglesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveOccludedTrianglesToolProperties>();
	}
};
static_assert(alignof(URemoveOccludedTrianglesToolProperties) == 0x000008, "Wrong alignment on URemoveOccludedTrianglesToolProperties");
static_assert(sizeof(URemoveOccludedTrianglesToolProperties) == 0x000070, "Wrong size on URemoveOccludedTrianglesToolProperties");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, OcclusionTestMethod) == 0x000050, "Member 'URemoveOccludedTrianglesToolProperties::OcclusionTestMethod' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, TriangleSampling) == 0x000051, "Member 'URemoveOccludedTrianglesToolProperties::TriangleSampling' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, WindingIsoValue) == 0x000058, "Member 'URemoveOccludedTrianglesToolProperties::WindingIsoValue' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, AddRandomRays) == 0x000060, "Member 'URemoveOccludedTrianglesToolProperties::AddRandomRays' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, AddTriangleSamples) == 0x000064, "Member 'URemoveOccludedTrianglesToolProperties::AddTriangleSamples' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesToolProperties, bOnlySelfOcclude) == 0x000068, "Member 'URemoveOccludedTrianglesToolProperties::bOnlySelfOcclude' has a wrong offset!");

// Class MeshModelingTools.RemoveOccludedTrianglesOperatorFactory
// 0x0018 (0x0040 - 0x0028)
class URemoveOccludedTrianglesOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_13FA[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class URemoveOccludedTrianglesTool*           Tool;                                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13FB[0x8];                                     // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveOccludedTrianglesOperatorFactory">();
	}
	static class URemoveOccludedTrianglesOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveOccludedTrianglesOperatorFactory>();
	}
};
static_assert(alignof(URemoveOccludedTrianglesOperatorFactory) == 0x000008, "Wrong alignment on URemoveOccludedTrianglesOperatorFactory");
static_assert(sizeof(URemoveOccludedTrianglesOperatorFactory) == 0x000040, "Wrong size on URemoveOccludedTrianglesOperatorFactory");
static_assert(offsetof(URemoveOccludedTrianglesOperatorFactory, Tool) == 0x000030, "Member 'URemoveOccludedTrianglesOperatorFactory::Tool' has a wrong offset!");

// Class MeshModelingTools.RemoveOccludedTrianglesTool
// 0x00C0 (0x0150 - 0x0090)
class alignas(0x10) URemoveOccludedTrianglesTool final : public UMultiSelectionTool
{
public:
	class URemoveOccludedTrianglesToolProperties* BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URemoveOccludedTrianglesAdvancedProperties* AdvancedProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshOpPreviewWithBackgroundCompute*> Previews;                                          // 0x00A0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPreviewMesh*>                   PreviewCopies;                                     // 0x00B0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_13FC[0x90];                                    // 0x00C0(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RemoveOccludedTrianglesTool">();
	}
	static class URemoveOccludedTrianglesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemoveOccludedTrianglesTool>();
	}
};
static_assert(alignof(URemoveOccludedTrianglesTool) == 0x000010, "Wrong alignment on URemoveOccludedTrianglesTool");
static_assert(sizeof(URemoveOccludedTrianglesTool) == 0x000150, "Wrong size on URemoveOccludedTrianglesTool");
static_assert(offsetof(URemoveOccludedTrianglesTool, BasicProperties) == 0x000090, "Member 'URemoveOccludedTrianglesTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesTool, AdvancedProperties) == 0x000098, "Member 'URemoveOccludedTrianglesTool::AdvancedProperties' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesTool, Previews) == 0x0000A0, "Member 'URemoveOccludedTrianglesTool::Previews' has a wrong offset!");
static_assert(offsetof(URemoveOccludedTrianglesTool, PreviewCopies) == 0x0000B0, "Member 'URemoveOccludedTrianglesTool::PreviewCopies' has a wrong offset!");

// Class MeshModelingTools.SmoothMeshToolBuilder
// 0x0008 (0x0030 - 0x0028)
class USmoothMeshToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_13FD[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SmoothMeshToolBuilder">();
	}
	static class USmoothMeshToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<USmoothMeshToolBuilder>();
	}
};
static_assert(alignof(USmoothMeshToolBuilder) == 0x000008, "Wrong alignment on USmoothMeshToolBuilder");
static_assert(sizeof(USmoothMeshToolBuilder) == 0x000030, "Wrong size on USmoothMeshToolBuilder");

// Class MeshModelingTools.TransformMeshesToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UTransformMeshesToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TransformMeshesToolBuilder">();
	}
	static class UTransformMeshesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransformMeshesToolBuilder>();
	}
};
static_assert(alignof(UTransformMeshesToolBuilder) == 0x000008, "Wrong alignment on UTransformMeshesToolBuilder");
static_assert(sizeof(UTransformMeshesToolBuilder) == 0x000028, "Wrong size on UTransformMeshesToolBuilder");

// Class MeshModelingTools.TransformMeshesToolProperties
// 0x0008 (0x0058 - 0x0050)
class UTransformMeshesToolProperties final : public UInteractiveToolPropertySet
{
public:
	ETransformMeshesTransformMode                 TransformMode;                                     // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSetPivot;                                         // 0x0051(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableSnapDragging;                               // 0x0052(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETransformMeshesSnapDragSource                SnapDragSource;                                    // 0x0053(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETransformMeshesSnapDragRotationMode          RotationMode;                                      // 0x0054(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_13FE[0x3];                                     // 0x0055(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TransformMeshesToolProperties">();
	}
	static class UTransformMeshesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransformMeshesToolProperties>();
	}
};
static_assert(alignof(UTransformMeshesToolProperties) == 0x000008, "Wrong alignment on UTransformMeshesToolProperties");
static_assert(sizeof(UTransformMeshesToolProperties) == 0x000058, "Wrong size on UTransformMeshesToolProperties");
static_assert(offsetof(UTransformMeshesToolProperties, TransformMode) == 0x000050, "Member 'UTransformMeshesToolProperties::TransformMode' has a wrong offset!");
static_assert(offsetof(UTransformMeshesToolProperties, bSetPivot) == 0x000051, "Member 'UTransformMeshesToolProperties::bSetPivot' has a wrong offset!");
static_assert(offsetof(UTransformMeshesToolProperties, bEnableSnapDragging) == 0x000052, "Member 'UTransformMeshesToolProperties::bEnableSnapDragging' has a wrong offset!");
static_assert(offsetof(UTransformMeshesToolProperties, SnapDragSource) == 0x000053, "Member 'UTransformMeshesToolProperties::SnapDragSource' has a wrong offset!");
static_assert(offsetof(UTransformMeshesToolProperties, RotationMode) == 0x000054, "Member 'UTransformMeshesToolProperties::RotationMode' has a wrong offset!");

// Class MeshModelingTools.TransformMeshesTool
// 0x00B0 (0x0140 - 0x0090)
class alignas(0x10) UTransformMeshesTool final : public UMultiSelectionTool
{
public:
	uint8                                         Pad_13FF[0x8];                                     // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformMeshesToolProperties*         TransformProps;                                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1400[0x10];                                    // 0x00A0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransformMeshesTarget>         ActiveGizmos;                                      // 0x00B0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1401[0x80];                                    // 0x00C0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TransformMeshesTool">();
	}
	static class UTransformMeshesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransformMeshesTool>();
	}
};
static_assert(alignof(UTransformMeshesTool) == 0x000010, "Wrong alignment on UTransformMeshesTool");
static_assert(sizeof(UTransformMeshesTool) == 0x000140, "Wrong size on UTransformMeshesTool");
static_assert(offsetof(UTransformMeshesTool, TransformProps) == 0x000098, "Member 'UTransformMeshesTool::TransformProps' has a wrong offset!");
static_assert(offsetof(UTransformMeshesTool, ActiveGizmos) == 0x0000B0, "Member 'UTransformMeshesTool::ActiveGizmos' has a wrong offset!");

// Class MeshModelingTools.UVProjectionToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UUVProjectionToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_1402[0x8];                                     // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionToolBuilder">();
	}
	static class UUVProjectionToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionToolBuilder>();
	}
};
static_assert(alignof(UUVProjectionToolBuilder) == 0x000008, "Wrong alignment on UUVProjectionToolBuilder");
static_assert(sizeof(UUVProjectionToolBuilder) == 0x000030, "Wrong size on UUVProjectionToolBuilder");

// Class MeshModelingTools.UVProjectionToolProperties
// 0x0028 (0x0078 - 0x0050)
class UUVProjectionToolProperties final : public UInteractiveToolPropertySet
{
public:
	EUVProjectionMethod                           UVProjectionMethod;                                // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1403[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ProjectionPrimitiveScale;                          // 0x0054(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CylinderProjectToTopOrBottomAngleThreshold;        // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              UVScale;                                           // 0x0064(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              UVOffset;                                          // 0x006C(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldSpaceUVScale;                                // 0x0074(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1404[0x3];                                     // 0x0075(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionToolProperties">();
	}
	static class UUVProjectionToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionToolProperties>();
	}
};
static_assert(alignof(UUVProjectionToolProperties) == 0x000008, "Wrong alignment on UUVProjectionToolProperties");
static_assert(sizeof(UUVProjectionToolProperties) == 0x000078, "Wrong size on UUVProjectionToolProperties");
static_assert(offsetof(UUVProjectionToolProperties, UVProjectionMethod) == 0x000050, "Member 'UUVProjectionToolProperties::UVProjectionMethod' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, ProjectionPrimitiveScale) == 0x000054, "Member 'UUVProjectionToolProperties::ProjectionPrimitiveScale' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, CylinderProjectToTopOrBottomAngleThreshold) == 0x000060, "Member 'UUVProjectionToolProperties::CylinderProjectToTopOrBottomAngleThreshold' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, UVScale) == 0x000064, "Member 'UUVProjectionToolProperties::UVScale' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, UVOffset) == 0x00006C, "Member 'UUVProjectionToolProperties::UVOffset' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, bWorldSpaceUVScale) == 0x000074, "Member 'UUVProjectionToolProperties::bWorldSpaceUVScale' has a wrong offset!");

// Class MeshModelingTools.UVProjectionOperatorFactory
// 0x0018 (0x0040 - 0x0028)
class UUVProjectionOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_1405[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUVProjectionTool*                      Tool;                                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1406[0x8];                                     // 0x0038(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionOperatorFactory">();
	}
	static class UUVProjectionOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionOperatorFactory>();
	}
};
static_assert(alignof(UUVProjectionOperatorFactory) == 0x000008, "Wrong alignment on UUVProjectionOperatorFactory");
static_assert(sizeof(UUVProjectionOperatorFactory) == 0x000040, "Wrong size on UUVProjectionOperatorFactory");
static_assert(offsetof(UUVProjectionOperatorFactory, Tool) == 0x000030, "Member 'UUVProjectionOperatorFactory::Tool' has a wrong offset!");

// Class MeshModelingTools.UVProjectionTool
// 0x0190 (0x0220 - 0x0090)
class alignas(0x10) UUVProjectionTool final : public UMultiSelectionTool
{
public:
	class UUVProjectionToolProperties*            BasicProperties;                                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUVProjectionAdvancedProperties*        AdvancedProperties;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExistingMeshMaterialProperties*        MaterialSettings;                                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshOpPreviewWithBackgroundCompute*> Previews;                                          // 0x00A8(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               CheckerMaterial;                                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTransformGizmo*>                TransformGizmos;                                   // 0x00C0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTransformProxy*>                TransformProxies;                                  // 0x00D0(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1407[0x140];                                   // 0x00E0(0x0140)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionTool">();
	}
	static class UUVProjectionTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionTool>();
	}
};
static_assert(alignof(UUVProjectionTool) == 0x000010, "Wrong alignment on UUVProjectionTool");
static_assert(sizeof(UUVProjectionTool) == 0x000220, "Wrong size on UUVProjectionTool");
static_assert(offsetof(UUVProjectionTool, BasicProperties) == 0x000090, "Member 'UUVProjectionTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, AdvancedProperties) == 0x000098, "Member 'UUVProjectionTool::AdvancedProperties' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, MaterialSettings) == 0x0000A0, "Member 'UUVProjectionTool::MaterialSettings' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, Previews) == 0x0000A8, "Member 'UUVProjectionTool::Previews' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, CheckerMaterial) == 0x0000B8, "Member 'UUVProjectionTool::CheckerMaterial' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, TransformGizmos) == 0x0000C0, "Member 'UUVProjectionTool::TransformGizmos' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, TransformProxies) == 0x0000D0, "Member 'UUVProjectionTool::TransformProxies' has a wrong offset!");

// Class MeshModelingTools.WeldMeshEdgesToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UWeldMeshEdgesToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeldMeshEdgesToolBuilder">();
	}
	static class UWeldMeshEdgesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeldMeshEdgesToolBuilder>();
	}
};
static_assert(alignof(UWeldMeshEdgesToolBuilder) == 0x000008, "Wrong alignment on UWeldMeshEdgesToolBuilder");
static_assert(sizeof(UWeldMeshEdgesToolBuilder) == 0x000028, "Wrong size on UWeldMeshEdgesToolBuilder");

// Class MeshModelingTools.WeldMeshEdgesTool
// 0x0278 (0x0300 - 0x0088)
class UWeldMeshEdgesTool final : public USingleSelectionTool
{
public:
	float                                         Tolerance;                                         // 0x0088(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bOnlyUnique;                                       // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1408[0x273];                                   // 0x008D(0x0273)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeldMeshEdgesTool">();
	}
	static class UWeldMeshEdgesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeldMeshEdgesTool>();
	}
};
static_assert(alignof(UWeldMeshEdgesTool) == 0x000008, "Wrong alignment on UWeldMeshEdgesTool");
static_assert(sizeof(UWeldMeshEdgesTool) == 0x000300, "Wrong size on UWeldMeshEdgesTool");
static_assert(offsetof(UWeldMeshEdgesTool, Tolerance) == 0x000088, "Member 'UWeldMeshEdgesTool::Tolerance' has a wrong offset!");
static_assert(offsetof(UWeldMeshEdgesTool, bOnlyUnique) == 0x00008C, "Member 'UWeldMeshEdgesTool::bOnlyUnique' has a wrong offset!");

}

