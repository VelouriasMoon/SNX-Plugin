#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessVolumeAccess

#include "Basic.hpp"

#include "BP_PostProcessVolumeAccess_classes.hpp"
#include "BP_PostProcessVolumeAccess_parameters.hpp"


namespace SDK
{

// Function BP_PostProcessVolumeAccess.BP_PostProcessVolumeAccess_C.ExecuteUbergraph_BP_PostProcessVolumeAccess
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PostProcessVolumeAccess_C::ExecuteUbergraph_BP_PostProcessVolumeAccess(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessVolumeAccess_C", "ExecuteUbergraph_BP_PostProcessVolumeAccess");

	Params::BP_PostProcessVolumeAccess_C_ExecuteUbergraph_BP_PostProcessVolumeAccess Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PostProcessVolumeAccess.BP_PostProcessVolumeAccess_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PostProcessVolumeAccess_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessVolumeAccess_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PostProcessVolumeAccess.BP_PostProcessVolumeAccess_C.GetPostProcessVolume
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APostProcessVolume*               Param_PostProcessVolume                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PostProcessVolumeAccess_C::GetPostProcessVolume(class APostProcessVolume** Param_PostProcessVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PostProcessVolumeAccess_C", "GetPostProcessVolume");

	Params::BP_PostProcessVolumeAccess_C_GetPostProcessVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_PostProcessVolume != nullptr)
		*Param_PostProcessVolume = Parms.Param_PostProcessVolume;
}

}

