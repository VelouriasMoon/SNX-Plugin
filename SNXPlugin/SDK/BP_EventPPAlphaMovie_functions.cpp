#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventPPAlphaMovie

#include "Basic.hpp"

#include "BP_EventPPAlphaMovie_classes.hpp"
#include "BP_EventPPAlphaMovie_parameters.hpp"


namespace SDK
{

// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.ExecuteUbergraph_BP_EventPPAlphaMovie
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::ExecuteUbergraph_BP_EventPPAlphaMovie(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "ExecuteUbergraph_BP_EventPPAlphaMovie");

	Params::BP_EventPPAlphaMovie_C_ExecuteUbergraph_BP_EventPPAlphaMovie Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.LoopMovie
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::LoopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "LoopMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Stop
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.setupMovieManagerProperties
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::SetupMovieManagerProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "setupMovieManagerProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.OnStatusChanged(manaComp)
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EManaComponentStatus                    Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UManaComponent*                   ManaComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::OnStatusChanged_manaComp_(EManaComponentStatus Status, class UManaComponent* ManaComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "OnStatusChanged(manaComp)");

	Params::BP_EventPPAlphaMovie_C_OnStatusChanged_manaComp_ Parms{};

	Parms.Status = Status;
	Parms.ManaComponent = ManaComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.EndPlayDynamicCutScene
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::EndPlayDynamicCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "EndPlayDynamicCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.UpdateDynamicCutScene
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::UpdateDynamicCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "UpdateDynamicCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.BeginPlayDynamicCutScene
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::BeginPlayDynamicCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "BeginPlayDynamicCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.EndPlayStaticCutScene
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::EndPlayStaticCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "EndPlayStaticCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.UpdateStaticCutScene
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::UpdateStaticCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "UpdateStaticCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.BeginPlayStaticCutScene
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::BeginPlayStaticCutScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "BeginPlayStaticCutScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "ReceiveEndPlay");

	Params::BP_EventPPAlphaMovie_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Seek
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FrameNumber                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::Seek(int32 FrameNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Seek");

	Params::BP_EventPPAlphaMovie_C_Seek Parms{};

	Parms.FrameNumber = FrameNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Prepare
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::Prepare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Prepare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Play
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::Play()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Play");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Rewind
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::Rewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Rewind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.Start
// (BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "ReceiveTick");

	Params::BP_EventPPAlphaMovie_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.playAlphaMovie
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::PlayAlphaMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "playAlphaMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.clearPrepareFlags
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::ClearPrepareFlags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "clearPrepareFlags");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.applyMovieSource
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventPPAlphaMovie_C::ApplyMovieSource(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "applyMovieSource");

	Params::BP_EventPPAlphaMovie_C_ApplyMovieSource Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.SetMovieSource
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UManaSource*                      NewMovieSource                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::SetMovieSource(class UManaSource* NewMovieSource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "SetMovieSource");

	Params::BP_EventPPAlphaMovie_C_SetMovieSource Parms{};

	Parms.NewMovieSource = NewMovieSource;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.prepareAlphaMovie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventPPAlphaMovie_C::PrepareAlphaMovie(bool* Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "prepareAlphaMovie");

	Params::BP_EventPPAlphaMovie_C_PrepareAlphaMovie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Succeeded != nullptr)
		*Succeeded = Parms.Succeeded;
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.seekAlphaMovie
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SeekFrameNumber                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::SeekAlphaMovie(int32 SeekFrameNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "seekAlphaMovie");

	Params::BP_EventPPAlphaMovie_C_SeekAlphaMovie Parms{};

	Parms.SeekFrameNumber = SeekFrameNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.setBlendModeMul
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::SetBlendModeMul()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "setBlendModeMul");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.setBlendModeAdd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::SetBlendModeAdd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "setBlendModeAdd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.setBlendModeSub
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::SetBlendModeSub()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "setBlendModeSub");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.invisibleForManner
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::InvisibleForManner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "invisibleForManner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.LoadMovieFromPath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Path                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EventPPAlphaMovie_C::LoadMovieFromPath(const class FString& Path)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "LoadMovieFromPath");

	Params::BP_EventPPAlphaMovie_C_LoadMovieFromPath Parms{};

	Parms.Path = std::move(Path);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.MovieManagerHasMovie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventPPAlphaMovie_C::MovieManagerHasMovie(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "MovieManagerHasMovie");

	Params::BP_EventPPAlphaMovie_C_MovieManagerHasMovie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.MovieManagerLoadedMovie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EventPPAlphaMovie_C::MovieManagerLoadedMovie(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "MovieManagerLoadedMovie");

	Params::BP_EventPPAlphaMovie_C_MovieManagerLoadedMovie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.EditorStopMovie
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::EditorStopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "EditorStopMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EventPPAlphaMovie.BP_EventPPAlphaMovie_C.StopMovie
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EventPPAlphaMovie_C::StopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EventPPAlphaMovie_C", "StopMovie");

	UObject::ProcessEvent(Func, nullptr);
}

}

