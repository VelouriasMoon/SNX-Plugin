#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapGimmickObjectBase

#include "Basic.hpp"

#include "BP_MapGimmickObjectBase_classes.hpp"
#include "BP_MapGimmickObjectBase_parameters.hpp"


namespace SDK
{

// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ExecuteUbergraph_BP_MapGimmickObjectBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ExecuteUbergraph_BP_MapGimmickObjectBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ExecuteUbergraph_BP_MapGimmickObjectBase");

	Params::BP_MapGimmickObjectBase_C_ExecuteUbergraph_BP_MapGimmickObjectBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ReceiveEndPlay");

	Params::BP_MapGimmickObjectBase_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DelayFadeOutAndDestloy
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::DelayFadeOutAndDestloy(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DelayFadeOutAndDestloy");

	Params::BP_MapGimmickObjectBase_C_DelayFadeOutAndDestloy Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckUseSasGateDelay
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::CheckUseSasGateDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CheckUseSasGateDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeUniqueCameraParam
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::InitializeUniqueCameraParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "InitializeUniqueCameraParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DelayIconOn
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DelayIconOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DelayIconOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.FadeOutAndDestroy
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::FadeOutAndDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "FadeOutAndDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EventInitializePsychicObject
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EventInitializePsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EventInitializePsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnStateEndFunction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::OnStateEndFunction(class FName StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnStateEndFunction");

	Params::BP_MapGimmickObjectBase_C_OnStateEndFunction Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnStateBeginFunction
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::OnStateBeginFunction(class FName StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnStateBeginFunction");

	Params::BP_MapGimmickObjectBase_C_OnStateBeginFunction Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ReceiveTick");

	Params::BP_MapGimmickObjectBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EventCameraEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EventCameraEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EventCameraEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EventCameraStart
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EventCameraStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EventCameraStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EndPlaybackCameraSequence
// (BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EndPlaybackCameraSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EndPlaybackCameraSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EnableAttackCollision
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::EnableAttackCollision(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EnableAttackCollision");

	Params::BP_MapGimmickObjectBase_C_EnableAttackCollision Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EnablePhysics
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::EnablePhysics(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EnablePhysics");

	Params::BP_MapGimmickObjectBase_C_EnablePhysics Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DelayAttackEffectOff
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::DelayAttackEffectOff(float Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DelayAttackEffectOff");

	Params::BP_MapGimmickObjectBase_C_DelayAttackEffectOff Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeStateInCancelWithDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelaySec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ChangeStateInCancelWithDelay(float DelaySec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ChangeStateInCancelWithDelay");

	Params::BP_MapGimmickObjectBase_C_ChangeStateInCancelWithDelay Parms{};

	Parms.DelaySec = DelaySec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeToNextStateWithDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelaySec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ChangeToNextStateWithDelay(float DelaySec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ChangeToNextStateWithDelay");

	Params::BP_MapGimmickObjectBase_C_ChangeToNextStateWithDelay Parms{};

	Parms.DelaySec = DelaySec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ChangeStateWithDelay
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DelaySec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             NextStateName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ChangeStateWithDelay(float DelaySec, class FName NextStateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ChangeStateWithDelay");

	Params::BP_MapGimmickObjectBase_C_ChangeStateWithDelay Parms{};

	Parms.DelaySec = DelaySec;
	Parms.NextStateName = NextStateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_mesh_only                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetPsychicObjectVisibility(bool Flag_in, bool Is_mesh_only)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectVisibility");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectVisibility Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Is_mesh_only = Is_mesh_only;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetPsychicObjectActive(bool Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectActive");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectActive Parms{};

	Parms.Param_IsActive = Param_IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetTownSetting
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetTownSetting(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetTownSetting");

	Params::BP_MapGimmickObjectBase_C_SetTownSetting Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetMaterialParameter
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ParamValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::SetMaterialParameter(class FName ParamName, float ParamValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetMaterialParameter");

	Params::BP_MapGimmickObjectBase_C_SetMaterialParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.ParamValue = ParamValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.FadeOutline__UpdateFunc
// (BlueprintEvent)

void ABP_MapGimmickObjectBase_C::FadeOutline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "FadeOutline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.FadeOutline__FinishedFunc
// (BlueprintEvent)

void ABP_MapGimmickObjectBase_C::FadeOutline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "FadeOutline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.MakeStateFromDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::MakeStateFromDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "MakeStateFromDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::InitializeIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "InitializeIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetIconVisible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCancel                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetIconVisible(bool Visible, bool IsSuccess, bool IsCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetIconVisible");

	Params::BP_MapGimmickObjectBase_C_SetIconVisible Parms{};

	Parms.Visible = Visible;
	Parms.IsSuccess = IsSuccess;
	Parms.IsCancel = IsCancel;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetSequencePlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSLevelSequenceActor*            Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequencePlayer*             Player                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Error                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::GetSequencePlayer(class FName StateName, class ARSLevelSequenceActor** Actor, class ULevelSequencePlayer** Player, bool* Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetSequencePlayer");

	Params::BP_MapGimmickObjectBase_C_GetSequencePlayer Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	if (Player != nullptr)
		*Player = Parms.Player;

	if (Error != nullptr)
		*Error = Parms.Error;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnFinishSequenceEnablePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnFinishSequenceEnablePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnFinishSequenceEnablePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayStateSequenceWithCallback
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       OnFinishedFunc                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// bool                                    Error                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::PlayStateSequenceWithCallback(class FName StateName, const TDelegate<void()>& OnFinishedFunc, bool* Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayStateSequenceWithCallback");

	Params::BP_MapGimmickObjectBase_C_PlayStateSequenceWithCallback Parms{};

	Parms.StateName = StateName;
	Parms.OnFinishedFunc = OnFinishedFunc;

	UObject::ProcessEvent(Func, &Parms);

	if (Error != nullptr)
		*Error = Parms.Error;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayStateSequence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::PlayStateSequence(class FName StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayStateSequence");

	Params::BP_MapGimmickObjectBase_C_PlayStateSequence Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CreateRSLevelSequencerPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMovieSceneSequencePlaybackSettingsSettings                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class ARSLevelSequenceActor*            Actor                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequencePlayer*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class ULevelSequencePlayer* ABP_MapGimmickObjectBase_C::CreateRSLevelSequencerPlayer(class ULevelSequence* LevelSequence, const struct FMovieSceneSequencePlaybackSettings& Settings, class ARSLevelSequenceActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CreateRSLevelSequencerPlayer");

	Params::BP_MapGimmickObjectBase_C_CreateRSLevelSequencerPlayer Parms{};

	Parms.LevelSequence = LevelSequence;
	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeSequenceUniqueActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::InitializeSequenceUniqueActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "InitializeSequenceUniqueActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.FinishPlayProc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::FinishPlayProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "FinishPlayProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetupSequencePlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::SetupSequencePlay(class FName StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetupSequencePlay");

	Params::BP_MapGimmickObjectBase_C_SetupSequencePlay Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetHUD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUDMainGame_C*                   Param_HudMain                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetHUD(class AHUDMainGame_C** Param_HudMain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetHUD");

	Params::BP_MapGimmickObjectBase_C_GetHUD Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HudMain != nullptr)
		*Param_HudMain = Parms.Param_HudMain;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateWidgetGauge
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::UpdateWidgetGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "UpdateWidgetGauge");

	Params::BP_MapGimmickObjectBase_C_UpdateWidgetGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateBeginCameraInterp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       CurTrans                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       InterpTrans                                            (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::UpdateBeginCameraInterp(const struct FTransform& CurTrans, struct FTransform* InterpTrans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "UpdateBeginCameraInterp");

	Params::BP_MapGimmickObjectBase_C_UpdateBeginCameraInterp Parms{};

	Parms.CurTrans = std::move(CurTrans);

	UObject::ProcessEvent(Func, &Parms);

	if (InterpTrans != nullptr)
		*InterpTrans = std::move(Parms.InterpTrans);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateSeqRoot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       CurTrans                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       InterpTrans                                            (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::UpdateSeqRoot(const struct FTransform& CurTrans, struct FTransform* InterpTrans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "UpdateSeqRoot");

	Params::BP_MapGimmickObjectBase_C_UpdateSeqRoot Parms{};

	Parms.CurTrans = std::move(CurTrans);

	UObject::ProcessEvent(Func, &Parms);

	if (InterpTrans != nullptr)
		*InterpTrans = std::move(Parms.InterpTrans);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetCurrentChargeRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetCurrentChargeRate(float* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetCurrentChargeRate");

	Params::BP_MapGimmickObjectBase_C_GetCurrentChargeRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetFocalLengthFromFovDegree
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SensorWidth                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FovDegree                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FocalLength                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetFocalLengthFromFovDegree(float SensorWidth, float FovDegree, float* FocalLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetFocalLengthFromFovDegree");

	Params::BP_MapGimmickObjectBase_C_GetFocalLengthFromFovDegree Parms{};

	Parms.SensorWidth = SensorWidth;
	Parms.FovDegree = FovDegree;

	UObject::ProcessEvent(Func, &Parms);

	if (FocalLength != nullptr)
		*FocalLength = Parms.FocalLength;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetCineCameraFov
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FovDegree                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::SetCineCameraFov(float FovDegree)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetCineCameraFov");

	Params::BP_MapGimmickObjectBase_C_SetCineCameraFov Parms{};

	Parms.FovDegree = FovDegree;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetFocalLengthFromFovRadian
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SensorWidth                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FovRadian                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FocalLength                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetFocalLengthFromFovRadian(float SensorWidth, float FovRadian, float* FocalLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetFocalLengthFromFovRadian");

	Params::BP_MapGimmickObjectBase_C_GetFocalLengthFromFovRadian Parms{};

	Parms.SensorWidth = SensorWidth;
	Parms.FovRadian = FovRadian;

	UObject::ProcessEvent(Func, &Parms);

	if (FocalLength != nullptr)
		*FocalLength = Parms.FocalLength;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginTriggerVolumeOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnBeginTriggerVolumeOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnBeginTriggerVolumeOverlap");

	Params::BP_MapGimmickObjectBase_C_OnBeginTriggerVolumeOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndTriggerVolumeOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnEndTriggerVolumeOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnEndTriggerVolumeOverlap");

	Params::BP_MapGimmickObjectBase_C_OnEndTriggerVolumeOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetStateLevelSequence
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             StateName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ULevelSequence*                   Sequence                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::GetStateLevelSequence(const class FName& StateName, class ULevelSequence** Sequence, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetStateLevelSequence");

	Params::BP_MapGimmickObjectBase_C_GetStateLevelSequence Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetSeqCameraReverceTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RevTrans                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::GetSeqCameraReverceTransform(struct FTransform* RevTrans)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetSeqCameraReverceTransform");

	Params::BP_MapGimmickObjectBase_C_GetSeqCameraReverceTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RevTrans != nullptr)
		*RevTrans = std::move(Parms.RevTrans);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.BackupBeforeSequencePlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::BackupBeforeSequencePlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "BackupBeforeSequencePlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsExistStateLevelSequence
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Exist                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsExistStateLevelSequence(class FName StateName, bool* Exist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsExistStateLevelSequence");

	Params::BP_MapGimmickObjectBase_C_IsExistStateLevelSequence Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);

	if (Exist != nullptr)
		*Exist = Parms.Exist;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnAnimationEndDefaultFunc
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnAnimationEndDefaultFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnAnimationEndDefaultFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.StopStateSequence
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::StopStateSequence(class FName StateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "StopStateSequence");

	Params::BP_MapGimmickObjectBase_C_StopStateSequence Parms{};

	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayFinishAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::PlayFinishAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayFinishAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayFinishAnimationRaw
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMapGimmickFinishDir                    Dir                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::PlayFinishAnimationRaw(EMapGimmickFinishDir Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayFinishAnimationRaw");

	Params::BP_MapGimmickObjectBase_C_PlayFinishAnimationRaw Parms{};

	Parms.Dir = Dir;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerToGimmickDir
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMapGimmickFinishDir                    Dir                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPlayerToGimmickDir(EMapGimmickFinishDir* Dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerToGimmickDir");

	Params::BP_MapGimmickObjectBase_C_GetPlayerToGimmickDir Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dir != nullptr)
		*Dir = Parms.Dir;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DefaultChargeFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EMapGimmickStatusFunc                   Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StateName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::DefaultChargeFunc(EMapGimmickStatusFunc Status, float DeltaSeconds, class FName StateName, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DefaultChargeFunc");

	Params::BP_MapGimmickObjectBase_C_DefaultChargeFunc Parms{};

	Parms.Status = Status;
	Parms.DeltaSeconds = DeltaSeconds;
	Parms.StateName = StateName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.UpdateSequenceCameraFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::UpdateSequenceCameraFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "UpdateSequenceCameraFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.RegisterToManager
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::RegisterToManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "RegisterToManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerFinishAnimation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPlayerFinishAnimation(class UAnimMontage** AnimMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerFinishAnimation");

	Params::BP_MapGimmickObjectBase_C_GetPlayerFinishAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimMontage != nullptr)
		*AnimMontage = Parms.AnimMontage;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetOutline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetOutline(bool On)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetOutline");

	Params::BP_MapGimmickObjectBase_C_SetOutline Parms{};

	Parms.On = On;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetEffectFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetEffectFocus(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetEffectFocus");

	Params::BP_MapGimmickObjectBase_C_SetEffectFocus Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetFadeoutMIParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Fade                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::SetFadeoutMIParameter(float Fade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetFadeoutMIParameter");

	Params::BP_MapGimmickObjectBase_C_SetFadeoutMIParameter Parms{};

	Parms.Fade = Fade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.MoveShock1
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::MoveShock1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "MoveShock1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugCallActivate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugCallActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugCallActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.StartCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::StartCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "StartCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EndCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_cancel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::EndCamera(bool Force, bool Capture_cancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EndCamera");

	Params::BP_MapGimmickObjectBase_C_EndCamera Parms{};

	Parms.Force = Force;
	Parms.Capture_cancel = Capture_cancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::ResetCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ResetCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ShakeCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   No                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::ShakeCamera(int32 No)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ShakeCamera");

	Params::BP_MapGimmickObjectBase_C_ShakeCamera Parms{};

	Parms.No = No;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayEffectBackgrounds
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::PlayEffectBackgrounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayEffectBackgrounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugTestEffectCaptureStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugTestEffectCaptureStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugTestEffectCaptureStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugTestEffectCaptureEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugTestEffectCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugTestEffectCaptureEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugTestEffectAttackStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugTestEffectAttackStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugTestEffectAttackStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugTestEffectAttackEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugTestEffectAttackEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugTestEffectAttackEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectAttackStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectAttackStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectAttackStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectAttackEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectAttackEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectAttackEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectCaptureStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectCaptureStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectCaptureStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectCaptureEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectCaptureEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectCaptureEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectCaptureStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectCaptureStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectCaptureStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayExtraParticles
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::PlayExtraParticles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayExtraParticles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugStateReset
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugStateReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugStateReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetCameraLerp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::ResetCameraLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ResetCameraLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugEnableUse
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugEnableUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugEnableUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.AddUseTime
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::AddUseTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "AddUseTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnGimmickUse
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnGimmickUse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnGimmickUse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayHintBrainTalk
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           GimmickBrainTalkId                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBrainTalkGimmickCondition              BrainTalkConditionId                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::PlayHintBrainTalk(const class FString& GimmickBrainTalkId, EBrainTalkGimmickCondition BrainTalkConditionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayHintBrainTalk");

	Params::BP_MapGimmickObjectBase_C_PlayHintBrainTalk Parms{};

	Parms.GimmickBrainTalkId = std::move(GimmickBrainTalkId);
	Parms.BrainTalkConditionId = BrainTalkConditionId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetHintBrainTalkWaitTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           GimmickBrainTalkId                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBrainTalkGimmickCondition              BrainTalkConditionId                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaitSec                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetHintBrainTalkWaitTime(const class FString& GimmickBrainTalkId, EBrainTalkGimmickCondition BrainTalkConditionId, float* WaitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetHintBrainTalkWaitTime");

	Params::BP_MapGimmickObjectBase_C_GetHintBrainTalkWaitTime Parms{};

	Parms.GimmickBrainTalkId = std::move(GimmickBrainTalkId);
	Parms.BrainTalkConditionId = BrainTalkConditionId;

	UObject::ProcessEvent(Func, &Parms);

	if (WaitSec != nullptr)
		*WaitSec = Parms.WaitSec;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlayHintBrainTalkWithWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           GimmickBrainTalkId                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EBrainTalkGimmickCondition              BrainTalkConditionId                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WaitSec                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::PlayHintBrainTalkWithWait(const class FString& GimmickBrainTalkId, EBrainTalkGimmickCondition BrainTalkConditionId, float WaitSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlayHintBrainTalkWithWait");

	Params::BP_MapGimmickObjectBase_C_PlayHintBrainTalkWithWait Parms{};

	Parms.GimmickBrainTalkId = std::move(GimmickBrainTalkId);
	Parms.BrainTalkConditionId = BrainTalkConditionId;
	Parms.WaitSec = WaitSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.PlaySE
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundAtomCue*                    Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::PlaySE(class USoundAtomCue* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "PlaySE");

	Params::BP_MapGimmickObjectBase_C_PlaySE Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.Set Icon Gauge Enable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::Set_Icon_Gauge_Enable(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "Set Icon Gauge Enable");

	Params::BP_MapGimmickObjectBase_C_Set_Icon_Gauge_Enable Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugTestEffectStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugTestEffectStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugTestEffectStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.EffectAttackStop
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::EffectAttackStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "EffectAttackStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcFinishAnimMoveDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::CalcFinishAnimMoveDistance(float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CalcFinishAnimMoveDistance");

	Params::BP_MapGimmickObjectBase_C_CalcFinishAnimMoveDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetActorToPlayerDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetActorToPlayerDistance(float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetActorToPlayerDistance");

	Params::BP_MapGimmickObjectBase_C_GetActorToPlayerDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerRootMoveScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::SetPlayerRootMoveScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerRootMoveScale");

	Params::BP_MapGimmickObjectBase_C_SetPlayerRootMoveScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsInCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Capturing                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsInCapture(bool* Capturing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsInCapture");

	Params::BP_MapGimmickObjectBase_C_IsInCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Capturing != nullptr)
		*Capturing = Parms.Capturing;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetNotUseVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetNotUseVisible(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetNotUseVisible");

	Params::BP_MapGimmickObjectBase_C_SetNotUseVisible Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginOverlapBossMapGimmickArea
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnBeginOverlapBossMapGimmickArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnBeginOverlapBossMapGimmickArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndOverlapBossMapGimmickArea
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnEndOverlapBossMapGimmickArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnEndOverlapBossMapGimmickArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetNearCameraParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    In                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetNearCameraParameter(bool In)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetNearCameraParameter");

	Params::BP_MapGimmickObjectBase_C_SetNearCameraParameter Parms{};

	Parms.In = In;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcAnimMoveDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::CalcAnimMoveDistance(class UAnimMontage* Anim, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CalcAnimMoveDistance");

	Params::BP_MapGimmickObjectBase_C_CalcAnimMoveDistance Parms{};

	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginOverlapTriggerCommon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnBeginOverlapTriggerCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnBeginOverlapTriggerCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndOverlapTriggerCommon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::OnEndOverlapTriggerCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnEndOverlapTriggerCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.Check Use Gate by Sas
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::Check_Use_Gate_by_Sas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "Check Use Gate by Sas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.AdjustPlayRateSameAsPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::AdjustPlayRateSameAsPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "AdjustPlayRateSameAsPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetCameraControl
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnStart                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnEnd                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::SetCameraControl(bool OnStart, bool OnEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetCameraControl");

	Params::BP_MapGimmickObjectBase_C_SetCameraControl Parms{};

	Parms.OnStart = OnStart;
	Parms.OnEnd = OnEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginForceIconVisibleOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnBeginForceIconVisibleOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnBeginForceIconVisibleOverlap");

	Params::BP_MapGimmickObjectBase_C_OnBeginForceIconVisibleOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndForceIconVisibleOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnEndForceIconVisibleOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnEndForceIconVisibleOverlap");

	Params::BP_MapGimmickObjectBase_C_OnEndForceIconVisibleOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetLimitIconVisible
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Limit                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSuccess                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetLimitIconVisible(bool Visible, bool Limit, bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetLimitIconVisible");

	Params::BP_MapGimmickObjectBase_C_SetLimitIconVisible Parms{};

	Parms.Visible = Visible;
	Parms.Limit = Limit;
	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnBeginUseLimitIconVisibleOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnBeginUseLimitIconVisibleOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnBeginUseLimitIconVisibleOverlap");

	Params::BP_MapGimmickObjectBase_C_OnBeginUseLimitIconVisibleOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnEndUseLimitIconVisibleOverlap
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnEndUseLimitIconVisibleOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnEndUseLimitIconVisibleOverlap");

	Params::BP_MapGimmickObjectBase_C_OnEndUseLimitIconVisibleOverlap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetIconGaugeEnableProxy
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetIconGaugeEnableProxy(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetIconGaugeEnableProxy");

	Params::BP_MapGimmickObjectBase_C_SetIconGaugeEnableProxy Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSkipCheckRendered
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsSkipCheckRendered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsSkipCheckRendered");

	Params::BP_MapGimmickObjectBase_C_IsSkipCheckRendered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckInKizunaEp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayOk                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::CheckInKizunaEp(bool* PlayOk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CheckInKizunaEp");

	Params::BP_MapGimmickObjectBase_C_CheckInKizunaEp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayOk != nullptr)
		*PlayOk = Parms.PlayOk;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.DebugCheckKizunaEp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MapGimmickObjectBase_C::DebugCheckKizunaEp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "DebugCheckKizunaEp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectCentrePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Centre_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPsychicObjectCentrePos(struct FVector* Centre_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectCentrePos");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectCentrePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Centre_pos != nullptr)
		*Centre_pos = std::move(Parms.Centre_pos);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectWeightGaugePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weight_gauge_pos                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPsychicObjectWeightGaugePos(struct FVector* Weight_gauge_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectWeightGaugePos");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectWeightGaugePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weight_gauge_pos != nullptr)
		*Weight_gauge_pos = std::move(Parms.Weight_gauge_pos);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsyObjType                             Psychic_object_type                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPsychicObjectType(EPsyObjType* Psychic_object_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectType");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psychic_object_type != nullptr)
		*Psychic_object_type = Parms.Psychic_object_type;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsPsychicObject(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObject");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsPsychicObjectActive(bool* Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectActive");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsActive != nullptr)
		*Param_IsActive = Parms.Param_IsActive;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectVhsParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveVector*                     ParamCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     ColorCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VhsSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetPsychicObjectVhsParam(class UCurveVector** ParamCurve, class UCurveVector** ColorCurve, float* VhsSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectVhsParam");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectVhsParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParamCurve != nullptr)
		*ParamCurve = Parms.ParamCurve;

	if (ColorCurve != nullptr)
		*ColorCurve = Parms.ColorCurve;

	if (VhsSeconds != nullptr)
		*VhsSeconds = Parms.VhsSeconds;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CanUseMapGimmick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseOk                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::CanUseMapGimmick(bool* UseOk)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CanUseMapGimmick");

	Params::BP_MapGimmickObjectBase_C_CanUseMapGimmick Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UseOk != nullptr)
		*UseOk = Parms.UseOk;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraViewTarget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BlendTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EViewTargetBlendFunction                BlendFunc                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BlendExp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraViewTarget(float BlendTime, EViewTargetBlendFunction BlendFunc, float BlendExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraViewTarget");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraViewTarget Parms{};

	Parms.BlendTime = BlendTime;
	Parms.BlendFunc = BlendFunc;
	Parms.BlendExp = BlendExp;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraRotation(const struct FRotator& Rot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraRotation");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraRotation Parms{};

	Parms.Rot = std::move(Rot);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraMode                       Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraMode(EPlayerCameraMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraMode");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraLocation(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraLocation");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraLocation Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraFieldOfView
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraFieldOfView(float FOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraFieldOfView");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraFieldOfView Parms{};

	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPlayerCameraDirection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPlayerCameraDirection(const struct FVector& Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPlayerCameraDirection");

	Params::BP_MapGimmickObjectBase_C_SetPlayerCameraDirection Parms{};

	Parms.Pos = std::move(Pos);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_MapGimmickObjectBase_C::GetPlayerCameraRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerCameraRotation");

	Params::BP_MapGimmickObjectBase_C_GetPlayerCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraMode
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerCameraMode                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EPlayerCameraMode ABP_MapGimmickObjectBase_C::GetPlayerCameraMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerCameraMode");

	Params::BP_MapGimmickObjectBase_C_GetPlayerCameraMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetPlayerCameraLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerCameraLocation");

	Params::BP_MapGimmickObjectBase_C_GetPlayerCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraFieldOfView
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_MapGimmickObjectBase_C::GetPlayerCameraFieldOfView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerCameraFieldOfView");

	Params::BP_MapGimmickObjectBase_C_GetPlayerCameraFieldOfView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPlayerCameraDirection
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetPlayerCameraDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPlayerCameraDirection");

	Params::BP_MapGimmickObjectBase_C_GetPlayerCameraDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetCameraLookAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetCameraLookAtPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetCameraLookAtPos");

	Params::BP_MapGimmickObjectBase_C_GetCameraLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetRemoteActorRotation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_MapGimmickObjectBase_C::GetRemoteActorRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetRemoteActorRotation");

	Params::BP_MapGimmickObjectBase_C_GetRemoteActorRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetRemoteActorLocation
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetRemoteActorLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetRemoteActorLocation");

	Params::BP_MapGimmickObjectBase_C_GetRemoteActorLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.RequestEndUniqueObjectState
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PActor                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::RequestEndUniqueObjectState(class AActor* PActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "RequestEndUniqueObjectState");

	Params::BP_MapGimmickObjectBase_C_RequestEndUniqueObjectState Parms{};

	Parms.PActor = PActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsUniqueObject
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsUniqueObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsUniqueObject");

	Params::BP_MapGimmickObjectBase_C_IsUniqueObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectActiveC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectActiveC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectActiveC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectActiveC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsCopyPsychicObject
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsCopyPsychicObject");

	Params::BP_MapGimmickObjectBase_C_IsCopyPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.InitializeCopyPsychicObject
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::InitializeCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "InitializeCopyPsychicObject");

	Params::BP_MapGimmickObjectBase_C_InitializeCopyPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUnqObjMoveVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetUnqObjMoveVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetUnqObjMoveVelocity");

	Params::BP_MapGimmickObjectBase_C_GetUnqObjMoveVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUnqObjCamTargetPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetUnqObjCamTargetPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetUnqObjCamTargetPos");

	Params::BP_MapGimmickObjectBase_C_GetUnqObjCamTargetPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCameraOwnerRotation
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_MapGimmickObjectBase_C::GetUniqueObjectCameraOwnerRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetUniqueObjectCameraOwnerRotation");

	Params::BP_MapGimmickObjectBase_C_GetUniqueObjectCameraOwnerRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCameraLookAtPos
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   LookAtRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_MapGimmickObjectBase_C::GetUniqueObjectCameraLookAtPos(float LookAtRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetUniqueObjectCameraLookAtPos");

	Params::BP_MapGimmickObjectBase_C_GetUniqueObjectCameraLookAtPos Parms{};

	Parms.LookAtRate = LookAtRate;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDebrisEffectData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  ParticleTemplate                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::GetDebrisEffectData(class UParticleSystem** ParticleTemplate, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetDebrisEffectData");

	Params::BP_MapGimmickObjectBase_C_GetDebrisEffectData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParticleTemplate != nullptr)
		*ParticleTemplate = Parms.ParticleTemplate;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDebrisEffect
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEffectObjectDebrisType                 Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               OverrideMaterial                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::GetDebrisEffect(EEffectObjectDebrisType* Type, class UMaterialInterface** OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetDebrisEffect");

	Params::BP_MapGimmickObjectBase_C_GetDebrisEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;

	if (OverrideMaterial != nullptr)
		*OverrideMaterial = Parms.OverrideMaterial;

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSwingType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsSwingType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsSwingType");

	Params::BP_MapGimmickObjectBase_C_IsSwingType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectSize
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectSizeType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EPsychicObjectSizeType ABP_MapGimmickObjectBase_C::GetPsychicObjectSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectSize");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetUniqueObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetUniqueObjectC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetUniqueObjectC");

	Params::BP_MapGimmickObjectBase_C_SetUniqueObjectC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetSwingTypeC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetSwingTypeC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetSwingTypeC");

	Params::BP_MapGimmickObjectBase_C_SetSwingTypeC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectTickC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RefName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectTickC(class FName RefName, bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectTickC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectTickC Parms{};

	Parms.RefName = RefName;
	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectInUseC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectInUseC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectInUseC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectInUseC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectActiveC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectActiveC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectActiveC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectActiveC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetBrainFieldObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetBrainFieldObjectC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetBrainFieldObjectC");

	Params::BP_MapGimmickObjectBase_C_SetBrainFieldObjectC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsUniqueObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsUniqueObjectC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsUniqueObjectC");

	Params::BP_MapGimmickObjectBase_C_IsUniqueObjectC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsSwingTypeC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsSwingTypeC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsSwingTypeC");

	Params::BP_MapGimmickObjectBase_C_IsSwingTypeC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectTickC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectTickC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectTickC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectTickC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectInUseC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectInUseC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectInUseC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectInUseC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsBrainFieldObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsBrainFieldObjectC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsBrainFieldObjectC");

	Params::BP_MapGimmickObjectBase_C_IsBrainFieldObjectC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckPsychicObjectIdC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectID       CheckId                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::CheckPsychicObjectIdC(BattlePrototype::EPsychicObjectID CheckId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CheckPsychicObjectIdC");

	Params::BP_MapGimmickObjectBase_C_CheckPsychicObjectIdC Parms{};

	Parms.CheckId = CheckId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectRegisterableC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectRegisterableC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectRegisterableC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectRegisterableC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetDuelPoleType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDuelType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetDuelPoleType(bool bDuelType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetDuelPoleType");

	Params::BP_MapGimmickObjectBase_C_SetDuelPoleType Parms{};

	Parms.bDuelType = bDuelType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectRenderC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectRenderC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectRenderC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectRenderC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectRenderC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectRenderC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectRenderC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectRenderC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectSimulateControlC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectSimulateControlC(bool Flag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectSimulateControlC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectSimulateControlC Parms{};

	Parms.Flag = Flag;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectSimulateControlEnableC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectSimulateControlEnableC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectSimulateControlEnableC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateControlEnableC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicObjectSimulateC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsPsychicObjectSimulateC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicObjectSimulateC");

	Params::BP_MapGimmickObjectBase_C_IsPsychicObjectSimulateC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetPsychicObjectSimulateControlDistanceSqC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DistSq                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::GetPsychicObjectSimulateControlDistanceSqC(float* DistSq)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetPsychicObjectSimulateControlDistanceSqC");

	Params::BP_MapGimmickObjectBase_C_GetPsychicObjectSimulateControlDistanceSqC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DistSq != nullptr)
		*DistSq = Parms.DistSq;

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CheckPsychicObjectSimulateC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          PosPly                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::CheckPsychicObjectSimulateC(const struct FVector& PosPly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CheckPsychicObjectSimulateC");

	Params::BP_MapGimmickObjectBase_C_CheckPsychicObjectSimulateC Parms{};

	Parms.PosPly = std::move(PosPly);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsFloatObjectC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::IsFloatObjectC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsFloatObjectC");

	Params::BP_MapGimmickObjectBase_C_IsFloatObjectC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.ResetPsychicObjectArrangeTransformC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::ResetPsychicObjectArrangeTransformC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "ResetPsychicObjectArrangeTransformC");

	Params::BP_MapGimmickObjectBase_C_ResetPsychicObjectArrangeTransformC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.SetPsychicObjectEventC
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bTick                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::SetPsychicObjectEventC(bool bStart, bool bTick, bool bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "SetPsychicObjectEventC");

	Params::BP_MapGimmickObjectBase_C_SetPsychicObjectEventC Parms{};

	Parms.bStart = bStart;
	Parms.bTick = bTick;
	Parms.bVisibility = bVisibility;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeCancel
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMapGimmickObject*                GimmickActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnMapGimmickChargeCancel(class AMapGimmickObject* GimmickActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnMapGimmickChargeCancel");

	Params::BP_MapGimmickObjectBase_C_OnMapGimmickChargeCancel Parms{};

	Parms.GimmickActor = GimmickActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeEnd
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMapGimmickObject*                GimmickActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnMapGimmickChargeEnd(class AMapGimmickObject* GimmickActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnMapGimmickChargeEnd");

	Params::BP_MapGimmickObjectBase_C_OnMapGimmickChargeEnd Parms{};

	Parms.GimmickActor = GimmickActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.OnMapGimmickChargeStart
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AMapGimmickObject*                GimmickActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_MapGimmickObjectBase_C::OnMapGimmickChargeStart(class AMapGimmickObject* GimmickActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "OnMapGimmickChargeStart");

	Params::BP_MapGimmickObjectBase_C_OnMapGimmickChargeStart Parms{};

	Parms.GimmickActor = GimmickActor;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.CalcLerpLookAtPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*                  NearLookAt                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  FarLookAt                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LookAtPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::CalcLerpLookAtPosition(class USceneComponent* NearLookAt, class USceneComponent* FarLookAt, struct FVector* LookAtPos) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "CalcLerpLookAtPosition");

	Params::BP_MapGimmickObjectBase_C_CalcLerpLookAtPosition Parms{};

	Parms.NearLookAt = NearLookAt;
	Parms.FarLookAt = FarLookAt;

	UObject::ProcessEvent(Func, &Parms);

	if (LookAtPos != nullptr)
		*LookAtPos = std::move(Parms.LookAtPos);
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsPsychicComboAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bComboAttack                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsPsychicComboAttack(bool* bComboAttack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsPsychicComboAttack");

	Params::BP_MapGimmickObjectBase_C_IsPsychicComboAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bComboAttack != nullptr)
		*bComboAttack = Parms.bComboAttack;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetUniqueObjectCaptureMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeft                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseBlend                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     StartMontage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     CancelMontage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetUniqueObjectCaptureMontage(EPlayerID PlayerId, bool bBack, bool bLeft, bool* bUseBlend, class UAnimMontage** StartMontage, class UAnimMontage** CancelMontage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetUniqueObjectCaptureMontage");

	Params::BP_MapGimmickObjectBase_C_GetUniqueObjectCaptureMontage Parms{};

	Parms.PlayerId = PlayerId;
	Parms.bBack = bBack;
	Parms.bLeft = bLeft;

	UObject::ProcessEvent(Func, &Parms);

	if (bUseBlend != nullptr)
		*bUseBlend = Parms.bUseBlend;

	if (StartMontage != nullptr)
		*StartMontage = Parms.StartMontage;

	if (CancelMontage != nullptr)
		*CancelMontage = Parms.CancelMontage;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.IsKarenUniqueObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bKaren                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MapGimmickObjectBase_C::IsKarenUniqueObject(bool* bKaren) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "IsKarenUniqueObject");

	Params::BP_MapGimmickObjectBase_C_IsKarenUniqueObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bKaren != nullptr)
		*bKaren = Parms.bKaren;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetMapGimmickType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EMapGimmickType                         Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MapGimmickObjectBase_C::GetMapGimmickType(EMapGimmickType* Type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetMapGimmickType");

	Params::BP_MapGimmickObjectBase_C_GetMapGimmickType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetMeshTriangleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FMeshTriangleData                ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FMeshTriangleData ABP_MapGimmickObjectBase_C::GetMeshTriangleData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetMeshTriangleData");

	Params::BP_MapGimmickObjectBase_C_GetMeshTriangleData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MapGimmickObjectBase.BP_MapGimmickObjectBase_C.GetDataRevision
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_MapGimmickObjectBase_C::GetDataRevision() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MapGimmickObjectBase_C", "GetDataRevision");

	Params::BP_MapGimmickObjectBase_C_GetDataRevision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

