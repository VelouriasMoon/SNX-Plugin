#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SoundManager

#include "Basic.hpp"

#include "E_SASKind_structs.hpp"
#include "FSoundAtomCueAssignSoftRef_structs.hpp"
#include "FMovieVolumeSetting_structs.hpp"
#include "FSASCommand_structs.hpp"
#include "FAlertSoundSpecification_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CriWareRuntime_structs.hpp"
#include "FProgressNo_structs.hpp"
#include "FSoundAtomCueAssign_structs.hpp"
#include "Engine_structs.hpp"
#include "FSASPsychicParam_structs.hpp"
#include "AcceleratorParam_structs.hpp"
#include "FSASElectricParam_structs.hpp"
#include "FSasCutInVoiceVar_structs.hpp"
#include "FSASFireParam_structs.hpp"
#include "FSASMetalParam_structs.hpp"
#include "FSASSeeThroughParam_structs.hpp"
#include "Enum_EnemySound_structs.hpp"
#include "FSASTelepoParam_structs.hpp"
#include "FSASStealthParam_structs.hpp"
#include "FSASCopyParam_structs.hpp"
#include "FSasCutInSeVar_structs.hpp"


namespace SDK::Params
{

// Function BP_SoundManager.BP_SoundManager_C.ExecuteUbergraph_BP_SoundManager
// 0x0EE0 (0x0EE0 - 0x0000)
struct BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5C[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5D[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCueSheetManager*                  CallFunc_GetCueSheetManager_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCueSheetManager*                  CallFunc_GetCueSheetManager_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5F[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E60[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E61[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue_1;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E62[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E63[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_2;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E64[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_IsSpCostume_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E65[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E66[0x2];                                     // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFProgressNo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0154(0x0001)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E67[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EChangeAreaStatus Status, bool IsChangeLocation)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0184(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01AC(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue;                      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E68[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E69[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6A[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6B[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   K2Node_DynamicCast_AsRSAtom_Component_Base;        // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6C[0x2];                                     // 0x021A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_5;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6D[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_3;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6E[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_6;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_6; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_4;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E6F[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_7;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_5;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E70[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_8;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_7; // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_6;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E71[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_9;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_8; // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_7;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASPsychicParam                      K2Node_Event_param_15;                             // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E72[0x5];                                     // 0x02B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_17;                             // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASPsychicParam                      K2Node_Event_param_14;                             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E73[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_16;                             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_8;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESequencerSoundDemoType                       K2Node_CustomEvent_DemoType_1;                     // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E74[0x3];                                     // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EventID_1;                      // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E75[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_CustomEvent_SoundCue_1;                     // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESequencerSoundDemoType                       K2Node_CustomEvent_DemoType;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E76[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_EventID;                        // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_CustomEvent_SoundCue;                       // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E77[0x6];                                     // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_CustomEvent_sequencer;                      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_9; // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E78[0x6];                                     // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames;    // 0x0318(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E79[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7A[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0398(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x03C0(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_10;            // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x0400(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7B[0x7];                                     // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0420(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_11;            // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_8;             // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7C[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_9;             // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7D[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResumeBgm_ReturnValue;                    // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7E[0x6];                                     // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_12;            // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_CustomEvent_targetSequence;                 // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_10;            // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingByBgmComponent_ReturnValue;      // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E7F[0x6];                                     // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_13;            // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_10; // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_11;            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E80[0x6];                                     // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_14;            // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_11; // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_12;            // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E81[0x6];                                     // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayLoopSe_ReturnValue;                   // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopLoopSe_ReturnValue;                   // 0x0502(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue;        // 0x0503(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopLoopSe_ReturnValue_1;                 // 0x0504(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E82[0x3];                                     // 0x0505(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E83[0x4];                                     // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_15;            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_13;            // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResumeBgm_ReturnValue_1;                  // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_1; // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_2; // 0x0523(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E84[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_16;            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       K2Node_CustomEvent_target;                         // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_14;            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue;             // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E85[0x6];                                     // 0x0542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_12; // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isSas;                          // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E86[0x2];                                     // 0x0552(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location_1;                     // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation_1;                     // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E87[0x4];                                     // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Creator_1;                      // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0578(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0584(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Creator;                        // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0598(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_1;     // 0x05A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AnimPath;                       // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetBaseFilename_ReturnValue;              // 0x05B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSoundAtomCueAssignSoftRef            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x05D0(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E88[0x7];                                     // 0x05F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_17;            // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_15;            // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E89[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_13; // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8A[0x7];                                     // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8B[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item_1;                         // 0x0638(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item_2;                         // 0x0660(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item_3;                         // 0x0688(0x0028)(HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8C[0x7];                                     // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSHUDBase*                             K2Node_DynamicCast_AsRSHUDBase;                    // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFade_ReturnValue;                       // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8D[0x6];                                     // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Macro_GetPlayer_Mesh;                     // 0x06D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_Macro_GetPlayer_PlayerID;                 // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_GetPlayer_ReturnValue;              // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8E[0x2];                                     // 0x06DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x06DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAcceleratorParam                      K2Node_Event_Parameter_1;                          // 0x06E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_15;                             // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram_1;                          // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E8F[0x7];                                     // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSasCutInVoiceVar                     CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0700(0x01B0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E90[0x3];                                     // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface;             // 0x08B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x08C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E91[0x2];                                     // 0x08CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAcceleratorParam                      K2Node_Event_Parameter;                            // 0x08CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner_14;                             // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_7;                         // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHologram;                            // 0x08E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E92[0x3];                                     // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E93[0x4];                                     // 0x08EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_1;           // 0x08F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0901(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASElectricParam                     K2Node_Event_param_13;                             // 0x0902(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E94[0x5];                                     // 0x0903(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_13;                             // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASElectricParam                     K2Node_Event_param_12;                             // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E95[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_12;                             // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_6;                         // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_2;           // 0x0928(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0939(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E96[0x2];                                     // 0x093A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_3;           // 0x0940(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASFireParam                         K2Node_Event_param_11;                             // 0x0952(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E97[0x5];                                     // 0x0953(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_11;                             // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_18;            // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASFireParam                         K2Node_Event_param_10;                             // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E98[0x7];                                     // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_10;                             // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_5;                         // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E99[0x4];                                     // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_16;            // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9A[0x3];                                     // 0x0989(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_4;           // 0x0990(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x09A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASSeeThroughParam                   K2Node_Event_param_9;                              // 0x09A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9B[0x5];                                     // 0x09A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_9;                              // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASSeeThroughParam                   K2Node_Event_param_8;                              // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9C[0x3];                                     // 0x09B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_8;                              // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_4;                         // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x09C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASTelepoParam                       K2Node_Event_param_7;                              // 0x09C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9D[0x2];                                     // 0x09C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_7;                              // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASTelepoParam                       K2Node_Event_param_6;                              // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9E[0x7];                                     // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_6;                              // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_3;                         // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_5;                              // 0x09E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9F[0x3];                                     // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_5;                              // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASMetalParam                        K2Node_Event_param_4;                              // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA0[0x7];                                     // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_4;                              // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_2;                         // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_3;                              // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA1[0x3];                                     // 0x0A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_3;                              // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime_1;                         // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA2[0x4];                                     // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_14; // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASStealthParam                      K2Node_Event_param_2;                              // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA3[0x7];                                     // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_2;                              // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFSASCopyParam                         K2Node_Event_param_1;                              // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA4[0x6];                                     // 0x0A32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner_1;                              // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFSASCopyParam                         K2Node_Event_param;                                // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA5[0x7];                                     // 0x0A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Owner;                                // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RemainTime;                           // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue_1;                    // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA6[0x3];                                     // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASASManager*                            CallFunc_GetSASManager_ReturnValue;                // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue_2;                    // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA7[0x7];                                     // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SASManager_C>     K2Node_DynamicCast_AsBPI_SASManager;               // 0x0A68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SASKind                                     CallFunc_GetCurrentCutinSASType_SASType;           // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_EnemySound                               K2Node_CustomEvent_enemySound;                     // 0x0A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerIDFromSASKind_PlayerID;          // 0x0A7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA8[0x3];                                     // 0x0A7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBondsLevel_ReturnValue;                // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0A84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue_1;           // 0x0A85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangeSoundState_ReturnValue_2;           // 0x0A86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue_1;                    // 0x0A87(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_CustomEvent_DriveLevel_1;                   // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_DriveLevel;                     // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_19;            // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_17;            // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA9[0x3];                                     // 0x0AA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentAisacControlValueById_ReturnValue; // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAA[0x7];                                     // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_2;     // 0x0AB0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component_1;              // 0x0AB8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component_2;              // 0x0AC0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_3;     // 0x0AC8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentAisacControlValueByName_ReturnValue; // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EAB[0x4];                                     // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Array_Get_Item_4;                         // 0x0AD8(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EAC[0x4];                                     // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_20;            // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EAD[0x4];                                     // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_18;            // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAE[0x7];                                     // 0x0B21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_15; // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EAF[0x7];                                     // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_4;     // 0x0B38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0B44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EB0[0x3];                                     // 0x0B45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAtomComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0B48(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_16; // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB1[0x7];                                     // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_5;     // 0x0B68(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_IsAriseItemEquipped_ReturnValue;    // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB2[0x7];                                     // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Macro_GetPlayer_Mesh_1;                   // 0x0B78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_Macro_GetPlayer_PlayerID_1;               // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_GetPlayer_ReturnValue_1;            // 0x0B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB3[0x6];                                     // 0x0B82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0B88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_17; // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue_6;     // 0x0B98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayBgm_ReturnValue_3;                    // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB4[0x6];                                     // 0x0BA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_21;            // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_19;            // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB5[0x7];                                     // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_18; // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue_4;                    // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB6[0x6];                                     // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_22;            // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue_5;                    // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB7[0x7];                                     // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_20;            // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x0BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB8[0x7];                                     // 0x0BE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_19; // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0BFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0BFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EB9[0x2];                                     // 0x0BFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0C00(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue; // 0x0C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue_1; // 0x0C09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue_2; // 0x0C0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBA[0x1];                                     // 0x0C0B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SASInterface_C>   K2Node_DynamicCast_AsBPI_SASInterface_5;           // 0x0C10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBB[0x7];                                     // 0x0C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSasCutInSeVar                        CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0C28(0x0168)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EChangeAreaStatus                             K2Node_CustomEvent_Status;                         // 0x0D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsChangeLocation;               // 0x0D92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBC[0x5];                                     // 0x0D93(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Macro_GetPlayer_Mesh_2;                   // 0x0D98(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_Macro_GetPlayer_PlayerID_2;               // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_GetPlayer_ReturnValue_2;            // 0x0DA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBD[0x2];                                     // 0x0DA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeAll_ReturnValue;           // 0x0DA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBE[0x6];                                     // 0x0DAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattlefieldManager*                    CallFunc_GetBattleFieldManager_BattleFieldManager; // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EBF[0x7];                                     // 0x0DC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneManager*                          K2Node_DynamicCast_AsScene_Manager;                // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x0DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x0DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC0[0x6];                                     // 0x0DD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue_1;            // 0x0DD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventManager*                          K2Node_DynamicCast_AsEvent_Manager;                // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC1[0x7];                                     // 0x0DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager_1;   // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC2[0x7];                                     // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOptionParam*                           CallFunc_GetOptionParam_ReturnValue;               // 0x0E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetVoiceVolume_ReturnValue;               // 0x0E09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC3[0x2];                                     // 0x0E0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetSeVolume_ReturnValue;                  // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue_3; // 0x0E11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC4[0x2];                                     // 0x0E12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_1;           // 0x0E14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetBgmVolume_ReturnValue;                 // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue_4; // 0x0E19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC5[0x2];                                     // 0x0E1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_2;           // 0x0E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue_5; // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC6[0x7];                                     // 0x0E21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_23;            // 0x0E28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterFromSoftRef_ReturnValue;          // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC7[0x7];                                     // 0x0E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_21;            // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC8[0x3];                                     // 0x0E41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0E44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterFromSoftRef_ReturnValue;        // 0x0E49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue_2;                    // 0x0E4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EC9[0x5];                                     // 0x0E4B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ECA[0x7];                                     // 0x0E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Macro_GetPlayer_Mesh_3;                   // 0x0E60(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_Macro_GetPlayer_PlayerID_3;               // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Macro_GetPlayer_ReturnValue_3;            // 0x0E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0E6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ECB[0x5];                                     // 0x0E6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue_1;                  // 0x0E70(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue_2;                  // 0x0E78(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopBgm_ReturnValue_3;                    // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopEnv_ReturnValue;                      // 0x0E81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ECC[0x6];                                     // 0x0E82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstance*                        CallFunc_GetRSGameInstance_ReturnValue;            // 0x0E88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_Map_Find_Value;                           // 0x0E90(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ECD[0x7];                                     // 0x0EB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_24;            // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_20; // 0x0EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_22;            // 0x0ED0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x0ED9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager) == 0x000008, "Wrong alignment on BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager");
static_assert(sizeof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager) == 0x000EE0, "Wrong size on BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, EntryPoint) == 0x000000, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue) == 0x000004, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000010, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetUserParamManager_UserParamManager) == 0x000020, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1) == 0x000030, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000040, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2) == 0x000048, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x000050, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetCueSheetManager_ReturnValue) == 0x000060, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetCueSheetManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000068, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetCueSheetManager_ReturnValue_1) == 0x000070, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetCueSheetManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet) == 0x000078, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_3) == 0x000088, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_3) == 0x000090, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1) == 0x000098, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_4) == 0x0000A1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x0000A8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Register_ReturnValue) == 0x0000B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Register_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadAtomCueSheet_ReturnValue_1) == 0x0000B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadAtomCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Register_ReturnValue_1) == 0x0000C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Register_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable) == 0x0000C4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3) == 0x0000C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_5) == 0x0000D4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_4) == 0x0000D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_2) == 0x0000E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_4) == 0x0000E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_1) == 0x0000EC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_2) == 0x0000F4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable) == 0x0000FC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_1) == 0x000100, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_3) == 0x000104, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_IsSpCostume_ReturnValue) == 0x000108, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_IsSpCostume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x00010C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_2) == 0x000110, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_3) == 0x000114, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetEventManager_ReturnValue) == 0x000118, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x000120, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_5) == 0x000130, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_6) == 0x000131, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetProgressID_ProgressID) == 0x000134, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_IntToString_ReturnValue) == 0x000138, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_4) == 0x000148, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_StringToName_ReturnValue) == 0x00014C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x000154, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000155, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_4) == 0x000158, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CreateDelegate_OutputDelegate) == 0x00015C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x00016C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_4) == 0x00017C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_5) == 0x000180, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000184, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_5) == 0x000194, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_5) == 0x000198, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x00019C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001AC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_6) == 0x0001BC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_6) == 0x0001C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_6) == 0x0001C4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_7) == 0x0001C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue) == 0x0001CC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_7) == 0x0001D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_8) == 0x0001D4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_7) == 0x0001D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_8) == 0x0001DC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Loop_Counter_Variable_9) == 0x0001E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4) == 0x0001E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Add_IntInt_ReturnValue_9) == 0x0001F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_7) == 0x0001F4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_8) == 0x0001F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Get_Item) == 0x000200, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5) == 0x000208, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsRSAtom_Component_Base) == 0x000210, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsRSAtom_Component_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_6) == 0x000218, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_8) == 0x000219, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue) == 0x00021C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_5) == 0x000220, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_3) == 0x000230, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_7) == 0x000238, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_6) == 0x000240, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_6) == 0x000248, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_4) == 0x000250, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_8) == 0x000258, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_9) == 0x000259, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_7) == 0x000260, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_5) == 0x000268, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_9) == 0x000270, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_8) == 0x000278, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_7) == 0x000280, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_6) == 0x000288, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_10) == 0x000290, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_10) == 0x000291, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_9) == 0x000298, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_8) == 0x0002A0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_7) == 0x0002A8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_11) == 0x0002B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_11) == 0x0002B1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_15) == 0x0002B2, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_17) == 0x0002B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_14) == 0x0002C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_16) == 0x0002C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_8) == 0x0002D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_DemoType_1) == 0x0002D4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_DemoType_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_EventID_1) == 0x0002D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_EventID_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_SoundCue_1) == 0x0002E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_SoundCue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_DemoType) == 0x0002E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_DemoType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_EventID) == 0x0002EC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_EventID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_SoundCue) == 0x0002F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_SoundCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_SwitchEnum_CmpSuccess) == 0x0002F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002F9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_sequencer) == 0x000300, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_sequencer' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_9) == 0x000308, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_12) == 0x000310, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_13) == 0x000311, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames) == 0x000318, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_1) == 0x000328, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000330, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000340, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000348, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000358, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000368, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000378, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000388, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000398, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0003B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x0003C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0003E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_10) == 0x0003F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x000400, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_14) == 0x000418, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000420, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_11) == 0x000448, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_8) == 0x000450, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_12) == 0x000458, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_9) == 0x000460, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_13) == 0x000468, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetObjectName_ReturnValue) == 0x000470, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetObjectName_ReturnValue_1) == 0x000480, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_ResumeBgm_ReturnValue) == 0x000490, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_ResumeBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopBgm_ReturnValue) == 0x000491, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_12) == 0x000498, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_targetSequence) == 0x0004A0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_targetSequence' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_10) == 0x0004A8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_14) == 0x0004B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsPlayingByBgmComponent_ReturnValue) == 0x0004B1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsPlayingByBgmComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_13) == 0x0004B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_10) == 0x0004C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_11) == 0x0004C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_15) == 0x0004D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_15) == 0x0004D1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_14) == 0x0004D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_11) == 0x0004E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_12) == 0x0004E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_16) == 0x0004F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_16) == 0x0004F1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBgmComponent_Component) == 0x0004F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_17) == 0x000500, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayLoopSe_ReturnValue) == 0x000501, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayLoopSe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopLoopSe_ReturnValue) == 0x000502, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopLoopSe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetFadeByCategoryName_ReturnValue) == 0x000503, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetFadeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopLoopSe_ReturnValue_1) == 0x000504, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopLoopSe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_RandomInteger_ReturnValue) == 0x000508, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_15) == 0x000510, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_13) == 0x000518, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_17) == 0x000520, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_ResumeBgm_ReturnValue_1) == 0x000521, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_ResumeBgm_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_1) == 0x000522, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_2) == 0x000523, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_16) == 0x000528, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_target) == 0x000530, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_target' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_14) == 0x000538, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_18) == 0x000540, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_ChangeSoundState_ReturnValue) == 0x000541, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_ChangeSoundState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_12) == 0x000548, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_isSas) == 0x000550, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_isSas' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_18) == 0x000551, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Location_1) == 0x000554, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Rotation_1) == 0x000560, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Creator_1) == 0x000570, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Creator_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Location) == 0x000578, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Rotation) == 0x000584, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Creator) == 0x000590, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Creator' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000598, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_1) == 0x0005A0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_AnimPath) == 0x0005A8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_AnimPath' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBaseFilename_ReturnValue) == 0x0005B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBaseFilename_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0005C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0005D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_17) == 0x000600, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_15) == 0x000608, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_19) == 0x000610, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_13) == 0x000618, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_19) == 0x000620, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetPlayerController_ReturnValue) == 0x000628, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_20) == 0x000630, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Get_Item_1) == 0x000638, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Get_Item_2) == 0x000660, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Get_Item_3) == 0x000688, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetHUD_ReturnValue) == 0x0006B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_21) == 0x0006B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsRSHUDBase) == 0x0006C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsRSHUDBase' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_20) == 0x0006C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsFade_ReturnValue) == 0x0006C9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsFade_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_Mesh) == 0x0006D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_PlayerID) == 0x0006D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_ReturnValue) == 0x0006D9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetEnumeratorName_ReturnValue) == 0x0006DC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Parameter_1) == 0x0006E4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Parameter_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_15) == 0x0006F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_bHologram_1) == 0x0006F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_bHologram_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000700, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0008B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_2) == 0x0008B4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface) == 0x0008B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_21) == 0x0008C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x0008C9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Parameter) == 0x0008CC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Parameter' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_14) == 0x0008D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_7) == 0x0008E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_bHologram) == 0x0008E4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_bHologram' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_3) == 0x0008E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface_1) == 0x0008F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_22) == 0x000900, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x000901, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_13) == 0x000902, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_13) == 0x000908, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_12) == 0x000910, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_12) == 0x000918, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_6) == 0x000920, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_4) == 0x000924, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface_2) == 0x000928, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_23) == 0x000938, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_4) == 0x000939, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_5) == 0x00093C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface_3) == 0x000940, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_24) == 0x000950, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_5) == 0x000951, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_11) == 0x000952, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_11) == 0x000958, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_18) == 0x000960, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_10) == 0x000968, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_10) == 0x000970, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_5) == 0x000978, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_16) == 0x000980, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_25) == 0x000988, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_6) == 0x00098C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface_4) == 0x000990, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_26) == 0x0009A0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_6) == 0x0009A1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_9) == 0x0009A2, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_9) == 0x0009A8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_7) == 0x0009B0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_8) == 0x0009B4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_8) == 0x0009B8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_4) == 0x0009C0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_7) == 0x0009C4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_7) == 0x0009C5, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_7) == 0x0009C8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_6) == 0x0009D0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_6) == 0x0009D8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_3) == 0x0009E0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_5) == 0x0009E4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_5) == 0x0009E8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_4) == 0x0009F0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_4) == 0x0009F8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_2) == 0x000A00, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_3) == 0x000A04, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_3) == 0x000A08, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime_1) == 0x000A10, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_14) == 0x000A18, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_2) == 0x000A20, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_2) == 0x000A28, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_22) == 0x000A30, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param_1) == 0x000A31, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner_1) == 0x000A38, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_param) == 0x000A40, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_Owner) == 0x000A48, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_RemainTime) == 0x000A50, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue_1) == 0x000A54, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetSASManager_ReturnValue) == 0x000A58, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetSASManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue_2) == 0x000A60, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASManager) == 0x000A68, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_27) == 0x000A78, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetCurrentCutinSASType_SASType) == 0x000A79, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetCurrentCutinSASType_SASType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_enemySound) == 0x000A7A, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_enemySound' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetPlayerIDFromSASKind_PlayerID) == 0x000A7B, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetPlayerIDFromSASKind_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000A7C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBondsLevel_ReturnValue) == 0x000A80, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBondsLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_SwitchInteger_CmpSuccess) == 0x000A84, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_ChangeSoundState_ReturnValue_1) == 0x000A85, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_ChangeSoundState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_ChangeSoundState_ReturnValue_2) == 0x000A86, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_ChangeSoundState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopBgm_ReturnValue_1) == 0x000A87, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopBgm_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_DriveLevel_1) == 0x000A88, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_DriveLevel_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_DriveLevel) == 0x000A8C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_DriveLevel' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_19) == 0x000A90, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_17) == 0x000A98, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_28) == 0x000AA0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetCurrentAisacControlValueById_ReturnValue) == 0x000AA4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetCurrentAisacControlValueById_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_FloatFloat_ReturnValue) == 0x000AA8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_2) == 0x000AB0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBgmComponent_Component_1) == 0x000AB8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBgmComponent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBgmComponent_Component_2) == 0x000AC0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBgmComponent_Component_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_3) == 0x000AC8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetCurrentAisacControlValueByName_ReturnValue) == 0x000AD0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetCurrentAisacControlValueByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Get_Item_4) == 0x000AD8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000B00, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_20) == 0x000B08, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_FCeil_ReturnValue) == 0x000B10, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_18) == 0x000B18, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_18' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_29) == 0x000B20, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_15) == 0x000B28, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_23) == 0x000B30, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_4) == 0x000B38, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_DeltaSeconds) == 0x000B40, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_Event_EndPlayReason) == 0x000B44, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000B48, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_16) == 0x000B58, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_24) == 0x000B60, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_5) == 0x000B68, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_IsAriseItemEquipped_ReturnValue) == 0x000B70, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_IsAriseItemEquipped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_Mesh_1) == 0x000B78, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_PlayerID_1) == 0x000B80, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_PlayerID_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_ReturnValue_1) == 0x000B81, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000B88, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_17) == 0x000B90, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SpawnSoundAtLocationRS_ReturnValue_6) == 0x000B98, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SpawnSoundAtLocationRS_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_25) == 0x000BA0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue_3) == 0x000BA1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_21) == 0x000BA8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_19) == 0x000BB0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_19' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_30) == 0x000BB8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_18) == 0x000BC0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue_4) == 0x000BC8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_26) == 0x000BC9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_22) == 0x000BD0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayBgm_ReturnValue_5) == 0x000BD8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayBgm_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_20) == 0x000BE0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_20' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_31) == 0x000BE8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_19) == 0x000BF0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_8) == 0x000BF8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_27) == 0x000BFC, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_8) == 0x000BFD, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayVoice_ReturnValue) == 0x000C00, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue) == 0x000C08, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue_1) == 0x000C09, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue_2) == 0x000C0A, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, Temp_int_Array_Index_Variable_9) == 0x000C0C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsBPI_SASInterface_5) == 0x000C10, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsBPI_SASInterface_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_32) == 0x000C20, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000C28, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000D90, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_Status) == 0x000D91, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_Status' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_CustomEvent_IsChangeLocation) == 0x000D92, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_CustomEvent_IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_Mesh_2) == 0x000D98, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_Mesh_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_PlayerID_2) == 0x000DA0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_PlayerID_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_ReturnValue_2) == 0x000DA1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000DA4, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000DA8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetInGameVolumeAll_ReturnValue) == 0x000DA9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetInGameVolumeAll_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBattleFieldManager_BattleFieldManager) == 0x000DB0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBattleFieldManager_BattleFieldManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetSceneManager_SceneManager) == 0x000DB8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_28) == 0x000DC0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsScene_Manager) == 0x000DC8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsScene_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_33) == 0x000DD0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_29) == 0x000DD1, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetEventManager_ReturnValue_1) == 0x000DD8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetEventManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsEvent_Manager) == 0x000DE0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsEvent_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_34) == 0x000DE8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetUserParamManager_UserParamManager_1) == 0x000DF0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetUserParamManager_UserParamManager_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_30) == 0x000DF8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetOptionParam_ReturnValue) == 0x000E00, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetOptionParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_31) == 0x000E08, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetVoiceVolume_ReturnValue) == 0x000E09, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetVoiceVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000E0C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetSeVolume_ReturnValue) == 0x000E10, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetSeVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue_3) == 0x000E11, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_ByteToFloat_ReturnValue_1) == 0x000E14, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_ByteToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBgmVolume_ReturnValue) == 0x000E18, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBgmVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue_4) == 0x000E19, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Conv_ByteToFloat_ReturnValue_2) == 0x000E1C, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Conv_ByteToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_SetConfigVolumeByCategoryName_ReturnValue_5) == 0x000E20, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_SetConfigVolumeByCategoryName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_23) == 0x000E28, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_RegisterFromSoftRef_ReturnValue) == 0x000E30, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_RegisterFromSoftRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_21) == 0x000E38, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_21' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_35) == 0x000E40, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Array_Length_ReturnValue_9) == 0x000E44, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Less_IntInt_ReturnValue_9) == 0x000E48, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_UnregisterFromSoftRef_ReturnValue) == 0x000E49, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_UnregisterFromSoftRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopBgm_ReturnValue_2) == 0x000E4A, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopBgm_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000E50, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000E58, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_Mesh_3) == 0x000E60, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_Mesh_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_PlayerID_3) == 0x000E68, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_PlayerID_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Macro_GetPlayer_ReturnValue_3) == 0x000E69, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Macro_GetPlayer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x000E6A, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayVoice_ReturnValue_1) == 0x000E70, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayVoice_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_PlayVoice_ReturnValue_2) == 0x000E78, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_PlayVoice_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopBgm_ReturnValue_3) == 0x000E80, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopBgm_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_StopEnv_ReturnValue) == 0x000E81, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_StopEnv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetRSGameInstance_ReturnValue) == 0x000E88, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetRSGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Map_Find_Value) == 0x000E90, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_Map_Find_ReturnValue) == 0x000EB8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_LoadSoftObject_ReturnValue_24) == 0x000EC0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_LoadSoftObject_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_20) == 0x000EC8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_AsSound_Atom_Cue_22) == 0x000ED0, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_AsSound_Atom_Cue_22' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, K2Node_DynamicCast_bSuccess_36) == 0x000ED8, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager, CallFunc_IsValid_ReturnValue_32) == 0x000ED9, "Member 'BP_SoundManager_C_ExecuteUbergraph_BP_SoundManager::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnChangeArea
// 0x0002 (0x0002 - 0x0000)
struct BP_SoundManager_C_OnChangeArea final
{
public:
	EChangeAreaStatus                             Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeLocation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_OnChangeArea) == 0x000001, "Wrong alignment on BP_SoundManager_C_OnChangeArea");
static_assert(sizeof(BP_SoundManager_C_OnChangeArea) == 0x000002, "Wrong size on BP_SoundManager_C_OnChangeArea");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea, Status) == 0x000000, "Member 'BP_SoundManager_C_OnChangeArea::Status' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea, IsChangeLocation) == 0x000001, "Member 'BP_SoundManager_C_OnChangeArea::IsChangeLocation' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SoundManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_SoundManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SoundManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_SoundManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SoundManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SoundManager_C_ReceiveTick");
static_assert(sizeof(BP_SoundManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_SoundManager_C_ReceiveTick");
static_assert(offsetof(BP_SoundManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SoundManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnChangeDriveLevel
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundManager_C_OnChangeDriveLevel final
{
public:
	int32                                         DriveLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnChangeDriveLevel) == 0x000004, "Wrong alignment on BP_SoundManager_C_OnChangeDriveLevel");
static_assert(sizeof(BP_SoundManager_C_OnChangeDriveLevel) == 0x000004, "Wrong size on BP_SoundManager_C_OnChangeDriveLevel");
static_assert(offsetof(BP_SoundManager_C_OnChangeDriveLevel, DriveLevel) == 0x000000, "Member 'BP_SoundManager_C_OnChangeDriveLevel::DriveLevel' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnDriveStart
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundManager_C_OnDriveStart final
{
public:
	int32                                         DriveLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnDriveStart) == 0x000004, "Wrong alignment on BP_SoundManager_C_OnDriveStart");
static_assert(sizeof(BP_SoundManager_C_OnDriveStart) == 0x000004, "Wrong size on BP_SoundManager_C_OnDriveStart");
static_assert(offsetof(BP_SoundManager_C_OnDriveStart, DriveLevel) == 0x000000, "Member 'BP_SoundManager_C_OnDriveStart::DriveLevel' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnChangeBattleBgm
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_OnChangeBattleBgm final
{
public:
	Enum_EnemySound                               EnemySound;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnChangeBattleBgm) == 0x000001, "Wrong alignment on BP_SoundManager_C_OnChangeBattleBgm");
static_assert(sizeof(BP_SoundManager_C_OnChangeBattleBgm) == 0x000001, "Wrong size on BP_SoundManager_C_OnChangeBattleBgm");
static_assert(offsetof(BP_SoundManager_C_OnChangeBattleBgm, EnemySound) == 0x000000, "Member 'BP_SoundManager_C_OnChangeBattleBgm::EnemySound' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnCopyEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnCopyEnd final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ECE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnCopyEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnCopyEnd");
static_assert(sizeof(BP_SoundManager_C_OnCopyEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnCopyEnd");
static_assert(offsetof(BP_SoundManager_C_OnCopyEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnCopyEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnCopyEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnCopyEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnCopyEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnCopyEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnCopyStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnCopyStart final
{
public:
	struct FFSASCopyParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ECF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnCopyStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnCopyStart");
static_assert(sizeof(BP_SoundManager_C_OnCopyStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnCopyStart");
static_assert(offsetof(BP_SoundManager_C_OnCopyStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnCopyStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnCopyStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnCopyStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnStealthStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnStealthStart final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnStealthStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnStealthStart");
static_assert(sizeof(BP_SoundManager_C_OnStealthStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnStealthStart");
static_assert(offsetof(BP_SoundManager_C_OnStealthStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnStealthStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnStealthStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnStealthStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnStealthEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnStealthEnd final
{
public:
	struct FFSASStealthParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnStealthEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnStealthEnd");
static_assert(sizeof(BP_SoundManager_C_OnStealthEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnStealthEnd");
static_assert(offsetof(BP_SoundManager_C_OnStealthEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnStealthEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnStealthEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnStealthEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnStealthEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnStealthEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnMetalEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnMetalEnd final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnMetalEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnMetalEnd");
static_assert(sizeof(BP_SoundManager_C_OnMetalEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnMetalEnd");
static_assert(offsetof(BP_SoundManager_C_OnMetalEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnMetalEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnMetalEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnMetalEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnMetalEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnMetalEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnMetalStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnMetalStart final
{
public:
	struct FFSASMetalParam                        Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnMetalStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnMetalStart");
static_assert(sizeof(BP_SoundManager_C_OnMetalStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnMetalStart");
static_assert(offsetof(BP_SoundManager_C_OnMetalStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnMetalStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnMetalStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnMetalStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnTelepoEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnTelepoEnd final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnTelepoEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnTelepoEnd");
static_assert(sizeof(BP_SoundManager_C_OnTelepoEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnTelepoEnd");
static_assert(offsetof(BP_SoundManager_C_OnTelepoEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnTelepoEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnTelepoEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnTelepoEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnTelepoEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnTelepoEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnTelepoStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnTelepoStart final
{
public:
	struct FFSASTelepoParam                       Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnTelepoStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnTelepoStart");
static_assert(sizeof(BP_SoundManager_C_OnTelepoStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnTelepoStart");
static_assert(offsetof(BP_SoundManager_C_OnTelepoStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnTelepoStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnTelepoStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnTelepoStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnSeeThroughEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnSeeThroughEnd final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnSeeThroughEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnSeeThroughEnd");
static_assert(sizeof(BP_SoundManager_C_OnSeeThroughEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnSeeThroughEnd");
static_assert(offsetof(BP_SoundManager_C_OnSeeThroughEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnSeeThroughEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnSeeThroughEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnSeeThroughEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnSeeThroughEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnSeeThroughEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnSeeThroughStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnSeeThroughStart final
{
public:
	struct FFSASSeeThroughParam                   Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnSeeThroughStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnSeeThroughStart");
static_assert(sizeof(BP_SoundManager_C_OnSeeThroughStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnSeeThroughStart");
static_assert(offsetof(BP_SoundManager_C_OnSeeThroughStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnSeeThroughStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnSeeThroughStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnSeeThroughStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnFireEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnFireEnd final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnFireEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnFireEnd");
static_assert(sizeof(BP_SoundManager_C_OnFireEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnFireEnd");
static_assert(offsetof(BP_SoundManager_C_OnFireEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnFireEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnFireEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnFireEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnFireEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnFireEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnFireStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnFireStart final
{
public:
	struct FFSASFireParam                         Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnFireStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnFireStart");
static_assert(sizeof(BP_SoundManager_C_OnFireStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnFireStart");
static_assert(offsetof(BP_SoundManager_C_OnFireStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnFireStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnFireStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnFireStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnElectricEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnElectricEnd final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnElectricEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnElectricEnd");
static_assert(sizeof(BP_SoundManager_C_OnElectricEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnElectricEnd");
static_assert(offsetof(BP_SoundManager_C_OnElectricEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnElectricEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnElectricEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnElectricEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnElectricEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnElectricEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnElectricStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnElectricStart final
{
public:
	struct FFSASElectricParam                     Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnElectricStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnElectricStart");
static_assert(sizeof(BP_SoundManager_C_OnElectricStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnElectricStart");
static_assert(offsetof(BP_SoundManager_C_OnElectricStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnElectricStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnElectricStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnElectricStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnAcceleratorEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_OnAcceleratorEnd final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_OnAcceleratorEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnAcceleratorEnd");
static_assert(sizeof(BP_SoundManager_C_OnAcceleratorEnd) == 0x000020, "Wrong size on BP_SoundManager_C_OnAcceleratorEnd");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorEnd, Parameter) == 0x000000, "Member 'BP_SoundManager_C_OnAcceleratorEnd::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorEnd, Param_Owner) == 0x000010, "Member 'BP_SoundManager_C_OnAcceleratorEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorEnd, RemainTime) == 0x000018, "Member 'BP_SoundManager_C_OnAcceleratorEnd::RemainTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorEnd, bHologram) == 0x00001C, "Member 'BP_SoundManager_C_OnAcceleratorEnd::bHologram' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnAcceleratorStart
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_OnAcceleratorStart final
{
public:
	struct FAcceleratorParam                      Parameter;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHologram;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_OnAcceleratorStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnAcceleratorStart");
static_assert(sizeof(BP_SoundManager_C_OnAcceleratorStart) == 0x000020, "Wrong size on BP_SoundManager_C_OnAcceleratorStart");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorStart, Parameter) == 0x000000, "Member 'BP_SoundManager_C_OnAcceleratorStart::Parameter' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorStart, Param_Owner) == 0x000010, "Member 'BP_SoundManager_C_OnAcceleratorStart::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnAcceleratorStart, bHologram) == 0x000018, "Member 'BP_SoundManager_C_OnAcceleratorStart::bHologram' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnStaticEventPhaseMove_
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnStaticEventPhaseMove_ final
{
public:
	class FString                                 AnimPath;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnStaticEventPhaseMove_) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnStaticEventPhaseMove_");
static_assert(sizeof(BP_SoundManager_C_OnStaticEventPhaseMove_) == 0x000010, "Wrong size on BP_SoundManager_C_OnStaticEventPhaseMove_");
static_assert(offsetof(BP_SoundManager_C_OnStaticEventPhaseMove_, AnimPath) == 0x000000, "Member 'BP_SoundManager_C_OnStaticEventPhaseMove_::AnimPath' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnPlaySeEmAppearEnd
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_OnPlaySeEmAppearEnd final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Creator;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnPlaySeEmAppearEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnPlaySeEmAppearEnd");
static_assert(sizeof(BP_SoundManager_C_OnPlaySeEmAppearEnd) == 0x000020, "Wrong size on BP_SoundManager_C_OnPlaySeEmAppearEnd");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearEnd, Location) == 0x000000, "Member 'BP_SoundManager_C_OnPlaySeEmAppearEnd::Location' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearEnd, Rotation) == 0x00000C, "Member 'BP_SoundManager_C_OnPlaySeEmAppearEnd::Rotation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearEnd, Creator) == 0x000018, "Member 'BP_SoundManager_C_OnPlaySeEmAppearEnd::Creator' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnPlaySeEmAppearStart
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_OnPlaySeEmAppearStart final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                Creator;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnPlaySeEmAppearStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnPlaySeEmAppearStart");
static_assert(sizeof(BP_SoundManager_C_OnPlaySeEmAppearStart) == 0x000020, "Wrong size on BP_SoundManager_C_OnPlaySeEmAppearStart");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearStart, Location) == 0x000000, "Member 'BP_SoundManager_C_OnPlaySeEmAppearStart::Location' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearStart, Rotation) == 0x00000C, "Member 'BP_SoundManager_C_OnPlaySeEmAppearStart::Rotation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeEmAppearStart, Creator) == 0x000018, "Member 'BP_SoundManager_C_OnPlaySeEmAppearStart::Creator' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnPlaySeSASCommandOn
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_OnPlaySeSASCommandOn final
{
public:
	bool                                          IsSAS;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_OnPlaySeSASCommandOn) == 0x000001, "Wrong alignment on BP_SoundManager_C_OnPlaySeSASCommandOn");
static_assert(sizeof(BP_SoundManager_C_OnPlaySeSASCommandOn) == 0x000001, "Wrong size on BP_SoundManager_C_OnPlaySeSASCommandOn");
static_assert(offsetof(BP_SoundManager_C_OnPlaySeSASCommandOn, IsSAS) == 0x000000, "Member 'BP_SoundManager_C_OnPlaySeSASCommandOn::IsSAS' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnBrainCrashTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_SoundManager_C_OnBrainCrashTarget final
{
public:
	class ARSCharacterBase*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnBrainCrashTarget) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnBrainCrashTarget");
static_assert(sizeof(BP_SoundManager_C_OnBrainCrashTarget) == 0x000008, "Wrong size on BP_SoundManager_C_OnBrainCrashTarget");
static_assert(offsetof(BP_SoundManager_C_OnBrainCrashTarget, Target) == 0x000000, "Member 'BP_SoundManager_C_OnBrainCrashTarget::Target' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadSASExtraAdlibVoice
// 0x0008 (0x0008 - 0x0000)
struct BP_SoundManager_C_LoadSASExtraAdlibVoice final
{
public:
	class ULevelSequence*                         TargetSequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadSASExtraAdlibVoice) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadSASExtraAdlibVoice");
static_assert(sizeof(BP_SoundManager_C_LoadSASExtraAdlibVoice) == 0x000008, "Wrong size on BP_SoundManager_C_LoadSASExtraAdlibVoice");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoice, TargetSequence) == 0x000000, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoice::TargetSequence' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadAdlibVoiceCue
// 0x0008 (0x0008 - 0x0000)
struct BP_SoundManager_C_LoadAdlibVoiceCue final
{
public:
	class ULevelSequence*                         Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadAdlibVoiceCue) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadAdlibVoiceCue");
static_assert(sizeof(BP_SoundManager_C_LoadAdlibVoiceCue) == 0x000008, "Wrong size on BP_SoundManager_C_LoadAdlibVoiceCue");
static_assert(offsetof(BP_SoundManager_C_LoadAdlibVoiceCue, Sequencer) == 0x000000, "Member 'BP_SoundManager_C_LoadAdlibVoiceCue::Sequencer' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnEventEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnEventEnd final
{
public:
	ESequencerSoundDemoType                       DemoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EventID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          SoundCue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnEventEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnEventEnd");
static_assert(sizeof(BP_SoundManager_C_OnEventEnd) == 0x000010, "Wrong size on BP_SoundManager_C_OnEventEnd");
static_assert(offsetof(BP_SoundManager_C_OnEventEnd, DemoType) == 0x000000, "Member 'BP_SoundManager_C_OnEventEnd::DemoType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnEventEnd, EventID) == 0x000004, "Member 'BP_SoundManager_C_OnEventEnd::EventID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnEventEnd, SoundCue) == 0x000008, "Member 'BP_SoundManager_C_OnEventEnd::SoundCue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnEventStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnEventStart final
{
public:
	ESequencerSoundDemoType                       DemoType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDF[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EventID;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          SoundCue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnEventStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnEventStart");
static_assert(sizeof(BP_SoundManager_C_OnEventStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnEventStart");
static_assert(offsetof(BP_SoundManager_C_OnEventStart, DemoType) == 0x000000, "Member 'BP_SoundManager_C_OnEventStart::DemoType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnEventStart, EventID) == 0x000004, "Member 'BP_SoundManager_C_OnEventStart::EventID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnEventStart, SoundCue) == 0x000008, "Member 'BP_SoundManager_C_OnEventStart::SoundCue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnPsychicEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_OnPsychicEnd final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EE0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainTime;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnPsychicEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnPsychicEnd");
static_assert(sizeof(BP_SoundManager_C_OnPsychicEnd) == 0x000018, "Wrong size on BP_SoundManager_C_OnPsychicEnd");
static_assert(offsetof(BP_SoundManager_C_OnPsychicEnd, Param) == 0x000000, "Member 'BP_SoundManager_C_OnPsychicEnd::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPsychicEnd, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnPsychicEnd::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPsychicEnd, RemainTime) == 0x000010, "Member 'BP_SoundManager_C_OnPsychicEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnPsychicStart
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_OnPsychicStart final
{
public:
	struct FFSASPsychicParam                      Param;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EE1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_OnPsychicStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnPsychicStart");
static_assert(sizeof(BP_SoundManager_C_OnPsychicStart) == 0x000010, "Wrong size on BP_SoundManager_C_OnPsychicStart");
static_assert(offsetof(BP_SoundManager_C_OnPsychicStart, Param) == 0x000000, "Member 'BP_SoundManager_C_OnPsychicStart::Param' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnPsychicStart, Param_Owner) == 0x000008, "Member 'BP_SoundManager_C_OnPsychicStart::Param_Owner' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.UpdateOcclusion
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SoundManager_C_UpdateOcclusion final
{
public:
	struct FVector                                _CameraLocation;                                   // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE2[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_UpdateOcclusion) == 0x000008, "Wrong alignment on BP_SoundManager_C_UpdateOcclusion");
static_assert(sizeof(BP_SoundManager_C_UpdateOcclusion) == 0x0000E0, "Wrong size on BP_SoundManager_C_UpdateOcclusion");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, _CameraLocation) == 0x000000, "Member 'BP_SoundManager_C_UpdateOcclusion::_CameraLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SoundManager_C_UpdateOcclusion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SoundManager_C_UpdateOcclusion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, Temp_object_Variable) == 0x000020, "Member 'BP_SoundManager_C_UpdateOcclusion::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_UpdateOcclusion, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'BP_SoundManager_C_UpdateOcclusion::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.GetPhyshicsCollisionSound
// 0x0038 (0x0038 - 0x0000)
struct BP_SoundManager_C_GetPhyshicsCollisionSound final
{
public:
	struct FRSCollisionSoundInfo                  CollisionSoundInfo;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRSCollisionSound                      CollisionSound;                                    // 0x0010(0x0028)(Parm, OutParm)
};
static_assert(alignof(BP_SoundManager_C_GetPhyshicsCollisionSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_GetPhyshicsCollisionSound");
static_assert(sizeof(BP_SoundManager_C_GetPhyshicsCollisionSound) == 0x000038, "Wrong size on BP_SoundManager_C_GetPhyshicsCollisionSound");
static_assert(offsetof(BP_SoundManager_C_GetPhyshicsCollisionSound, CollisionSoundInfo) == 0x000000, "Member 'BP_SoundManager_C_GetPhyshicsCollisionSound::CollisionSoundInfo' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPhyshicsCollisionSound, CollisionSound) == 0x000010, "Member 'BP_SoundManager_C_GetPhyshicsCollisionSound::CollisionSound' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Initialize
// 0x0060 (0x0060 - 0x0000)
struct BP_SoundManager_C_Initialize final
{
public:
	class UDataTable*                             CollisionSoundDataTable;                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EE3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE4[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRSCollisionSound                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE5[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_Initialize) == 0x000008, "Wrong alignment on BP_SoundManager_C_Initialize");
static_assert(sizeof(BP_SoundManager_C_Initialize) == 0x000060, "Wrong size on BP_SoundManager_C_Initialize");
static_assert(offsetof(BP_SoundManager_C_Initialize, CollisionSoundDataTable) == 0x000000, "Member 'BP_SoundManager_C_Initialize::CollisionSoundDataTable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SoundManager_C_Initialize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SoundManager_C_Initialize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'BP_SoundManager_C_Initialize::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_Initialize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_Initialize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_SoundManager_C_Initialize::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_SoundManager_C_Initialize::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'BP_SoundManager_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Change Level
// 0x0168 (0x0168 - 0x0000)
struct BP_SoundManager_C_Change_Level final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeLocation;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundLevelParam                       LevelParam;                                        // 0x0010(0x00A0)(Edit, BlueprintVisible)
	struct FSoundLevelParam                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE7[0x5];                                     // 0x0153(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_Change_Level) == 0x000008, "Wrong alignment on BP_SoundManager_C_Change_Level");
static_assert(sizeof(BP_SoundManager_C_Change_Level) == 0x000168, "Wrong size on BP_SoundManager_C_Change_Level");
static_assert(offsetof(BP_SoundManager_C_Change_Level, Param_Name) == 0x000000, "Member 'BP_SoundManager_C_Change_Level::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, IsChangeLocation) == 0x000008, "Member 'BP_SoundManager_C_Change_Level::IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, LevelParam) == 0x000010, "Member 'BP_SoundManager_C_Change_Level::LevelParam' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BP_SoundManager_C_Change_Level::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'BP_SoundManager_C_Change_Level::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_IsValid_ReturnValue) == 0x000151, "Member 'BP_SoundManager_C_Change_Level::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_IsValid_ReturnValue_1) == 0x000152, "Member 'BP_SoundManager_C_Change_Level::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x000158, "Member 'BP_SoundManager_C_Change_Level::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_RegisterCueSheet_ReturnValue) == 0x000160, "Member 'BP_SoundManager_C_Change_Level::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Change_Level, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000161, "Member 'BP_SoundManager_C_Change_Level::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Aplly Change Level Sound Setting
// 0x0110 (0x0110 - 0x0000)
struct BP_SoundManager_C_Aplly_Change_Level_Sound_Setting final
{
public:
	struct FSoundLevelParam                       LevelParam;                                        // 0x0000(0x00A0)(Edit, BlueprintVisible)
	bool                                          IsChangeLocation;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE8[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EE9[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayEnv_ReturnValue;                      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue; // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EEA[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayBgm_ReturnValue;                      // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EEB[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting) == 0x000008, "Wrong alignment on BP_SoundManager_C_Aplly_Change_Level_Sound_Setting");
static_assert(sizeof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting) == 0x000110, "Wrong size on BP_SoundManager_C_Aplly_Change_Level_Sound_Setting");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, LevelParam) == 0x000000, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::LevelParam' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, IsChangeLocation) == 0x0000A0, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_LoadSoftObject_ReturnValue) == 0x0000A8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x0000B0, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0000B8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue_1) == 0x0000C2, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000C3, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_Conv_NameToString_ReturnValue) == 0x0000C8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_Contains_ReturnValue) == 0x0000D8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue_2) == 0x0000D9, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_PlayEnv_ReturnValue) == 0x0000DA, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_PlayEnv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue_3) == 0x0000DB, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_Contains_ReturnValue_1) == 0x0000DC, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_Contains_ReturnValue_2) == 0x0000DD, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_Contains_ReturnValue_3) == 0x0000DE, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_BooleanOR_ReturnValue) == 0x0000DF, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_BooleanOR_ReturnValue_1) == 0x0000E0, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue_4) == 0x0000E1, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_SetInGameVolumeByCategoryName_ReturnValue) == 0x0000E2, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_SetInGameVolumeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_LoadSoftObject_ReturnValue_1) == 0x0000E8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x0000F0, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000F9, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_StopBgm_ReturnValue) == 0x0000FA, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_PlayBgm_ReturnValue) == 0x0000FB, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_PlayBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1) == 0x000100, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Aplly_Change_Level_Sound_Setting, CallFunc_IsValid_ReturnValue_5) == 0x000108, "Member 'BP_SoundManager_C_Aplly_Change_Level_Sound_Setting::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ChangeBgmLcOrBt
// 0x0198 (0x0198 - 0x0000)
struct BP_SoundManager_C_ChangeBgmLcOrBt final
{
public:
	bool                                          IsBattleIn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EEC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EED[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattlefieldManager*                    CallFunc_GetBattleFieldManager_BattleFieldManager; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCurrentBattlefieldInfo_Exist;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EEE[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlefieldInfo                       CallFunc_GetCurrentBattlefieldInfo_ReturnValue;    // 0x0038(0x0088)(ConstParm)
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EEF[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFProgressNo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0101(0x0001)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF0[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF1[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component_1;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEventManager_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF2[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager_1;          // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF3[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF4[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF5[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFProgressNo                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x016C(0x0001)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF6[0x2];                                     // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Macro_GetPartyTotalExp_ReturnValue;       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EF7[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EF8[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Macro_GetPartyTotalExp_ReturnValue_1;     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ChangeBgmLcOrBt) == 0x000008, "Wrong alignment on BP_SoundManager_C_ChangeBgmLcOrBt");
static_assert(sizeof(BP_SoundManager_C_ChangeBgmLcOrBt) == 0x000198, "Wrong size on BP_SoundManager_C_ChangeBgmLcOrBt");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, IsBattleIn) == 0x000000, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::IsBattleIn' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000010, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetBattleFieldManager_BattleFieldManager) == 0x000028, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetBattleFieldManager_BattleFieldManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetCurrentBattlefieldInfo_Exist) == 0x000031, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetCurrentBattlefieldInfo_Exist' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetCurrentBattlefieldInfo_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetCurrentBattlefieldInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetEventManager_ReturnValue) == 0x0000C0, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1) == 0x0000C8, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x0000D0, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue_1) == 0x0000E1, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetProgressID_ProgressID) == 0x0000E4, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E8, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Conv_StringToName_ReturnValue) == 0x0000F8, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue_2) == 0x000100, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetDataTableRowFromName_OutRow) == 0x000101, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000102, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetBgmComponent_Component) == 0x000108, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue_3) == 0x000110, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsPlaying_ReturnValue) == 0x000111, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetBgmComponent_Component_1) == 0x000118, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetBgmComponent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetEventManager_ReturnValue_1) == 0x000120, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetEventManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue_4) == 0x000128, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_AsBPI_Event_Manager_1) == 0x000130, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_AsBPI_Event_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetProgressID_ProgressID_1) == 0x000144, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetProgressID_ProgressID_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsValid_ReturnValue_5) == 0x000148, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000150, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_IsPlaying_ReturnValue_1) == 0x000160, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000164, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x00016C, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x00016D, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Macro_GetPartyTotalExp_ReturnValue) == 0x000170, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Macro_GetPartyTotalExp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000178, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x000180, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000189, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_BooleanOR_ReturnValue) == 0x00018A, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_Macro_GetPartyTotalExp_ReturnValue_1) == 0x00018C, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_Macro_GetPartyTotalExp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeBgmLcOrBt, CallFunc_StopBgm_ReturnValue) == 0x000190, "Member 'BP_SoundManager_C_ChangeBgmLcOrBt::CallFunc_StopBgm_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayBgm
// 0x00D8 (0x00D8 - 0x0000)
struct BP_SoundManager_C_PlayBgm final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EF9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          AtomCue;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceFirstStart;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          NewLocalVar_3;                                     // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFA[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          NewLocalVar_2;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   NewLocalVar_1;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _CategoryInt;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _LoopLastIndex;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          TmpCue;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   TmpComponent;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RetVal;                                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFB[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TmpIndex;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFC[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAtomComponentStatus Status, class UAtomComponent* AtomComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAtomComponentStatus Status, class UAtomComponent* AtomComponent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFD[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidBgmIndex_Valid;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EFE[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EFF[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F00[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F01[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F02[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F03[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_SelectBgmCue_Return;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayBgm) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayBgm");
static_assert(sizeof(BP_SoundManager_C_PlayBgm) == 0x0000D8, "Wrong size on BP_SoundManager_C_PlayBgm");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, Category) == 0x000000, "Member 'BP_SoundManager_C_PlayBgm::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, AtomCue) == 0x000008, "Member 'BP_SoundManager_C_PlayBgm::AtomCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, FadeTime) == 0x000010, "Member 'BP_SoundManager_C_PlayBgm::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, FadeVolume) == 0x000014, "Member 'BP_SoundManager_C_PlayBgm::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, ForceFirstStart) == 0x000018, "Member 'BP_SoundManager_C_PlayBgm::ForceFirstStart' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, ReturnValue) == 0x000019, "Member 'BP_SoundManager_C_PlayBgm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, NewLocalVar_3) == 0x00001A, "Member 'BP_SoundManager_C_PlayBgm::NewLocalVar_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, NewLocalVar_2) == 0x000020, "Member 'BP_SoundManager_C_PlayBgm::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, NewLocalVar_1) == 0x000028, "Member 'BP_SoundManager_C_PlayBgm::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, _CategoryInt) == 0x000030, "Member 'BP_SoundManager_C_PlayBgm::_CategoryInt' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, _LoopLastIndex) == 0x000034, "Member 'BP_SoundManager_C_PlayBgm::_LoopLastIndex' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, TmpCue) == 0x000038, "Member 'BP_SoundManager_C_PlayBgm::TmpCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, TmpComponent) == 0x000040, "Member 'BP_SoundManager_C_PlayBgm::TmpComponent' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, RetVal) == 0x000048, "Member 'BP_SoundManager_C_PlayBgm::RetVal' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, TmpIndex) == 0x00004C, "Member 'BP_SoundManager_C_PlayBgm::TmpIndex' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_SetFadeByCategoryName_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_SetFadeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'BP_SoundManager_C_PlayBgm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'BP_SoundManager_C_PlayBgm::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000078, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValidBgmIndex_Valid) == 0x00007C, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValidBgmIndex_Valid' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsPlaying_ReturnValue) == 0x00007D, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsPaused_ReturnValue) == 0x00007E, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Conv_IntToByte_ReturnValue) == 0x00007F, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_GetValidValue_ReturnValue) == 0x000080, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000088, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_StopBgm_ReturnValue) == 0x000090, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, Temp_int_Variable) == 0x00009C, "Member 'BP_SoundManager_C_PlayBgm::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000A9, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValid_ReturnValue_2) == 0x0000AA, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000AC, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_SelectBgmCue_Return) == 0x0000C8, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_SelectBgmCue_Return' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValid_ReturnValue_3) == 0x0000D1, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_IsValid_ReturnValue_4) == 0x0000D2, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D3, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBgm, CallFunc_BooleanAND_ReturnValue) == 0x0000D4, "Member 'BP_SoundManager_C_PlayBgm::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopBgm
// 0x0040 (0x0040 - 0x0000)
struct BP_SoundManager_C_StopBgm final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F04[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F05[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   TmpBgm;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidBgmIndex_Valid;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F06[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F07[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F08[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class URSAtomComponentBase*             Temp_object_Variable;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_StopBgm) == 0x000008, "Wrong alignment on BP_SoundManager_C_StopBgm");
static_assert(sizeof(BP_SoundManager_C_StopBgm) == 0x000040, "Wrong size on BP_SoundManager_C_StopBgm");
static_assert(offsetof(BP_SoundManager_C_StopBgm, Category) == 0x000000, "Member 'BP_SoundManager_C_StopBgm::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, FadeTime) == 0x000004, "Member 'BP_SoundManager_C_StopBgm::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, FadeVolume) == 0x000008, "Member 'BP_SoundManager_C_StopBgm::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_StopBgm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, TmpBgm) == 0x000010, "Member 'BP_SoundManager_C_StopBgm::TmpBgm' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_StopBgm::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, CallFunc_IsValidBgmIndex_Valid) == 0x00001C, "Member 'BP_SoundManager_C_StopBgm::CallFunc_IsValidBgmIndex_Valid' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_StopBgm::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SoundManager_C_StopBgm::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_StopBgm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopBgm, Temp_object_Variable) == 0x000038, "Member 'BP_SoundManager_C_StopBgm::Temp_object_Variable' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ResumeBgm
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_ResumeBgm final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F09[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F0A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ResumeBgm) == 0x000008, "Wrong alignment on BP_SoundManager_C_ResumeBgm");
static_assert(sizeof(BP_SoundManager_C_ResumeBgm) == 0x000020, "Wrong size on BP_SoundManager_C_ResumeBgm");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, Category) == 0x000000, "Member 'BP_SoundManager_C_ResumeBgm::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, FadeTime) == 0x000004, "Member 'BP_SoundManager_C_ResumeBgm::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, FadeVolume) == 0x000008, "Member 'BP_SoundManager_C_ResumeBgm::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_ResumeBgm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, CallFunc_GetBgmComponent_Component) == 0x000010, "Member 'BP_SoundManager_C_ResumeBgm::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeBgm, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_ResumeBgm::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PauseBgm
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_PauseBgm final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F0B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F0C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PauseBgm) == 0x000008, "Wrong alignment on BP_SoundManager_C_PauseBgm");
static_assert(sizeof(BP_SoundManager_C_PauseBgm) == 0x000020, "Wrong size on BP_SoundManager_C_PauseBgm");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, Category) == 0x000000, "Member 'BP_SoundManager_C_PauseBgm::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, FadeTime) == 0x000004, "Member 'BP_SoundManager_C_PauseBgm::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, FadeVolume) == 0x000008, "Member 'BP_SoundManager_C_PauseBgm::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_PauseBgm::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, CallFunc_GetBgmComponent_Component) == 0x000010, "Member 'BP_SoundManager_C_PauseBgm::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseBgm, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PauseBgm::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayEnv
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_PlayEnv final
{
public:
	class USoundAtomCue*                          AtomCue;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayEnv) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayEnv");
static_assert(sizeof(BP_SoundManager_C_PlayEnv) == 0x000018, "Wrong size on BP_SoundManager_C_PlayEnv");
static_assert(offsetof(BP_SoundManager_C_PlayEnv, AtomCue) == 0x000000, "Member 'BP_SoundManager_C_PlayEnv::AtomCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnv, FadeTime) == 0x000008, "Member 'BP_SoundManager_C_PlayEnv::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnv, FadeVolume) == 0x00000C, "Member 'BP_SoundManager_C_PlayEnv::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnv, ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlayEnv::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopEnv
// 0x000C (0x000C - 0x0000)
struct BP_SoundManager_C_StopEnv final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_StopEnv) == 0x000004, "Wrong alignment on BP_SoundManager_C_StopEnv");
static_assert(sizeof(BP_SoundManager_C_StopEnv) == 0x00000C, "Wrong size on BP_SoundManager_C_StopEnv");
static_assert(offsetof(BP_SoundManager_C_StopEnv, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_StopEnv::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopEnv, FadeVolume) == 0x000004, "Member 'BP_SoundManager_C_StopEnv::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopEnv, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_StopEnv::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PauseEnv
// 0x000C (0x000C - 0x0000)
struct BP_SoundManager_C_PauseEnv final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PauseEnv) == 0x000004, "Wrong alignment on BP_SoundManager_C_PauseEnv");
static_assert(sizeof(BP_SoundManager_C_PauseEnv) == 0x00000C, "Wrong size on BP_SoundManager_C_PauseEnv");
static_assert(offsetof(BP_SoundManager_C_PauseEnv, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_PauseEnv::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseEnv, FadeVolume) == 0x000004, "Member 'BP_SoundManager_C_PauseEnv::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseEnv, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_PauseEnv::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ResumeEnv
// 0x000C (0x000C - 0x0000)
struct BP_SoundManager_C_ResumeEnv final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ResumeEnv) == 0x000004, "Wrong alignment on BP_SoundManager_C_ResumeEnv");
static_assert(sizeof(BP_SoundManager_C_ResumeEnv) == 0x00000C, "Wrong size on BP_SoundManager_C_ResumeEnv");
static_assert(offsetof(BP_SoundManager_C_ResumeEnv, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_ResumeEnv::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeEnv, FadeVolume) == 0x000004, "Member 'BP_SoundManager_C_ResumeEnv::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeEnv, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_ResumeEnv::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.GetBgmComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_GetBgmComponent final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F0D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   Component;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidBgmIndex_Valid;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F0E[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_GetBgmComponent) == 0x000008, "Wrong alignment on BP_SoundManager_C_GetBgmComponent");
static_assert(sizeof(BP_SoundManager_C_GetBgmComponent) == 0x000020, "Wrong size on BP_SoundManager_C_GetBgmComponent");
static_assert(offsetof(BP_SoundManager_C_GetBgmComponent, Category) == 0x000000, "Member 'BP_SoundManager_C_GetBgmComponent::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBgmComponent, Component) == 0x000008, "Member 'BP_SoundManager_C_GetBgmComponent::Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBgmComponent, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_GetBgmComponent::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBgmComponent, CallFunc_IsValidBgmIndex_Valid) == 0x000014, "Member 'BP_SoundManager_C_GetBgmComponent::CallFunc_IsValidBgmIndex_Valid' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBgmComponent, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SoundManager_C_GetBgmComponent::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SelectBgmCue
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_SelectBgmCue final
{
public:
	class USoundAtomCue*                          OldCue;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          NewCue;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Return;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F0F[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_SelectBgmCue) == 0x000008, "Wrong alignment on BP_SoundManager_C_SelectBgmCue");
static_assert(sizeof(BP_SoundManager_C_SelectBgmCue) == 0x000028, "Wrong size on BP_SoundManager_C_SelectBgmCue");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, OldCue) == 0x000000, "Member 'BP_SoundManager_C_SelectBgmCue::OldCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, NewCue) == 0x000008, "Member 'BP_SoundManager_C_SelectBgmCue::NewCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, Return) == 0x000010, "Member 'BP_SoundManager_C_SelectBgmCue::Return' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, Temp_bool_Variable) == 0x000018, "Member 'BP_SoundManager_C_SelectBgmCue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_SoundManager_C_SelectBgmCue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SelectBgmCue, K2Node_Select_Default) == 0x000020, "Member 'BP_SoundManager_C_SelectBgmCue::K2Node_Select_Default' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsBrainField
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_IsBrainField final
{
public:
	bool                                          Param_IsBrainField;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetVal;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F10[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsBrainField) == 0x000008, "Wrong alignment on BP_SoundManager_C_IsBrainField");
static_assert(sizeof(BP_SoundManager_C_IsBrainField) == 0x000018, "Wrong size on BP_SoundManager_C_IsBrainField");
static_assert(offsetof(BP_SoundManager_C_IsBrainField, Param_IsBrainField) == 0x000000, "Member 'BP_SoundManager_C_IsBrainField::Param_IsBrainField' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBrainField, RetVal) == 0x000001, "Member 'BP_SoundManager_C_IsBrainField::RetVal' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBrainField, CallFunc_GetBgmComponent_Component) == 0x000008, "Member 'BP_SoundManager_C_IsBrainField::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBrainField, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_IsBrainField::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBrainField, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SoundManager_C_IsBrainField::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetLevelSound
// 0x0320 (0x0320 - 0x0000)
struct BP_SoundManager_C_SetLevelSound final
{
public:
	struct FSoundLevelParam                       LevelParam;                                        // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSoftObjectPtr<class USoundAtomCue>           TempEnvCue;                                        // 0x00A0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           TempCtrlCue;                                       // 0x00C8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EBgmCategory                                  TempBgmSlot;                                       // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F11[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           TempBgmCue;                                        // 0x00F8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EPlayerID                                     _PlayerID;                                         // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F12[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 _LavelName;                                        // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 _LabelNameSuffix;                                  // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ProgressId;                                        // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DetectDlcBondsLevelSound_isDetected;      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F13[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_DetectDlcBondsLevelSound_BGMCue;          // 0x0160(0x0028)(HasGetValueTypeHash)
	EBgmCategory                                  CallFunc_DetectDlcBondsLevelSound_BGMSlot;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F14[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_DetectDlcBondsLevelSound_BGMCtrlCue;      // 0x0190(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           CallFunc_DetectDlcBondsLevelSound_EnvCue;          // 0x01B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsDlcBondsPlaying_isPlaying;              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F15[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F16[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F17[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F18[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_2;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F19[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_3;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1A[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_4;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1B[0x7];                                     // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_5;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_5;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1C[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2; // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1D[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1E[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1F[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F20[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5; // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_playerID;       // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_targetID;       // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsProgressBondsEpisode_ReturnValue;    // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBondsProgress_ReturnValue;             // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F21[0x3];                                     // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x031E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x031F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetLevelSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetLevelSound");
static_assert(sizeof(BP_SoundManager_C_SetLevelSound) == 0x000320, "Wrong size on BP_SoundManager_C_SetLevelSound");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, LevelParam) == 0x000000, "Member 'BP_SoundManager_C_SetLevelSound::LevelParam' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, TempEnvCue) == 0x0000A0, "Member 'BP_SoundManager_C_SetLevelSound::TempEnvCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, TempCtrlCue) == 0x0000C8, "Member 'BP_SoundManager_C_SetLevelSound::TempCtrlCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, TempBgmSlot) == 0x0000F0, "Member 'BP_SoundManager_C_SetLevelSound::TempBgmSlot' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, TempBgmCue) == 0x0000F8, "Member 'BP_SoundManager_C_SetLevelSound::TempBgmCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, _PlayerID) == 0x000120, "Member 'BP_SoundManager_C_SetLevelSound::_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, _LavelName) == 0x000128, "Member 'BP_SoundManager_C_SetLevelSound::_LavelName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, _LabelNameSuffix) == 0x000138, "Member 'BP_SoundManager_C_SetLevelSound::_LabelNameSuffix' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, ProgressId) == 0x000148, "Member 'BP_SoundManager_C_SetLevelSound::ProgressId' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, Temp_int_Loop_Counter_Variable) == 0x00014C, "Member 'BP_SoundManager_C_SetLevelSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Add_IntInt_ReturnValue) == 0x000150, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, Temp_int_Array_Index_Variable) == 0x000154, "Member 'BP_SoundManager_C_SetLevelSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue) == 0x000158, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValidCurrentSimulatorLevelInfos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_DetectDlcBondsLevelSound_isDetected) == 0x000159, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_DetectDlcBondsLevelSound_isDetected' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_DetectDlcBondsLevelSound_BGMCue) == 0x000160, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_DetectDlcBondsLevelSound_BGMCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_DetectDlcBondsLevelSound_BGMSlot) == 0x000188, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_DetectDlcBondsLevelSound_BGMSlot' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_DetectDlcBondsLevelSound_BGMCtrlCue) == 0x000190, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_DetectDlcBondsLevelSound_BGMCtrlCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_DetectDlcBondsLevelSound_EnvCue) == 0x0001B8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_DetectDlcBondsLevelSound_EnvCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsDlcBondsPlaying_isPlaying) == 0x0001E0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsDlcBondsPlaying_isPlaying' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue) == 0x0001E8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0001F0, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000200, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue) == 0x000208, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000210, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x000218, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000228, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue_2) == 0x000230, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_2) == 0x000238, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue_3) == 0x000240, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue_4) == 0x000248, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue_3) == 0x000250, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_3) == 0x000258, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue_4) == 0x000260, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_4) == 0x000268, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LoadSoftObject_ReturnValue_5) == 0x000270, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LoadSoftObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsSound_Atom_Cue_5) == 0x000278, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsSound_Atom_Cue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_5) == 0x000280, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1) == 0x000288, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2) == 0x000290, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_1) == 0x000298, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_2) == 0x000299, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetEventManager_ReturnValue) == 0x0002A0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x0002A8, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, K2Node_DynamicCast_bSuccess_6) == 0x0002B8, "Member 'BP_SoundManager_C_SetLevelSound::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetProgressID_ProgressID) == 0x0002BC, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3) == 0x0002C0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4) == 0x0002C8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_3) == 0x0002D0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_4) == 0x0002D1, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetUserParamManager_UserParamManager) == 0x0002D8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_5) == 0x0002E0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5) == 0x0002E8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_IsValid_ReturnValue_6) == 0x0002F0, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetIsProgressBondsEpisode_playerID) == 0x0002F1, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetIsProgressBondsEpisode_playerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetIsProgressBondsEpisode_targetID) == 0x0002F2, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetIsProgressBondsEpisode_targetID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetIsProgressBondsEpisode_ReturnValue) == 0x0002F3, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetIsProgressBondsEpisode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0002F4, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GetBondsProgress_ReturnValue) == 0x0002F8, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GetBondsProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Multiply_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000300, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000304, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000308, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Add_IntInt_ReturnValue_1) == 0x00030C, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Add_IntInt_ReturnValue_2) == 0x000310, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Array_Length_ReturnValue) == 0x000314, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_Less_IntInt_ReturnValue) == 0x000318, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000319, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00031A, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00031B, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_BooleanOR_ReturnValue) == 0x00031C, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00031D, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_BooleanOR_ReturnValue_1) == 0x00031E, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetLevelSound, CallFunc_BooleanAND_ReturnValue) == 0x00031F, "Member 'BP_SoundManager_C_SetLevelSound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetSoundEmitterVolume
// 0x0030 (0x0030 - 0x0000)
struct BP_SoundManager_C_SetSoundEmitterVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSoundEmitterListCount_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F22[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSoundEmitter_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F23[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundEmitterBase_C*                 K2Node_DynamicCast_AsBP_Sound_Emitter_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F24[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_SetSoundEmitterVolume) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetSoundEmitterVolume");
static_assert(sizeof(BP_SoundManager_C_SetSoundEmitterVolume) == 0x000030, "Wrong size on BP_SoundManager_C_SetSoundEmitterVolume");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, Volume) == 0x000000, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, Temp_int_Variable) == 0x000004, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_GetSoundEmitterListCount_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_GetSoundEmitterListCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_GetSoundEmitter_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_GetSoundEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, K2Node_DynamicCast_AsBP_Sound_Emitter_Base) == 0x000020, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::K2Node_DynamicCast_AsBP_Sound_Emitter_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetSoundEmitterVolume, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_SetSoundEmitterVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.BgmChangeFromShop
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_BgmChangeFromShop final
{
public:
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayBgm_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_BgmChangeFromShop) == 0x000008, "Wrong alignment on BP_SoundManager_C_BgmChangeFromShop");
static_assert(sizeof(BP_SoundManager_C_BgmChangeFromShop) == 0x000018, "Wrong size on BP_SoundManager_C_BgmChangeFromShop");
static_assert(offsetof(BP_SoundManager_C_BgmChangeFromShop, CallFunc_Concat_StrStr_ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_BgmChangeFromShop::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmChangeFromShop, CallFunc_PlayBgm_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_BgmChangeFromShop::CallFunc_PlayBgm_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlaySoundEmitterByPlayID
// 0x0030 (0x0030 - 0x0000)
struct BP_SoundManager_C_PlaySoundEmitterByPlayID final
{
public:
	class FName                                   PlayID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSoundEmitterListCount_ReturnValue;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSoundEmitter_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F25[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundEmitterBase_C*                 K2Node_DynamicCast_AsBP_Sound_Emitter_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PlaySoundEmitterByPlayID) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlaySoundEmitterByPlayID");
static_assert(sizeof(BP_SoundManager_C_PlaySoundEmitterByPlayID) == 0x000030, "Wrong size on BP_SoundManager_C_PlaySoundEmitterByPlayID");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, PlayID) == 0x000000, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::PlayID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, Temp_int_Variable) == 0x000008, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_GetSoundEmitterListCount_ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_GetSoundEmitterListCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_GetSoundEmitter_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_GetSoundEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, K2Node_DynamicCast_AsBP_Sound_Emitter_Base) == 0x000020, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::K2Node_DynamicCast_AsBP_Sound_Emitter_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002A, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_IsValid_ReturnValue) == 0x00002B, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitterByPlayID, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_PlaySoundEmitterByPlayID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopSoundEmitterByPlayID
// 0x0038 (0x0038 - 0x0000)
struct BP_SoundManager_C_StopSoundEmitterByPlayID final
{
public:
	class FName                                   PlayID;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSoundEmitterListCount_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F26[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSoundEmitter_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F27[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundEmitterBase_C*                 K2Node_DynamicCast_AsBP_Sound_Emitter_Base;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_StopSoundEmitterByPlayID) == 0x000008, "Wrong alignment on BP_SoundManager_C_StopSoundEmitterByPlayID");
static_assert(sizeof(BP_SoundManager_C_StopSoundEmitterByPlayID) == 0x000038, "Wrong size on BP_SoundManager_C_StopSoundEmitterByPlayID");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, PlayID) == 0x000000, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::PlayID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, FadeTime) == 0x000008, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, Temp_int_Variable) == 0x00000C, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_GetSoundEmitterListCount_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_GetSoundEmitterListCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_GetSoundEmitter_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_GetSoundEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, K2Node_DynamicCast_AsBP_Sound_Emitter_Base) == 0x000028, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::K2Node_DynamicCast_AsBP_Sound_Emitter_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000033, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitterByPlayID, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SoundManager_C_StopSoundEmitterByPlayID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlaySoundEmitter
// 0x0030 (0x0030 - 0x0000)
struct BP_SoundManager_C_PlaySoundEmitter final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSoundEmitterListCount_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F28[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSoundEmitter_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F29[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundEmitterBase_C*                 K2Node_DynamicCast_AsBP_Sound_Emitter_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2A[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PlaySoundEmitter) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlaySoundEmitter");
static_assert(sizeof(BP_SoundManager_C_PlaySoundEmitter) == 0x000030, "Wrong size on BP_SoundManager_C_PlaySoundEmitter");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, Volume) == 0x000000, "Member 'BP_SoundManager_C_PlaySoundEmitter::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, Temp_int_Variable) == 0x000004, "Member 'BP_SoundManager_C_PlaySoundEmitter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_GetSoundEmitterListCount_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_GetSoundEmitterListCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_GetSoundEmitter_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_GetSoundEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, K2Node_DynamicCast_AsBP_Sound_Emitter_Base) == 0x000020, "Member 'BP_SoundManager_C_PlaySoundEmitter::K2Node_DynamicCast_AsBP_Sound_Emitter_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_PlaySoundEmitter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundEmitter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_PlaySoundEmitter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopSoundEmitter
// 0x0030 (0x0030 - 0x0000)
struct BP_SoundManager_C_StopSoundEmitter final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSoundEmitterListCount_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSoundEmitter_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SoundEmitterBase_C*                 K2Node_DynamicCast_AsBP_Sound_Emitter_Base;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2D[0x1];                                     // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_StopSoundEmitter) == 0x000008, "Wrong alignment on BP_SoundManager_C_StopSoundEmitter");
static_assert(sizeof(BP_SoundManager_C_StopSoundEmitter) == 0x000030, "Wrong size on BP_SoundManager_C_StopSoundEmitter");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_StopSoundEmitter::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, Temp_int_Variable) == 0x000004, "Member 'BP_SoundManager_C_StopSoundEmitter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_GetSoundEmitterListCount_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_GetSoundEmitterListCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_GetSoundEmitter_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_GetSoundEmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, K2Node_DynamicCast_AsBP_Sound_Emitter_Base) == 0x000020, "Member 'BP_SoundManager_C_StopSoundEmitter::K2Node_DynamicCast_AsBP_Sound_Emitter_Base' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_StopSoundEmitter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopSoundEmitter, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_StopSoundEmitter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayLoopSe
// 0x0050 (0x0050 - 0x0000)
struct BP_SoundManager_C_PlayLoopSe final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          AtomCue;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FadeTime;                                          // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceFirstStart;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2E[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayLoopSe) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayLoopSe");
static_assert(sizeof(BP_SoundManager_C_PlayLoopSe) == 0x000050, "Wrong size on BP_SoundManager_C_PlayLoopSe");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, Param_Name) == 0x000000, "Member 'BP_SoundManager_C_PlayLoopSe::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, AtomCue) == 0x000008, "Member 'BP_SoundManager_C_PlayLoopSe::AtomCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, Location) == 0x000010, "Member 'BP_SoundManager_C_PlayLoopSe::Location' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, Rotation) == 0x00001C, "Member 'BP_SoundManager_C_PlayLoopSe::Rotation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, FadeTime) == 0x000028, "Member 'BP_SoundManager_C_PlayLoopSe::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, FadeVolume) == 0x00002C, "Member 'BP_SoundManager_C_PlayLoopSe::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, ForceFirstStart) == 0x000030, "Member 'BP_SoundManager_C_PlayLoopSe::ForceFirstStart' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, ReturnValue) == 0x000031, "Member 'BP_SoundManager_C_PlayLoopSe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_Contains_ReturnValue) == 0x000032, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_PlayVoice_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayLoopSe, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_SoundManager_C_PlayLoopSe::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopLoopSe
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_StopLoopSe final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F30[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_StopLoopSe) == 0x000004, "Wrong alignment on BP_SoundManager_C_StopLoopSe");
static_assert(sizeof(BP_SoundManager_C_StopLoopSe) == 0x000028, "Wrong size on BP_SoundManager_C_StopLoopSe");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, Param_Name) == 0x000000, "Member 'BP_SoundManager_C_StopLoopSe::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, FadeTime) == 0x000008, "Member 'BP_SoundManager_C_StopLoopSe::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, FadeVolume) == 0x00000C, "Member 'BP_SoundManager_C_StopLoopSe::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_StopLoopSe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_SoundManager_C_StopLoopSe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_StopLoopSe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_SoundManager_C_StopLoopSe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_StopLoopSe::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_SoundManager_C_StopLoopSe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_StopLoopSe, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_SoundManager_C_StopLoopSe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ReplacedVoiceSheet
// 0x0050 (0x0050 - 0x0000)
struct BP_SoundManager_C_ReplacedVoiceSheet final
{
public:
	bool                                          IsJapanese;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F31[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F32[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_LoadVoiceCueSheetPlayStage_ReturnValue;   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F33[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F34[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F35[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F36[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_ReplacedVoiceSheet) == 0x000008, "Wrong alignment on BP_SoundManager_C_ReplacedVoiceSheet");
static_assert(sizeof(BP_SoundManager_C_ReplacedVoiceSheet) == 0x000050, "Wrong size on BP_SoundManager_C_ReplacedVoiceSheet");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, IsJapanese) == 0x000000, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::IsJapanese' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, ReturnValue) == 0x000001, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, Temp_int_Array_Index_Variable_1) == 0x000008, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_LoadVoiceCueSheetPlayStage_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_LoadVoiceCueSheetPlayStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000034, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ReplacedVoiceSheet, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_SoundManager_C_ReplacedVoiceSheet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadVoiceCueSheetPlayStage
// 0x00F0 (0x00F0 - 0x0000)
struct BP_SoundManager_C_LoadVoiceCueSheetPlayStage final
{
public:
	class FString                                 SeName;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F37[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VoiceLang_L;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     CallFunc_LoadAcb_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F38[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F39[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3A[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOptionParam*                           CallFunc_GetOptionParam_ReturnValue;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextLanguage                                 CallFunc_GetVoiceLanguage_ReturnValue;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3B[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadVoiceCueSheetPlayStage");
static_assert(sizeof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage) == 0x0000F0, "Wrong size on BP_SoundManager_C_LoadVoiceCueSheetPlayStage");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, SeName) == 0x000000, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::SeName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, VoiceLang_L) == 0x000018, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::VoiceLang_L' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, Temp_string_Variable) == 0x000028, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_LoadAcb_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_LoadAcb_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_RegisterCueSheet_ReturnValue) == 0x000088, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A0, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, Temp_string_Variable_1) == 0x0000B0, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, Temp_bool_Variable) == 0x0000C0, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_GetUserParamManager_UserParamManager) == 0x0000C8, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_GetOptionParam_ReturnValue) == 0x0000D0, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_GetOptionParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_GetVoiceLanguage_ReturnValue) == 0x0000D8, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_GetVoiceLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D9, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadVoiceCueSheetPlayStage, K2Node_Select_Default) == 0x0000E0, "Member 'BP_SoundManager_C_LoadVoiceCueSheetPlayStage::K2Node_Select_Default' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetBaseSoundVolume
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_SetBaseSoundVolume final
{
public:
	ESoundCategory                                SoundCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F3C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ParamName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MultiplyVolume;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetConfigVolumeByCategoryName_ReturnValue; // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetBaseSoundVolume) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetBaseSoundVolume");
static_assert(sizeof(BP_SoundManager_C_SetBaseSoundVolume) == 0x000028, "Wrong size on BP_SoundManager_C_SetBaseSoundVolume");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, SoundCategory) == 0x000000, "Member 'BP_SoundManager_C_SetBaseSoundVolume::SoundCategory' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, ParamName) == 0x000008, "Member 'BP_SoundManager_C_SetBaseSoundVolume::ParamName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, Volume) == 0x000018, "Member 'BP_SoundManager_C_SetBaseSoundVolume::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_SetBaseSoundVolume::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, MultiplyVolume) == 0x000020, "Member 'BP_SoundManager_C_SetBaseSoundVolume::MultiplyVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBaseSoundVolume, CallFunc_SetConfigVolumeByCategoryName_ReturnValue) == 0x000024, "Member 'BP_SoundManager_C_SetBaseSoundVolume::CallFunc_SetConfigVolumeByCategoryName_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.GetBaseSoundVolume
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_GetBaseSoundVolume final
{
public:
	ESoundCategory                                SoundCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F3E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ParamName;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVolumeByName_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_GetBaseSoundVolume) == 0x000008, "Wrong alignment on BP_SoundManager_C_GetBaseSoundVolume");
static_assert(sizeof(BP_SoundManager_C_GetBaseSoundVolume) == 0x000020, "Wrong size on BP_SoundManager_C_GetBaseSoundVolume");
static_assert(offsetof(BP_SoundManager_C_GetBaseSoundVolume, SoundCategory) == 0x000000, "Member 'BP_SoundManager_C_GetBaseSoundVolume::SoundCategory' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBaseSoundVolume, ParamName) == 0x000008, "Member 'BP_SoundManager_C_GetBaseSoundVolume::ParamName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBaseSoundVolume, ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_GetBaseSoundVolume::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetBaseSoundVolume, CallFunc_GetVolumeByName_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_GetBaseSoundVolume::CallFunc_GetVolumeByName_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsBossBatlle
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_IsBossBatlle final
{
public:
	bool                                          IsBossBattle;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetVal;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F3F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsBossBatlle) == 0x000008, "Wrong alignment on BP_SoundManager_C_IsBossBatlle");
static_assert(sizeof(BP_SoundManager_C_IsBossBatlle) == 0x000018, "Wrong size on BP_SoundManager_C_IsBossBatlle");
static_assert(offsetof(BP_SoundManager_C_IsBossBatlle, IsBossBattle) == 0x000000, "Member 'BP_SoundManager_C_IsBossBatlle::IsBossBattle' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBossBatlle, RetVal) == 0x000001, "Member 'BP_SoundManager_C_IsBossBatlle::RetVal' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBossBatlle, CallFunc_GetBgmComponent_Component) == 0x000008, "Member 'BP_SoundManager_C_IsBossBatlle::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBossBatlle, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_IsBossBatlle::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsBossBatlle, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SoundManager_C_IsBossBatlle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Debug_Print_Sound
// 0x0058 (0x0058 - 0x0000)
struct BP_SoundManager_C_Debug_Print_Sound final
{
public:
	float                                         CallFunc_GetCurrentAisacControlValueById_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F40[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_Debug_Print_Sound) == 0x000008, "Wrong alignment on BP_SoundManager_C_Debug_Print_Sound");
static_assert(sizeof(BP_SoundManager_C_Debug_Print_Sound) == 0x000058, "Wrong size on BP_SoundManager_C_Debug_Print_Sound");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_GetCurrentAisacControlValueById_ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_GetCurrentAisacControlValueById_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_Conv_FloatToString_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Debug_Print_Sound, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'BP_SoundManager_C_Debug_Print_Sound::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetConfigVolumeByCategoryName
// 0x001C (0x001C - 0x0000)
struct BP_SoundManager_C_SetConfigVolumeByCategoryName final
{
public:
	ESoundCategory                                SoundCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F41[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DestVolume;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F42[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F43[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetConfigVolumeByCategoryName) == 0x000004, "Wrong alignment on BP_SoundManager_C_SetConfigVolumeByCategoryName");
static_assert(sizeof(BP_SoundManager_C_SetConfigVolumeByCategoryName) == 0x00001C, "Wrong size on BP_SoundManager_C_SetConfigVolumeByCategoryName");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, SoundCategory) == 0x000000, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::SoundCategory' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, DestVolume) == 0x000004, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::DestVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetConfigVolumeByCategoryName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_SetConfigVolumeByCategoryName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetResumeFromMuteAll
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_SetResumeFromMuteAll final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetResumeFromMuteAll) == 0x000001, "Wrong alignment on BP_SoundManager_C_SetResumeFromMuteAll");
static_assert(sizeof(BP_SoundManager_C_SetResumeFromMuteAll) == 0x000001, "Wrong size on BP_SoundManager_C_SetResumeFromMuteAll");
static_assert(offsetof(BP_SoundManager_C_SetResumeFromMuteAll, ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_SetResumeFromMuteAll::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetInGameVolumeByCategoryName
// 0x000C (0x000C - 0x0000)
struct BP_SoundManager_C_SetInGameVolumeByCategoryName final
{
public:
	ESoundCategory                                Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F44[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DestVol;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetInGameVolumeByCategoryName) == 0x000004, "Wrong alignment on BP_SoundManager_C_SetInGameVolumeByCategoryName");
static_assert(sizeof(BP_SoundManager_C_SetInGameVolumeByCategoryName) == 0x00000C, "Wrong size on BP_SoundManager_C_SetInGameVolumeByCategoryName");
static_assert(offsetof(BP_SoundManager_C_SetInGameVolumeByCategoryName, Category) == 0x000000, "Member 'BP_SoundManager_C_SetInGameVolumeByCategoryName::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetInGameVolumeByCategoryName, DestVol) == 0x000004, "Member 'BP_SoundManager_C_SetInGameVolumeByCategoryName::DestVol' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetInGameVolumeByCategoryName, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_SetInGameVolumeByCategoryName::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetMuteAll
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_SetMuteAll final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetMuteAll) == 0x000001, "Wrong alignment on BP_SoundManager_C_SetMuteAll");
static_assert(sizeof(BP_SoundManager_C_SetMuteAll) == 0x000001, "Wrong size on BP_SoundManager_C_SetMuteAll");
static_assert(offsetof(BP_SoundManager_C_SetMuteAll, ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_SetMuteAll::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetInGameVolumeAll
// 0x0008 (0x0008 - 0x0000)
struct BP_SoundManager_C_SetInGameVolumeAll final
{
public:
	float                                         DestVol;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetInGameVolumeAll) == 0x000004, "Wrong alignment on BP_SoundManager_C_SetInGameVolumeAll");
static_assert(sizeof(BP_SoundManager_C_SetInGameVolumeAll) == 0x000008, "Wrong size on BP_SoundManager_C_SetInGameVolumeAll");
static_assert(offsetof(BP_SoundManager_C_SetInGameVolumeAll, DestVol) == 0x000000, "Member 'BP_SoundManager_C_SetInGameVolumeAll::DestVol' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetInGameVolumeAll, ReturnValue) == 0x000004, "Member 'BP_SoundManager_C_SetInGameVolumeAll::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetFadeByCategoryName
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_SetFadeByCategoryName final
{
public:
	ESoundCategory                                Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F45[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeTime;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestVol;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetFadeByCategoryName) == 0x000004, "Wrong alignment on BP_SoundManager_C_SetFadeByCategoryName");
static_assert(sizeof(BP_SoundManager_C_SetFadeByCategoryName) == 0x000010, "Wrong size on BP_SoundManager_C_SetFadeByCategoryName");
static_assert(offsetof(BP_SoundManager_C_SetFadeByCategoryName, Category) == 0x000000, "Member 'BP_SoundManager_C_SetFadeByCategoryName::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetFadeByCategoryName, FadeTime) == 0x000004, "Member 'BP_SoundManager_C_SetFadeByCategoryName::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetFadeByCategoryName, DestVol) == 0x000008, "Member 'BP_SoundManager_C_SetFadeByCategoryName::DestVol' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetFadeByCategoryName, ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_SetFadeByCategoryName::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetFadeAllCategory
// 0x000C (0x000C - 0x0000)
struct BP_SoundManager_C_SetFadeAllCategory final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestVol;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetFadeAllCategory) == 0x000004, "Wrong alignment on BP_SoundManager_C_SetFadeAllCategory");
static_assert(sizeof(BP_SoundManager_C_SetFadeAllCategory) == 0x00000C, "Wrong size on BP_SoundManager_C_SetFadeAllCategory");
static_assert(offsetof(BP_SoundManager_C_SetFadeAllCategory, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_SetFadeAllCategory::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetFadeAllCategory, DestVol) == 0x000004, "Member 'BP_SoundManager_C_SetFadeAllCategory::DestVol' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetFadeAllCategory, ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_SetFadeAllCategory::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PauseAllSound
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_PauseAllSound final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F46[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PauseAllSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_PauseAllSound");
static_assert(sizeof(BP_SoundManager_C_PauseAllSound) == 0x000028, "Wrong size on BP_SoundManager_C_PauseAllSound");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_PauseAllSound::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_PauseAllSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PauseAllSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000018, "Member 'BP_SoundManager_C_PauseAllSound::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SoundManager_C_PauseAllSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PauseAllSound, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SoundManager_C_PauseAllSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ResumeFromPauseAllSound
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_ResumeFromPauseAllSound final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F47[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ResumeFromPauseAllSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_ResumeFromPauseAllSound");
static_assert(sizeof(BP_SoundManager_C_ResumeFromPauseAllSound) == 0x000028, "Wrong size on BP_SoundManager_C_ResumeFromPauseAllSound");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000018, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ResumeFromPauseAllSound, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SoundManager_C_ResumeFromPauseAllSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.ChangeSoundState
// 0x00F0 (0x00F0 - 0x0000)
struct BP_SoundManager_C_ChangeSoundState final
{
public:
	ESoundState                                   SndState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F48[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F49[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4B[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_1; // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResumeBgm_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingByBgmComponent_ReturnValue;      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4C[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_2; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_1;      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_2;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_3;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_4;      // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PauseBgm_ReturnValue;                     // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_3; // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_4; // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_5; // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_5;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_6;      // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_7;      // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4E[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_2;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F4F[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_6; // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInGameVolumeByCategoryName_ReturnValue_7; // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F50[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_3;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_8;      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F51[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__GetInGameVolumeByCategoryName_ReturnValue; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_9;      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_10;     // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_11;     // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_12;     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_13;     // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F52[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue_4;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F53[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_14;     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_15;     // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_16;     // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_17;     // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_18;     // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_ChangeSoundState) == 0x000008, "Wrong alignment on BP_SoundManager_C_ChangeSoundState");
static_assert(sizeof(BP_SoundManager_C_ChangeSoundState) == 0x0000F0, "Wrong size on BP_SoundManager_C_ChangeSoundState");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, SndState) == 0x000000, "Member 'BP_SoundManager_C_ChangeSoundState::SndState' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, ReturnValue) == 0x000001, "Member 'BP_SoundManager_C_ChangeSoundState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000010, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000020, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_AsSound_Atom_Cue_1) == 0x000028, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_AsSound_Atom_Cue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1) == 0x000048, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue) == 0x000051, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_1) == 0x000052, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_StopBgm_ReturnValue) == 0x000053, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_ResumeBgm_ReturnValue) == 0x000054, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_ResumeBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsPlayingByBgmComponent_ReturnValue) == 0x000055, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsPlayingByBgmComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2) == 0x000058, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3) == 0x000068, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsValid_ReturnValue_3) == 0x000070, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_2) == 0x000071, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue) == 0x000072, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_1) == 0x000073, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_2) == 0x000074, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_3) == 0x000075, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_4) == 0x000076, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_PauseBgm_ReturnValue) == 0x000077, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_PauseBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_SwitchEnum_CmpSuccess_1) == 0x000078, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_3) == 0x000079, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_4) == 0x00007A, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_5) == 0x00007B, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_5) == 0x00007C, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_6) == 0x00007D, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_7) == 0x00007E, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000080, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_AsSound_Atom_Cue_2) == 0x000088, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_AsSound_Atom_Cue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4) == 0x000098, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_IsValid_ReturnValue_4) == 0x0000A0, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_6) == 0x0000A1, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetInGameVolumeByCategoryName_ReturnValue_7) == 0x0000A2, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetInGameVolumeByCategoryName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_LoadSoftObject_ReturnValue_3) == 0x0000A8, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_AsSound_Atom_Cue_3) == 0x0000B0, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_AsSound_Atom_Cue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000B9, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_8) == 0x0000BA, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc__GetInGameVolumeByCategoryName_ReturnValue) == 0x0000BC, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc__GetInGameVolumeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_SwitchEnum_CmpSuccess_3) == 0x0000C0, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_9) == 0x0000C1, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_10) == 0x0000C2, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_11) == 0x0000C3, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_12) == 0x0000C4, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_13) == 0x0000C5, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_LoadSoftObject_ReturnValue_4) == 0x0000C8, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_AsSound_Atom_Cue_4) == 0x0000D0, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_AsSound_Atom_Cue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'BP_SoundManager_C_ChangeSoundState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x0000E0, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_14) == 0x0000E8, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_15) == 0x0000E9, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_16) == 0x0000EA, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_17) == 0x0000EB, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_ChangeSoundState, CallFunc_SetFadeByCategoryName_ReturnValue_18) == 0x0000EC, "Member 'BP_SoundManager_C_ChangeSoundState::CallFunc_SetFadeByCategoryName_ReturnValue_18' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayEnvFromEV
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_PlayEnvFromEV final
{
public:
	class USoundAtomCue*                          Cue;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeVolume;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayEnv_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F54[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayEnvFromEV) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayEnvFromEV");
static_assert(sizeof(BP_SoundManager_C_PlayEnvFromEV) == 0x000028, "Wrong size on BP_SoundManager_C_PlayEnvFromEV");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, Cue) == 0x000000, "Member 'BP_SoundManager_C_PlayEnvFromEV::Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, FadeTime) == 0x000008, "Member 'BP_SoundManager_C_PlayEnvFromEV::FadeTime' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, FadeVolume) == 0x00000C, "Member 'BP_SoundManager_C_PlayEnvFromEV::FadeVolume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, CallFunc_PlayEnv_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlayEnvFromEV::CallFunc_PlayEnv_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SoundManager_C_PlayEnvFromEV::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000012, "Member 'BP_SoundManager_C_PlayEnvFromEV::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PlayEnvFromEV::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayEnvFromEV, CallFunc_RegisterCueSheet_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_PlayEnvFromEV::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayBGEffectSound
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_PlayBGEffectSound final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F55[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSoundAtomCueAssign                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayBGEffectSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayBGEffectSound");
static_assert(sizeof(BP_SoundManager_C_PlayBGEffectSound) == 0x000028, "Wrong size on BP_SoundManager_C_PlayBGEffectSound");
static_assert(offsetof(BP_SoundManager_C_PlayBGEffectSound, EventName) == 0x000000, "Member 'BP_SoundManager_C_PlayBGEffectSound::EventName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBGEffectSound, Location) == 0x000008, "Member 'BP_SoundManager_C_PlayBGEffectSound::Location' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBGEffectSound, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_SoundManager_C_PlayBGEffectSound::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBGEffectSound, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_PlayBGEffectSound::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayBGEffectSound, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SoundManager_C_PlayBGEffectSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadScenarioCueSheet
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SoundManager_C_LoadScenarioCueSheet final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F56[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F57[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEventManager*                          K2Node_DynamicCast_AsEvent_Manager;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F58[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentChapterID_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F59[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5A[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5B[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeCueSheetPath_ReturnValue;             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5C[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5D[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAcb_ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5E[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5F[0x1];                                     // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadScenarioCueSheet) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadScenarioCueSheet");
static_assert(sizeof(BP_SoundManager_C_LoadScenarioCueSheet) == 0x0000B0, "Wrong size on BP_SoundManager_C_LoadScenarioCueSheet");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_GetEventManager_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, K2Node_DynamicCast_AsEvent_Manager) == 0x000020, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::K2Node_DynamicCast_AsEvent_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_GetCurrentChapterID_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_GetCurrentChapterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Len_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000055, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_MakeCueSheetPath_ReturnValue) == 0x000070, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_MakeCueSheetPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Conv_StringToName_ReturnValue) == 0x000084, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_LoadAcb_ReturnValue) == 0x000090, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_LoadAcb_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_FindSubstring_ReturnValue) == 0x000098, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x0000A0, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_IsValid_ReturnValue_1) == 0x0000A9, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_RegisterCueSheet_ReturnValue) == 0x0000AA, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadScenarioCueSheet, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BP_SoundManager_C_LoadScenarioCueSheet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadBondsCueSheet
// 0x0080 (0x0080 - 0x0000)
struct BP_SoundManager_C_LoadBondsCueSheet final
{
public:
	EPlayerID                                     HeroID;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PartnerId;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F60[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeBondsChueSheetName_makedName;         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterCueSheet_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F61[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F62[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeCueSheetPath_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F63[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F64[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAcb_ReturnValue;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F65[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterCueSheet_ReturnValue;             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F66[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F67[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadBondsCueSheet) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadBondsCueSheet");
static_assert(sizeof(BP_SoundManager_C_LoadBondsCueSheet) == 0x000080, "Wrong size on BP_SoundManager_C_LoadBondsCueSheet");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, HeroID) == 0x000000, "Member 'BP_SoundManager_C_LoadBondsCueSheet::HeroID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, PartnerId) == 0x000001, "Member 'BP_SoundManager_C_LoadBondsCueSheet::PartnerId' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, ReturnValue) == 0x000002, "Member 'BP_SoundManager_C_LoadBondsCueSheet::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundManager_C_LoadBondsCueSheet::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_MakeBondsChueSheetName_makedName) == 0x000008, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_MakeBondsChueSheetName_makedName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_SoundManager_C_LoadBondsCueSheet::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_SoundManager_C_LoadBondsCueSheet::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_UnregisterCueSheet_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_UnregisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'BP_SoundManager_C_LoadBondsCueSheet::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_MakeCueSheetPath_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_MakeCueSheetPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_LoadAcb_ReturnValue) == 0x000058, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_LoadAcb_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_FindSubstring_ReturnValue) == 0x000060, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x000068, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_RegisterCueSheet_ReturnValue) == 0x000072, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_RegisterCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadBondsCueSheet, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_SoundManager_C_LoadBondsCueSheet::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Set Selector Label
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_Set_Selector_Label final
{
public:
	class UAtomComponent*                         AtomComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SelectorString;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_Set_Selector_Label) == 0x000008, "Wrong alignment on BP_SoundManager_C_Set_Selector_Label");
static_assert(sizeof(BP_SoundManager_C_Set_Selector_Label) == 0x000018, "Wrong size on BP_SoundManager_C_Set_Selector_Label");
static_assert(offsetof(BP_SoundManager_C_Set_Selector_Label, AtomComponent) == 0x000000, "Member 'BP_SoundManager_C_Set_Selector_Label::AtomComponent' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Set_Selector_Label, SelectorString) == 0x000008, "Member 'BP_SoundManager_C_Set_Selector_Label::SelectorString' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetBgmControl
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_SetBgmControl final
{
public:
	class USoundAtomCue*                          ControlCue;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetBgmControl) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetBgmControl");
static_assert(sizeof(BP_SoundManager_C_SetBgmControl) == 0x000010, "Wrong size on BP_SoundManager_C_SetBgmControl");
static_assert(offsetof(BP_SoundManager_C_SetBgmControl, ControlCue) == 0x000000, "Member 'BP_SoundManager_C_SetBgmControl::ControlCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetBgmControl, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_SetBgmControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.On Battle Field Changed
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_On_Battle_Field_Changed final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_On_Battle_Field_Changed) == 0x000001, "Wrong alignment on BP_SoundManager_C_On_Battle_Field_Changed");
static_assert(sizeof(BP_SoundManager_C_On_Battle_Field_Changed) == 0x000001, "Wrong size on BP_SoundManager_C_On_Battle_Field_Changed");
static_assert(offsetof(BP_SoundManager_C_On_Battle_Field_Changed, IsStart) == 0x000000, "Member 'BP_SoundManager_C_On_Battle_Field_Changed::IsStart' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.OnChangeArea_SoundSetting
// 0x0038 (0x0038 - 0x0000)
struct BP_SoundManager_C_OnChangeArea_SoundSetting final
{
public:
	EChangeAreaStatus                             Stat;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeLocation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F68[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F69[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Macro_GetPartyTotalExp_ReturnValue;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue;        // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_1;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_2;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_3;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_4;      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFadeByCategoryName_ReturnValue_5;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PauseEnv_ReturnValue;                     // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_OnChangeArea_SoundSetting) == 0x000008, "Wrong alignment on BP_SoundManager_C_OnChangeArea_SoundSetting");
static_assert(sizeof(BP_SoundManager_C_OnChangeArea_SoundSetting) == 0x000038, "Wrong size on BP_SoundManager_C_OnChangeArea_SoundSetting");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, Stat) == 0x000000, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::Stat' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, IsChangeLocation) == 0x000001, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000010, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_Macro_GetPartyTotalExp_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_Macro_GetPartyTotalExp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_MakeLiteralByte_ReturnValue) == 0x00002D, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002E, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue) == 0x00002F, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue_1) == 0x000030, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue_2) == 0x000031, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue_3) == 0x000032, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_StopBgm_ReturnValue) == 0x000033, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue_4) == 0x000034, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_SetFadeByCategoryName_ReturnValue_5) == 0x000035, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_SetFadeByCategoryName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_OnChangeArea_SoundSetting, CallFunc_PauseEnv_ReturnValue) == 0x000036, "Member 'BP_SoundManager_C_OnChangeArea_SoundSetting::CallFunc_PauseEnv_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetDspSnapShot
// 0x0058 (0x0058 - 0x0000)
struct BP_SoundManager_C_SetDspSnapShot final
{
public:
	struct FSoundSnapshot                         DspSnapShot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FSoundSnapshot                         K2Node_MakeStruct_SoundSnapshot;                   // 0x0008(0x0008)(NoDestructor)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAtomAsrRack*                           CallFunc_GetAsrRack_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetDspSnapShot) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetDspSnapShot");
static_assert(sizeof(BP_SoundManager_C_SetDspSnapShot) == 0x000058, "Wrong size on BP_SoundManager_C_SetDspSnapShot");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, DspSnapShot) == 0x000000, "Member 'BP_SoundManager_C_SetDspSnapShot::DspSnapShot' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, K2Node_MakeStruct_SoundSnapshot) == 0x000008, "Member 'BP_SoundManager_C_SetDspSnapShot::K2Node_MakeStruct_SoundSnapshot' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_GetEnumeratorName_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_GetAsrRack_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_GetAsrRack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_Split_LeftS) == 0x000030, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_Split_RightS) == 0x000040, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_Split_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetDspSnapShot, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_SoundManager_C_SetDspSnapShot::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlaySoundBySoundManager
// 0x0050 (0x0050 - 0x0000)
struct BP_SoundManager_C_PlaySoundBySoundManager final
{
public:
	class UClass*                                 ComponentClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           AtomSound;                                         // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlaySoundBySoundManager) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlaySoundBySoundManager");
static_assert(sizeof(BP_SoundManager_C_PlaySoundBySoundManager) == 0x000050, "Wrong size on BP_SoundManager_C_PlaySoundBySoundManager");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, ComponentClass) == 0x000000, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::ComponentClass' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, AtomSound) == 0x000008, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::AtomSound' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, CallFunc_LoadSoftObject_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000040, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlaySoundBySoundManager, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_SoundManager_C_PlaySoundBySoundManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayVoice
// 0x0038 (0x0038 - 0x0000)
struct BP_SoundManager_C_PlayVoice final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttache;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAutoActivate;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F6A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        AttachToComponent;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFilterCallbackType                           FilterCallbackType;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F6B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PlayVoice) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayVoice");
static_assert(sizeof(BP_SoundManager_C_PlayVoice) == 0x000038, "Wrong size on BP_SoundManager_C_PlayVoice");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, Sound) == 0x000000, "Member 'BP_SoundManager_C_PlayVoice::Sound' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, IsAttache) == 0x000008, "Member 'BP_SoundManager_C_PlayVoice::IsAttache' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, IsAutoActivate) == 0x000009, "Member 'BP_SoundManager_C_PlayVoice::IsAutoActivate' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, AttachToComponent) == 0x000010, "Member 'BP_SoundManager_C_PlayVoice::AttachToComponent' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, AttachPointName) == 0x000018, "Member 'BP_SoundManager_C_PlayVoice::AttachPointName' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, FilterCallbackType) == 0x000020, "Member 'BP_SoundManager_C_PlayVoice::FilterCallbackType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_PlayVoice::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayVoice, CallFunc_PlayVoice_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_PlayVoice::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayCueWeaponLocation
// 0x0078 (0x0078 - 0x0000)
struct BP_SoundManager_C_PlayCueWeaponLocation final
{
public:
	class AActor*                                 OwnerPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Sound;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGetPlayerWeaponType                          WeaponType;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F6C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class URSAtomComponentBase>       ComponentClass;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USoundAttenuation*                      AttenuationSettings;                               // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F6D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetPlayerWeaponActorListFromNative_WeaponList; // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerWeaponActorListFromNative_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F6E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F6F[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F70[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PlayCueWeaponLocation) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayCueWeaponLocation");
static_assert(sizeof(BP_SoundManager_C_PlayCueWeaponLocation) == 0x000078, "Wrong size on BP_SoundManager_C_PlayCueWeaponLocation");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, OwnerPlayer) == 0x000000, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::OwnerPlayer' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, Sound) == 0x000008, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::Sound' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, WeaponType) == 0x000010, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::WeaponType' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, ComponentClass) == 0x000018, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::ComponentClass' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, AttenuationSettings) == 0x000020, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::AttenuationSettings' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_GetPlayerWeaponActorListFromNative_WeaponList) == 0x000038, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_GetPlayerWeaponActorListFromNative_WeaponList' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_GetPlayerWeaponActorListFromNative_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_GetPlayerWeaponActorListFromNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000054, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000060, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayCueWeaponLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_SoundManager_C_PlayCueWeaponLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadSASExtraAdlibVoiceData
// 0x00F8 (0x00F8 - 0x0000)
struct BP_SoundManager_C_LoadSASExtraAdlibVoiceData final
{
public:
	class ULevelSequence*                         TargetSequence;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         AdlibPathArray;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F71[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames;    // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F72[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F73[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0088(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x00A0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F74[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F75[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadSASExtraAdlibVoiceData");
static_assert(sizeof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData) == 0x0000F8, "Wrong size on BP_SoundManager_C_LoadSASExtraAdlibVoiceData");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, TargetSequence) == 0x000000, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::TargetSequence' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, AdlibPathArray) == 0x000008, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::AdlibPathArray' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames) == 0x000020, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_LoadUseAdlibVoicePath_adlibVoiceNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000078, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000088, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x0000A0, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_LoadSoftObject_ReturnValue) == 0x0000C8, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x0000D8, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadSASExtraAdlibVoiceData, CallFunc_GetObjectName_ReturnValue) == 0x0000E8, "Member 'BP_SoundManager_C_LoadSASExtraAdlibVoiceData::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.Get Movie Volume
// 0x0058 (0x0058 - 0x0000)
struct BP_SoundManager_C_Get_Movie_Volume final
{
public:
	class UManaComponent*                         ManaComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tmp_float;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMovieVolumeSetting                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F76[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UManaMovie*                             CallFunc_GetSource_ReturnValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMovieVolumeSetting                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0038(0x0004)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F77[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__GetNowVolumeByCategoryName_ReturnValue;  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_Get_Movie_Volume) == 0x000008, "Wrong alignment on BP_SoundManager_C_Get_Movie_Volume");
static_assert(sizeof(BP_SoundManager_C_Get_Movie_Volume) == 0x000058, "Wrong size on BP_SoundManager_C_Get_Movie_Volume");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, ManaComponent) == 0x000000, "Member 'BP_SoundManager_C_Get_Movie_Volume::ManaComponent' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, Volume) == 0x000008, "Member 'BP_SoundManager_C_Get_Movie_Volume::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, Tmp_float) == 0x00000C, "Member 'BP_SoundManager_C_Get_Movie_Volume::Tmp_float' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetSource_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetObjectName_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000038, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x00003C, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc__GetNowVolumeByCategoryName_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc__GetNowVolumeByCategoryName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00004C, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_Get_Movie_Volume, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000050, "Member 'BP_SoundManager_C_Get_Movie_Volume::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.CleanUpBgm
// 0x0050 (0x0050 - 0x0000)
struct BP_SoundManager_C_CleanUpBgm final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F78[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopBgm_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F79[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingByBgmComponent_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFProgressNo                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0049(0x0001)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_CleanUpBgm) == 0x000008, "Wrong alignment on BP_SoundManager_C_CleanUpBgm");
static_assert(sizeof(BP_SoundManager_C_CleanUpBgm) == 0x000050, "Wrong size on BP_SoundManager_C_CleanUpBgm");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, Category) == 0x000000, "Member 'BP_SoundManager_C_CleanUpBgm::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_GetEventManager_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x000010, "Member 'BP_SoundManager_C_CleanUpBgm::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SoundManager_C_CleanUpBgm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_StopBgm_ReturnValue) == 0x000021, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_StopBgm_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_GetProgressID_ProgressID) == 0x000024, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_Conv_StringToName_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_IsPlayingByBgmComponent_ReturnValue) == 0x000048, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_IsPlayingByBgmComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_GetDataTableRowFromName_OutRow) == 0x000049, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_CleanUpBgm, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x00004A, "Member 'BP_SoundManager_C_CleanUpBgm::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.BGMComponentOnPlayEnd
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_BGMComponentOnPlayEnd final
{
public:
	EAtomComponentStatus                          Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F7B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         AtomComponent;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_BGMComponentOnPlayEnd) == 0x000008, "Wrong alignment on BP_SoundManager_C_BGMComponentOnPlayEnd");
static_assert(sizeof(BP_SoundManager_C_BGMComponentOnPlayEnd) == 0x000018, "Wrong size on BP_SoundManager_C_BGMComponentOnPlayEnd");
static_assert(offsetof(BP_SoundManager_C_BGMComponentOnPlayEnd, Status) == 0x000000, "Member 'BP_SoundManager_C_BGMComponentOnPlayEnd::Status' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BGMComponentOnPlayEnd, AtomComponent) == 0x000008, "Member 'BP_SoundManager_C_BGMComponentOnPlayEnd::AtomComponent' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BGMComponentOnPlayEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'BP_SoundManager_C_BGMComponentOnPlayEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.BgmStopAllDestroyReserveList
// 0x0028 (0x0028 - 0x0000)
struct BP_SoundManager_C_BgmStopAllDestroyReserveList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F7C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7D[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_BgmStopAllDestroyReserveList) == 0x000008, "Wrong alignment on BP_SoundManager_C_BgmStopAllDestroyReserveList");
static_assert(sizeof(BP_SoundManager_C_BgmStopAllDestroyReserveList) == 0x000028, "Wrong size on BP_SoundManager_C_BgmStopAllDestroyReserveList");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_BgmStopAllDestroyReserveList, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_BgmStopAllDestroyReserveList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsPlayingByBgmComponent
// 0x0018 (0x0018 - 0x0000)
struct BP_SoundManager_C_IsPlayingByBgmComponent final
{
public:
	EBgmCategory                                  Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F7F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_GetBgmComponent_Component;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsPlayingByBgmComponent) == 0x000008, "Wrong alignment on BP_SoundManager_C_IsPlayingByBgmComponent");
static_assert(sizeof(BP_SoundManager_C_IsPlayingByBgmComponent) == 0x000018, "Wrong size on BP_SoundManager_C_IsPlayingByBgmComponent");
static_assert(offsetof(BP_SoundManager_C_IsPlayingByBgmComponent, Category) == 0x000000, "Member 'BP_SoundManager_C_IsPlayingByBgmComponent::Category' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsPlayingByBgmComponent, ReturnValue) == 0x000001, "Member 'BP_SoundManager_C_IsPlayingByBgmComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsPlayingByBgmComponent, CallFunc_GetBgmComponent_Component) == 0x000008, "Member 'BP_SoundManager_C_IsPlayingByBgmComponent::CallFunc_GetBgmComponent_Component' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsPlayingByBgmComponent, CallFunc_IsPlaying_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_IsPlayingByBgmComponent::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsPlayingByBgmComponent, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SoundManager_C_IsPlayingByBgmComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.GetPlayerIDFromSASKind
// 0x000F (0x000F - 0x0000)
struct BP_SoundManager_C_GetPlayerIDFromSASKind final
{
public:
	E_SASKind                                     Sas;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SASKind                                     Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_6;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_7;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_8;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_9;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_10;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_11;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_GetPlayerIDFromSASKind) == 0x000001, "Wrong alignment on BP_SoundManager_C_GetPlayerIDFromSASKind");
static_assert(sizeof(BP_SoundManager_C_GetPlayerIDFromSASKind) == 0x00000F, "Wrong size on BP_SoundManager_C_GetPlayerIDFromSASKind");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Sas) == 0x000000, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Sas' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, PlayerId) == 0x000001, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable) == 0x000002, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_1) == 0x000003, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_2) == 0x000004, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_3) == 0x000005, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_4) == 0x000006, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_5) == 0x000007, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_6) == 0x000008, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_7) == 0x000009, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_8) == 0x00000A, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_9) == 0x00000B, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_10) == 0x00000C, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, Temp_byte_Variable_11) == 0x00000D, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_GetPlayerIDFromSASKind, K2Node_Select_Default) == 0x00000E, "Member 'BP_SoundManager_C_GetPlayerIDFromSASKind::K2Node_Select_Default' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PreLoadPhaseAnimSE
// 0x0090 (0x0090 - 0x0000)
struct BP_SoundManager_C_PreLoadPhaseAnimSE final
{
public:
	TArray<class USoundAtomCue*>                  OutAtomCues;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F80[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F81[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSoundAtomCueAssignSoftRef            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F82[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F83[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PreLoadPhaseAnimSE) == 0x000008, "Wrong alignment on BP_SoundManager_C_PreLoadPhaseAnimSE");
static_assert(sizeof(BP_SoundManager_C_PreLoadPhaseAnimSE) == 0x000090, "Wrong size on BP_SoundManager_C_PreLoadPhaseAnimSE");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, OutAtomCues) == 0x000000, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::OutAtomCues' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_LoadSoftObject_ReturnValue) == 0x000070, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x000078, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000080, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PreLoadPhaseAnimSE, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BP_SoundManager_C_PreLoadPhaseAnimSE::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayAlertAtAC
// 0x0128 (0x0128 - 0x0000)
struct BP_SoundManager_C_PlayAlertAtAC final
{
public:
	EPlayerID                                     Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F84[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_playerID;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetIsProgressBondsEpisode_targetID;       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsProgressBondsEpisode_ReturnValue;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBondsProgress_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F85[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetEventManager_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F86[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   K2Node_DynamicCast_AsBPI_Event_Manager;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F87[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F88[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F89[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8A[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_DynamicCast_AsSound_Atom_Cue;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8B[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue;   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8C[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F8D[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8E[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAlertSoundSpecification              CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayAlertAtAC) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayAlertAtAC");
static_assert(sizeof(BP_SoundManager_C_PlayAlertAtAC) == 0x000128, "Wrong size on BP_SoundManager_C_PlayAlertAtAC");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, Temp_byte_Variable) == 0x000000, "Member 'BP_SoundManager_C_PlayAlertAtAC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetIsProgressBondsEpisode_playerID) == 0x000011, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetIsProgressBondsEpisode_playerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetIsProgressBondsEpisode_targetID) == 0x000012, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetIsProgressBondsEpisode_targetID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetIsProgressBondsEpisode_ReturnValue) == 0x000013, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetIsProgressBondsEpisode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetBondsProgress_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetBondsProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000024, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetEventManager_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_AsBPI_Event_Manager) == 0x000040, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_AsBPI_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetProgressID_ProgressID) == 0x000054, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_SoundManager_C_PlayAlertAtAC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, Temp_bool_True_if_break_was_hit_Variable) == 0x000060, "Member 'BP_SoundManager_C_PlayAlertAtAC::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_SoundManager_C_PlayAlertAtAC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetPlayerManager_PlayerManager) == 0x000070, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_AsPlayer_Interface) == 0x000078, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000089, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetPlayerID_ReturnValue) == 0x00008A, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_LoadSoftObject_ReturnValue) == 0x000090, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_AsSound_Atom_Cue) == 0x000098, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_AsSound_Atom_Cue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BP_SoundManager_C_PlayAlertAtAC::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue) == 0x0000A8, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetAtomCueByLoadedCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_InRange_IntInt_ReturnValue) == 0x0000B1, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_IsValid_ReturnValue_2) == 0x0000B2, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_IsValid_ReturnValue_3) == 0x0000B3, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000B4, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x0000B8, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C1, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_IsValid_ReturnValue_4) == 0x0000C2, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E8, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000120, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_Less_IntInt_ReturnValue) == 0x000121, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlertAtAC, CallFunc_BooleanAND_ReturnValue_2) == 0x000122, "Member 'BP_SoundManager_C_PlayAlertAtAC::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.StopAlert
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundManager_C_StopAlert final
{
public:
	float                                         FadeTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_StopAlert) == 0x000004, "Wrong alignment on BP_SoundManager_C_StopAlert");
static_assert(sizeof(BP_SoundManager_C_StopAlert) == 0x000004, "Wrong size on BP_SoundManager_C_StopAlert");
static_assert(offsetof(BP_SoundManager_C_StopAlert, FadeTime) == 0x000000, "Member 'BP_SoundManager_C_StopAlert::FadeTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayAlert
// 0x0020 (0x0020 - 0x0000)
struct BP_SoundManager_C_PlayAlert final
{
public:
	class USoundAtomCue*                          Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F8F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_PlayAlert) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayAlert");
static_assert(sizeof(BP_SoundManager_C_PlayAlert) == 0x000020, "Wrong size on BP_SoundManager_C_PlayAlert");
static_assert(offsetof(BP_SoundManager_C_PlayAlert, Sound) == 0x000000, "Member 'BP_SoundManager_C_PlayAlert::Sound' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlert, Volume) == 0x000008, "Member 'BP_SoundManager_C_PlayAlert::Volume' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlert, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_PlayAlert::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayAlert, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SoundManager_C_PlayAlert::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetUpDLCSounds
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_SetUpDLCSounds final
{
public:
	bool                                          CallFunc_IsAnyDlcAvailable_available;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetUpDLCSounds) == 0x000001, "Wrong alignment on BP_SoundManager_C_SetUpDLCSounds");
static_assert(sizeof(BP_SoundManager_C_SetUpDLCSounds) == 0x000001, "Wrong size on BP_SoundManager_C_SetUpDLCSounds");
static_assert(offsetof(BP_SoundManager_C_SetUpDLCSounds, CallFunc_IsAnyDlcAvailable_available) == 0x000000, "Member 'BP_SoundManager_C_SetUpDLCSounds::CallFunc_IsAnyDlcAvailable_available' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetUpIsDlcAvailable
// 0x0060 (0x0060 - 0x0000)
struct BP_SoundManager_C_SetUpIsDlcAvailable final
{
public:
	class FString                                 CallFunc_GetProjectContentDirectory_ReturnValue;   // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DirectoryExists_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DirectoryExists_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F90[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DirectoryExists_ReturnValue_2;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DirectoryExists_ReturnValue_3;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetUpIsDlcAvailable) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetUpIsDlcAvailable");
static_assert(sizeof(BP_SoundManager_C_SetUpIsDlcAvailable) == 0x000060, "Wrong size on BP_SoundManager_C_SetUpIsDlcAvailable");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_GetProjectContentDirectory_ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_GetProjectContentDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000020, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_DirectoryExists_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_DirectoryExists_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_DirectoryExists_ReturnValue_1) == 0x000031, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_DirectoryExists_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000038, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000048, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_DirectoryExists_ReturnValue_2) == 0x000058, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_DirectoryExists_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpIsDlcAvailable, CallFunc_DirectoryExists_ReturnValue_3) == 0x000059, "Member 'BP_SoundManager_C_SetUpIsDlcAvailable::CallFunc_DirectoryExists_ReturnValue_3' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsAnyDlcAvailable
// 0x0004 (0x0004 - 0x0000)
struct BP_SoundManager_C_IsAnyDlcAvailable final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsAnyDlcAvailable) == 0x000001, "Wrong alignment on BP_SoundManager_C_IsAnyDlcAvailable");
static_assert(sizeof(BP_SoundManager_C_IsAnyDlcAvailable) == 0x000004, "Wrong size on BP_SoundManager_C_IsAnyDlcAvailable");
static_assert(offsetof(BP_SoundManager_C_IsAnyDlcAvailable, Available) == 0x000000, "Member 'BP_SoundManager_C_IsAnyDlcAvailable::Available' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsAnyDlcAvailable, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'BP_SoundManager_C_IsAnyDlcAvailable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsAnyDlcAvailable, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'BP_SoundManager_C_IsAnyDlcAvailable::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsAnyDlcAvailable, CallFunc_BooleanOR_ReturnValue_2) == 0x000003, "Member 'BP_SoundManager_C_IsAnyDlcAvailable::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.LoadDlcSound
// 0x01D8 (0x01D8 - 0x0000)
struct BP_SoundManager_C_LoadDlcSound final
{
public:
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0000(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x0018(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0030(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0058(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F91[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F92[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_2;         // 0x00B0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2; // 0x00C8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F93[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue_1;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F94[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_2;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F95[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_3;         // 0x0118(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue_2;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F96[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_3; // 0x0138(0x0028)(HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_4;         // 0x0160(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_4; // 0x0180(0x0028)(HasGetValueTypeHash)
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_3;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F97[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue_3;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F98[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_4;       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Register_ReturnValue_4;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_LoadDlcSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_LoadDlcSound");
static_assert(sizeof(BP_SoundManager_C_LoadDlcSound) == 0x0001D8, "Wrong size on BP_SoundManager_C_LoadDlcSound");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000000, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x000018, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000058, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_LoadSoftObject_ReturnValue) == 0x000080, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000088, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet) == 0x000090, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1) == 0x0000A0, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_MakeSoftObjectPath_ReturnValue_2) == 0x0000B0, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_MakeSoftObjectPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2) == 0x0000C8, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Register_ReturnValue) == 0x0000F0, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Register_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_LoadSoftObject_ReturnValue_2) == 0x0000F8, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Register_ReturnValue_1) == 0x000100, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Register_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_2) == 0x000108, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_MakeSoftObjectPath_ReturnValue_3) == 0x000118, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_MakeSoftObjectPath_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Register_ReturnValue_2) == 0x000130, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Register_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_3) == 0x000138, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_MakeSoftObjectPath_ReturnValue_4) == 0x000160, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_MakeSoftObjectPath_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_LoadSoftObject_ReturnValue_3) == 0x000178, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_4) == 0x000180, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_3) == 0x0001A8, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_bSuccess_3) == 0x0001B0, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_LoadSoftObject_ReturnValue_4) == 0x0001B8, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Register_ReturnValue_3) == 0x0001C0, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Register_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_4) == 0x0001C8, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, K2Node_DynamicCast_bSuccess_4) == 0x0001D0, "Member 'BP_SoundManager_C_LoadDlcSound::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_LoadDlcSound, CallFunc_Register_ReturnValue_4) == 0x0001D1, "Member 'BP_SoundManager_C_LoadDlcSound::CallFunc_Register_ReturnValue_4' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetUpDlcBondsLevelSound
// 0x0390 (0x0390 - 0x0000)
struct BP_SoundManager_C_SetUpDlcBondsLevelSound final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F99[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0028(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9B[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9C[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundLevelParam                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9D[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x0140(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0158(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_1;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9E[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0198(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoundLevelParam                       CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x01B0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9F[0x3];                                     // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA0[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_2;         // 0x0260(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2; // 0x0278(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA1[0x4];                                     // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_2;                 // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA2[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x02C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA3[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA4[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundLevelParam                       CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x02E0(0x00A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA5[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA6[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_SetUpDlcBondsLevelSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetUpDlcBondsLevelSound");
static_assert(sizeof(BP_SoundManager_C_SetUpDlcBondsLevelSound) == 0x000390, "Wrong size on BP_SoundManager_C_SetUpDlcBondsLevelSound");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_LoadSoftObject_ReturnValue) == 0x000050, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_AsData_Table) == 0x000060, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000070, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Loop_Counter_Variable_1) == 0x000134, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Add_IntInt_ReturnValue_1) == 0x000138, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Array_Index_Variable_2) == 0x00013C, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x000140, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000158, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000180, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_AsData_Table_1) == 0x000188, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_AsData_Table_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000198, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0001B0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000250, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Length_ReturnValue_1) == 0x000254, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_MakeSoftObjectPath_ReturnValue_2) == 0x000260, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_MakeSoftObjectPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2) == 0x000278, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_LoadSoftObject_ReturnValue_2) == 0x0002A0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, Temp_int_Loop_Counter_Variable_2) == 0x0002A8, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_AsData_Table_2) == 0x0002B0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_AsData_Table_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, K2Node_DynamicCast_bSuccess_2) == 0x0002B8, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x0002C0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002D0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Get_Item_2) == 0x0002D4, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0002E0, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000380, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Array_Length_ReturnValue_2) == 0x000384, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Less_IntInt_ReturnValue_2) == 0x000388, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpDlcBondsLevelSound, CallFunc_Add_IntInt_ReturnValue_2) == 0x00038C, "Member 'BP_SoundManager_C_SetUpDlcBondsLevelSound::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsDlcBondsPlaying
// 0x0040 (0x0040 - 0x0000)
struct BP_SoundManager_C_IsDlcBondsPlaying final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlaying_DLCBonds;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA7[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA8[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneManager*                          K2Node_DynamicCast_AsScene_Manager;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsDlcBondsPlaying) == 0x000008, "Wrong alignment on BP_SoundManager_C_IsDlcBondsPlaying");
static_assert(sizeof(BP_SoundManager_C_IsDlcBondsPlaying) == 0x000040, "Wrong size on BP_SoundManager_C_IsDlcBondsPlaying");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, IsPlaying) == 0x000000, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, IsPlaying_DLCBonds) == 0x000001, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::IsPlaying_DLCBonds' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_Array_Get_Item) == 0x000014, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, K2Node_DynamicCast_AsScene_Manager) == 0x000030, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::K2Node_DynamicCast_AsScene_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_CheckScenarioFlag_ReturnValue) == 0x00003A, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsDlcBondsPlaying, CallFunc_BooleanOR_ReturnValue) == 0x00003B, "Member 'BP_SoundManager_C_IsDlcBondsPlaying::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.DetectDlcBondsLevelSound
// 0x0210 (0x0210 - 0x0000)
struct BP_SoundManager_C_DetectDlcBondsLevelSound final
{
public:
	bool                                          IsDetected;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           BGMCue;                                            // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	EBgmCategory                                  BgmSlot;                                           // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           BGMCtrlCue;                                        // 0x0038(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           EnvCue;                                            // 0x0060(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           EnvCueTmp;                                         // 0x0088(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundAtomCue>           CtrlCueTmp;                                        // 0x00B0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EBgmCategory                                  BGMSlotTmp;                                        // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FAC[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundAtomCue>           BGMCueTmp;                                         // 0x00E0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          IsDetectedTmp;                                     // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAD[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASceneManager*                          SceneManager;                                      // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAE[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FAF[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB0[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASceneManager*                          K2Node_DynamicCast_AsScene_Manager;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB1[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0148(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB2[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoundLevelParam                       CallFunc_Map_Find_Value;                           // 0x0168(0x00A0)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_DetectDlcBondsLevelSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_DetectDlcBondsLevelSound");
static_assert(sizeof(BP_SoundManager_C_DetectDlcBondsLevelSound) == 0x000210, "Wrong size on BP_SoundManager_C_DetectDlcBondsLevelSound");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, IsDetected) == 0x000000, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::IsDetected' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, BGMCue) == 0x000008, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::BGMCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, BgmSlot) == 0x000030, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::BgmSlot' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, BGMCtrlCue) == 0x000038, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::BGMCtrlCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, EnvCue) == 0x000060, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::EnvCue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, EnvCueTmp) == 0x000088, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::EnvCueTmp' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CtrlCueTmp) == 0x0000B0, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CtrlCueTmp' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, BGMSlotTmp) == 0x0000D8, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::BGMSlotTmp' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, BGMCueTmp) == 0x0000E0, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::BGMCueTmp' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, IsDetectedTmp) == 0x000108, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::IsDetectedTmp' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, SceneManager) == 0x000110, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::SceneManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, Temp_bool_True_if_break_was_hit_Variable) == 0x000118, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, Temp_int_Array_Index_Variable) == 0x00011C, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_GetSceneManager_SceneManager) == 0x000130, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, K2Node_DynamicCast_AsScene_Manager) == 0x000138, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::K2Node_DynamicCast_AsScene_Manager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Map_Keys_Keys) == 0x000148, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Array_Get_Item) == 0x00015C, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Map_Find_Value) == 0x000168, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_Map_Find_ReturnValue) == 0x000208, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_BooleanAND_ReturnValue) == 0x000209, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_CheckScenarioFlag_ReturnValue) == 0x00020A, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_DetectDlcBondsLevelSound, CallFunc_BooleanOR_ReturnValue) == 0x00020B, "Member 'BP_SoundManager_C_DetectDlcBondsLevelSound::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetUpVisionSimulatorSound
// 0x01E0 (0x01E0 - 0x0000)
struct BP_SoundManager_C_SetUpVisionSimulatorSound final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0030(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB4[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB5[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB6[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSoundAtomCueAssignSoftRef            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB7[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x00C8(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x00E0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table_1;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FB8[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0120(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class USoundCueSheetManager*                  CallFunc_GetCueSheetManager_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB9[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFSoundAtomCueAssignSoftRef            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0148(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBA[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_2;         // 0x0178(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2; // 0x0190(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCueSheet*                     K2Node_DynamicCast_AsSound_Atom_Cue_Sheet;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBB[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCueSheet*                     CallFunc_LoadAtomCueSheet_ReturnValue;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Register_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetUpVisionSimulatorSound) == 0x000008, "Wrong alignment on BP_SoundManager_C_SetUpVisionSimulatorSound");
static_assert(sizeof(BP_SoundManager_C_SetUpVisionSimulatorSound) == 0x0001E0, "Wrong size on BP_SoundManager_C_SetUpVisionSimulatorSound");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000010, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000030, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_LoadSoftObject_ReturnValue) == 0x000058, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_AsData_Table) == 0x000068, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000078, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Less_IntInt_ReturnValue) == 0x0000C1, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x0000C8, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x0000E0, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000108, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_AsData_Table_1) == 0x000110, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_AsData_Table_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000120, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetCueSheetManager_ReturnValue) == 0x000130, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetCueSheetManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Array_Get_Item_1) == 0x000138, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000148, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000170, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Less_IntInt_ReturnValue_1) == 0x000171, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_MakeSoftObjectPath_ReturnValue_2) == 0x000178, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_MakeSoftObjectPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2) == 0x000190, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_LoadSoftObject_ReturnValue_2) == 0x0001B8, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_AsSound_Atom_Cue_Sheet) == 0x0001C0, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_AsSound_Atom_Cue_Sheet' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, K2Node_DynamicCast_bSuccess_2) == 0x0001C8, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_LoadAtomCueSheet_ReturnValue) == 0x0001D0, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_LoadAtomCueSheet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SetUpVisionSimulatorSound, CallFunc_Register_ReturnValue) == 0x0001D8, "Member 'BP_SoundManager_C_SetUpVisionSimulatorSound::CallFunc_Register_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.PlayNexudDriveSasCutinSE
// 0x0048 (0x0048 - 0x0000)
struct BP_SoundManager_C_PlayNexudDriveSasCutinSE final
{
public:
	E_SASKind                                     Kind;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FBC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       LMainPlayer;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetPlayerIDFromSASKind_PlayerID;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBD[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class INexusDriveInterface>  K2Node_DynamicCast_AsNexus_Drive_Interface;        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FBF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_PlayNexudDriveSasCutinSE) == 0x000008, "Wrong alignment on BP_SoundManager_C_PlayNexudDriveSasCutinSE");
static_assert(sizeof(BP_SoundManager_C_PlayNexudDriveSasCutinSE) == 0x000048, "Wrong size on BP_SoundManager_C_PlayNexudDriveSasCutinSE");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, Kind) == 0x000000, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::Kind' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, LMainPlayer) == 0x000008, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::LMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, CallFunc_GetPlayerIDFromSASKind_PlayerID) == 0x000010, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::CallFunc_GetPlayerIDFromSASKind_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, K2Node_DynamicCast_AsNexus_Drive_Interface) == 0x000018, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::K2Node_DynamicCast_AsNexus_Drive_Interface' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue) == 0x000038, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::CallFunc_IsRegisterNpcDriveForNexusDrive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_PlayNexudDriveSasCutinSE, CallFunc_GetPlayer_ReturnValue) == 0x000040, "Member 'BP_SoundManager_C_PlayNexudDriveSasCutinSE::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetDontTouchSeVolumeAtAc
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_SetDontTouchSeVolumeAtAc final
{
public:
	bool                                          Param_DontTouchSeVolumeAtAc;                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetDontTouchSeVolumeAtAc) == 0x000001, "Wrong alignment on BP_SoundManager_C_SetDontTouchSeVolumeAtAc");
static_assert(sizeof(BP_SoundManager_C_SetDontTouchSeVolumeAtAc) == 0x000001, "Wrong size on BP_SoundManager_C_SetDontTouchSeVolumeAtAc");
static_assert(offsetof(BP_SoundManager_C_SetDontTouchSeVolumeAtAc, Param_DontTouchSeVolumeAtAc) == 0x000000, "Member 'BP_SoundManager_C_SetDontTouchSeVolumeAtAc::Param_DontTouchSeVolumeAtAc' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SetDontPlayAnimNotifySound
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_SetDontPlayAnimNotifySound final
{
public:
	bool                                          IsDontPlay;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SetDontPlayAnimNotifySound) == 0x000001, "Wrong alignment on BP_SoundManager_C_SetDontPlayAnimNotifySound");
static_assert(sizeof(BP_SoundManager_C_SetDontPlayAnimNotifySound) == 0x000001, "Wrong size on BP_SoundManager_C_SetDontPlayAnimNotifySound");
static_assert(offsetof(BP_SoundManager_C_SetDontPlayAnimNotifySound, IsDontPlay) == 0x000000, "Member 'BP_SoundManager_C_SetDontPlayAnimNotifySound::IsDontPlay' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SAS_CommonStart
// 0x0038 (0x0038 - 0x0000)
struct BP_SoundManager_C_SAS_CommonStart final
{
public:
	struct FFSASCommand                           SAS_Command;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_SAS_CommonStart) == 0x000008, "Wrong alignment on BP_SoundManager_C_SAS_CommonStart");
static_assert(sizeof(BP_SoundManager_C_SAS_CommonStart) == 0x000038, "Wrong size on BP_SoundManager_C_SAS_CommonStart");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonStart, SAS_Command) == 0x000000, "Member 'BP_SoundManager_C_SAS_CommonStart::SAS_Command' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonStart, Dummy) == 0x000030, "Member 'BP_SoundManager_C_SAS_CommonStart::Dummy' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.SAS_CommonEnd
// 0x0008 (0x0008 - 0x0000)
struct BP_SoundManager_C_SAS_CommonEnd final
{
public:
	E_SASKind                                     SAS_Kind;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancelSASCost;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDummy;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC0[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainTime;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SoundManager_C_SAS_CommonEnd) == 0x000004, "Wrong alignment on BP_SoundManager_C_SAS_CommonEnd");
static_assert(sizeof(BP_SoundManager_C_SAS_CommonEnd) == 0x000008, "Wrong size on BP_SoundManager_C_SAS_CommonEnd");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonEnd, SAS_Kind) == 0x000000, "Member 'BP_SoundManager_C_SAS_CommonEnd::SAS_Kind' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonEnd, bCancelSASCost) == 0x000001, "Member 'BP_SoundManager_C_SAS_CommonEnd::bCancelSASCost' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonEnd, bDummy) == 0x000002, "Member 'BP_SoundManager_C_SAS_CommonEnd::bDummy' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_SAS_CommonEnd, RemainTime) == 0x000004, "Member 'BP_SoundManager_C_SAS_CommonEnd::RemainTime' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.EventManagerStart
// 0x0003 (0x0003 - 0x0000)
struct BP_SoundManager_C_EventManagerStart final
{
public:
	bool                                          EnableTick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visibility;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_EventManagerStart) == 0x000001, "Wrong alignment on BP_SoundManager_C_EventManagerStart");
static_assert(sizeof(BP_SoundManager_C_EventManagerStart) == 0x000003, "Wrong size on BP_SoundManager_C_EventManagerStart");
static_assert(offsetof(BP_SoundManager_C_EventManagerStart, EnableTick) == 0x000000, "Member 'BP_SoundManager_C_EventManagerStart::EnableTick' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_EventManagerStart, Visibility) == 0x000001, "Member 'BP_SoundManager_C_EventManagerStart::Visibility' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_EventManagerStart, ReturnValue) == 0x000002, "Member 'BP_SoundManager_C_EventManagerStart::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.EventManagerEnd
// 0x0003 (0x0003 - 0x0000)
struct BP_SoundManager_C_EventManagerEnd final
{
public:
	bool                                          RestoreEnableTick;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RestoreVisibility;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_EventManagerEnd) == 0x000001, "Wrong alignment on BP_SoundManager_C_EventManagerEnd");
static_assert(sizeof(BP_SoundManager_C_EventManagerEnd) == 0x000003, "Wrong size on BP_SoundManager_C_EventManagerEnd");
static_assert(offsetof(BP_SoundManager_C_EventManagerEnd, RestoreEnableTick) == 0x000000, "Member 'BP_SoundManager_C_EventManagerEnd::RestoreEnableTick' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_EventManagerEnd, RestoreVisibility) == 0x000001, "Member 'BP_SoundManager_C_EventManagerEnd::RestoreVisibility' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_EventManagerEnd, ReturnValue) == 0x000002, "Member 'BP_SoundManager_C_EventManagerEnd::ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsValidBgmIndex
// 0x0010 (0x0010 - 0x0000)
struct BP_SoundManager_C_IsValidBgmIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FC1[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsValidBgmIndex) == 0x000004, "Wrong alignment on BP_SoundManager_C_IsValidBgmIndex");
static_assert(sizeof(BP_SoundManager_C_IsValidBgmIndex) == 0x000010, "Wrong size on BP_SoundManager_C_IsValidBgmIndex");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, Param_Index) == 0x000000, "Member 'BP_SoundManager_C_IsValidBgmIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, Valid) == 0x000004, "Member 'BP_SoundManager_C_IsValidBgmIndex::Valid' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000006, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SoundManager_C_IsValidBgmIndex, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'BP_SoundManager_C_IsValidBgmIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsAcceleratorValid
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_IsAcceleratorValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsAcceleratorValid) == 0x000001, "Wrong alignment on BP_SoundManager_C_IsAcceleratorValid");
static_assert(sizeof(BP_SoundManager_C_IsAcceleratorValid) == 0x000001, "Wrong size on BP_SoundManager_C_IsAcceleratorValid");
static_assert(offsetof(BP_SoundManager_C_IsAcceleratorValid, Valid) == 0x000000, "Member 'BP_SoundManager_C_IsAcceleratorValid::Valid' has a wrong offset!");

// Function BP_SoundManager.BP_SoundManager_C.IsAccelerating
// 0x0001 (0x0001 - 0x0000)
struct BP_SoundManager_C_IsAccelerating final
{
public:
	bool                                          Accelerating;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SoundManager_C_IsAccelerating) == 0x000001, "Wrong alignment on BP_SoundManager_C_IsAccelerating");
static_assert(sizeof(BP_SoundManager_C_IsAccelerating) == 0x000001, "Wrong size on BP_SoundManager_C_IsAccelerating");
static_assert(offsetof(BP_SoundManager_C_IsAccelerating, Accelerating) == 0x000000, "Member 'BP_SoundManager_C_IsAccelerating::Accelerating' has a wrong offset!");

}

