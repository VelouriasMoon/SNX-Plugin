#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicGrabAttachment

#include "Basic.hpp"

#include "E_SASKind_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PsychicGrabAttachment.PsychicGrabAttachment_C
// 0x02C0 (0x04F0 - 0x0230)
class APsychicGrabAttachment_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UInertialMoveComponent_C*               InertialMoveComponent;                             // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        GrabOwner;                                         // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               PsychicObject;                                     // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_PsychicGrabAttachment_C;                     // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785D[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        PosOffsetList;                                     // 0x0268(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                PosOffset;                                         // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClusterType;                                      // 0x0284(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCheckParallel;                                    // 0x0285(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttach;                                           // 0x0286(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAdjust;                                           // 0x0287(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bBrainSwing;                                       // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785E[0x3];                                     // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaSeconds;                                      // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabFloatHeightCurve;                              // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabFloatSlopeCurve;                               // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 RiseSpeedList;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<float>                                 RiseHeightList;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         RiseHeightTimeMax;                                 // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseHeightTimer;                                   // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseHeight;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseDelayStartTimeMax;                             // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseDelayStartTime;                                // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseDelayStartTimer;                               // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseSpeedRateMax;                                  // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseSpeedRateMin;                                  // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RiseSpeedRate;                                     // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRateMax;                                       // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRateMin;                                       // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRateRand;                                      // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PosRate;                                           // 0x02F4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RotRate;                                           // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeedMax;                                      // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveAccel;                                         // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayDistanceMax;                                  // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMove;                                             // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_785F[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PosGrab;                                           // 0x031C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PosGrabPrev;                                       // 0x0328(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotNow;                                            // 0x0334(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RotSlope;                                          // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7860[0x4];                                     // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               EffectTrail;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DodgeSpeedCurve;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeRate;                                         // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeHeight;                                       // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDodgeCheck;                                       // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDodgeResult;                                      // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bParallel;                                         // 0x0362(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bParallelRandom;                                   // 0x0363(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bParallelReset;                                    // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7861[0x3];                                     // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Pll_RotMesh;                                       // 0x0368(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Pll_RotCalc;                                       // 0x0374(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               Pll_RotActor;                                      // 0x0380(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                Pll_PosActor;                                      // 0x038C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewAttach;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7862[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Pll_calcPos;                                       // 0x039C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Pll_calcRot;                                       // 0x03A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabGauge;                                        // 0x03B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7863[0x3];                                     // 0x03B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameTimer                             GrabGaugeTimer;                                    // 0x03B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInitGrabStart;                                    // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabStart;                                        // 0x03C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7864[0x2];                                     // 0x03C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            GrabStartSpeedCurve;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabStartRotateCurve;                              // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartMoveTime;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartRotateTime;                               // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameTimer                             GrabStartTimer;                                    // 0x03E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         GrabStartSpeedRate;                                // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartRotateRate;                               // 0x03F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartTimeRate;                                 // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrabStartVec;                                      // 0x03F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartRate;                                     // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabStartDir;                                      // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitLiftUp;                                       // 0x040C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabLiftup;                                       // 0x040D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7865[0x2];                                     // 0x040E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LiftUpHeightCurve;                                 // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LiftUpHeight;                                      // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LiftHeightStt;                                     // 0x041C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameTimer                             GrabLiftupDelayTimer;                              // 0x0420(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameTimer                             GrabLiftupTimer;                                   // 0x042C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInitGrabMove;                                     // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabMove;                                         // 0x0439(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabReload;                                       // 0x043A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabMoveDecel;                                    // 0x043B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabMoveReturn;                                   // 0x043C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7866[0x3];                                     // 0x043D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            GrabMoveSpeedCurve;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabReloadSpeedCurve;                              // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabMoveRotateCurve;                               // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabMoveHeightCurve;                               // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabReloadHeightCurve;                             // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabMoveDecelCurve;                                // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            GrabMoveReturnCurve;                               // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabReloadTime;                                    // 0x0478(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ComboReloadTime;                                   // 0x047C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrainReloadTime;                                   // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomReloadTimeRate;                              // 0x0484(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SkillReloadTimeRate;                               // 0x0488(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveTime;                                      // 0x048C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveHeight;                                    // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveSpeedRate;                                 // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveDecelTime;                                 // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveReturnTime;                                // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveRate;                                      // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveTimer;                                     // 0x04A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrabMovePosStt;                                    // 0x04A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               GrabMoveRotStt;                                    // 0x04B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                GrabMoveSpeed;                                     // 0x04C0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrabDecelSpeedStt;                                 // 0x04CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrabMoveBounceTimer;                               // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitGrabFloat;                                    // 0x04DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bGrabFloat;                                        // 0x04DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7867[0x2];                                     // 0x04DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PosFloat;                                          // 0x04E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PsychicGrabAttachment(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float Param_DeltaSeconds);
	void ReceiveBeginPlay();
	void OnAcceleratorEnd(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, float RemainTime, bool bHologram);
	void OnAcceleratorStart(const struct FAcceleratorParam& Parameter, class AActor* Param_Owner, bool bHologram);
	void PostParallelTick();
	void PreParallelTick();
	void ParallelTick(float DeltaTime);
	void OnPsychicEnd(const struct FFSASPsychicParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnPsychicStart(const struct FFSASPsychicParam& Param, class AActor* Param_Owner);
	void OnCutInEnd();
	void OnCutInStart();
	void OnCopyEnd(const struct FFSASCopyParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnCopyStart(const struct FFSASCopyParam& Param, class AActor* Param_Owner);
	void OnStealthEnd(const struct FFSASStealthParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnStealthStart(const struct FFSASStealthParam& Param, class AActor* Param_Owner);
	void OnTelepoEnd(const struct FFSASTelepoParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnTelepoStart(const struct FFSASTelepoParam& Param, class AActor* Param_Owner);
	void OnSeeThroughEnd(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnSeeThroughStart(const struct FFSASSeeThroughParam& Param, class AActor* Param_Owner);
	void OnMetalEnd(const struct FFSASMetalParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnMetalStart(const struct FFSASMetalParam& Param, class AActor* Param_Owner);
	void OnFireEnd(const struct FFSASFireParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnFireStart(const struct FFSASFireParam& Param, class AActor* Param_Owner);
	void OnElectricEnd(const struct FFSASElectricParam& Param, class AActor* Param_Owner, float RemainTime);
	void OnElectricStart(const struct FFSASElectricParam& Param, class AActor* Param_Owner);
	void Initialize(class ARsBattleHero_C* Grab_owner, int32 Param_Index, float Reload_time);
	void Update();
	void UpdatePosRot();
	void SetAttach(bool Param_bAttach, float Play_rate, const struct FVector& Pos_rate, const struct FVector& Rot_rate, class ABP_PsychicObjectBasic_C* Psychic_object_in);
	void SetMove(bool Param_bMove, bool bAnim);
	void SetObjSize(EPsychicObjectSizeType Obj_size);
	void ResetPos();
	void AdjustPsyObjPos();
	void SetAdjustPos(bool Flag);
	void SetEffectTrail(bool Flag, class UParticleSystem* Effect_trail_in);
	void GetGrabPos(struct FVector* Grab_pos);
	void GetGrabFloatSpeed(float* Speed);
	void GetGrabFloatHeight(float* Height);
	void InitializeDataTable();
	void SetRandomParam();
	void UpdatePosRotRise();
	void ResetHeight();
	void InitBrainSwing();
	void UpdateAttachPos();
	void SetTickEnable(bool Flag_in, bool Actor_only);
	void CheckDodgeDistance(bool* Return);
	void ResetAttachPos();
	void GetBaseRot(struct FRotator* base_rot);
	void GetTargetRot(struct FRotator* Target_rot);
	void GetRelativeRot(struct FRotator* Relative_rot);
	void SetGrabGauge(bool Flag_in, float Gauge_time_in);
	void UpdateGrabGauge();
	void SetGrabStart(bool Flag_in, float Time_rate_in, float Move_rate_in, float Rotate_rate_in, float Lift_up_delay_in);
	void UpdateGrabStart();
	void SetGrabLiftup(bool Flag_in, float Lift_up_time_in, float Lift_up_height_in, class UCurveFloat* Lift_up_curve_in);
	void UpdateGrabLiftup();
	void SetGrabMove(bool Flag_in, bool Force_in, bool Combo_in, bool Reload_in);
	void UpdateGrabMove();
	void CanPsyAction(bool* Return);
	void SetGrabFloat(bool Flag_in);
	void UpdateGrabFloat();
	void SetPreParallel();
	void UpdateParallel();
	void SetPostParallel();
	void InitCluster();
	void IsNewAttach(bool* Return);
	void GetGrabMoveTime(bool Is_reload, bool Is_combo, bool Is_brain_field, float* Time);
	void SetSkillReloadTime(float Time_in);
	void SAS_CommonEnd(E_SASKind SAS_Kind, bool bCancelSASCost, bool* bDummy, float* RemainTime);
	void SAS_CommonStart(const struct FFSASCommand& SAS_Command, bool* Dummy);
	bool IsEnableParallelTick();
	ERSParallelTiming GetParallelTiming();

	void IsAcceleratorValid(bool* Valid) const;
	void IsAccelerating(bool* Accelerating) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PsychicGrabAttachment_C">();
	}
	static class APsychicGrabAttachment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APsychicGrabAttachment_C>();
	}
};
static_assert(alignof(APsychicGrabAttachment_C) == 0x000008, "Wrong alignment on APsychicGrabAttachment_C");
static_assert(sizeof(APsychicGrabAttachment_C) == 0x0004F0, "Wrong size on APsychicGrabAttachment_C");
static_assert(offsetof(APsychicGrabAttachment_C, UberGraphFrame) == 0x000230, "Member 'APsychicGrabAttachment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, InertialMoveComponent) == 0x000238, "Member 'APsychicGrabAttachment_C::InertialMoveComponent' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, SkeletalMesh) == 0x000240, "Member 'APsychicGrabAttachment_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DefaultSceneRoot) == 0x000248, "Member 'APsychicGrabAttachment_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabOwner) == 0x000250, "Member 'APsychicGrabAttachment_C::GrabOwner' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PsychicObject) == 0x000258, "Member 'APsychicGrabAttachment_C::PsychicObject' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Index_PsychicGrabAttachment_C) == 0x000260, "Member 'APsychicGrabAttachment_C::Index_PsychicGrabAttachment_C' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosOffsetList) == 0x000268, "Member 'APsychicGrabAttachment_C::PosOffsetList' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosOffset) == 0x000278, "Member 'APsychicGrabAttachment_C::PosOffset' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bClusterType) == 0x000284, "Member 'APsychicGrabAttachment_C::bClusterType' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bCheckParallel) == 0x000285, "Member 'APsychicGrabAttachment_C::bCheckParallel' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bAttach) == 0x000286, "Member 'APsychicGrabAttachment_C::bAttach' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bAdjust) == 0x000287, "Member 'APsychicGrabAttachment_C::bAdjust' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bBrainSwing) == 0x000288, "Member 'APsychicGrabAttachment_C::bBrainSwing' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DeltaSeconds) == 0x00028C, "Member 'APsychicGrabAttachment_C::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabFloatHeightCurve) == 0x000290, "Member 'APsychicGrabAttachment_C::GrabFloatHeightCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabFloatSlopeCurve) == 0x000298, "Member 'APsychicGrabAttachment_C::GrabFloatSlopeCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseSpeedList) == 0x0002A0, "Member 'APsychicGrabAttachment_C::RiseSpeedList' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseHeightList) == 0x0002B0, "Member 'APsychicGrabAttachment_C::RiseHeightList' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseHeightTimeMax) == 0x0002C0, "Member 'APsychicGrabAttachment_C::RiseHeightTimeMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseHeightTimer) == 0x0002C4, "Member 'APsychicGrabAttachment_C::RiseHeightTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseHeight) == 0x0002C8, "Member 'APsychicGrabAttachment_C::RiseHeight' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseDelayStartTimeMax) == 0x0002CC, "Member 'APsychicGrabAttachment_C::RiseDelayStartTimeMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseDelayStartTime) == 0x0002D0, "Member 'APsychicGrabAttachment_C::RiseDelayStartTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseDelayStartTimer) == 0x0002D4, "Member 'APsychicGrabAttachment_C::RiseDelayStartTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseSpeedRateMax) == 0x0002D8, "Member 'APsychicGrabAttachment_C::RiseSpeedRateMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseSpeedRateMin) == 0x0002DC, "Member 'APsychicGrabAttachment_C::RiseSpeedRateMin' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RiseSpeedRate) == 0x0002E0, "Member 'APsychicGrabAttachment_C::RiseSpeedRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PlayRateMax) == 0x0002E4, "Member 'APsychicGrabAttachment_C::PlayRateMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PlayRateMin) == 0x0002E8, "Member 'APsychicGrabAttachment_C::PlayRateMin' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PlayRateRand) == 0x0002EC, "Member 'APsychicGrabAttachment_C::PlayRateRand' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PlayRate) == 0x0002F0, "Member 'APsychicGrabAttachment_C::PlayRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosRate) == 0x0002F4, "Member 'APsychicGrabAttachment_C::PosRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RotRate) == 0x000300, "Member 'APsychicGrabAttachment_C::RotRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, MoveSpeedMax) == 0x00030C, "Member 'APsychicGrabAttachment_C::MoveSpeedMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, MoveAccel) == 0x000310, "Member 'APsychicGrabAttachment_C::MoveAccel' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DelayDistanceMax) == 0x000314, "Member 'APsychicGrabAttachment_C::DelayDistanceMax' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bMove) == 0x000318, "Member 'APsychicGrabAttachment_C::bMove' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosGrab) == 0x00031C, "Member 'APsychicGrabAttachment_C::PosGrab' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosGrabPrev) == 0x000328, "Member 'APsychicGrabAttachment_C::PosGrabPrev' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RotNow) == 0x000334, "Member 'APsychicGrabAttachment_C::RotNow' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RotSlope) == 0x000340, "Member 'APsychicGrabAttachment_C::RotSlope' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, EffectTrail) == 0x000348, "Member 'APsychicGrabAttachment_C::EffectTrail' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DodgeSpeedCurve) == 0x000350, "Member 'APsychicGrabAttachment_C::DodgeSpeedCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DodgeRate) == 0x000358, "Member 'APsychicGrabAttachment_C::DodgeRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, DodgeHeight) == 0x00035C, "Member 'APsychicGrabAttachment_C::DodgeHeight' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bDodgeCheck) == 0x000360, "Member 'APsychicGrabAttachment_C::bDodgeCheck' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bDodgeResult) == 0x000361, "Member 'APsychicGrabAttachment_C::bDodgeResult' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bParallel) == 0x000362, "Member 'APsychicGrabAttachment_C::bParallel' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bParallelRandom) == 0x000363, "Member 'APsychicGrabAttachment_C::bParallelRandom' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bParallelReset) == 0x000364, "Member 'APsychicGrabAttachment_C::bParallelReset' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_RotMesh) == 0x000368, "Member 'APsychicGrabAttachment_C::Pll_RotMesh' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_RotCalc) == 0x000374, "Member 'APsychicGrabAttachment_C::Pll_RotCalc' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_RotActor) == 0x000380, "Member 'APsychicGrabAttachment_C::Pll_RotActor' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_PosActor) == 0x00038C, "Member 'APsychicGrabAttachment_C::Pll_PosActor' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bNewAttach) == 0x000398, "Member 'APsychicGrabAttachment_C::bNewAttach' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_calcPos) == 0x00039C, "Member 'APsychicGrabAttachment_C::Pll_calcPos' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, Pll_calcRot) == 0x0003A8, "Member 'APsychicGrabAttachment_C::Pll_calcRot' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabGauge) == 0x0003B4, "Member 'APsychicGrabAttachment_C::bGrabGauge' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabGaugeTimer) == 0x0003B8, "Member 'APsychicGrabAttachment_C::GrabGaugeTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bInitGrabStart) == 0x0003C4, "Member 'APsychicGrabAttachment_C::bInitGrabStart' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabStart) == 0x0003C5, "Member 'APsychicGrabAttachment_C::bGrabStart' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartSpeedCurve) == 0x0003C8, "Member 'APsychicGrabAttachment_C::GrabStartSpeedCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartRotateCurve) == 0x0003D0, "Member 'APsychicGrabAttachment_C::GrabStartRotateCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartMoveTime) == 0x0003D8, "Member 'APsychicGrabAttachment_C::GrabStartMoveTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartRotateTime) == 0x0003DC, "Member 'APsychicGrabAttachment_C::GrabStartRotateTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartTimer) == 0x0003E0, "Member 'APsychicGrabAttachment_C::GrabStartTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartSpeedRate) == 0x0003EC, "Member 'APsychicGrabAttachment_C::GrabStartSpeedRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartRotateRate) == 0x0003F0, "Member 'APsychicGrabAttachment_C::GrabStartRotateRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartTimeRate) == 0x0003F4, "Member 'APsychicGrabAttachment_C::GrabStartTimeRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartVec) == 0x0003F8, "Member 'APsychicGrabAttachment_C::GrabStartVec' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartRate) == 0x000404, "Member 'APsychicGrabAttachment_C::GrabStartRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabStartDir) == 0x000408, "Member 'APsychicGrabAttachment_C::GrabStartDir' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bInitLiftUp) == 0x00040C, "Member 'APsychicGrabAttachment_C::bInitLiftUp' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabLiftup) == 0x00040D, "Member 'APsychicGrabAttachment_C::bGrabLiftup' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, LiftUpHeightCurve) == 0x000410, "Member 'APsychicGrabAttachment_C::LiftUpHeightCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, LiftUpHeight) == 0x000418, "Member 'APsychicGrabAttachment_C::LiftUpHeight' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, LiftHeightStt) == 0x00041C, "Member 'APsychicGrabAttachment_C::LiftHeightStt' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabLiftupDelayTimer) == 0x000420, "Member 'APsychicGrabAttachment_C::GrabLiftupDelayTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabLiftupTimer) == 0x00042C, "Member 'APsychicGrabAttachment_C::GrabLiftupTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bInitGrabMove) == 0x000438, "Member 'APsychicGrabAttachment_C::bInitGrabMove' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabMove) == 0x000439, "Member 'APsychicGrabAttachment_C::bGrabMove' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabReload) == 0x00043A, "Member 'APsychicGrabAttachment_C::bGrabReload' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabMoveDecel) == 0x00043B, "Member 'APsychicGrabAttachment_C::bGrabMoveDecel' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabMoveReturn) == 0x00043C, "Member 'APsychicGrabAttachment_C::bGrabMoveReturn' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveSpeedCurve) == 0x000440, "Member 'APsychicGrabAttachment_C::GrabMoveSpeedCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabReloadSpeedCurve) == 0x000448, "Member 'APsychicGrabAttachment_C::GrabReloadSpeedCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveRotateCurve) == 0x000450, "Member 'APsychicGrabAttachment_C::GrabMoveRotateCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveHeightCurve) == 0x000458, "Member 'APsychicGrabAttachment_C::GrabMoveHeightCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabReloadHeightCurve) == 0x000460, "Member 'APsychicGrabAttachment_C::GrabReloadHeightCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveDecelCurve) == 0x000468, "Member 'APsychicGrabAttachment_C::GrabMoveDecelCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveReturnCurve) == 0x000470, "Member 'APsychicGrabAttachment_C::GrabMoveReturnCurve' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabReloadTime) == 0x000478, "Member 'APsychicGrabAttachment_C::GrabReloadTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, ComboReloadTime) == 0x00047C, "Member 'APsychicGrabAttachment_C::ComboReloadTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, BrainReloadTime) == 0x000480, "Member 'APsychicGrabAttachment_C::BrainReloadTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, RandomReloadTimeRate) == 0x000484, "Member 'APsychicGrabAttachment_C::RandomReloadTimeRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, SkillReloadTimeRate) == 0x000488, "Member 'APsychicGrabAttachment_C::SkillReloadTimeRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveTime) == 0x00048C, "Member 'APsychicGrabAttachment_C::GrabMoveTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveHeight) == 0x000490, "Member 'APsychicGrabAttachment_C::GrabMoveHeight' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveSpeedRate) == 0x000494, "Member 'APsychicGrabAttachment_C::GrabMoveSpeedRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveDecelTime) == 0x000498, "Member 'APsychicGrabAttachment_C::GrabMoveDecelTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveReturnTime) == 0x00049C, "Member 'APsychicGrabAttachment_C::GrabMoveReturnTime' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveRate) == 0x0004A0, "Member 'APsychicGrabAttachment_C::GrabMoveRate' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveTimer) == 0x0004A4, "Member 'APsychicGrabAttachment_C::GrabMoveTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMovePosStt) == 0x0004A8, "Member 'APsychicGrabAttachment_C::GrabMovePosStt' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveRotStt) == 0x0004B4, "Member 'APsychicGrabAttachment_C::GrabMoveRotStt' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveSpeed) == 0x0004C0, "Member 'APsychicGrabAttachment_C::GrabMoveSpeed' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabDecelSpeedStt) == 0x0004CC, "Member 'APsychicGrabAttachment_C::GrabDecelSpeedStt' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, GrabMoveBounceTimer) == 0x0004D8, "Member 'APsychicGrabAttachment_C::GrabMoveBounceTimer' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bInitGrabFloat) == 0x0004DC, "Member 'APsychicGrabAttachment_C::bInitGrabFloat' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, bGrabFloat) == 0x0004DD, "Member 'APsychicGrabAttachment_C::bGrabFloat' has a wrong offset!");
static_assert(offsetof(APsychicGrabAttachment_C, PosFloat) == 0x0004E0, "Member 'APsychicGrabAttachment_C::PosFloat' has a wrong offset!");

}

