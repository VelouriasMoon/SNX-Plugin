#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MapGimmickAttackObjectBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.ExecuteUbergraph_BP_MapGimmickAttackObjectBase
// 0x0040 (0x0040 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAttackCollisionActive_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F01[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F02[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitCheckComponent*                     CallFunc_GetHitCheckComponentFromActor_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetAttackCollisionPrimitive_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_Enable;                               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase) == 0x000040, "Wrong size on BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, EntryPoint) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_SetAttackCollisionActive_ReturnValue) == 0x000004, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_SetAttackCollisionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_GetHitManager_Manager) == 0x000008, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_GetHitCheckComponentFromActor_ReturnValue) == 0x000018, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_GetHitCheckComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_GetAttackCollisionPrimitive_ReturnValue) == 0x000028, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_GetAttackCollisionPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000030, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase, K2Node_Event_Enable) == 0x000039, "Member 'BP_MapGimmickAttackObjectBase_C_ExecuteUbergraph_BP_MapGimmickAttackObjectBase::K2Node_Event_Enable' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.EnableAttackCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_EnableAttackCollision final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_EnableAttackCollision) == 0x000001, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_EnableAttackCollision");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_EnableAttackCollision) == 0x000001, "Wrong size on BP_MapGimmickAttackObjectBase_C_EnableAttackCollision");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_EnableAttackCollision, Enable) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_EnableAttackCollision::Enable' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.InitializeAttackCollision
// 0x0008 (0x0008 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision final
{
public:
	class UPrimitiveComponent*                    AttackCollisionPrim;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision) == 0x000008, "Wrong size on BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision, AttackCollisionPrim) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_InitializeAttackCollision::AttackCollisionPrim' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.SetAttackEnable
// 0x0040 (0x0040 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_SetAttackEnable final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGimmickEnemy;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F03[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitPrim;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAttackCollisionActive_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetAttackCollisionActive_ReturnValue_1;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F04[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetAttackCollisionPrimitive_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F05[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitCheckComponent*                     CallFunc_GetHitCheckComponentFromActor_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_SetAttackEnable");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable) == 0x000040, "Wrong size on BP_MapGimmickAttackObjectBase_C_SetAttackEnable");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, Enable) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::Enable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, IsGimmickEnemy) == 0x000001, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::IsGimmickEnemy' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, HitPrim) == 0x000008, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::HitPrim' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_SetAttackCollisionActive_ReturnValue) == 0x000010, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_SetAttackCollisionActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_SetAttackCollisionActive_ReturnValue_1) == 0x000011, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_SetAttackCollisionActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_GetAttackCollisionPrimitive_ReturnValue) == 0x000018, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_GetAttackCollisionPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_GetHitManager_Manager) == 0x000028, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetAttackEnable, CallFunc_GetHitCheckComponentFromActor_ReturnValue) == 0x000038, "Member 'BP_MapGimmickAttackObjectBase_C_SetAttackEnable::CallFunc_GetHitCheckComponentFromActor_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.GetPsychicObjectWeightGaugePos
// 0x0018 (0x0018 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos final
{
public:
	struct FVector                                Weight_gauge_pos;                                  // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetIconPosition_ReturnValue;              // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos) == 0x000004, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos) == 0x000018, "Wrong size on BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos, Weight_gauge_pos) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos::Weight_gauge_pos' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos, CallFunc_GetIconPosition_ReturnValue) == 0x00000C, "Member 'BP_MapGimmickAttackObjectBase_C_GetPsychicObjectWeightGaugePos::CallFunc_GetIconPosition_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.SetMultiHitExtraType
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType final
{
public:
	TArray<EHCSkillExtraType>                     ExtraTypes;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EHCSkillExtraType                             Temp_byte_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHCSkillExtraType                             Temp_byte_Variable_1;                              // 0x0011(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F06[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType) == 0x000020, "Wrong size on BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType, ExtraTypes) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType::ExtraTypes' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType, Temp_byte_Variable) == 0x000010, "Member 'BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType, Temp_byte_Variable_1) == 0x000011, "Member 'BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType, CallFunc_Array_AddUnique_ReturnValue) == 0x000014, "Member 'BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'BP_MapGimmickAttackObjectBase_C_SetMultiHitExtraType::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.ResetMultiHitExtraType
// 0x0020 (0x0020 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType final
{
public:
	bool                                          UpdateCollision;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F07[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHCSkillExtraType>                     ExtraTypes;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EHCSkillExtraType                             Temp_byte_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType) == 0x000020, "Wrong size on BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType, UpdateCollision) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType::UpdateCollision' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType, ExtraTypes) == 0x000008, "Member 'BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType::ExtraTypes' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType, Temp_byte_Variable) == 0x000018, "Member 'BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType, CallFunc_Array_RemoveItem_ReturnValue) == 0x000019, "Member 'BP_MapGimmickAttackObjectBase_C_ResetMultiHitExtraType::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.CommonAttackFinishFunc
// 0x0001 (0x0001 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc final
{
public:
	bool                                          UpdateCollision;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc) == 0x000001, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc) == 0x000001, "Wrong size on BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc, UpdateCollision) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_CommonAttackFinishFunc::UpdateCollision' has a wrong offset!");

// Function BP_MapGimmickAttackObjectBase.BP_MapGimmickAttackObjectBase_C.RegisterHitExtraTypeToCollision
// 0x0028 (0x0028 - 0x0000)
struct BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetAttackCollisionPrimitive_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHitManager_C*                          CallFunc_GetHitManager_Manager;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetAttackCollisionPrimitive_ReturnValue_1; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitCheckComponent*                     CallFunc_GetHitCheckComponentFromActor_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision) == 0x000008, "Wrong alignment on BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision");
static_assert(sizeof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision) == 0x000028, "Wrong size on BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision, CallFunc_GetAttackCollisionPrimitive_ReturnValue) == 0x000000, "Member 'BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision::CallFunc_GetAttackCollisionPrimitive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision, CallFunc_GetHitManager_Manager) == 0x000008, "Member 'BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision::CallFunc_GetHitManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision, CallFunc_GetAttackCollisionPrimitive_ReturnValue_1) == 0x000010, "Member 'BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision::CallFunc_GetAttackCollisionPrimitive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision, CallFunc_GetHitCheckComponentFromActor_ReturnValue) == 0x000018, "Member 'BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision::CallFunc_GetHitCheckComponentFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_MapGimmickAttackObjectBase_C_RegisterHitExtraTypeToCollision::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");

}

