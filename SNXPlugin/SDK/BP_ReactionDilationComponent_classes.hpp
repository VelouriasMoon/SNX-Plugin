#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReactionDilationComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DE_em_ChangeTimeDilation_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReactionDilationComponent.BP_ReactionDilationComponent_C
// 0x0048 (0x0108 - 0x00C0)
class UBP_ReactionDilationComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         LearpTime;                                         // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EaseFunc;                                          // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4F[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EaseBlendExp;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Steps;                                             // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangeTime;                                       // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B50[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      PlayAnim;                                          // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDE_em_ChangeTimeDilation                     ReactionType;                                      // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOnce;                                             // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B51[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartOwnerDilation;                                // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartMainDilation;                                 // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BasicDilation;                                     // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeforeTimeDilation;                                // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeforeOwnerDilation;                               // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DilationRate;                                      // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ReactionDilationComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Start(EDE_em_ChangeTimeDilation Param_ReactionType, float Param_LearpTime, EEasingFunc Param_EaseFunc, float Param_EaseBlendExp, int32 Param_Steps, bool AddDamage);
	void Update(float DeltaSec);
	void IsPlayerAccelerating(bool* bAccelerating);
	void End();
	void IsChangeTimeDilation(bool* bChange);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReactionDilationComponent_C">();
	}
	static class UBP_ReactionDilationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ReactionDilationComponent_C>();
	}
};
static_assert(alignof(UBP_ReactionDilationComponent_C) == 0x000008, "Wrong alignment on UBP_ReactionDilationComponent_C");
static_assert(sizeof(UBP_ReactionDilationComponent_C) == 0x000108, "Wrong size on UBP_ReactionDilationComponent_C");
static_assert(offsetof(UBP_ReactionDilationComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_ReactionDilationComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, LearpTime) == 0x0000C8, "Member 'UBP_ReactionDilationComponent_C::LearpTime' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, EaseFunc) == 0x0000CC, "Member 'UBP_ReactionDilationComponent_C::EaseFunc' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, EaseBlendExp) == 0x0000D0, "Member 'UBP_ReactionDilationComponent_C::EaseBlendExp' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, Steps) == 0x0000D4, "Member 'UBP_ReactionDilationComponent_C::Steps' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, CurrentTime) == 0x0000D8, "Member 'UBP_ReactionDilationComponent_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, bChangeTime) == 0x0000DC, "Member 'UBP_ReactionDilationComponent_C::bChangeTime' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, PlayAnim) == 0x0000E0, "Member 'UBP_ReactionDilationComponent_C::PlayAnim' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, ReactionType) == 0x0000E8, "Member 'UBP_ReactionDilationComponent_C::ReactionType' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, bOnce) == 0x0000E9, "Member 'UBP_ReactionDilationComponent_C::bOnce' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, StartOwnerDilation) == 0x0000EC, "Member 'UBP_ReactionDilationComponent_C::StartOwnerDilation' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, StartMainDilation) == 0x0000F0, "Member 'UBP_ReactionDilationComponent_C::StartMainDilation' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, BasicDilation) == 0x0000F4, "Member 'UBP_ReactionDilationComponent_C::BasicDilation' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, BeforeTimeDilation) == 0x0000F8, "Member 'UBP_ReactionDilationComponent_C::BeforeTimeDilation' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, BeforeOwnerDilation) == 0x0000FC, "Member 'UBP_ReactionDilationComponent_C::BeforeOwnerDilation' has a wrong offset!");
static_assert(offsetof(UBP_ReactionDilationComponent_C, DilationRate) == 0x000100, "Member 'UBP_ReactionDilationComponent_C::DilationRate' has a wrong offset!");

}

