#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_ui_map_icon_manager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_ui_map_icon_manager.bp_ui_map_icon_manager_C
// 0x0018 (0x0040 - 0x0028)
class Ubp_ui_map_icon_manager_C final : public UObject
{
public:
	TArray<class UDataTable*>                     IconTable;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UDataTable*                             ArrangePoint;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetElementNum(int32 TableIndex, int32* Num);
	void GetElement(int32 TableIndex, int32 Param_Index, struct FUiSceneMapIconDataCell* Param);
	void GetElementList(EUiSceneMapIconType Type, int32 Locate, int32 Area, TArray<struct FUiSceneMapIconNode>& ResultList);
	void GetArrangeElementList(int32 Location, int32 Area, TArray<struct FMapArrangeItemNode>& ResultList, EMapIconType MapIconType);
	void GetArrangeIconType(class FName PointIDName, EMapIconType* RetIconType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_ui_map_icon_manager_C">();
	}
	static class Ubp_ui_map_icon_manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Ubp_ui_map_icon_manager_C>();
	}
};
static_assert(alignof(Ubp_ui_map_icon_manager_C) == 0x000008, "Wrong alignment on Ubp_ui_map_icon_manager_C");
static_assert(sizeof(Ubp_ui_map_icon_manager_C) == 0x000040, "Wrong size on Ubp_ui_map_icon_manager_C");
static_assert(offsetof(Ubp_ui_map_icon_manager_C, IconTable) == 0x000028, "Member 'Ubp_ui_map_icon_manager_C::IconTable' has a wrong offset!");
static_assert(offsetof(Ubp_ui_map_icon_manager_C, ArrangePoint) == 0x000038, "Member 'Ubp_ui_map_icon_manager_C::ArrangePoint' has a wrong offset!");

}

