#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CutinCharacterBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CutinCharacterBase.BP_CutinCharacterBase_C
// 0x0048 (0x0278 - 0x0230)
class ABP_CutinCharacterBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Erase;                                             // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeMaterialEvent;                               // 0x0244(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor)
	bool                                          UseMaterialEmissive;                               // 0x0245(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5106[0x2];                                     // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RimColor;                                          // 0x0248(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         RimIntensity;                                      // 0x0258(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EmissiveColor;                                     // 0x025C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveIntensity;                                 // 0x026C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         SAS_SeeThrough;                                    // 0x0270(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_CutinCharacterBase(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void GetExtraMeshes(TArray<class USkeletalMeshComponent*>* SkelMeshComps);
	void SwitchMaterials();
	void SwitchMeshMaterials(class USkeletalMeshComponent* SkelMeshComp);
	void SetScalarParameter(class FName ParameterName, float ParameterValue);
	void SetVectorParameter(class FName ParameterName, const struct FLinearColor& ParameterValue);
	void IsCutinHidden(bool* Hidden);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CutinCharacterBase_C">();
	}
	static class ABP_CutinCharacterBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CutinCharacterBase_C>();
	}
};
static_assert(alignof(ABP_CutinCharacterBase_C) == 0x000008, "Wrong alignment on ABP_CutinCharacterBase_C");
static_assert(sizeof(ABP_CutinCharacterBase_C) == 0x000278, "Wrong size on ABP_CutinCharacterBase_C");
static_assert(offsetof(ABP_CutinCharacterBase_C, UberGraphFrame) == 0x000230, "Member 'ABP_CutinCharacterBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, SkeletalMesh) == 0x000238, "Member 'ABP_CutinCharacterBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, Erase) == 0x000240, "Member 'ABP_CutinCharacterBase_C::Erase' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, ChangeMaterialEvent) == 0x000244, "Member 'ABP_CutinCharacterBase_C::ChangeMaterialEvent' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, UseMaterialEmissive) == 0x000245, "Member 'ABP_CutinCharacterBase_C::UseMaterialEmissive' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, RimColor) == 0x000248, "Member 'ABP_CutinCharacterBase_C::RimColor' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, RimIntensity) == 0x000258, "Member 'ABP_CutinCharacterBase_C::RimIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, EmissiveColor) == 0x00025C, "Member 'ABP_CutinCharacterBase_C::EmissiveColor' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, EmissiveIntensity) == 0x00026C, "Member 'ABP_CutinCharacterBase_C::EmissiveIntensity' has a wrong offset!");
static_assert(offsetof(ABP_CutinCharacterBase_C, SAS_SeeThrough) == 0x000270, "Member 'ABP_CutinCharacterBase_C::SAS_SeeThrough' has a wrong offset!");

}

