#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ui_menu_battle_control

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Enum_ui_pk_weight_gauge_button_structs.hpp"
#include "Enum_ui_object_guide_structs.hpp"
#include "UMG_structs.hpp"
#include "Enum_ui_action_icon_device_type_structs.hpp"


namespace SDK::Params
{

// Function ui_menu_battle_control.ui_menu_battle_control_C.ExecuteUbergraph_ui_menu_battle_control
// 0x00E8 (0x00E8 - 0x0000)
struct Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bExtend)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool IsNotSelectable)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96D9[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_State;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangePlayUI_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DA[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bExtend;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DB[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstance*                        CallFunc_GetRSGameInstance_RSGameInstance;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlagManager*                           CallFunc_GetFlagManager_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EContentsOpening                              K2Node_CustomEvent_Contents_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOpen_1;                        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DC[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	TDelegate<void(EOperationRestriction Contents, bool bOpen)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangePlayUI_ReturnValue_1;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DD[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLV_MainPersistent_IsLV_MainPersistence; // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOperationRestriction                         K2Node_CustomEvent_Contents;                       // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bOpen;                          // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DE[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager_1;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isNotSelectable;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_isVisible;                            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96DF[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EContentsOpening Contents, bool bOpen)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control");
static_assert(sizeof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control) == 0x0000E8, "Wrong size on Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, EntryPoint) == 0x000000, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_Event_State) == 0x000028, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_Event_SubState) == 0x00002C, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_ChangePlayUI_ReturnValue) == 0x000034, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_ChangePlayUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetUserParamManager_UserParamManager) == 0x000038, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_bExtend) == 0x000040, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_bExtend' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetRSGameInstance_RSGameInstance) == 0x000048, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetRSGameInstance_RSGameInstance' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetFlagManager_ReturnValue) == 0x000050, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetFlagManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_Contents_1) == 0x000058, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_Contents_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_bOpen_1) == 0x000059, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_bOpen_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005A, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetDataBaseManager_Manager) == 0x000060, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetText_ReturnValue) == 0x000068, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CreateDelegate_OutputDelegate_2) == 0x000090, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetGameMode_ReturnValue) == 0x0000A0, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_ChangePlayUI_ReturnValue_1) == 0x0000A8, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_ChangePlayUI_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x0000B0, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_IsLV_MainPersistent_IsLV_MainPersistence) == 0x0000C1, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_IsLV_MainPersistent_IsLV_MainPersistence' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_Contents) == 0x0000C2, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_Contents' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_bOpen) == 0x0000C3, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_bOpen' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, CallFunc_GetUserParamManager_UserParamManager_1) == 0x0000C8, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::CallFunc_GetUserParamManager_UserParamManager_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CustomEvent_isNotSelectable) == 0x0000D0, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CustomEvent_isNotSelectable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_Event_isVisible) == 0x0000D1, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_Event_isVisible' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D4, "Member 'Ui_menu_battle_control_C_ExecuteUbergraph_ui_menu_battle_control::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisibleIntercept
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_SetVisibleIntercept final
{
public:
	bool                                          Param_IsVisible;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetVisibleIntercept) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetVisibleIntercept");
static_assert(sizeof(Ui_menu_battle_control_C_SetVisibleIntercept) == 0x000001, "Wrong size on Ui_menu_battle_control_C_SetVisibleIntercept");
static_assert(offsetof(Ui_menu_battle_control_C_SetVisibleIntercept, Param_IsVisible) == 0x000000, "Member 'Ui_menu_battle_control_C_SetVisibleIntercept::Param_IsVisible' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_SelectableChange
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_Event_SelectableChange final
{
public:
	bool                                          IsNotSelectable;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_Event_SelectableChange) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_Event_SelectableChange");
static_assert(sizeof(Ui_menu_battle_control_C_Event_SelectableChange) == 0x000001, "Wrong size on Ui_menu_battle_control_C_Event_SelectableChange");
static_assert(offsetof(Ui_menu_battle_control_C_Event_SelectableChange, IsNotSelectable) == 0x000000, "Member 'Ui_menu_battle_control_C_Event_SelectableChange::IsNotSelectable' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_ContentsRestricted
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_Event_ContentsRestricted final
{
public:
	EOperationRestriction                         Contents;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpen;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_Event_ContentsRestricted) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_Event_ContentsRestricted");
static_assert(sizeof(Ui_menu_battle_control_C_Event_ContentsRestricted) == 0x000002, "Wrong size on Ui_menu_battle_control_C_Event_ContentsRestricted");
static_assert(offsetof(Ui_menu_battle_control_C_Event_ContentsRestricted, Contents) == 0x000000, "Member 'Ui_menu_battle_control_C_Event_ContentsRestricted::Contents' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_Event_ContentsRestricted, bOpen) == 0x000001, "Member 'Ui_menu_battle_control_C_Event_ContentsRestricted::bOpen' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_ContentsOpened
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_Event_ContentsOpened final
{
public:
	EContentsOpening                              Contents;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpen;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_Event_ContentsOpened) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_Event_ContentsOpened");
static_assert(sizeof(Ui_menu_battle_control_C_Event_ContentsOpened) == 0x000002, "Wrong size on Ui_menu_battle_control_C_Event_ContentsOpened");
static_assert(offsetof(Ui_menu_battle_control_C_Event_ContentsOpened, Contents) == 0x000000, "Member 'Ui_menu_battle_control_C_Event_ContentsOpened::Contents' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_Event_ContentsOpened, bOpen) == 0x000001, "Member 'Ui_menu_battle_control_C_Event_ContentsOpened::bOpen' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Event_SasEquipExtend
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_Event_SasEquipExtend final
{
public:
	bool                                          bExtend;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_Event_SasEquipExtend) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_Event_SasEquipExtend");
static_assert(sizeof(Ui_menu_battle_control_C_Event_SasEquipExtend) == 0x000001, "Wrong size on Ui_menu_battle_control_C_Event_SasEquipExtend");
static_assert(offsetof(Ui_menu_battle_control_C_Event_SasEquipExtend, bExtend) == 0x000000, "Member 'Ui_menu_battle_control_C_Event_SasEquipExtend::bExtend' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateState) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_UpdateState");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateState) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_UpdateState");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateState, State) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateState, SubState) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetEnemyHp
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_CreateWidgetEnemyHp final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Vitality_en_02_C*                CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateWidgetEnemyHp) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateWidgetEnemyHp");
static_assert(sizeof(Ui_menu_battle_control_C_CreateWidgetEnemyHp) == 0x000020, "Wrong size on Ui_menu_battle_control_C_CreateWidgetEnemyHp");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetEnemyHp, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_CreateWidgetEnemyHp::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateTargetCursor
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_CreateTargetCursor final
{
public:
	class UWB_ui_Target_1_C*                      CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateTargetCursor) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateTargetCursor");
static_assert(sizeof(Ui_menu_battle_control_C_CreateTargetCursor) == 0x000008, "Wrong size on Ui_menu_battle_control_C_CreateTargetCursor");
static_assert(offsetof(Ui_menu_battle_control_C_CreateTargetCursor, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateTargetCursor::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateBrainTargetCursor
// 0x0048 (0x0048 - 0x0000)
struct Ui_menu_battle_control_C_CreateBrainTargetCursor final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E1[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96E2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_Target_Brain_1_C*                CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUIBrainTargetInfo                     K2Node_MakeStruct_UIBrainTargetInfo;               // 0x0020(0x0018)(NoDestructor, ContainsInstancedReference)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96E3[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateBrainTargetCursor) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateBrainTargetCursor");
static_assert(sizeof(Ui_menu_battle_control_C_CreateBrainTargetCursor) == 0x000048, "Wrong size on Ui_menu_battle_control_C_CreateBrainTargetCursor");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_Less_IntInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_Create_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, K2Node_MakeStruct_UIBrainTargetInfo) == 0x000020, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::K2Node_MakeStruct_UIBrainTargetInfo' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_MakeLiteralByte_ReturnValue) == 0x000038, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00003C, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBrainTargetCursor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Ui_menu_battle_control_C_CreateBrainTargetCursor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.IsFlagPlayUI
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_IsFlagPlayUI final
{
public:
	bool                                          Param_IsFlagPlayUI;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_IsFlagPlayUI) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_IsFlagPlayUI");
static_assert(sizeof(Ui_menu_battle_control_C_IsFlagPlayUI) == 0x000001, "Wrong size on Ui_menu_battle_control_C_IsFlagPlayUI");
static_assert(offsetof(Ui_menu_battle_control_C_IsFlagPlayUI, Param_IsFlagPlayUI) == 0x000000, "Member 'Ui_menu_battle_control_C_IsFlagPlayUI::Param_IsFlagPlayUI' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateGameOver
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_CreateGameOver final
{
public:
	class UWB_ui_GameOver_C*                      CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateGameOver) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateGameOver");
static_assert(sizeof(Ui_menu_battle_control_C_CreateGameOver) == 0x000008, "Wrong size on Ui_menu_battle_control_C_CreateGameOver");
static_assert(offsetof(Ui_menu_battle_control_C_CreateGameOver, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateGameOver::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateBossName
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_CreateBossName final
{
public:
	class UWB_ui_BossName_C*                      CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateBossName) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateBossName");
static_assert(sizeof(Ui_menu_battle_control_C_CreateBossName) == 0x000008, "Wrong size on Ui_menu_battle_control_C_CreateBossName");
static_assert(offsetof(Ui_menu_battle_control_C_CreateBossName, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateBossName::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ChangePlayUI
// 0x0038 (0x0038 - 0x0000)
struct Ui_menu_battle_control_C_ChangePlayUI final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E4[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetHpTargetCharacter_instance;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHpTargetCharacter_isEnable;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E6[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_ChangePlayUI) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_ChangePlayUI");
static_assert(sizeof(Ui_menu_battle_control_C_ChangePlayUI) == 0x000038, "Wrong size on Ui_menu_battle_control_C_ChangePlayUI");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, IsPlay) == 0x000000, "Member 'Ui_menu_battle_control_C_ChangePlayUI::IsPlay' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_ChangePlayUI::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, Temp_int_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_ChangePlayUI::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_GetHpTargetCharacter_instance) == 0x000008, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_GetHpTargetCharacter_instance' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_GetHpTargetCharacter_isEnable) == 0x000010, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_GetHpTargetCharacter_isEnable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, K2Node_DynamicCast_AsRSBattle_Character) == 0x000020, "Member 'Ui_menu_battle_control_C_ChangePlayUI::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ui_menu_battle_control_C_ChangePlayUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangePlayUI, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_ChangePlayUI::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateInterceptIcon
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_CreateInterceptIcon final
{
public:
	class UWB_ui_Intercept_1_C*                   CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateInterceptIcon) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateInterceptIcon");
static_assert(sizeof(Ui_menu_battle_control_C_CreateInterceptIcon) == 0x000008, "Wrong size on Ui_menu_battle_control_C_CreateInterceptIcon");
static_assert(offsetof(Ui_menu_battle_control_C_CreateInterceptIcon, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateInterceptIcon::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ReleaseInterceptIcon
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_ReleaseInterceptIcon final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_ReleaseInterceptIcon) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_ReleaseInterceptIcon");
static_assert(sizeof(Ui_menu_battle_control_C_ReleaseInterceptIcon) == 0x000001, "Wrong size on Ui_menu_battle_control_C_ReleaseInterceptIcon");
static_assert(offsetof(Ui_menu_battle_control_C_ReleaseInterceptIcon, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_ReleaseInterceptIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetIntercept
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_SetIntercept final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetIntercept) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_SetIntercept");
static_assert(sizeof(Ui_menu_battle_control_C_SetIntercept) == 0x000008, "Wrong size on Ui_menu_battle_control_C_SetIntercept");
static_assert(offsetof(Ui_menu_battle_control_C_SetIntercept, Target) == 0x000000, "Member 'Ui_menu_battle_control_C_SetIntercept::Target' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.InterceptUpdate
// 0x0024 (0x0024 - 0x0000)
struct Ui_menu_battle_control_C_InterceptUpdate final
{
public:
	struct FVector2D                              _InterceptPosition;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_InterceptUpdate) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_InterceptUpdate");
static_assert(sizeof(Ui_menu_battle_control_C_InterceptUpdate) == 0x000024, "Wrong size on Ui_menu_battle_control_C_InterceptUpdate");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, _InterceptPosition) == 0x000000, "Member 'Ui_menu_battle_control_C_InterceptUpdate::_InterceptPosition' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_InterceptUpdate::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_InterceptUpdate::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_InterceptUpdate::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_InterceptUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_InterceptUpdate, K2Node_SwitchInteger_CmpSuccess) == 0x000021, "Member 'Ui_menu_battle_control_C_InterceptUpdate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ChangeTown
// 0x0006 (0x0006 - 0x0000)
struct Ui_menu_battle_control_C_ChangeTown final
{
public:
	bool                                          IsTown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAjito;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          _Work;                                             // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ChangePlayUI_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_ChangeTown) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_ChangeTown");
static_assert(sizeof(Ui_menu_battle_control_C_ChangeTown) == 0x000006, "Wrong size on Ui_menu_battle_control_C_ChangeTown");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, IsTown) == 0x000000, "Member 'Ui_menu_battle_control_C_ChangeTown::IsTown' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, IsAjito) == 0x000001, "Member 'Ui_menu_battle_control_C_ChangeTown::IsAjito' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_ChangeTown::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, _Work) == 0x000003, "Member 'Ui_menu_battle_control_C_ChangeTown::_Work' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, CallFunc_ChangePlayUI_ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_ChangeTown::CallFunc_ChangePlayUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ChangeTown, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'Ui_menu_battle_control_C_ChangeTown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartBrainCrashOverwrite
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_StartBrainCrashOverwrite final
{
public:
	TArray<bool>                                  NewLocalVar_0;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<bool>                                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_StartBrainCrashOverwrite) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_StartBrainCrashOverwrite");
static_assert(sizeof(Ui_menu_battle_control_C_StartBrainCrashOverwrite) == 0x000020, "Wrong size on Ui_menu_battle_control_C_StartBrainCrashOverwrite");
static_assert(offsetof(Ui_menu_battle_control_C_StartBrainCrashOverwrite, NewLocalVar_0) == 0x000000, "Member 'Ui_menu_battle_control_C_StartBrainCrashOverwrite::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartBrainCrashOverwrite, K2Node_MakeArray_Array) == 0x000010, "Member 'Ui_menu_battle_control_C_StartBrainCrashOverwrite::K2Node_MakeArray_Array' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGauge
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicGauge final
{
public:
	float                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicGauge) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicGauge");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicGauge) == 0x000004, "Wrong size on Ui_menu_battle_control_C_SetPsychicGauge");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicGauge, Param) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicGauge::Param' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPsychicWeightGauge
// 0x0030 (0x0030 - 0x0000)
struct Ui_menu_battle_control_C_StartPsychicWeightGauge final
{
public:
	Enum_ui_pk_weight_gauge_button                Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExObject;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _WorkIndex;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 _WorkTarget;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _CurrentIndex;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96E9[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_StartPsychicWeightGauge) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_StartPsychicWeightGauge");
static_assert(sizeof(Ui_menu_battle_control_C_StartPsychicWeightGauge) == 0x000030, "Wrong size on Ui_menu_battle_control_C_StartPsychicWeightGauge");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, Target) == 0x000008, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::Target' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, IsExObject) == 0x000010, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::IsExObject' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, _WorkIndex) == 0x000014, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::_WorkIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, _WorkTarget) == 0x000018, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::_WorkTarget' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, _CurrentIndex) == 0x000020, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::_CurrentIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, Temp_bool_Variable) == 0x000024, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGauge, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGauge::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeStyle
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle final
{
public:
	EPsychicWeightGaugeButton                     Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicWeightGaugeSize                       Size;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96EA[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxLevel;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle, Size) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle::Size' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle, MaxLevel) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle::MaxLevel' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeStyle::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGauge
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGauge final
{
public:
	EPsychicWeightGaugeButton                     Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96EB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Level;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGauge) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGauge");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGauge) == 0x000018, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGauge");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGauge, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGauge::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGauge, Level) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGauge::Level' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGauge, Percent) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGauge::Percent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGauge, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGauge::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGauge, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGauge::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPsychicWeightGauge
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_EndPsychicWeightGauge final
{
public:
	Enum_ui_pk_weight_gauge_button                Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96EC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _Work;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96ED[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_EndPsychicWeightGauge) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_EndPsychicWeightGauge");
static_assert(sizeof(Ui_menu_battle_control_C_EndPsychicWeightGauge) == 0x000010, "Wrong size on Ui_menu_battle_control_C_EndPsychicWeightGauge");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGauge, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGauge::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGauge, IsSuccess) == 0x000001, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGauge::IsSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGauge, _Work) == 0x000004, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGauge::_Work' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGauge, Temp_bool_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGauge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGauge, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGauge::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPursuitIcon
// 0x0015 (0x0015 - 0x0000)
struct Ui_menu_battle_control_C_StartPursuitIcon final
{
public:
	EPsychicObjectUniqueInputType                 LeftInput;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputButton               LeftButton;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 CenterInput;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputButton               CenterButton;                                      // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputType                 RightInput;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPsychicObjectUniqueInputButton               RightButton;                                       // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagSasFire;                                       // 0x0006(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	Enum_ui_action_icon_device_type               DeviceType;                                        // 0x0007(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagDrawMouse;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_StartPursuitIcon) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_StartPursuitIcon");
static_assert(sizeof(Ui_menu_battle_control_C_StartPursuitIcon) == 0x000015, "Wrong size on Ui_menu_battle_control_C_StartPursuitIcon");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, LeftInput) == 0x000000, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::LeftInput' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, LeftButton) == 0x000001, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::LeftButton' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CenterInput) == 0x000002, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CenterInput' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CenterButton) == 0x000003, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CenterButton' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, RightInput) == 0x000004, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::RightInput' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, RightButton) == 0x000005, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::RightButton' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, FlagSasFire) == 0x000006, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::FlagSasFire' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, DeviceType) == 0x000007, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::DeviceType' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, FlagDrawMouse) == 0x000008, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::FlagDrawMouse' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000B, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000D, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00000F, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000010, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000011, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPursuitIcon, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000014, "Member 'Ui_menu_battle_control_C_StartPursuitIcon::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPursuitIcon
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_EndPursuitIcon final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_EndPursuitIcon) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_EndPursuitIcon");
static_assert(sizeof(Ui_menu_battle_control_C_EndPursuitIcon) == 0x000001, "Wrong size on Ui_menu_battle_control_C_EndPursuitIcon");
static_assert(offsetof(Ui_menu_battle_control_C_EndPursuitIcon, IsSuccess) == 0x000000, "Member 'Ui_menu_battle_control_C_EndPursuitIcon::IsSuccess' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreatePsychicWeightGauge
// 0x0040 (0x0040 - 0x0000)
struct Ui_menu_battle_control_C_CreatePsychicWeightGauge final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96EE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96EF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F0[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreatePsychicWeightGauge) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreatePsychicWeightGauge");
static_assert(sizeof(Ui_menu_battle_control_C_CreatePsychicWeightGauge) == 0x000040, "Wrong size on Ui_menu_battle_control_C_CreatePsychicWeightGauge");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, Temp_int_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000010, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Create_ReturnValue) == 0x000028, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePsychicWeightGauge, CallFunc_MakeLiteralInt_ReturnValue) == 0x000038, "Member 'Ui_menu_battle_control_C_CreatePsychicWeightGauge::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeVisible
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible final
{
public:
	Enum_ui_pk_weight_gauge_button                Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsVisible;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F1[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible) == 0x000010, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible, Param_IsVisible) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible::Param_IsVisible' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeVisible::CallFunc_Array_Get_Item' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeReverse
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse final
{
public:
	bool                                          IsReverse;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F2[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse) == 0x000018, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, IsReverse) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::IsReverse' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeReverse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetPsychicWeightGaugeReverseFlag
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag final
{
public:
	bool                                          IsReverse;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGaugeReverseFlag_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag");
static_assert(sizeof(Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag) == 0x000018, "Wrong size on Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag");
static_assert(offsetof(Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag, IsReverse) == 0x000000, "Member 'Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag::IsReverse' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag, CallFunc_GetGaugeReverseFlag_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_GetPsychicWeightGaugeReverseFlag::CallFunc_GetGaugeReverseFlag_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UsePsychicGauge
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_UsePsychicGauge final
{
public:
	float                                         UsePercent;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_UsePsychicGauge) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_UsePsychicGauge");
static_assert(sizeof(Ui_menu_battle_control_C_UsePsychicGauge) == 0x000004, "Wrong size on Ui_menu_battle_control_C_UsePsychicGauge");
static_assert(offsetof(Ui_menu_battle_control_C_UsePsychicGauge, UsePercent) == 0x000000, "Member 'Ui_menu_battle_control_C_UsePsychicGauge::UsePercent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetCrushBonus
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_SetCrushBonus final
{
public:
	class ARSCharacterBase*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         bonus;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F4[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _index;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetCrushBonus) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_SetCrushBonus");
static_assert(sizeof(Ui_menu_battle_control_C_SetCrushBonus) == 0x000018, "Wrong size on Ui_menu_battle_control_C_SetCrushBonus");
static_assert(offsetof(Ui_menu_battle_control_C_SetCrushBonus, Target) == 0x000000, "Member 'Ui_menu_battle_control_C_SetCrushBonus::Target' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetCrushBonus, bonus) == 0x000008, "Member 'Ui_menu_battle_control_C_SetCrushBonus::bonus' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetCrushBonus, ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_SetCrushBonus::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetCrushBonus, _index) == 0x000010, "Member 'Ui_menu_battle_control_C_SetCrushBonus::_index' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.PlayDamageEffect
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_PlayDamageEffect final
{
public:
	bool                                          IsCritical;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F5[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_PlayDamageEffect) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_PlayDamageEffect");
static_assert(sizeof(Ui_menu_battle_control_C_PlayDamageEffect) == 0x000018, "Wrong size on Ui_menu_battle_control_C_PlayDamageEffect");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDamageEffect, IsCritical) == 0x000000, "Member 'Ui_menu_battle_control_C_PlayDamageEffect::IsCritical' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDamageEffect, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_PlayDamageEffect::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDamageEffect, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_PlayDamageEffect::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDamageEffect, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'Ui_menu_battle_control_C_PlayDamageEffect::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeEnableFlag
// 0x0030 (0x0030 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag final
{
public:
	Enum_ui_pk_weight_gauge_button                Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnable;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F6[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag) == 0x000030, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, IsEnable) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::IsEnable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, StartIndex) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::StartIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, Temp_int_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag, CallFunc_Multiply_IntInt_ReturnValue) == 0x000028, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableFlag::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.LevelUp
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_LevelUp final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_LevelUp) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_LevelUp");
static_assert(sizeof(Ui_menu_battle_control_C_LevelUp) == 0x000004, "Wrong size on Ui_menu_battle_control_C_LevelUp");
static_assert(offsetof(Ui_menu_battle_control_C_LevelUp, NewLevel) == 0x000000, "Member 'Ui_menu_battle_control_C_LevelUp::NewLevel' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SasChangePage
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_SasChangePage final
{
public:
	int32                                         Page;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SasChangePage) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SasChangePage");
static_assert(sizeof(Ui_menu_battle_control_C_SasChangePage) == 0x000004, "Wrong size on Ui_menu_battle_control_C_SasChangePage");
static_assert(offsetof(Ui_menu_battle_control_C_SasChangePage, Page) == 0x000000, "Member 'Ui_menu_battle_control_C_SasChangePage::Page' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DebugSasSetHideLockIconFlag
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag");
static_assert(sizeof(Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag");
static_assert(offsetof(Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag, Flag) == 0x000000, "Member 'Ui_menu_battle_control_C_DebugSasSetHideLockIconFlag::Flag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DebugSasSetHidePsychicGaugeFlag
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag");
static_assert(sizeof(Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag");
static_assert(offsetof(Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag, Flag) == 0x000000, "Member 'Ui_menu_battle_control_C_DebugSasSetHidePsychicGaugeFlag::Flag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdatePsychicWeightGauge
// 0x00A0 (0x00A0 - 0x0000)
struct Ui_menu_battle_control_C_UpdatePsychicWeightGauge final
{
public:
	TArray<EPsychicWeightGaugeButton>             _ButtonList;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          _EnableFlag;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _index;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96F9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96FA[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96FB[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96FC[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96FD[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPsychicWeightGaugeButton>             K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96FE[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_5;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_IsActive;                        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdatePsychicWeightGauge");
static_assert(sizeof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge) == 0x0000A0, "Wrong size on Ui_menu_battle_control_C_UpdatePsychicWeightGauge");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, _ButtonList) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::_ButtonList' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, _EnableFlag) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::_EnableFlag' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, _index) == 0x000014, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::_index' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, Temp_int_Array_Index_Variable) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, Temp_int_Variable) == 0x00001C, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_IsValid_ReturnValue_2) == 0x00004C, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, K2Node_MakeArray_Array) == 0x000058, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item_4) == 0x000078, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Array_Get_Item_5) == 0x000088, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_1) == 0x000090, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_IsActive_IsActive) == 0x000091, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_IsActive_IsActive' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_2) == 0x000092, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_3) == 0x000093, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000094, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000095, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_4) == 0x000096, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanOR_ReturnValue) == 0x000097, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_5) == 0x000098, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdatePsychicWeightGauge, CallFunc_BooleanAND_ReturnValue_6) == 0x000099, "Member 'Ui_menu_battle_control_C_UpdatePsychicWeightGauge::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartPsychicWeightGaugeReal
// 0x0088 (0x0088 - 0x0000)
struct Ui_menu_battle_control_C_StartPsychicWeightGaugeReal final
{
public:
	EPsychicWeightGaugeButton                     Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96FF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExFlag;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9700[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _ButtonIndex;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkIndex;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9701[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 _WorkTarget;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _CurrentIndex;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9702[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item_3;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9703[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item_4;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9704[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item_5;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_StartPsychicWeightGaugeReal");
static_assert(sizeof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal) == 0x000088, "Wrong size on Ui_menu_battle_control_C_StartPsychicWeightGaugeReal");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, Target) == 0x000008, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::Target' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, ExFlag) == 0x000010, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::ExFlag' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, _ButtonIndex) == 0x000014, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::_ButtonIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, _WorkIndex) == 0x000018, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::_WorkIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, _WorkTarget) == 0x000020, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::_WorkTarget' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, _CurrentIndex) == 0x000028, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::_CurrentIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item_3) == 0x000060, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000068, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item_4) == 0x000070, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000078, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_BooleanOR_ReturnValue) == 0x000079, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartPsychicWeightGaugeReal, CallFunc_Array_Get_Item_5) == 0x000080, "Member 'Ui_menu_battle_control_C_StartPsychicWeightGaugeReal::CallFunc_Array_Get_Item_5' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.EndPsychicWeightGaugeReal
// 0x0038 (0x0038 - 0x0000)
struct Ui_menu_battle_control_C_EndPsychicWeightGaugeReal final
{
public:
	EPsychicWeightGaugeButton                     Button;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9705[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _ButtonIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9706[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_PK_weight_gauge_1_C*             CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_EndPsychicWeightGaugeReal");
static_assert(sizeof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal) == 0x000038, "Wrong size on Ui_menu_battle_control_C_EndPsychicWeightGaugeReal");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, Button) == 0x000000, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::Button' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, IsSuccess) == 0x000001, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::IsSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, _ButtonIndex) == 0x000004, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::_ButtonIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Percent_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, Temp_object_Variable) == 0x000028, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndPsychicWeightGaugeReal, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'Ui_menu_battle_control_C_EndPsychicWeightGaugeReal::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetPercent
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetPercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetPercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetPercent");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetPercent) == 0x000004, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetPercent");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetPercent, Percent) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetPercent::Percent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetUnlockBrainField
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField final
{
public:
	bool                                          IsUnlock;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField, IsUnlock) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetUnlockBrainField::IsUnlock' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDriveMode
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetDriveMode final
{
public:
	bool                                          IsDriveMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetDriveMode) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetDriveMode");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetDriveMode) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetDriveMode");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetDriveMode, IsDriveMode) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetDriveMode::IsDriveMode' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainFieldMode
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode final
{
public:
	bool                                          IsBrainField;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode, IsBrainField) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetBrainFieldMode::IsBrainField' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.RushPursuitIcon
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_RushPursuitIcon final
{
public:
	bool                                          Left;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Center;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Right;                                             // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_RushPursuitIcon) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_RushPursuitIcon");
static_assert(sizeof(Ui_menu_battle_control_C_RushPursuitIcon) == 0x000003, "Wrong size on Ui_menu_battle_control_C_RushPursuitIcon");
static_assert(offsetof(Ui_menu_battle_control_C_RushPursuitIcon, Left) == 0x000000, "Member 'Ui_menu_battle_control_C_RushPursuitIcon::Left' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RushPursuitIcon, Center) == 0x000001, "Member 'Ui_menu_battle_control_C_RushPursuitIcon::Center' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RushPursuitIcon, Right) == 0x000002, "Member 'Ui_menu_battle_control_C_RushPursuitIcon::Right' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGaugeEffect
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicGaugeEffect final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicGaugeEffect) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicGaugeEffect");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicGaugeEffect) == 0x000008, "Wrong size on Ui_menu_battle_control_C_SetPsychicGaugeEffect");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicGaugeEffect, Param_Index) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicGaugeEffect::Param_Index' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicGaugeEffect, Time) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicGaugeEffect::Time' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicGaugeLevel
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicGaugeLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicGaugeLevel) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicGaugeLevel");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicGaugeLevel) == 0x000004, "Wrong size on Ui_menu_battle_control_C_SetPsychicGaugeLevel");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicGaugeLevel, Level) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicGaugeLevel::Level' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartSasHologram
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_StartSasHologram final
{
public:
	EPlayerID                                     CharaID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrashVision;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_StartSasHologram) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_StartSasHologram");
static_assert(sizeof(Ui_menu_battle_control_C_StartSasHologram) == 0x000002, "Wrong size on Ui_menu_battle_control_C_StartSasHologram");
static_assert(offsetof(Ui_menu_battle_control_C_StartSasHologram, CharaID) == 0x000000, "Member 'Ui_menu_battle_control_C_StartSasHologram::CharaID' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartSasHologram, IsCrashVision) == 0x000001, "Member 'Ui_menu_battle_control_C_StartSasHologram::IsCrashVision' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StopSasHologram
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_StopSasHologram final
{
public:
	bool                                          CallFunc_CheckOpenReserve_IsReserve;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_StopSasHologram) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_StopSasHologram");
static_assert(sizeof(Ui_menu_battle_control_C_StopSasHologram) == 0x000001, "Wrong size on Ui_menu_battle_control_C_StopSasHologram");
static_assert(offsetof(Ui_menu_battle_control_C_StopSasHologram, CallFunc_CheckOpenReserve_IsReserve) == 0x000000, "Member 'Ui_menu_battle_control_C_StopSasHologram::CallFunc_CheckOpenReserve_IsReserve' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateSasHologram
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_UpdateSasHologram final
{
public:
	struct FVector2D                              NewLocalVar_1;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateSasHologram) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_UpdateSasHologram");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateSasHologram) == 0x000008, "Wrong size on Ui_menu_battle_control_C_UpdateSasHologram");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateSasHologram, NewLocalVar_1) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateSasHologram::NewLocalVar_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPsychicWeightGaugeEnableComboFlag
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9707[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag");
static_assert(sizeof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag) == 0x000018, "Wrong size on Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, IsEnable) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::IsEnable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_SetPsychicWeightGaugeEnableComboFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickHoldPercent
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent final
{
public:
	float                                         LeftPercent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CenterPercent;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightPercent;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent, LeftPercent) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent::LeftPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent, CenterPercent) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent::CenterPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent, RightPercent) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHoldPercent::RightPercent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickRoll
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconStickRoll final
{
public:
	bool                                          FlagLeft;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagCenter;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagRight;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconStickRoll) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconStickRoll");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconStickRoll) == 0x000003, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconStickRoll");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRoll, FlagLeft) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRoll::FlagLeft' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRoll, FlagCenter) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRoll::FlagCenter' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRoll, FlagRight) == 0x000002, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRoll::FlagRight' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickHold
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconStickHold final
{
public:
	bool                                          FlagLeft;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagCenter;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagRight;                                         // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconStickHold) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconStickHold");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconStickHold) == 0x000003, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconStickHold");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHold, FlagLeft) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHold::FlagLeft' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHold, FlagCenter) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHold::FlagCenter' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickHold, FlagRight) == 0x000002, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickHold::FlagRight' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconRushPercent
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconRushPercent final
{
public:
	float                                         LeftPercent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CenterPercent;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightPercent;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconRushPercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconRushPercent");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconRushPercent) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconRushPercent");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconRushPercent, LeftPercent) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconRushPercent::LeftPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconRushPercent, CenterPercent) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPursuitIconRushPercent::CenterPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconRushPercent, RightPercent) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPursuitIconRushPercent::RightPercent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconStickRollStart
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconStickRollStart final
{
public:
	bool                                          FlagStartLeft;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagStartCenter;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          FlagStartRight;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconStickRollStart) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconStickRollStart");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconStickRollStart) == 0x000003, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconStickRollStart");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRollStart, FlagStartLeft) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRollStart::FlagStartLeft' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRollStart, FlagStartCenter) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRollStart::FlagStartCenter' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconStickRollStart, FlagStartRight) == 0x000002, "Member 'Ui_menu_battle_control_C_SetPursuitIconStickRollStart::FlagStartRight' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DroneGuideOpen
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DroneGuideOpen final
{
public:
	Enum_ui_object_guide                          ObjectID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DroneGuideOpen) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DroneGuideOpen");
static_assert(sizeof(Ui_menu_battle_control_C_DroneGuideOpen) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DroneGuideOpen");
static_assert(offsetof(Ui_menu_battle_control_C_DroneGuideOpen, ObjectID) == 0x000000, "Member 'Ui_menu_battle_control_C_DroneGuideOpen::ObjectID' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconButtonHoldPercent
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent final
{
public:
	float                                         LeftPercent;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CenterPercent;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightPercent;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent, LeftPercent) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent::LeftPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent, CenterPercent) == 0x000004, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent::CenterPercent' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent, RightPercent) == 0x000008, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHoldPercent::RightPercent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetPursuitIconButtonHold
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_SetPursuitIconButtonHold final
{
public:
	bool                                          IsHoldLeft;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHoldCenter;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsHoldRight;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetPursuitIconButtonHold) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetPursuitIconButtonHold");
static_assert(sizeof(Ui_menu_battle_control_C_SetPursuitIconButtonHold) == 0x000003, "Wrong size on Ui_menu_battle_control_C_SetPursuitIconButtonHold");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHold, IsHoldLeft) == 0x000000, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHold::IsHoldLeft' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHold, IsHoldCenter) == 0x000001, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHold::IsHoldCenter' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetPursuitIconButtonHold, IsHoldRight) == 0x000002, "Member 'Ui_menu_battle_control_C_SetPursuitIconButtonHold::IsHoldRight' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidget
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidget final
{
public:
	bool                                          CallFunc_UpdateDrawWidgetMiniMap_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidget) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidget");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidget) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidget");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidget, CallFunc_UpdateDrawWidgetMiniMap_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidget::CallFunc_UpdateDrawWidgetMiniMap_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpMain
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetHpMain final
{
public:
	ESlateVisibility                              _Visibility;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetHpMain) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetHpMain");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetHpMain) == 0x000002, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetHpMain");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpMain, _Visibility) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpMain::_Visibility' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpMain, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpMain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpSub
// 0x0090 (0x0090 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetHpSub final
{
public:
	class UUserParamManager*                      _Manager;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableNexusDrive_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9708[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9709[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetHpTargetCharacter_instance;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHpTargetCharacter_isEnable;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_970A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_970B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface;             // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_970C[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetHpTargetCharacter_instance_1;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHpTargetCharacter_isEnable_1;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_970D[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_970E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      K2Node_DynamicCast_AsPlayer_Interface_1;           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnableNexusDrive_ReturnValue_1;         // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetHpSub");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub) == 0x000090, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetHpSub");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, _Manager) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::_Manager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, Temp_byte_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_IsEnableNexusDrive_ReturnValue) == 0x00000B, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_IsEnableNexusDrive_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetUserParamManager_UserParamManager) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetHpTargetCharacter_instance) == 0x000020, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetHpTargetCharacter_instance' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetHpTargetCharacter_isEnable) == 0x000028, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetHpTargetCharacter_isEnable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_AsRSBattle_Character) == 0x000030, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_AsPlayer_Interface) == 0x000040, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_AsPlayer_Interface' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetPlayerID_ReturnValue) == 0x000051, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetHpTargetCharacter_instance_1) == 0x000058, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetHpTargetCharacter_instance_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetHpTargetCharacter_isEnable_1) == 0x000060, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetHpTargetCharacter_isEnable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_AsRSBattle_Character_1) == 0x000068, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_AsRSBattle_Character_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_AsPlayer_Interface_1) == 0x000078, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_AsPlayer_Interface_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_GetPlayerID_ReturnValue_1) == 0x000089, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, Temp_byte_Variable_1) == 0x00008A, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_IsEnableNexusDrive_ReturnValue_1) == 0x00008B, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_IsEnableNexusDrive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_BooleanAND_ReturnValue_1) == 0x00008C, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpSub, CallFunc_BooleanAND_ReturnValue_2) == 0x00008D, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpSub::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainCrashGauge
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge final
{
public:
	bool                                          CallFunc_CheckOperationRestrictionFlag_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpened_ReturnValue_1;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpened_ReturnValue_2;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge) == 0x000008, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_CheckOperationRestrictionFlag_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_CheckOperationRestrictionFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_IsContentsOpened_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_IsContentsOpened_ReturnValue_1) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_IsContentsOpened_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_IsContentsOpened_ReturnValue_2) == 0x000005, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_IsContentsOpened_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge, CallFunc_BooleanAND_ReturnValue_2) == 0x000007, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGauge::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetItemMenu
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu final
{
public:
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu) == 0x000003, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu, CallFunc_IsContentsOpened_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetItemMenu::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetSasMenu
// 0x0038 (0x0038 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetEnablePageNum_Num;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_970F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9710[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSASSetIndex_SASSetIndex;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExtendEquipSAS_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu) == 0x000038, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GetPlayer_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GetEnablePageNum_Num) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GetEnablePageNum_Num' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, K2Node_DynamicCast_AsRSBattle_Player) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GetSASSetIndex_SASSetIndex) == 0x000024, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GetSASSetIndex_SASSetIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_GetUserParamManager_UserParamManager) == 0x000028, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_IsExtendEquipSAS_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_IsExtendEquipSAS_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_IsContentsOpened_ReturnValue) == 0x000032, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_BooleanAND_ReturnValue_1) == 0x000033, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu, CallFunc_BooleanAND_ReturnValue_2) == 0x000034, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetSasMenu::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetOther
// 0x0028 (0x0028 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetOther final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9711[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetOther) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetOther");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetOther) == 0x000028, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetOther");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Array_Length_ReturnValue_1) == 0x000020, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_Less_IntInt_ReturnValue_1) == 0x000024, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetOther, CallFunc_BooleanAND_ReturnValue) == 0x000026, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetOther::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetLog
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetLog final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetLog) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetLog");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetLog) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetLog");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetLog, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetLog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetDroneGuide
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetDroneGuide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetPsychicGauge
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge final
{
public:
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge) == 0x000003, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge, CallFunc_IsContentsOpened_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetPsychicGauge::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainCrashGaugeEnemy
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainCrashGaugeEnemy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetMiniMap
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9712[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStatusInScene_IsInScene;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetDirectionDest_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDrawWidgetMiniMap_ReturnValue;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap) == 0x000018, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, CallFunc_GetSceneManager_SceneManager) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, CallFunc_IsStatusInScene_IsInScene) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::CallFunc_IsStatusInScene_IsInScene' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, CallFunc_SetDirectionDest_ReturnValue) == 0x000011, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::CallFunc_SetDirectionDest_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap, CallFunc_UpdateDrawWidgetMiniMap_ReturnValue) == 0x000013, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniMap::CallFunc_UpdateDrawWidgetMiniMap_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ExpBonusOpen
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_ExpBonusOpen final
{
public:
	float                                         bonus;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_ExpBonusOpen) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_ExpBonusOpen");
static_assert(sizeof(Ui_menu_battle_control_C_ExpBonusOpen) == 0x000008, "Wrong size on Ui_menu_battle_control_C_ExpBonusOpen");
static_assert(offsetof(Ui_menu_battle_control_C_ExpBonusOpen, bonus) == 0x000000, "Member 'Ui_menu_battle_control_C_ExpBonusOpen::bonus' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExpBonusOpen, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_ExpBonusOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExpBonusOpen, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'Ui_menu_battle_control_C_ExpBonusOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ExpBonusOpen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'Ui_menu_battle_control_C_ExpBonusOpen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetExpBonus
// 0x0005 (0x0005 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus) == 0x000005, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus, CallFunc_BooleanAND_ReturnValue_2) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetExpBonus::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ExpBonusUpdate
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_ExpBonusUpdate final
{
public:
	float                                         bonus;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_ExpBonusUpdate) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_ExpBonusUpdate");
static_assert(sizeof(Ui_menu_battle_control_C_ExpBonusUpdate) == 0x000004, "Wrong size on Ui_menu_battle_control_C_ExpBonusUpdate");
static_assert(offsetof(Ui_menu_battle_control_C_ExpBonusUpdate, bonus) == 0x000000, "Member 'Ui_menu_battle_control_C_ExpBonusUpdate::bonus' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetBrainTutorial
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_CreateWidgetBrainTutorial final
{
public:
	class UWB_ui_Brain_tutorial1_C*               CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9713[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateWidgetBrainTutorial) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateWidgetBrainTutorial");
static_assert(sizeof(Ui_menu_battle_control_C_CreateWidgetBrainTutorial) == 0x000010, "Wrong size on Ui_menu_battle_control_C_CreateWidgetBrainTutorial");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetBrainTutorial, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateWidgetBrainTutorial::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetBrainTutorial, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_CreateWidgetBrainTutorial::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetBrainTutorial, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_CreateWidgetBrainTutorial::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.PlayDecideAnimeBrainTuto
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9714[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayDecideAnimeBrainTuto_ReturnValue;     // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto");
static_assert(sizeof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto) == 0x000018, "Wrong size on Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto, CallFunc_PlayDecideAnimeBrainTuto_ReturnValue) == 0x000012, "Member 'Ui_menu_battle_control_C_PlayDecideAnimeBrainTuto::CallFunc_PlayDecideAnimeBrainTuto_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.OpenBrainTuto
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_OpenBrainTuto final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenBrainTuto_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_OpenBrainTuto) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_OpenBrainTuto");
static_assert(sizeof(Ui_menu_battle_control_C_OpenBrainTuto) == 0x000003, "Wrong size on Ui_menu_battle_control_C_OpenBrainTuto");
static_assert(offsetof(Ui_menu_battle_control_C_OpenBrainTuto, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_OpenBrainTuto::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_OpenBrainTuto, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_OpenBrainTuto::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_OpenBrainTuto, CallFunc_OpenBrainTuto_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_OpenBrainTuto::CallFunc_OpenBrainTuto_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.isPlayBrainTuto
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_IsPlayBrainTuto final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_IsPlayBrainTuto) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_IsPlayBrainTuto");
static_assert(sizeof(Ui_menu_battle_control_C_IsPlayBrainTuto) == 0x000003, "Wrong size on Ui_menu_battle_control_C_IsPlayBrainTuto");
static_assert(offsetof(Ui_menu_battle_control_C_IsPlayBrainTuto, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_IsPlayBrainTuto::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_IsPlayBrainTuto, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_IsPlayBrainTuto::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_IsPlayBrainTuto, CallFunc_IsPlaying_IsPlaying) == 0x000002, "Member 'Ui_menu_battle_control_C_IsPlayBrainTuto::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDrivePercent
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetDrivePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetDrivePercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetDrivePercent");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetDrivePercent) == 0x000004, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetDrivePercent");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetDrivePercent, Percent) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetDrivePercent::Percent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainPercent
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetBrainPercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetBrainPercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetBrainPercent");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetBrainPercent) == 0x000004, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetBrainPercent");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetBrainPercent, Percent) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetBrainPercent::Percent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetStockFlag
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetStockFlag final
{
public:
	bool                                          StockFlag;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseItemFlag;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetStockFlag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetStockFlag");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetStockFlag) == 0x000002, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetStockFlag");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetStockFlag, StockFlag) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetStockFlag::StockFlag' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetStockFlag, UseItemFlag) == 0x000001, "Member 'Ui_menu_battle_control_C_DriveGaugeSetStockFlag::UseItemFlag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDownFlag
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetDownFlag final
{
public:
	bool                                          DownFlag;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetDownFlag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetDownFlag");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetDownFlag) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetDownFlag");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetDownFlag, DownFlag) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetDownFlag::DownFlag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetTeamBondLv
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv final
{
public:
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv) == 0x000003, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv, CallFunc_IsContentsOpened_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv, CallFunc_BooleanAND_ReturnValue_1) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetTeamBondLv::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetDisableFlag
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetDisableFlag final
{
public:
	bool                                          DisableFlag;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetDisableFlag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetDisableFlag");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetDisableFlag) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetDisableFlag");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetDisableFlag, DisableFlag) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetDisableFlag::DisableFlag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetRemainingSecond
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond final
{
public:
	int32                                         Second;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond) == 0x000004, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond, Second) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetRemainingSecond::Second' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetBrainChargePercent
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent) == 0x000004, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent, Percent) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetBrainChargePercent::Percent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.DriveGaugeSetVisibleBrainKeyGuide
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide final
{
public:
	bool                                          Visibleflag;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide");
static_assert(sizeof(Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide) == 0x000001, "Wrong size on Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide");
static_assert(offsetof(Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide, Visibleflag) == 0x000000, "Member 'Ui_menu_battle_control_C_DriveGaugeSetVisibleBrainKeyGuide::Visibleflag' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsOpen
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsOpen final
{
public:
	int32                                         TipsID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsOpen) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsOpen");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsOpen) == 0x000004, "Wrong size on Ui_menu_battle_control_C_MiniTipsOpen");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsOpen, TipsID) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsOpen::TipsID' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetMiniTips
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetMiniTips::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CloseMinimap
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_CloseMinimap final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDrawWidgetMiniMap_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseMinimap_ReturnValue;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_CloseMinimap) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_CloseMinimap");
static_assert(sizeof(Ui_menu_battle_control_C_CloseMinimap) == 0x000004, "Wrong size on Ui_menu_battle_control_C_CloseMinimap");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMinimap, Force) == 0x000000, "Member 'Ui_menu_battle_control_C_CloseMinimap::Force' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMinimap, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_CloseMinimap::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMinimap, CallFunc_UpdateDrawWidgetMiniMap_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_CloseMinimap::CallFunc_UpdateDrawWidgetMiniMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMinimap, CallFunc_CloseMinimap_ReturnValue) == 0x000003, "Member 'Ui_menu_battle_control_C_CloseMinimap::CallFunc_CloseMinimap_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.OpenMinimap
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_OpenMinimap final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDrawWidgetMiniMap_ReturnValue;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenMinimap_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_OpenMinimap) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_OpenMinimap");
static_assert(sizeof(Ui_menu_battle_control_C_OpenMinimap) == 0x000004, "Wrong size on Ui_menu_battle_control_C_OpenMinimap");
static_assert(offsetof(Ui_menu_battle_control_C_OpenMinimap, Force) == 0x000000, "Member 'Ui_menu_battle_control_C_OpenMinimap::Force' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_OpenMinimap, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_OpenMinimap::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_OpenMinimap, CallFunc_UpdateDrawWidgetMiniMap_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_OpenMinimap::CallFunc_UpdateDrawWidgetMiniMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_OpenMinimap, CallFunc_OpenMinimap_ReturnValue) == 0x000003, "Member 'Ui_menu_battle_control_C_OpenMinimap::CallFunc_OpenMinimap_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetEnemyLevel
// 0x0038 (0x0038 - 0x0000)
struct Ui_menu_battle_control_C_GetEnemyLevel final
{
public:
	class ARSCharacterBase*                       Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _ReturnValue;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9715[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_GetCharacterLV_self_CastInput;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetCharacterLV_LV;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_GetEnemyLevel) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_GetEnemyLevel");
static_assert(sizeof(Ui_menu_battle_control_C_GetEnemyLevel) == 0x000038, "Wrong size on Ui_menu_battle_control_C_GetEnemyLevel");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, Target) == 0x000000, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::Target' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, _ReturnValue) == 0x00000C, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, K2Node_DynamicCast_AsRSBattle_Character) == 0x000010, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, CallFunc_GetCharacterLV_self_CastInput) == 0x000020, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::CallFunc_GetCharacterLV_self_CastInput' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetEnemyLevel, CallFunc_GetCharacterLV_LV) == 0x000030, "Member 'Ui_menu_battle_control_C_GetEnemyLevel::CallFunc_GetCharacterLV_LV' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SasFireEnd
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_SasFireEnd final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SasFireEnd) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SasFireEnd");
static_assert(sizeof(Ui_menu_battle_control_C_SasFireEnd) == 0x000001, "Wrong size on Ui_menu_battle_control_C_SasFireEnd");
static_assert(offsetof(Ui_menu_battle_control_C_SasFireEnd, IsSuccess) == 0x000000, "Member 'Ui_menu_battle_control_C_SasFireEnd::IsSuccess' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateDiscoverIndexList
// 0x0048 (0x0048 - 0x0000)
struct Ui_menu_battle_control_C_CreateDiscoverIndexList final
{
public:
	class UUIDiscover*                            UIDiscover;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalListIndex;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9716[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9717[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CreateIndexList_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9718[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9719[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971A[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateDiscoverIndexList) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateDiscoverIndexList");
static_assert(sizeof(Ui_menu_battle_control_C_CreateDiscoverIndexList) == 0x000048, "Wrong size on Ui_menu_battle_control_C_CreateDiscoverIndexList");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, UIDiscover) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::UIDiscover' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, LocalListIndex) == 0x00000C, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::LocalListIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, Temp_int_Loop_Num_Variable) == 0x000018, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_CreateIndexList_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_CreateIndexList_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreateDiscoverIndexList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'Ui_menu_battle_control_C_CreateDiscoverIndexList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.RemoveDiscoverIndexList
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_RemoveDiscoverIndexList final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIDiscover*                            NewLocalVar_2;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UUIDiscover*                      Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveDiscoverIndexList_ReturnValue;      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_RemoveDiscoverIndexList) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_RemoveDiscoverIndexList");
static_assert(sizeof(Ui_menu_battle_control_C_RemoveDiscoverIndexList) == 0x000020, "Wrong size on Ui_menu_battle_control_C_RemoveDiscoverIndexList");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, Param_Index) == 0x000000, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::Param_Index' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, NewLocalVar_2) == 0x000008, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::NewLocalVar_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, Temp_object_Variable) == 0x000010, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_RemoveDiscoverIndexList, CallFunc_RemoveDiscoverIndexList_ReturnValue) == 0x00001D, "Member 'Ui_menu_battle_control_C_RemoveDiscoverIndexList::CallFunc_RemoveDiscoverIndexList_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsStartDraw
// 0x0098 (0x0098 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsStartDraw final
{
public:
	EHelpTutorial                                 TipsID;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHelpTutorialData*                      CallFunc_GetHelpTutorialData_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EHelpTutorial, struct FMiniHelpRowDataCell> CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap;   // 0x0018(0x0050)()
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMiniHelpRowDataCell                   CallFunc_Map_Find_Value;                           // 0x0070(0x0020)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971E[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsStartDraw) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsStartDraw");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsStartDraw) == 0x000098, "Wrong size on Ui_menu_battle_control_C_MiniTipsStartDraw");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, TipsID) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::TipsID' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_GetDataBaseManager_Manager) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_GetHelpTutorialData_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_GetHelpTutorialData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap) == 0x000018, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, Temp_int_Variable) == 0x000068, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_Map_Find_Value) == 0x000070, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStartDraw, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'Ui_menu_battle_control_C_MiniTipsStartDraw::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsStopDraw
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsStopDraw final
{
public:
	EHelpTutorial                                 TipsID;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _IsClose;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsStopDraw) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsStopDraw");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsStopDraw) == 0x000004, "Wrong size on Ui_menu_battle_control_C_MiniTipsStopDraw");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStopDraw, TipsID) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsStopDraw::TipsID' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStopDraw, _IsClose) == 0x000001, "Member 'Ui_menu_battle_control_C_MiniTipsStopDraw::_IsClose' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStopDraw, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_MiniTipsStopDraw::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsStopDraw, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'Ui_menu_battle_control_C_MiniTipsStopDraw::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsUpdate
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsUpdate final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEndSubMenu_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableOpenMenu_ReturnValue;             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_971F[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsUpdate) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsUpdate");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsUpdate) == 0x000020, "Wrong size on Ui_menu_battle_control_C_MiniTipsUpdate");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_IsEndSubMenu_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_IsEndSubMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_IsEnableOpenMenu_ReturnValue) == 0x00000A, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_IsEnableOpenMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanAND_ReturnValue_2) == 0x00000D, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_Greater_IntInt_ReturnValue) == 0x00000E, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000F, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanAND_ReturnValue_3) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000011, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanAND_ReturnValue_4) == 0x000012, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_IsPlaying_IsPlaying) == 0x000018, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_BooleanOR_ReturnValue_1) == 0x00001C, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00001D, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsUpdate, K2Node_SwitchInteger_CmpSuccess) == 0x00001E, "Member 'Ui_menu_battle_control_C_MiniTipsUpdate::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSetCurrentTips
// 0x0088 (0x0088 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsSetCurrentTips final
{
public:
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHelpTutorialData*                      CallFunc_GetHelpTutorialData_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EHelpTutorial, struct FMiniHelpRowDataCell> CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap;   // 0x0010(0x0050)()
	struct FMiniHelpRowDataCell                   CallFunc_Map_Find_Value;                           // 0x0060(0x0020)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsSetCurrentTips");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips) == 0x000088, "Wrong size on Ui_menu_battle_control_C_MiniTipsSetCurrentTips");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips, CallFunc_GetDataBaseManager_Manager) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsSetCurrentTips::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips, CallFunc_GetHelpTutorialData_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsSetCurrentTips::CallFunc_GetHelpTutorialData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips, CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsSetCurrentTips::CallFunc_GetMiniHelpDataAsset_returnMiniHelpMap' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips, CallFunc_Map_Find_Value) == 0x000060, "Member 'Ui_menu_battle_control_C_MiniTipsSetCurrentTips::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSetCurrentTips, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'Ui_menu_battle_control_C_MiniTipsSetCurrentTips::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsCurrentTipsFlagResetCheck
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck final
{
public:
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9720[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTipsCountParamManager*                 CallFunc_GetTipsCountParam_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck) == 0x000018, "Wrong size on Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck, CallFunc_GetTipsCountParam_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsCurrentTipsFlagResetCheck::CallFunc_GetTipsCountParam_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerSetGaugePercent
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_PsychicTimerSetGaugePercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_PsychicTimerSetGaugePercent) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_PsychicTimerSetGaugePercent");
static_assert(sizeof(Ui_menu_battle_control_C_PsychicTimerSetGaugePercent) == 0x000004, "Wrong size on Ui_menu_battle_control_C_PsychicTimerSetGaugePercent");
static_assert(offsetof(Ui_menu_battle_control_C_PsychicTimerSetGaugePercent, Percent) == 0x000000, "Member 'Ui_menu_battle_control_C_PsychicTimerSetGaugePercent::Percent' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsClearCurrentTips
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsClearCurrentTips final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CloseTutoOperation_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsClearCurrentTips) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsClearCurrentTips");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsClearCurrentTips) == 0x000010, "Wrong size on Ui_menu_battle_control_C_MiniTipsClearCurrentTips");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsClearCurrentTips, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsClearCurrentTips::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsClearCurrentTips, CallFunc_CloseTutoOperation_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsClearCurrentTips::CallFunc_CloseTutoOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsClearCurrentTips, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_MiniTipsClearCurrentTips::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CloseMiniTips
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_CloseMiniTips final
{
public:
	EHelpTutorial                                 ID;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_CloseMiniTips) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_CloseMiniTips");
static_assert(sizeof(Ui_menu_battle_control_C_CloseMiniTips) == 0x000002, "Wrong size on Ui_menu_battle_control_C_CloseMiniTips");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMiniTips, ID) == 0x000000, "Member 'Ui_menu_battle_control_C_CloseMiniTips::ID' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CloseMiniTips, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_CloseMiniTips::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetCurrentMiniTipsID
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_GetCurrentMiniTipsID final
{
public:
	EHelpTutorial                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_GetCurrentMiniTipsID) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_GetCurrentMiniTipsID");
static_assert(sizeof(Ui_menu_battle_control_C_GetCurrentMiniTipsID) == 0x000001, "Wrong size on Ui_menu_battle_control_C_GetCurrentMiniTipsID");
static_assert(offsetof(Ui_menu_battle_control_C_GetCurrentMiniTipsID, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_GetCurrentMiniTipsID::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSortList
// 0x0024 (0x0024 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsSortList final
{
public:
	int32                                         _index;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9721[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9722[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsSortList) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsSortList");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsSortList) == 0x000024, "Wrong size on Ui_menu_battle_control_C_MiniTipsSortList");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, _index) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::_index' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, Temp_int_Variable) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00001C, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSortList, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Ui_menu_battle_control_C_MiniTipsSortList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSwapList
// 0x000C (0x000C - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsSwapList final
{
public:
	int32                                         Index0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index1;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _Prio;                                             // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EHelpTutorial                                 _Tips;                                             // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsSwapList) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsSwapList");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsSwapList) == 0x00000C, "Wrong size on Ui_menu_battle_control_C_MiniTipsSwapList");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSwapList, Index0) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsSwapList::Index0' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSwapList, Index1) == 0x000004, "Member 'Ui_menu_battle_control_C_MiniTipsSwapList::Index1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSwapList, _Prio) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsSwapList::_Prio' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSwapList, _Tips) == 0x000009, "Member 'Ui_menu_battle_control_C_MiniTipsSwapList::_Tips' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsDecrementTips
// 0x001C (0x001C - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsDecrementTips final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsDecrementTips) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsDecrementTips");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsDecrementTips) == 0x00001C, "Wrong size on Ui_menu_battle_control_C_MiniTipsDecrementTips");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, Temp_int_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, Temp_int_Variable_1) == 0x000004, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000014, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsDecrementTips, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_MiniTipsDecrementTips::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHpEnemyBoss
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHpEnemyBoss::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.ItemMenuGetCurrentItemID
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_ItemMenuGetCurrentItemID final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCurrentItemID_ID;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_ItemMenuGetCurrentItemID) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_ItemMenuGetCurrentItemID");
static_assert(sizeof(Ui_menu_battle_control_C_ItemMenuGetCurrentItemID) == 0x000010, "Wrong size on Ui_menu_battle_control_C_ItemMenuGetCurrentItemID");
static_assert(offsetof(Ui_menu_battle_control_C_ItemMenuGetCurrentItemID, ItemId) == 0x000000, "Member 'Ui_menu_battle_control_C_ItemMenuGetCurrentItemID::ItemId' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_ItemMenuGetCurrentItemID, CallFunc_GetCurrentItemID_ID) == 0x000008, "Member 'Ui_menu_battle_control_C_ItemMenuGetCurrentItemID::CallFunc_GetCurrentItemID_ID' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetShortcutGuide
// 0x0005 (0x0005 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide) == 0x000005, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide, CallFunc_IsPlaying_IsPlaying) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide, CallFunc_BooleanAND_ReturnValue_2) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetShortcutGuide::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreateWidgetMiniTipsSuccess
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess final
{
public:
	class UWB_ui_Success_C*                       CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess");
static_assert(sizeof(Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess) == 0x000008, "Wrong size on Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess");
static_assert(offsetof(Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess, CallFunc_Create_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_CreateWidgetMiniTipsSuccess::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.EndMinimapBrainField
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_EndMinimapBrainField final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndMinimapBrainField_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_EndMinimapBrainField) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_EndMinimapBrainField");
static_assert(sizeof(Ui_menu_battle_control_C_EndMinimapBrainField) == 0x000002, "Wrong size on Ui_menu_battle_control_C_EndMinimapBrainField");
static_assert(offsetof(Ui_menu_battle_control_C_EndMinimapBrainField, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_EndMinimapBrainField::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_EndMinimapBrainField, CallFunc_EndMinimapBrainField_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_EndMinimapBrainField::CallFunc_EndMinimapBrainField_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartMinimapBrainField
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_StartMinimapBrainField final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartMinimapBrainField_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_StartMinimapBrainField) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_StartMinimapBrainField");
static_assert(sizeof(Ui_menu_battle_control_C_StartMinimapBrainField) == 0x000002, "Wrong size on Ui_menu_battle_control_C_StartMinimapBrainField");
static_assert(offsetof(Ui_menu_battle_control_C_StartMinimapBrainField, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_StartMinimapBrainField::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartMinimapBrainField, CallFunc_StartMinimapBrainField_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_StartMinimapBrainField::CallFunc_StartMinimapBrainField_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.PsychicTimerSetState
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_PsychicTimerSetState final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_PsychicTimerSetState) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_PsychicTimerSetState");
static_assert(sizeof(Ui_menu_battle_control_C_PsychicTimerSetState) == 0x000004, "Wrong size on Ui_menu_battle_control_C_PsychicTimerSetState");
static_assert(offsetof(Ui_menu_battle_control_C_PsychicTimerSetState, Param_Index) == 0x000000, "Member 'Ui_menu_battle_control_C_PsychicTimerSetState::Param_Index' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetDebugFlagDrawShortcutGuide
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide final
{
public:
	bool                                          IsDraw;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide");
static_assert(sizeof(Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide) == 0x000001, "Wrong size on Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide");
static_assert(offsetof(Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide, IsDraw) == 0x000000, "Member 'Ui_menu_battle_control_C_SetDebugFlagDrawShortcutGuide::IsDraw' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetDebugFlagDrawShortcutGuide
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide final
{
public:
	bool                                          IsDraw;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide");
static_assert(sizeof(Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide) == 0x000001, "Wrong size on Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide");
static_assert(offsetof(Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide, IsDraw) == 0x000000, "Member 'Ui_menu_battle_control_C_GetDebugFlagDrawShortcutGuide::IsDraw' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Set Player Wait Flag
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_Set_Player_Wait_Flag final
{
public:
	bool                                          IsWait;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_Set_Player_Wait_Flag) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_Set_Player_Wait_Flag");
static_assert(sizeof(Ui_menu_battle_control_C_Set_Player_Wait_Flag) == 0x000001, "Wrong size on Ui_menu_battle_control_C_Set_Player_Wait_Flag");
static_assert(offsetof(Ui_menu_battle_control_C_Set_Player_Wait_Flag, IsWait) == 0x000000, "Member 'Ui_menu_battle_control_C_Set_Player_Wait_Flag::IsWait' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateShortcutGuide
// 0x0018 (0x0018 - 0x0000)
struct Ui_menu_battle_control_C_UpdateShortcutGuide final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_islockInputSubMenu_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9723[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateShortcutGuide) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateShortcutGuide");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateShortcutGuide) == 0x000018, "Wrong size on Ui_menu_battle_control_C_UpdateShortcutGuide");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_islockInputSubMenu_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_islockInputSubMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, CallFunc_BooleanAND_ReturnValue_2) == 0x000014, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateShortcutGuide, K2Node_SwitchInteger_CmpSuccess) == 0x000015, "Member 'Ui_menu_battle_control_C_UpdateShortcutGuide::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetBrainTalk
// 0x0028 (0x0028 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk final
{
public:
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStartTalkEventKeepPlayingBT_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9724[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk) == 0x000028, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_IsStartTalkEventKeepPlayingBT_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_IsStartTalkEventKeepPlayingBT_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetBrainTalk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.CreatePkObjectTimer
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_CreatePkObjectTimer final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9725[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_PK_object_timer_1_C*             CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9726[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_CreatePkObjectTimer) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_CreatePkObjectTimer");
static_assert(sizeof(Ui_menu_battle_control_C_CreatePkObjectTimer) == 0x000020, "Wrong size on Ui_menu_battle_control_C_CreatePkObjectTimer");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePkObjectTimer, Temp_int_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_CreatePkObjectTimer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePkObjectTimer, CallFunc_Create_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_CreatePkObjectTimer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePkObjectTimer, CallFunc_Array_Add_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_CreatePkObjectTimer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePkObjectTimer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_CreatePkObjectTimer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_CreatePkObjectTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_CreatePkObjectTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetTutoOperation
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation) == 0x000010, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetTutoOperation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.Set Draw Mode Brain Crash Nomal
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal final
{
public:
	bool                                          IsBrainCrash;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9727[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal");
static_assert(sizeof(Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal) == 0x000010, "Wrong size on Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal");
static_assert(offsetof(Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal, IsBrainCrash) == 0x000000, "Member 'Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal::IsBrainCrash' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'Ui_menu_battle_control_C_Set_Draw_Mode_Brain_Crash_Nomal::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SasSetChangePageReady
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_SasSetChangePageReady final
{
public:
	bool                                          ReadyFlagL;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReadyFlagR;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SasSetChangePageReady) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SasSetChangePageReady");
static_assert(sizeof(Ui_menu_battle_control_C_SasSetChangePageReady) == 0x000003, "Wrong size on Ui_menu_battle_control_C_SasSetChangePageReady");
static_assert(offsetof(Ui_menu_battle_control_C_SasSetChangePageReady, ReadyFlagL) == 0x000000, "Member 'Ui_menu_battle_control_C_SasSetChangePageReady::ReadyFlagL' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SasSetChangePageReady, ReadyFlagR) == 0x000001, "Member 'Ui_menu_battle_control_C_SasSetChangePageReady::ReadyFlagR' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SasSetChangePageReady, ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_SasSetChangePageReady::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetHUD
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetHUD final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetHUD");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD) == 0x000010, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetHUD");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHUD::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD, CallFunc_IsPlaying_IsPlaying) == 0x000009, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHUD::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetHUD, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetHUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetResurrection
// 0x0010 (0x0010 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetResurrection final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection) == 0x000008, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetResurrection");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection) == 0x000010, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetResurrection");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetResurrection::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetResurrection::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetResurrection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetResurrection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetResurrection, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetResurrection::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniMapModelDelete
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_MiniMapModelDelete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MiniMapModelDelete_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniMapModelDelete) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_MiniMapModelDelete");
static_assert(sizeof(Ui_menu_battle_control_C_MiniMapModelDelete) == 0x000003, "Wrong size on Ui_menu_battle_control_C_MiniMapModelDelete");
static_assert(offsetof(Ui_menu_battle_control_C_MiniMapModelDelete, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniMapModelDelete::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniMapModelDelete, CallFunc_MiniMapModelDelete_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_MiniMapModelDelete::CallFunc_MiniMapModelDelete_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_MiniMapModelDelete, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_MiniMapModelDelete::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetLevelUp
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetLevelUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.MiniTipsSuccessUpdate
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_MiniTipsSuccessUpdate final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_MiniTipsSuccessUpdate) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_MiniTipsSuccessUpdate");
static_assert(sizeof(Ui_menu_battle_control_C_MiniTipsSuccessUpdate) == 0x000001, "Wrong size on Ui_menu_battle_control_C_MiniTipsSuccessUpdate");
static_assert(offsetof(Ui_menu_battle_control_C_MiniTipsSuccessUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_MiniTipsSuccessUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.StartNexusDrive
// 0x0004 (0x0004 - 0x0000)
struct Ui_menu_battle_control_C_StartNexusDrive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          _FlagDrawNexusDriveWork;                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_StartNexusDrive) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_StartNexusDrive");
static_assert(sizeof(Ui_menu_battle_control_C_StartNexusDrive) == 0x000004, "Wrong size on Ui_menu_battle_control_C_StartNexusDrive");
static_assert(offsetof(Ui_menu_battle_control_C_StartNexusDrive, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_StartNexusDrive::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartNexusDrive, _FlagDrawNexusDriveWork) == 0x000001, "Member 'Ui_menu_battle_control_C_StartNexusDrive::_FlagDrawNexusDriveWork' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartNexusDrive, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_StartNexusDrive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_StartNexusDrive, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ui_menu_battle_control_C_StartNexusDrive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetNexusDrive
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive) == 0x000002, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetNexusDrive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetNexusDriveUsingAnimTime
// 0x0064 (0x0064 - 0x0000)
struct Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkNum;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _WorkTime;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9728[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetUsingCurrentTime_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUsingCurrentTime_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9729[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUsingCurrentTime_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972A[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUsingCurrentTime_ReturnValue_3;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972B[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime");
static_assert(sizeof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime) == 0x000064, "Wrong size on Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, Time) == 0x000000, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::Time' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, _WorkNum) == 0x000004, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::_WorkNum' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, _WorkTime) == 0x000008, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::_WorkTime' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, Temp_int_Variable) == 0x00000C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, Temp_int_Variable_1) == 0x000010, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_GetUsingCurrentTime_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_GetUsingCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_GetUsingCurrentTime_ReturnValue_1) == 0x000024, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_GetUsingCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000029, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_GetUsingCurrentTime_ReturnValue_2) == 0x00003C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_GetUsingCurrentTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, Temp_int_Variable_2) == 0x000040, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000044, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000048, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, Temp_int_Variable_3) == 0x000050, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_GetUsingCurrentTime_ReturnValue_3) == 0x000058, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_GetUsingCurrentTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00005C, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000060, "Member 'Ui_menu_battle_control_C_GetNexusDriveUsingAnimTime::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateGuide
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateGuide final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateGuide) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateGuide");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateGuide) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateGuide");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateGuide, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateGuide::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.GetNexusDriveDefaultAnimTime
// 0x0064 (0x0064 - 0x0000)
struct Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkNum;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _WorkTime;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972C[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultCurrentTime_ReturnValue;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultCurrentTime_ReturnValue_1;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972D[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultCurrentTime_ReturnValue_2;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972E[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDefaultCurrentTime_ReturnValue_3;      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_972F[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime");
static_assert(sizeof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime) == 0x000064, "Wrong size on Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, Time) == 0x000000, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::Time' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, _WorkNum) == 0x000004, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::_WorkNum' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, _WorkTime) == 0x000008, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::_WorkTime' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, Temp_int_Variable) == 0x00000C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, Temp_int_Variable_1) == 0x000010, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_GetDefaultCurrentTime_ReturnValue) == 0x000020, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_GetDefaultCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_GetDefaultCurrentTime_ReturnValue_1) == 0x000024, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_GetDefaultCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000029, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_GetDefaultCurrentTime_ReturnValue_2) == 0x00003C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_GetDefaultCurrentTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, Temp_int_Variable_2) == 0x000040, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000044, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000048, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, Temp_int_Variable_3) == 0x000050, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_GetDefaultCurrentTime_ReturnValue_3) == 0x000058, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_GetDefaultCurrentTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00005C, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000060, "Member 'Ui_menu_battle_control_C_GetNexusDriveDefaultAnimTime::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawWidgetVisionSimulatorTimer
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer) == 0x000001, "Wrong size on Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawWidgetVisionSimulatorTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisionSimulatorTimerDraw
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw final
{
public:
	bool                                          IsDraw;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw");
static_assert(sizeof(Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw) == 0x000002, "Wrong size on Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw");
static_assert(offsetof(Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw, IsDraw) == 0x000000, "Member 'Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw::IsDraw' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw, ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_SetVisionSimulatorTimerDraw::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.SetVisionSimulatorTimerColor
// 0x0008 (0x0008 - 0x0000)
struct Ui_menu_battle_control_C_SetVisionSimulatorTimerColor final
{
public:
	int32                                         ColorIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_SetVisionSimulatorTimerColor) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_SetVisionSimulatorTimerColor");
static_assert(sizeof(Ui_menu_battle_control_C_SetVisionSimulatorTimerColor) == 0x000008, "Wrong size on Ui_menu_battle_control_C_SetVisionSimulatorTimerColor");
static_assert(offsetof(Ui_menu_battle_control_C_SetVisionSimulatorTimerColor, ColorIndex) == 0x000000, "Member 'Ui_menu_battle_control_C_SetVisionSimulatorTimerColor::ColorIndex' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_SetVisionSimulatorTimerColor, ReturnValue) == 0x000004, "Member 'Ui_menu_battle_control_C_SetVisionSimulatorTimerColor::ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateNexusDriveNotice
// 0x0002 (0x0002 - 0x0000)
struct Ui_menu_battle_control_C_UpdateNexusDriveNotice final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateNexusDriveNotice) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_UpdateNexusDriveNotice");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateNexusDriveNotice) == 0x000002, "Wrong size on Ui_menu_battle_control_C_UpdateNexusDriveNotice");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateNexusDriveNotice, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateNexusDriveNotice::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateNexusDriveNotice, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ui_menu_battle_control_C_UpdateNexusDriveNotice::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.UpdateDrawPkObjectTimer
// 0x0020 (0x0020 - 0x0000)
struct Ui_menu_battle_control_C_UpdateDrawPkObjectTimer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9730[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9731[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer) == 0x000004, "Wrong alignment on Ui_menu_battle_control_C_UpdateDrawPkObjectTimer");
static_assert(sizeof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer) == 0x000020, "Wrong size on Ui_menu_battle_control_C_UpdateDrawPkObjectTimer");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_UpdateDrawPkObjectTimer, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'Ui_menu_battle_control_C_UpdateDrawPkObjectTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.IsDrawMiniTipsSuccess
// 0x0003 (0x0003 - 0x0000)
struct Ui_menu_battle_control_C_IsDrawMiniTipsSuccess final
{
public:
	bool                                          IsDraw;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_IsDrawMiniTipsSuccess) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_IsDrawMiniTipsSuccess");
static_assert(sizeof(Ui_menu_battle_control_C_IsDrawMiniTipsSuccess) == 0x000003, "Wrong size on Ui_menu_battle_control_C_IsDrawMiniTipsSuccess");
static_assert(offsetof(Ui_menu_battle_control_C_IsDrawMiniTipsSuccess, IsDraw) == 0x000000, "Member 'Ui_menu_battle_control_C_IsDrawMiniTipsSuccess::IsDraw' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_IsDrawMiniTipsSuccess, CallFunc_IsPlaying_IsPlaying) == 0x000001, "Member 'Ui_menu_battle_control_C_IsDrawMiniTipsSuccess::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(Ui_menu_battle_control_C_IsDrawMiniTipsSuccess, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ui_menu_battle_control_C_IsDrawMiniTipsSuccess::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ui_menu_battle_control.ui_menu_battle_control_C.IsUsingBrainField
// 0x0001 (0x0001 - 0x0000)
struct Ui_menu_battle_control_C_IsUsingBrainField final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Ui_menu_battle_control_C_IsUsingBrainField) == 0x000001, "Wrong alignment on Ui_menu_battle_control_C_IsUsingBrainField");
static_assert(sizeof(Ui_menu_battle_control_C_IsUsingBrainField) == 0x000001, "Wrong size on Ui_menu_battle_control_C_IsUsingBrainField");
static_assert(offsetof(Ui_menu_battle_control_C_IsUsingBrainField, ReturnValue) == 0x000000, "Member 'Ui_menu_battle_control_C_IsUsingBrainField::ReturnValue' has a wrong offset!");

}

