#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_LookAtInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetLookAtEnable
// 0x0002 (0x0002 - 0x0000)
struct BPI_LookAtInterface_C_SetLookAtEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResult;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LookAtInterface_C_SetLookAtEnable) == 0x000001, "Wrong alignment on BPI_LookAtInterface_C_SetLookAtEnable");
static_assert(sizeof(BPI_LookAtInterface_C_SetLookAtEnable) == 0x000002, "Wrong size on BPI_LookAtInterface_C_SetLookAtEnable");
static_assert(offsetof(BPI_LookAtInterface_C_SetLookAtEnable, bEnable) == 0x000000, "Member 'BPI_LookAtInterface_C_SetLookAtEnable::bEnable' has a wrong offset!");
static_assert(offsetof(BPI_LookAtInterface_C_SetLookAtEnable, bResult) == 0x000001, "Member 'BPI_LookAtInterface_C_SetLookAtEnable::bResult' has a wrong offset!");

// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetEventLookAtLocation
// 0x0014 (0x0014 - 0x0000)
struct BPI_LookAtInterface_C_SetEventLookAtLocation final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtLocation;                                    // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LookAtInterface_C_SetEventLookAtLocation) == 0x000004, "Wrong alignment on BPI_LookAtInterface_C_SetEventLookAtLocation");
static_assert(sizeof(BPI_LookAtInterface_C_SetEventLookAtLocation) == 0x000014, "Wrong size on BPI_LookAtInterface_C_SetEventLookAtLocation");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtLocation, bEnable) == 0x000000, "Member 'BPI_LookAtInterface_C_SetEventLookAtLocation::bEnable' has a wrong offset!");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtLocation, LookAtLocation) == 0x000004, "Member 'BPI_LookAtInterface_C_SetEventLookAtLocation::LookAtLocation' has a wrong offset!");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtLocation, bDummy) == 0x000010, "Member 'BPI_LookAtInterface_C_SetEventLookAtLocation::bDummy' has a wrong offset!");

// Function BPI_LookAtInterface.BPI_LookAtInterface_C.SetEventLookAtActor
// 0x0018 (0x0018 - 0x0000)
struct BPI_LookAtInterface_C_SetEventLookAtActor final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46C1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LookAtActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LookAtInterface_C_SetEventLookAtActor) == 0x000008, "Wrong alignment on BPI_LookAtInterface_C_SetEventLookAtActor");
static_assert(sizeof(BPI_LookAtInterface_C_SetEventLookAtActor) == 0x000018, "Wrong size on BPI_LookAtInterface_C_SetEventLookAtActor");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtActor, bEnable) == 0x000000, "Member 'BPI_LookAtInterface_C_SetEventLookAtActor::bEnable' has a wrong offset!");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtActor, LookAtActor) == 0x000008, "Member 'BPI_LookAtInterface_C_SetEventLookAtActor::LookAtActor' has a wrong offset!");
static_assert(offsetof(BPI_LookAtInterface_C_SetEventLookAtActor, bDummy) == 0x000010, "Member 'BPI_LookAtInterface_C_SetEventLookAtActor::bDummy' has a wrong offset!");

// Function BPI_LookAtInterface.BPI_LookAtInterface_C.IsLookAtEnable
// 0x0001 (0x0001 - 0x0000)
struct BPI_LookAtInterface_C_IsLookAtEnable final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_LookAtInterface_C_IsLookAtEnable) == 0x000001, "Wrong alignment on BPI_LookAtInterface_C_IsLookAtEnable");
static_assert(sizeof(BPI_LookAtInterface_C_IsLookAtEnable) == 0x000001, "Wrong size on BPI_LookAtInterface_C_IsLookAtEnable");
static_assert(offsetof(BPI_LookAtInterface_C_IsLookAtEnable, bEnable) == 0x000000, "Member 'BPI_LookAtInterface_C_IsLookAtEnable::bEnable' has a wrong offset!");

}

