#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChangeWeakStateComponent

#include "Basic.hpp"

#include "ChangeWeakStateComponent_classes.hpp"
#include "ChangeWeakStateComponent_parameters.hpp"


namespace SDK
{

// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.ExecuteUbergraph_ChangeWeakStateComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::ExecuteUbergraph_ChangeWeakStateComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "ExecuteUbergraph_ChangeWeakStateComponent");

	Params::ChangeWeakStateComponent_C_ExecuteUbergraph_ChangeWeakStateComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "ReceiveEndPlay");

	Params::ChangeWeakStateComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UChangeWeakStateComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Enable Weak
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   WeakListNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bNotChangeCollision                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Enable_Weak(bool bEnable, int32 WeakListNum, bool bNotChangeCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Enable Weak");

	Params::ChangeWeakStateComponent_C_Enable_Weak Parms{};

	Parms.bEnable = bEnable;
	Parms.WeakListNum = WeakListNum;
	Parms.bNotChangeCollision = bNotChangeCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Restore Weak State
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Restore_Weak_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Restore Weak State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Store Weak State
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Store_Weak_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Store Weak State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::Update(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Update");

	Params::ChangeWeakStateComponent_C_Update Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Enable All Weak
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Enable_All_Weak(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Enable All Weak");

	Params::ChangeWeakStateComponent_C_Enable_All_Weak Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Set Change Weak Material
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bChange                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   WeakListNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::Set_Change_Weak_Material(bool bChange, int32 WeakListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Set Change Weak Material");

	Params::ChangeWeakStateComponent_C_Set_Change_Weak_Material Parms{};

	Parms.bChange = bChange;
	Parms.WeakListNum = WeakListNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Clear Change Weak Material
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Clear_Change_Weak_Material()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Clear Change Weak Material");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Is Weak Full Inactive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   WeakListNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFullInactive                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Is_Weak_Full_Inactive(int32 WeakListNum, bool* bFullInactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Is Weak Full Inactive");

	Params::ChangeWeakStateComponent_C_Is_Weak_Full_Inactive Parms{};

	Parms.WeakListNum = WeakListNum;

	UObject::ProcessEvent(Func, &Parms);

	if (bFullInactive != nullptr)
		*bFullInactive = Parms.bFullInactive;
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Set Full Inactive Weak
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFullInactive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   WeakListNum                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::Set_Full_Inactive_Weak(bool bFullInactive, int32 WeakListNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Set Full Inactive Weak");

	Params::ChangeWeakStateComponent_C_Set_Full_Inactive_Weak Parms{};

	Parms.bFullInactive = bFullInactive;
	Parms.WeakListNum = WeakListNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Start Full Inactive Weak
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Start_Full_Inactive_Weak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Start Full Inactive Weak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Get Full Inactive List
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<bool>                            FullInactiveList                                       (Parm, OutParm, HasGetValueTypeHash)

void UChangeWeakStateComponent_C::Get_Full_Inactive_List(TArray<bool>* FullInactiveList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Get Full Inactive List");

	Params::ChangeWeakStateComponent_C_Get_Full_Inactive_List Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FullInactiveList != nullptr)
		*FullInactiveList = std::move(Parms.FullInactiveList);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.End Full Inactive Weak
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::End_Full_Inactive_Weak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "End Full Inactive Weak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Is All Weak Full Inactive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bAllWeakFullInactive                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Is_All_Weak_Full_Inactive(bool* bAllWeakFullInactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Is All Weak Full Inactive");

	Params::ChangeWeakStateComponent_C_Is_All_Weak_Full_Inactive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAllWeakFullInactive != nullptr)
		*bAllWeakFullInactive = Parms.bAllWeakFullInactive;
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Start Force Enable Weak
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Start_Force_Enable_Weak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Start Force Enable Weak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Is Force Enable Weak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bForceEnableWeak                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Is_Force_Enable_Weak(bool* Param_bForceEnableWeak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Is Force Enable Weak");

	Params::ChangeWeakStateComponent_C_Is_Force_Enable_Weak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bForceEnableWeak != nullptr)
		*Param_bForceEnableWeak = Parms.Param_bForceEnableWeak;
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.End Force Enable Weak
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::End_Force_Enable_Weak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "End Force Enable Weak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Set All Weak Full Inactive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bFullInactive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Set_All_Weak_Full_Inactive(bool bFullInactive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Set All Weak Full Inactive");

	Params::ChangeWeakStateComponent_C_Set_All_Weak_Full_Inactive Parms{};

	Parms.bFullInactive = bFullInactive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Add Weak Extend Time
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::Add_Weak_Extend_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Add Weak Extend Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.End Weak Extend Time
// (Public, BlueprintCallable, BlueprintEvent)

void UChangeWeakStateComponent_C::End_Weak_Extend_Time()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "End Weak Extend Time");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Is Weak Extend Time
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bWeakExtendTime                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Is_Weak_Extend_Time(bool* Param_bWeakExtendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Is Weak Extend Time");

	Params::ChangeWeakStateComponent_C_Is_Weak_Extend_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bWeakExtendTime != nullptr)
		*Param_bWeakExtendTime = Parms.Param_bWeakExtendTime;
}


// Function ChangeWeakStateComponent.ChangeWeakStateComponent_C.Is Enable Weak Extend Time
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_bWeakExtendTime                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChangeWeakStateComponent_C::Is_Enable_Weak_Extend_Time(bool* Param_bWeakExtendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChangeWeakStateComponent_C", "Is Enable Weak Extend Time");

	Params::ChangeWeakStateComponent_C_Is_Enable_Weak_Extend_Time Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_bWeakExtendTime != nullptr)
		*Param_bWeakExtendTime = Parms.Param_bWeakExtendTime;
}

}

