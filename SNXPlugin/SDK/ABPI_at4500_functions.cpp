#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABPI_at4500

#include "Basic.hpp"

#include "ABPI_at4500_classes.hpp"
#include "ABPI_at4500_parameters.hpp"


namespace SDK
{

// Function ABPI_at4500.ABPI_at4500_C.SetBattle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bBattle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IABPI_at4500_C::SetBattle(bool bBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_at4500_C", "SetBattle");

	Params::ABPI_at4500_C_SetBattle Parms{};

	Parms.bBattle = bBattle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABPI_at4500.ABPI_at4500_C.SetEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEvent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IABPI_at4500_C::SetEvent(bool bEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_at4500_C", "SetEvent");

	Params::ABPI_at4500_C_SetEvent Parms{};

	Parms.bEvent = bEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ABPI_at4500.ABPI_at4500_C.SetAttachMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           AttachMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IABPI_at4500_C::SetAttachMesh(class USkeletalMeshComponent* AttachMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ABPI_at4500_C", "SetAttachMesh");

	Params::ABPI_at4500_C_SetAttachMesh Parms{};

	Parms.AttachMesh = AttachMesh;

	UObject::ProcessEvent(Func, &Parms);
}

}

