#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SASHologramAttackCheck

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.ExecuteUbergraph_BP_SASHologramAttackCheck
// 0x00F8 (0x00F8 - 0x0000)
struct BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F0C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameSystemManager_C*                CallFunc_GetGameSystemManager_Manager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F0D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F0E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F0F[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSASHologramAttackCheckData            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0038)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F10[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F11[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSASHologramAttackProbabilityData      CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00B8(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F12[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     K2Node_Event_PlayerID;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSuccess;                             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F13[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F14[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck) == 0x000008, "Wrong alignment on BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck");
static_assert(sizeof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck) == 0x0000F8, "Wrong size on BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, EntryPoint) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetGameSystemManager_Manager) == 0x000008, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetGameSystemManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, K2Node_DynamicCast_AsRSBattle_Player) == 0x000038, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000A0, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000B8, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000C8, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Array_Add_ReturnValue_1) == 0x0000CC, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, K2Node_Event_PlayerID) == 0x0000D0, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::K2Node_Event_PlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, K2Node_Event_bSuccess) == 0x0000D1, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::K2Node_Event_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetHUDMainGame_HUDMainGame) == 0x0000D8, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x0000E0, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, Temp_int_Loop_Counter_Variable_1) == 0x0000E8, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000EC, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_SASHologramAttackCheck_C_ExecuteUbergraph_BP_SASHologramAttackCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.EndCallUI
// 0x0001 (0x0001 - 0x0000)
struct BP_SASHologramAttackCheck_C_EndCallUI final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_EndCallUI) == 0x000001, "Wrong alignment on BP_SASHologramAttackCheck_C_EndCallUI");
static_assert(sizeof(BP_SASHologramAttackCheck_C_EndCallUI) == 0x000001, "Wrong size on BP_SASHologramAttackCheck_C_EndCallUI");
static_assert(offsetof(BP_SASHologramAttackCheck_C_EndCallUI, bSuccess) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_EndCallUI::bSuccess' has a wrong offset!");

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.BeginCallUI
// 0x0001 (0x0001 - 0x0000)
struct BP_SASHologramAttackCheck_C_BeginCallUI final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_BeginCallUI) == 0x000001, "Wrong alignment on BP_SASHologramAttackCheck_C_BeginCallUI");
static_assert(sizeof(BP_SASHologramAttackCheck_C_BeginCallUI) == 0x000001, "Wrong size on BP_SASHologramAttackCheck_C_BeginCallUI");
static_assert(offsetof(BP_SASHologramAttackCheck_C_BeginCallUI, PlayerId) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_BeginCallUI::PlayerId' has a wrong offset!");

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.PlayVoice
// 0x0108 (0x0108 - 0x0000)
struct BP_SASHologramAttackCheck_C_PlayVoice final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F15[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_16;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_17;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_18;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_19;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_20;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_21;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_22;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_23;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_24;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_25;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_26;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F16[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlayVoice_ReturnValue;                    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_PlayVoice) == 0x000008, "Wrong alignment on BP_SASHologramAttackCheck_C_PlayVoice");
static_assert(sizeof(BP_SASHologramAttackCheck_C_PlayVoice) == 0x000108, "Wrong size on BP_SASHologramAttackCheck_C_PlayVoice");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, InPlayerID) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_byte_Variable) == 0x000001, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable) == 0x000008, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_1) == 0x000010, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_2) == 0x000018, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_3) == 0x000020, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_4) == 0x000028, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_5) == 0x000030, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_6) == 0x000038, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_7) == 0x000040, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_8) == 0x000048, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_9) == 0x000050, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_10) == 0x000058, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_11) == 0x000060, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_12) == 0x000068, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_13) == 0x000070, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_14) == 0x000078, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_15) == 0x000080, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_16) == 0x000088, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_17) == 0x000090, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_18) == 0x000098, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_19) == 0x0000A0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_20) == 0x0000A8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_21) == 0x0000B0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_22) == 0x0000B8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_23) == 0x0000C0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_24) == 0x0000C8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_25) == 0x0000D0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, Temp_object_Variable_26) == 0x0000D8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, CallFunc_GetSoundManager_SoundManager) == 0x0000E0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, K2Node_Select_Default) == 0x0000E8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x0000F8, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_PlayVoice, CallFunc_PlayVoice_ReturnValue) == 0x000100, "Member 'BP_SASHologramAttackCheck_C_PlayVoice::CallFunc_PlayVoice_ReturnValue' has a wrong offset!");

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.DebugInitialize
// 0x0010 (0x0010 - 0x0000)
struct BP_SASHologramAttackCheck_C_DebugInitialize final
{
public:
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_DebugInitialize) == 0x000008, "Wrong alignment on BP_SASHologramAttackCheck_C_DebugInitialize");
static_assert(sizeof(BP_SASHologramAttackCheck_C_DebugInitialize) == 0x000010, "Wrong size on BP_SASHologramAttackCheck_C_DebugInitialize");
static_assert(offsetof(BP_SASHologramAttackCheck_C_DebugInitialize, CallFunc_GetDebuggingManager_Manager) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_DebugInitialize::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SASHologramAttackCheck_C_DebugInitialize, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SASHologramAttackCheck_C_DebugInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SASHologramAttackCheck.BP_SASHologramAttackCheck_C.CheckTips
// 0x0004 (0x0004 - 0x0000)
struct BP_SASHologramAttackCheck_C_CheckTips final
{
public:
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SASHologramAttackCheck_C_CheckTips) == 0x000004, "Wrong alignment on BP_SASHologramAttackCheck_C_CheckTips");
static_assert(sizeof(BP_SASHologramAttackCheck_C_CheckTips) == 0x000004, "Wrong size on BP_SASHologramAttackCheck_C_CheckTips");
static_assert(offsetof(BP_SASHologramAttackCheck_C_CheckTips, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue) == 0x000000, "Member 'BP_SASHologramAttackCheck_C_CheckTips::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue' has a wrong offset!");

}

