#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Parts_minimap_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_Parts_minimap_1.WB_ui_Parts_minimap_1_C
// 0x01A0 (0x0678 - 0x04D8)
class UWB_ui_Parts_minimap_1_C final : public UUIMiniMap
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out_noise;                                         // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_noise;                                     // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_noise;                                          // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default_none;                                      // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               All;                                               // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               All_Set;                                           // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base;                                              // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Different_location;                                // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Different_location_base;                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Different_location_set;                            // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_1;                                            // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDImageBase*                          Icon_font_1;                                       // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_kizuna;                                       // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_main;                                         // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Icon_set;                                          // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Icon_text;                                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Noise;                                             // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Noise_1;                                           // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RT;                                                // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RT_map;                                            // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SubQuest_base_1;                                   // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               SubQuest_set;                                      // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Different_location_1;                         // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_minimap_SubQuest_1;                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_distance_1_C*      WB_ui_Parts_minimap_distance_1;                    // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_distance_1_C*      WB_ui_Parts_minimap_distance_2;                    // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_camera_1_C*   WB_ui_Parts_minimap_icon_camera_1;                 // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_north_1_C*    WB_ui_Parts_minimap_icon_north_1;                  // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_north_3_C*    WB_ui_Parts_minimap_icon_north_3;                  // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_player_1_C*   WB_ui_Parts_minimap_icon_player_1;                 // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              CameraScale;                                       // 0x05F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraHeight;                                      // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Isperspective;                                     // 0x05FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DE1[0x3];                                     // 0x05FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ui_Scene_Minimap_C*                 SceneMap;                                          // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Limit;                                             // 0x0608(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Limit_Default;                                     // 0x060C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraHeightDefault;                               // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DE2[0x4];                                     // 0x0614(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DebugAreaName;                                     // 0x0618(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          DebugFlag;                                         // 0x0628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7DE3[0x7];                                     // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_Parts_minimap_icon_player_1_C*   TwoDPlayer;                                        // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_camera_1_C*   TwodCameraIcon;                                    // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_north_1_C*    Direction1;                                        // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_north_2_C*    Direction2;                                        // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Parts_minimap_icon_north_3_C*    Direction3;                                        // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWorldmapOpenLCParam>           AllLocationList;                                   // 0x0658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         LCNO;                                              // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DepthDivideBefore;                                 // 0x066C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraOrthoWidth;                                  // 0x0670(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraOrthoWidthDefault;                           // 0x0674(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_Parts_minimap_1(int32 EntryPoint);
	void EventProgress();
	void QuestIconDest();
	void UpdateChangeQuestActive(class FName DatatableId);
	void UpdateChangeNotice(EUINoticeMessageCallType SenderType, class FName DatatableId);
	void SetThumbnail(int32 Icon);
	void Event_UpdateTargetPoint(bool DestinationDispFlag);
	void ActionManagerSetBattleFlag(bool bBattle);
	void ActionManagerSetIconMode(int32 Handle, EActionIconMode Mode);
	void Construct();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Destruct();
	void ArrangeItem____(EChangeMinimapStateType ChangeType, class FName ID);
	void RenderCameraCreate();
	void RenderCameraDelete();
	void RenderCameraUpdate();
	void InitIcon();
	void SetCameraScale(float Scale);
	void SetMaterialParamDivide(float Divide);
	void InitIconGoal();
	void SetUpConfigData();
	void InitIcon_Etc();
	void InitIconSubquestGoal();
	bool UpdateConfigSetting();
	bool CreateMapSetting();
	void InitIconPlayer();
	bool SetWidgetPlayerThumbnail(const class UObject* WorldContextObject, class UImage* Image, int32 Param_Index);
	bool SetWidgetCameraThumbnail(const class UObject* WorldContextObject, class UImage* Image, int32 Param_Index);
	void InitDirection();
	void InitIconBoundsGoal();
	void SetDestination();
	bool InitIcon_Etc_Native();
	bool SetDirectionDest();
	bool ReleaseMapSetting();
	bool MapOpenListSetting(int32 AreaNo);
	bool MinimapMaterialBrainfield(bool Flag);
	bool SetDirectionDestSubQuest(class FName SubquestTitle, class FName SubQuestID, bool Flag);
	void RenderModelDelete();
	bool ActionManagerExecute(int32 Handle);
	class AActor* ActionManagerGetPairActor();

	bool ActionManagerCheck(int32 Handle) const;
	float ActionManagerGetEditableAngle() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_Parts_minimap_1_C">();
	}
	static class UWB_ui_Parts_minimap_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_Parts_minimap_1_C>();
	}
};
static_assert(alignof(UWB_ui_Parts_minimap_1_C) == 0x000008, "Wrong alignment on UWB_ui_Parts_minimap_1_C");
static_assert(sizeof(UWB_ui_Parts_minimap_1_C) == 0x000678, "Wrong size on UWB_ui_Parts_minimap_1_C");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, UberGraphFrame) == 0x0004D8, "Member 'UWB_ui_Parts_minimap_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Out_noise) == 0x0004E0, "Member 'UWB_ui_Parts_minimap_1_C::Out_noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Default_noise) == 0x0004E8, "Member 'UWB_ui_Parts_minimap_1_C::Default_noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, In_noise) == 0x0004F0, "Member 'UWB_ui_Parts_minimap_1_C::In_noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Out) == 0x0004F8, "Member 'UWB_ui_Parts_minimap_1_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, In) == 0x000500, "Member 'UWB_ui_Parts_minimap_1_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Default_none) == 0x000508, "Member 'UWB_ui_Parts_minimap_1_C::Default_none' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Default) == 0x000510, "Member 'UWB_ui_Parts_minimap_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, All) == 0x000518, "Member 'UWB_ui_Parts_minimap_1_C::All' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, All_Set) == 0x000520, "Member 'UWB_ui_Parts_minimap_1_C::All_Set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Base) == 0x000528, "Member 'UWB_ui_Parts_minimap_1_C::Base' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Different_location) == 0x000530, "Member 'UWB_ui_Parts_minimap_1_C::Different_location' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Different_location_base) == 0x000538, "Member 'UWB_ui_Parts_minimap_1_C::Different_location_base' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Different_location_set) == 0x000540, "Member 'UWB_ui_Parts_minimap_1_C::Different_location_set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Frame) == 0x000548, "Member 'UWB_ui_Parts_minimap_1_C::Frame' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_1) == 0x000550, "Member 'UWB_ui_Parts_minimap_1_C::Icon_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_font_1) == 0x000558, "Member 'UWB_ui_Parts_minimap_1_C::Icon_font_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_kizuna) == 0x000560, "Member 'UWB_ui_Parts_minimap_1_C::Icon_kizuna' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_main) == 0x000568, "Member 'UWB_ui_Parts_minimap_1_C::Icon_main' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_set) == 0x000570, "Member 'UWB_ui_Parts_minimap_1_C::Icon_set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Icon_text) == 0x000578, "Member 'UWB_ui_Parts_minimap_1_C::Icon_text' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Noise) == 0x000580, "Member 'UWB_ui_Parts_minimap_1_C::Noise' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Noise_1) == 0x000588, "Member 'UWB_ui_Parts_minimap_1_C::Noise_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, RT) == 0x000590, "Member 'UWB_ui_Parts_minimap_1_C::RT' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, RT_map) == 0x000598, "Member 'UWB_ui_Parts_minimap_1_C::RT_map' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, SubQuest_base_1) == 0x0005A0, "Member 'UWB_ui_Parts_minimap_1_C::SubQuest_base_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, SubQuest_set) == 0x0005A8, "Member 'UWB_ui_Parts_minimap_1_C::SubQuest_set' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Text_Different_location_1) == 0x0005B0, "Member 'UWB_ui_Parts_minimap_1_C::Text_Different_location_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Text_minimap_SubQuest_1) == 0x0005B8, "Member 'UWB_ui_Parts_minimap_1_C::Text_minimap_SubQuest_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_distance_1) == 0x0005C0, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_distance_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_distance_2) == 0x0005C8, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_distance_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_icon_camera_1) == 0x0005D0, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_icon_camera_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_icon_north_1) == 0x0005D8, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_icon_north_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_icon_north_3) == 0x0005E0, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_icon_north_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, WB_ui_Parts_minimap_icon_player_1) == 0x0005E8, "Member 'UWB_ui_Parts_minimap_1_C::WB_ui_Parts_minimap_icon_player_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, CameraScale) == 0x0005F0, "Member 'UWB_ui_Parts_minimap_1_C::CameraScale' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, CameraHeight) == 0x0005F8, "Member 'UWB_ui_Parts_minimap_1_C::CameraHeight' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Isperspective) == 0x0005FC, "Member 'UWB_ui_Parts_minimap_1_C::Isperspective' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, SceneMap) == 0x000600, "Member 'UWB_ui_Parts_minimap_1_C::SceneMap' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Limit) == 0x000608, "Member 'UWB_ui_Parts_minimap_1_C::Limit' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Limit_Default) == 0x00060C, "Member 'UWB_ui_Parts_minimap_1_C::Limit_Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, CameraHeightDefault) == 0x000610, "Member 'UWB_ui_Parts_minimap_1_C::CameraHeightDefault' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, DebugAreaName) == 0x000618, "Member 'UWB_ui_Parts_minimap_1_C::DebugAreaName' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, DebugFlag) == 0x000628, "Member 'UWB_ui_Parts_minimap_1_C::DebugFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, TwoDPlayer) == 0x000630, "Member 'UWB_ui_Parts_minimap_1_C::TwoDPlayer' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, TwodCameraIcon) == 0x000638, "Member 'UWB_ui_Parts_minimap_1_C::TwodCameraIcon' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Direction1) == 0x000640, "Member 'UWB_ui_Parts_minimap_1_C::Direction1' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Direction2) == 0x000648, "Member 'UWB_ui_Parts_minimap_1_C::Direction2' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, Direction3) == 0x000650, "Member 'UWB_ui_Parts_minimap_1_C::Direction3' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, AllLocationList) == 0x000658, "Member 'UWB_ui_Parts_minimap_1_C::AllLocationList' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, LCNO) == 0x000668, "Member 'UWB_ui_Parts_minimap_1_C::LCNO' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, DepthDivideBefore) == 0x00066C, "Member 'UWB_ui_Parts_minimap_1_C::DepthDivideBefore' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, CameraOrthoWidth) == 0x000670, "Member 'UWB_ui_Parts_minimap_1_C::CameraOrthoWidth' has a wrong offset!");
static_assert(offsetof(UWB_ui_Parts_minimap_1_C, CameraOrthoWidthDefault) == 0x000674, "Member 'UWB_ui_Parts_minimap_1_C::CameraOrthoWidthDefault' has a wrong offset!");

}

