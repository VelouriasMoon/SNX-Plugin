#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_EventBindingPlayers

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_EventBindingPlayers.BPC_EventBindingPlayers_C
// 0x0130 (0x0330 - 0x0200)
class UBPC_EventBindingPlayers_C final : public USceneComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0200(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<TSoftClassPtr<class UClass>>           PlayerClasses;                                     // 0x0208(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ABP_MenuPlayerBase_C*>           PlayerInstance;                                    // 0x0218(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ABP_MenuPlayerBase_C*>           PlayerInstanceFacial;                              // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FText>                           PlayerIDText;                                      // 0x0238(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          EnableBinding;                                     // 0x0248(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableFacial;                                      // 0x0249(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugMaterial;                                     // 0x024A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43BF[0x5];                                     // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ASkeletalMeshActor*>             WeaponInstance;                                    // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FArrayOfBool>                   RestoreWeaponVisible;                              // 0x0260(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               BindGamePlayers;                                   // 0x0270(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class ABP_MenuPlayerBase_C*>           BindInstances;                                     // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UBPC_NeonWireDepth_C*>           InstanceNeonWireDepthComps;                        // 0x0290(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UBPC_NeonWireDepth_C*>           PlayerNeonWireDepthComps;                          // 0x02A0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PlayerNeonWireRestoreMaterials;                    // 0x02B0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PlayerNeonWireDofOFFMaterials;                     // 0x02C0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         PlayerNeonWireMaterialMeshes;                      // 0x02D0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UBPC_NeonWireDepth_C*>           NonPlayerNeonWireDepthComps;                       // 0x02E0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<int32>                                 PlayerNeonWireMaterialIndex;                       // 0x02F0(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          DebugLog;                                          // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43C0[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         EventHiddenWireActors;                             // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, Transient, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<bool>                                  RestorePlayerComponentUseFixedSkelBounds;          // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 DummyWp0101;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_EventBindingPlayers(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SetupBinding(class ARSLevelSequenceActor* Sequencer, bool IsChangeOwnerShip, bool BindInGamePlayer, bool LightweightBinding, TArray<class ARSCharacterBase*>* BindindInGamePlayers, TArray<class ARSCharacterBase*>* NoBindindInGamePlayers, TArray<class ABP_MenuPlayerBase_C*>* BindingSpawnInstance, TArray<class ASkeletalMeshActor*>* BindingSpawnWeaponInstance);
	void PrivateGetOrSpawnInstance(int32 InstanceIndex, bool Hidden, class ABP_MenuPlayerBase_C** Instance);
	void Reset(bool ClearInstance);
	void PrivateGetOrSpawnInstanceInternal(int32 InstanceIndex, TArray<class ABP_MenuPlayerBase_C*>& InstanceList, class ABP_MenuPlayerBase_C** Instance, bool* NewSpawn);
	void PrivateGetOrSpawnInstanceFacial(int32 InstanceIndex, class ABP_MenuPlayerBase_C** Instance);
	void GetFecialActor(TSoftObjectPtr<class USkeletalMesh> MeshObject, class AActor** Actor, class USkeletalMeshComponent** SkelMeshComp, EPlayerID* PlayerId);
	void PrivateDebugSetupMaterial(class AActor* Actor);
	void PrivateBindingWeapon(class ABP_MenuPlayerBase_C* Instance, class ARSLevelSequenceActor* Sequencer, bool IsChangeOwnerShip, int32 InstanceIndex, bool EventCommandVisiblitty, TArray<class ASkeletalMeshActor*>* BindingSpawnInstances);
	void PrivateGetOrSpawnWeaponInstance(class ABP_MenuPlayerBase_C* BasePlayerInstance, int32 PlayerIndex, int32 WeaponNo, class ASkeletalMeshActor** Instance);
	void GetBindingActors(TArray<class ARSCharacterBase*>* GamePlayers, TArray<class ABP_MenuPlayerBase_C*>* Instances);
	void BindingNeonWireCharacter(class ARSCharacterBase* BattleCharacter);
	void PrivateBindingNeonWireInstance(class ABP_MenuPlayerBase_C* MenuPlayer, int32 InstanceIndex);
	void PrivateSpawnNeonWire(class AActor* TargetActor, TArray<class UBPC_NeonWireDepth_C*>& RefNeonWireComps, int32 Param_Index, int32 WireMaterialIndex, class UBPC_NeonWireDepth_C** NeonWireDepth);
	void BindingNeonWireNonPlayerSeq(class ARSLevelSequenceActor* Sequencer);
	void PrivateResetNonPlayerNeonWire();
	void BindingNeonWireNonPlayerActors(TArray<class AActor*>& Actors);
	void PrivateResetPlayerNeonWire();
	void PrivateSetWireVisibleEvent(class AActor* Actor);
	void PrivateCheckEventHiddenWire(class AActor* Actor);
	void RestoreEventHIddenWire();
	void SetNeonWireDepthTick(class UMeshComponent* OwnerMeshComp, bool TickEnable, class UBPC_NeonWireDepth_C** NeonWireDepthComp);
	void CreateBindingInstance(int32 PlayerId);
	void HiddenSpawnInstance(bool Hidden);
	void GetOrSpawnBindingInstance(int32 PlayerId, class ABP_MenuPlayerBase_C** Instance);
	void ChangeCostumeSettings(EPlayerID PlayerId, bool DefaultCostume, bool NoAttachment);
	void EquipAttachmentInstance(EPlayerID PlayerId, bool CheckEquipAble);
	void GetPlayerInstance(int32 InstanceIndex, class ABP_MenuPlayerBase_C** MenuPlayer);

	void PrivateGetPlayerWeaponNum(int32* Num) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_EventBindingPlayers_C">();
	}
	static class UBPC_EventBindingPlayers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_EventBindingPlayers_C>();
	}
};
static_assert(alignof(UBPC_EventBindingPlayers_C) == 0x000010, "Wrong alignment on UBPC_EventBindingPlayers_C");
static_assert(sizeof(UBPC_EventBindingPlayers_C) == 0x000330, "Wrong size on UBPC_EventBindingPlayers_C");
static_assert(offsetof(UBPC_EventBindingPlayers_C, UberGraphFrame) == 0x000200, "Member 'UBPC_EventBindingPlayers_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerClasses) == 0x000208, "Member 'UBPC_EventBindingPlayers_C::PlayerClasses' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerInstance) == 0x000218, "Member 'UBPC_EventBindingPlayers_C::PlayerInstance' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerInstanceFacial) == 0x000228, "Member 'UBPC_EventBindingPlayers_C::PlayerInstanceFacial' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerIDText) == 0x000238, "Member 'UBPC_EventBindingPlayers_C::PlayerIDText' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, EnableBinding) == 0x000248, "Member 'UBPC_EventBindingPlayers_C::EnableBinding' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, EnableFacial) == 0x000249, "Member 'UBPC_EventBindingPlayers_C::EnableFacial' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, DebugMaterial) == 0x00024A, "Member 'UBPC_EventBindingPlayers_C::DebugMaterial' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, WeaponInstance) == 0x000250, "Member 'UBPC_EventBindingPlayers_C::WeaponInstance' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, RestoreWeaponVisible) == 0x000260, "Member 'UBPC_EventBindingPlayers_C::RestoreWeaponVisible' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, BindGamePlayers) == 0x000270, "Member 'UBPC_EventBindingPlayers_C::BindGamePlayers' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, BindInstances) == 0x000280, "Member 'UBPC_EventBindingPlayers_C::BindInstances' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, InstanceNeonWireDepthComps) == 0x000290, "Member 'UBPC_EventBindingPlayers_C::InstanceNeonWireDepthComps' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerNeonWireDepthComps) == 0x0002A0, "Member 'UBPC_EventBindingPlayers_C::PlayerNeonWireDepthComps' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerNeonWireRestoreMaterials) == 0x0002B0, "Member 'UBPC_EventBindingPlayers_C::PlayerNeonWireRestoreMaterials' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerNeonWireDofOFFMaterials) == 0x0002C0, "Member 'UBPC_EventBindingPlayers_C::PlayerNeonWireDofOFFMaterials' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerNeonWireMaterialMeshes) == 0x0002D0, "Member 'UBPC_EventBindingPlayers_C::PlayerNeonWireMaterialMeshes' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, NonPlayerNeonWireDepthComps) == 0x0002E0, "Member 'UBPC_EventBindingPlayers_C::NonPlayerNeonWireDepthComps' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, PlayerNeonWireMaterialIndex) == 0x0002F0, "Member 'UBPC_EventBindingPlayers_C::PlayerNeonWireMaterialIndex' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, DebugLog) == 0x000300, "Member 'UBPC_EventBindingPlayers_C::DebugLog' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, EventHiddenWireActors) == 0x000308, "Member 'UBPC_EventBindingPlayers_C::EventHiddenWireActors' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, RestorePlayerComponentUseFixedSkelBounds) == 0x000318, "Member 'UBPC_EventBindingPlayers_C::RestorePlayerComponentUseFixedSkelBounds' has a wrong offset!");
static_assert(offsetof(UBPC_EventBindingPlayers_C, DummyWp0101) == 0x000328, "Member 'UBPC_EventBindingPlayers_C::DummyWp0101' has a wrong offset!");

}

