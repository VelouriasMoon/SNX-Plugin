#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CalcParameterComponent

#include "Basic.hpp"

#include "BP_CalcParameterComponent_classes.hpp"
#include "BP_CalcParameterComponent_parameters.hpp"


namespace SDK
{

// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.CalcCharactersParameterTable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FCharactersParameterTable        Parameter                                              (Parm, OutParm)

void UBP_CalcParameterComponent_C::CalcCharactersParameterTable(EPlayerID PlayerId, struct FCharactersParameterTable* Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "CalcCharactersParameterTable");

	Params::BP_CalcParameterComponent_C_CalcCharactersParameterTable Parms{};

	Parms.PlayerId = PlayerId;

	UObject::ProcessEvent(Func, &Parms);

	if (Parameter != nullptr)
		*Parameter = std::move(Parms.Parameter);
}


// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.CalcLevel
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharactersParameterTable        RefParameter                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FPlayerInfo                      PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FCharactersParameterTable        OutParameter                                           (Parm, OutParm)

void UBP_CalcParameterComponent_C::CalcLevel(struct FCharactersParameterTable& RefParameter, const struct FPlayerInfo& PlayerInfo, struct FCharactersParameterTable* OutParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "CalcLevel");

	Params::BP_CalcParameterComponent_C_CalcLevel Parms{};

	Parms.RefParameter = std::move(RefParameter);
	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);

	RefParameter = std::move(Parms.RefParameter);

	if (OutParameter != nullptr)
		*OutParameter = std::move(Parms.OutParameter);
}


// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.CalcSkill
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharactersParameterTable        RefParameter                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FPlayerInfo                      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FCharactersParameterTable        OutParameter                                           (Parm, OutParm)

void UBP_CalcParameterComponent_C::CalcSkill(struct FCharactersParameterTable& RefParameter, const struct FPlayerInfo& Info, struct FCharactersParameterTable* OutParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "CalcSkill");

	Params::BP_CalcParameterComponent_C_CalcSkill Parms{};

	Parms.RefParameter = std::move(RefParameter);
	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);

	RefParameter = std::move(Parms.RefParameter);

	if (OutParameter != nullptr)
		*OutParameter = std::move(Parms.OutParameter);
}


// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.CalcEquip
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCharactersParameterTable        RefParameter                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FPlayerInfo                      Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// bool                                    bHPMax                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bHPDying                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCharactersParameterTable        OutParameter                                           (Parm, OutParm)

void UBP_CalcParameterComponent_C::CalcEquip(struct FCharactersParameterTable& RefParameter, const struct FPlayerInfo& Info, bool bHPMax, bool bHPDying, struct FCharactersParameterTable* OutParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "CalcEquip");

	Params::BP_CalcParameterComponent_C_CalcEquip Parms{};

	Parms.RefParameter = std::move(RefParameter);
	Parms.Info = std::move(Info);
	Parms.bHPMax = bHPMax;
	Parms.bHPDying = bHPDying;

	UObject::ProcessEvent(Func, &Parms);

	RefParameter = std::move(Parms.RefParameter);

	if (OutParameter != nullptr)
		*OutParameter = std::move(Parms.OutParameter);
}


// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.GetCharacterParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               Player_id_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCharactersParameter             Data_table                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_CalcParameterComponent_C::GetCharacterParam(EPlayerID Player_id_in, bool* Return, struct FCharactersParameter* Data_table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "GetCharacterParam");

	Params::BP_CalcParameterComponent_C_GetCharacterParam Parms{};

	Parms.Player_id_in = Player_id_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Data_table != nullptr)
		*Data_table = std::move(Parms.Data_table);
}


// Function BP_CalcParameterComponent.BP_CalcParameterComponent_C.GetCharacterLevelData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               Player_id_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCharactersLevelData             Data_table                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CalcParameterComponent_C::GetCharacterLevelData(EPlayerID Player_id_in, int32 Level_in, bool* Return, struct FCharactersLevelData* Data_table)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CalcParameterComponent_C", "GetCharacterLevelData");

	Params::BP_CalcParameterComponent_C_GetCharacterLevelData Parms{};

	Parms.Player_id_in = Player_id_in;
	Parms.Level_in = Level_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Data_table != nullptr)
		*Data_table = std::move(Parms.Data_table);
}

}

