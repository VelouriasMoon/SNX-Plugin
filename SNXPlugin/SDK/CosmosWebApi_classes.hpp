#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmosWebApi

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class CosmosWebApi.WebApiConnect
// 0x00C0 (0x00E8 - 0x0028)
class UWebApiConnect final : public UObject
{
public:
	uint8                                         Pad_1487[0xA0];                                    // 0x0028(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReceive;                                         // 0x00C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnError;                                           // 0x00D8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static void GetCampaignGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCampaignGetListResponseParam* RespParam);
	static void GetCampaignInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCampaignInfoResponseParam* RespParam);
	static void GetCampaignRewardListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCampaignRewardListResponseParam* RespParam);
	static void GetCampaignTitleListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCampaignTitleListResponseParam* RespParam);
	static void GetCatalogGetAreaResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCatalogGetAreaResponseParam* RespParam);
	static void GetCatalogGetLobbyResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCatalogGetLobbyResponseParam* RespParam);
	static void GetCatalogGetRegionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCatalogGetRegionResponseParam* RespParam);
	static void GetCommonpurchaseCancelPurchaseResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseCancelPurchaseResponseParam* RespParam);
	static void GetCommonpurchaseCompletePurchaseResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseCompletePurchaseResponseParam* RespParam);
	static void GetCommonpurchaseGetCatalogResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseGetCatalogResponseParam* RespParam);
	static void GetCommonpurchaseGetPurchaseStatusResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseGetPurchaseStatusResponseParam* RespParam);
	static void GetCommonpurchaseStartPurchaseResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseStartPurchaseResponseParam* RespParam);
	static void GetCommonpurchaseTokushoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonpurchaseTokushoResponseParam* RespParam);
	static void GetDataupAppendResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetDataupReadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FDataupReadResponseParam* RespParam);
	static void GetDataupSearchResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FDataupSearchResponseParam* RespParam);
	static void GetDataupWriteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FDataupWriteResponseParam* RespParam);
	static void GetFesAddPointResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FFesAddPointResponseParam* RespParam);
	static void GetFesCompleteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetFesGetInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FFesGetInfoResponseParam* RespParam);
	static void GetFesGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FFesGetListResponseParam* RespParam);
	static void GetFesGetRewardResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FFesGetRewardResponseParam* RespParam);
	static void GetFesJoinResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGamecurrencyGetLimitedOwnedResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGamecurrencyGetLimitedOwnedResponseParam* RespParam);
	static void GetGamecurrencyGetOwnedResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGamecurrencyGetOwnedResponseParam* RespParam);
	static void GetGiftBoxCloseResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGiftBoxOpenResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGiftBoxOpenResponseParam* RespParam);
	static void GetGuildAddApplyCancelResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildAddApplyListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildAddApplyListResponseParam* RespParam);
	static void GetGuildAddApplyResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildAddResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildApprovalAddResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildApprovalListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildApprovalListResponseParam* RespParam);
	static void GetGuildChangeBasePositionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildChangeLeaderResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildCreateResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildCreateResponseParam* RespParam);
	static void GetGuildEditMemberDataResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildEditResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildEditResponseParam* RespParam);
	static void GetGuildExpulsionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildGetListResponseParam* RespParam);
	static void GetGuildInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildInfoResponseParam* RespParam);
	static void GetGuildInvitationCancelResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildInvitationListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildInvitationListResponseParam* RespParam);
	static void GetGuildInvitationResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildInvitedListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildInvitedListResponseParam* RespParam);
	static void GetGuildNotificationResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildNotificationResponseParam* RespParam);
	static void GetGuildNotificationSelfResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FGuildNotificationSelfResponseParam* RespParam);
	static void GetGuildPositionPermissionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildSecessionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetGuildSetPositionResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetHugeTssMultiReadListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FHugeTssMultiReadListResponseParam* RespParam);
	static void GetHugeTssMultiReadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FHugeTssMultiReadResponseParam* RespParam);
	static void GetHugeTssReadListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FHugeTssReadListResponseParam* RespParam);
	static void GetHugeTssReadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FHugeTssReadResponseParam* RespParam);
	static void GetItemAddOwnedResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetItemGetMasterResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FItemGetMasterResponseParam* RespParam);
	static void GetItemGetOwnedResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FItemGetOwnedResponseParam* RespParam);
	static void GetItemUseOwnedResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetLoginBonusCompleteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetLoginBonusGetBonusResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FLoginBonusGetBonusResponseParam* RespParam);
	static void GetLoginBonusGetInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FLoginBonusGetInfoResponseParam* RespParam);
	static void GetLoginBonusGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FLoginBonusGetListResponseParam* RespParam);
	static void GetMissionGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FMissionGetListResponseParam* RespParam);
	static void GetMissionInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FMissionInfoResponseParam* RespParam);
	static void GetPointCardDeleteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetPointCardInfoResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FPointCardInfoResponseParam* RespParam);
	static void GetPointCardUserListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FPointCardUserListResponseParam* RespParam);
	static void GetPointGrantMissionPointResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetPointGrantResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetRankingGetByRangeResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRankingGetByRangeResponseParam* RespParam);
	static void GetRankingGetByUserResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRankingGetByUserResponseParam* RespParam);
	static void GetRankingGetMasterResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRankingGetMasterResponseParam* RespParam);
	static void GetRankingSetScoreResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetRewardEarnResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRewardEarnResponseParam* RespParam);
	static void GetRootBoxGetDetailResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRootBoxGetDetailResponseParam* RespParam);
	static void GetRootBoxGetListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRootBoxGetListResponseParam* RespParam);
	static void GetRootBoxGetProbabilityResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRootBoxGetProbabilityResponseParam* RespParam);
	static void GetRootBoxRunResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FRootBoxRunResponseParam* RespParam);
	static void GetSysAgreeKpiResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetSysCheckNgwordResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetSysGetEnvResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSysGetEnvResponseParam* RespParam);
	static void GetSysGetEnvV2Response(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSysGetEnvV2ResponseParam* RespParam);
	static void GetSysKpiResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetSysOfflineKpiResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetTssReadListResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FTssReadListResponseParam* RespParam);
	static void GetTssReadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FTssReadResponseParam* RespParam);
	static void GetTusReadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FTusReadResponseParam* RespParam);
	static void GetTusWriteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FCommonResponseParam* RespParam);
	static void GetUserAuthResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserAuthResponseParam* RespParam);
	static void GetUserConvertUserIdResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserConvertUserIdResponseParam* RespParam);
	static void GetUserCreateResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserCreateResponseParam* RespParam);
	static void GetUserGetTrackingNumResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserGetTrackingNumResponseParam* RespParam);
	static void GetUserLinkBnidResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserLinkBnidResponseParam* RespParam);
	static void GetUserLoginResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserLoginResponseParam* RespParam);
	static void GetUserLoginV2Response(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FUserLoginV2ResponseParam* RespParam);
	static class UWebApiConnect* Initialize(class UObject* WorldContextObject, const class FString& baseUrl, float Limitsec);
	static void SavedataDeleteResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSavedataDeleteResponseParam* RespParam);
	static void SavedataDownloadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSavedataDownloadResponseParam* RespParam);
	static void SavedataMultipartuploadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSavedataMultipartuploadResponseParam* RespParam);
	static void SavedataUploadResponse(class UNetMessage* Data, struct FResponseHeader* RespHeader, struct FSavedataUploadResponseParam* RespParam);

	class UWebApiConnect* CampaignGetList(class UObject* WorldContextObject, int32 DataType);
	class UWebApiConnect* CampaignInfo(class UObject* WorldContextObject, const class FString& CampaignId);
	class UWebApiConnect* CampaignRewardList(class UObject* WorldContextObject, const class FString& TitleCd, const class FString& CampaignId, int32 ListType);
	class UWebApiConnect* CampaignTitleList(class UObject* WorldContextObject, const class FString& TitleCd, int32 DataType);
	class UWebApiConnect* CatalogGetArea(class UObject* WorldContextObject, const class FString& RegionId);
	class UWebApiConnect* CatalogGetLobby(class UObject* WorldContextObject, const class FString& AreaId);
	class UWebApiConnect* CatalogGetRegion(class UObject* WorldContextObject);
	class UWebApiConnect* CommonpurchaseCancelPurchase(class UObject* WorldContextObject, const class FString& PurchaseInfoId, const class FString& Token, const class FString& ErrorId, const class FString& ErrorMessage);
	class UWebApiConnect* CommonpurchaseCompletePurchase(class UObject* WorldContextObject, const class FString& Country, const class FString& Language, const class FString& Token, const class FString& OrderId, const class FString& PurchaseInfoId);
	class UWebApiConnect* CommonpurchaseGetCatalog(class UObject* WorldContextObject, const class FString& Country, const class FString& Language, const class FString& Token, const class FString& Label);
	class UWebApiConnect* CommonpurchaseGetPurchaseStatus(class UObject* WorldContextObject, const class FString& Country, const class FString& Language, const class FString& Token, const class FString& Label);
	class UWebApiConnect* CommonpurchaseStartPurchase(class UObject* WorldContextObject, const class FString& Country, const class FString& Language, const class FString& Token, const class FString& CatalogId, const class FString& Label);
	class UWebApiConnect* CommonpurchaseTokusho(class UObject* WorldContextObject, const class FString& Language);
	class UWebApiConnect* DataupAppend(class UObject* WorldContextObject, const class FString& RequestID, const class FString& AppendInfo, const TArray<struct FDataupUpdateSearchTagInfo>& UpdateSearchTagList);
	class UWebApiConnect* DataupRead(class UObject* WorldContextObject, const class FString& RequestID);
	class UWebApiConnect* DataupSearch(class UObject* WorldContextObject, const TArray<struct FDataupSearchConditionInfo>& SearchConditionList, int32 ViewNum, int32 PageNum, int32 SortColumn, int32 SortType);
	class UWebApiConnect* DataupWrite(class UObject* WorldContextObject, const class FString& RequestID, const class FString& Data, const class FString& AppendInfo, const struct FDataupSearchTagInfo& SearchTagInfo);
	class UWebApiConnect* FesAddPoint(class UObject* WorldContextObject, const class FString& FesId, int32 FactionsNo);
	class UWebApiConnect* FesComplete(class UObject* WorldContextObject, const class FString& WorkId);
	class UWebApiConnect* FesGetInfo(class UObject* WorldContextObject, const class FString& FesId);
	class UWebApiConnect* FesGetList(class UObject* WorldContextObject);
	class UWebApiConnect* FesGetReward(class UObject* WorldContextObject, const class FString& FesId);
	class UWebApiConnect* FesJoin(class UObject* WorldContextObject, const class FString& FesId, int32 FactionsNo);
	class UWebApiConnect* GamecurrencyGetLimitedOwned(class UObject* WorldContextObject, const class FString& Date);
	class UWebApiConnect* GamecurrencyGetOwned(class UObject* WorldContextObject);
	class UWebApiConnect* GiftBoxClose(class UObject* WorldContextObject, const TArray<class FString>& GiftIdList);
	class UWebApiConnect* GiftBoxOpen(class UObject* WorldContextObject);
	class UWebApiConnect* GuildAdd(class UObject* WorldContextObject, const class FString& GuildId, int32 Judgment);
	class UWebApiConnect* GuildAddApply(class UObject* WorldContextObject, const class FString& GuildId);
	class UWebApiConnect* GuildAddApplyCancel(class UObject* WorldContextObject, const class FString& GuildId);
	class UWebApiConnect* GuildAddApplyList(class UObject* WorldContextObject);
	class UWebApiConnect* GuildApprovalAdd(class UObject* WorldContextObject, const class FString& UserId, int32 Judgment);
	class UWebApiConnect* GuildApprovalList(class UObject* WorldContextObject);
	class UWebApiConnect* GuildChangeBasePosition(class UObject* WorldContextObject, int32 ChangeType, int32 PositionNo);
	class UWebApiConnect* GuildChangeLeader(class UObject* WorldContextObject, const class FString& TargetID);
	class UWebApiConnect* GuildCreate(class UObject* WorldContextObject, const class FString& GuildData, const class FString& GuildMemberData);
	class UWebApiConnect* GuildEdit(class UObject* WorldContextObject, const class FString& GuildData);
	class UWebApiConnect* GuildEditMemberData(class UObject* WorldContextObject, const class FString& MemberData);
	class UWebApiConnect* GuildExpulsion(class UObject* WorldContextObject, const class FString& UserId);
	class UWebApiConnect* GuildGetList(class UObject* WorldContextObject, int32 ViewNum, int32 PageNum);
	class UWebApiConnect* GuildInfo(class UObject* WorldContextObject, const class FString& GuildId);
	class UWebApiConnect* GuildInvitation(class UObject* WorldContextObject, const class FString& UserId);
	class UWebApiConnect* GuildInvitationCancel(class UObject* WorldContextObject, const class FString& UserId);
	class UWebApiConnect* GuildInvitationList(class UObject* WorldContextObject);
	class UWebApiConnect* GuildInvitedList(class UObject* WorldContextObject);
	class UWebApiConnect* GuildNotification(class UObject* WorldContextObject, const class FString& TargetID);
	class UWebApiConnect* GuildNotificationSelf(class UObject* WorldContextObject, const class FString& GuildId);
	class UWebApiConnect* GuildPositionPermission(class UObject* WorldContextObject, int32 PositionNo, const TArray<struct FGuildPermissionInfo>& PermissionList);
	class UWebApiConnect* GuildSecession(class UObject* WorldContextObject);
	class UWebApiConnect* GuildSetPosition(class UObject* WorldContextObject, const class FString& TargetID, int32 Position);
	class UWebApiConnect* HugeTssMultiRead(class UObject* WorldContextObject, int32 SlotNo, int32 Region, int32 Purpose, int32 Language);
	class UWebApiConnect* HugeTssMultiReadList(class UObject* WorldContextObject, int32 Region, int32 Purpose, int32 Language);
	class UWebApiConnect* HugeTssRead(class UObject* WorldContextObject, int32 SlotNo);
	class UWebApiConnect* HugeTssReadList(class UObject* WorldContextObject);
	class UWebApiConnect* ItemAddOwned(class UObject* WorldContextObject, const TArray<struct FCosmosItemInfo>& ItemList);
	class UWebApiConnect* ItemGetMaster(class UObject* WorldContextObject);
	class UWebApiConnect* ItemGetOwned(class UObject* WorldContextObject);
	class UWebApiConnect* ItemUseOwned(class UObject* WorldContextObject, const TArray<struct FCosmosItemInfo>& ItemList);
	class UWebApiConnect* LoginBonusComplete(class UObject* WorldContextObject, const class FString& WorkId);
	class UWebApiConnect* LoginBonusGetBonus(class UObject* WorldContextObject, const TArray<class FString>& LoginBonusIdList);
	class UWebApiConnect* LoginBonusGetInfo(class UObject* WorldContextObject, const TArray<class FString>& LoginBonusIdList);
	class UWebApiConnect* LoginBonusGetList(class UObject* WorldContextObject);
	class UWebApiConnect* MissionGetList(class UObject* WorldContextObject, const class FString& TitleCd, const class FString& Keyword);
	class UWebApiConnect* MissionInfo(class UObject* WorldContextObject, const class FString& MissionId);
	class UWebApiConnect* PointCardDelete(class UObject* WorldContextObject, const class FString& UserId, const class FString& TitleCd, const class FString& CampaignId);
	class UWebApiConnect* PointCardInfo(class UObject* WorldContextObject, const class FString& UserId, const class FString& TitleCd, const class FString& CampaignId);
	class UWebApiConnect* PointCardUserList(class UObject* WorldContextObject, const class FString& UserId);
	class UWebApiConnect* PointGrant(class UObject* WorldContextObject, const class FString& UserId, const class FString& TitleCd, const class FString& CampaignId, int32 Point);
	class UWebApiConnect* PointGrantMissionPoint(class UObject* WorldContextObject, const class FString& UserId, const class FString& TitleCd, const class FString& CampaignId, const class FString& Keyword);
	class UWebApiConnect* RankingGetByRange(class UObject* WorldContextObject, const class FString& RankingId, int32 RankingType, int32 StartRank, int32 GetNum);
	class UWebApiConnect* RankingGetByUser(class UObject* WorldContextObject, const class FString& RankingId, const TArray<class FString>& UserIdList);
	class UWebApiConnect* RankingGetMaster(class UObject* WorldContextObject);
	class UWebApiConnect* RankingSetScore(class UObject* WorldContextObject, const class FString& RankingId, int32 Score, const class FString& UserData);
	class UWebApiConnect* RewardEarn(class UObject* WorldContextObject, const class FString& UserId, const class FString& TitleCd, const class FString& CampaignId, int32 Method);
	class UWebApiConnect* RootBoxGetDetail(class UObject* WorldContextObject, const class FString& RootboxId);
	class UWebApiConnect* RootBoxGetList(class UObject* WorldContextObject, int32 ListType, const class FString& Country);
	class UWebApiConnect* RootBoxGetProbability(class UObject* WorldContextObject, const class FString& RootboxId);
	class UWebApiConnect* RootBoxRun(class UObject* WorldContextObject, const class FString& RootboxId, const class FString& PaymentId, int32 PaymentNum, const class FString& PaymentItemid, int32 TotalPaymentPrice, const class FString& CampaignId, const class FString& Country);
	class UWebApiConnect* SavedataDelete(class UObject* WorldContextObject, const class FString& PUserId, int32 SlotNo);
	class UWebApiConnect* SavedataDownload(class UObject* WorldContextObject, const class FString& PUserId, int32 SlotNo);
	class UWebApiConnect* SavedataMultipartupload(class UObject* WorldContextObject, const class FString& PUserId, int32 SlotNo, const class FString& SlotLabel, const class FString& SaveData, const class FString& HashKey);
	class UWebApiConnect* SavedataUpload(class UObject* WorldContextObject, const class FString& PUserId, int32 SlotNo, const class FString& SlotLabel, const class FString& SaveData);
	class UWebApiConnect* SetHeader(class UObject* WorldContextObject, const class FString& TitleCd, const class FString& UserId, const class FString& Session, int32 Platform);
	class UWebApiConnect* SysAgreeKpi(class UObject* WorldContextObject, int32 AgreeFlg);
	class UWebApiConnect* SysCheckNgword(class UObject* WorldContextObject, const class FString& Word, const class FString& Language, int32 CheckType);
	class UWebApiConnect* SysGetEnv(class UObject* WorldContextObject, int32 IssureId, const class FString& Token);
	class UWebApiConnect* SysGetEnvV2(class UObject* WorldContextObject, int32 IssureId, const class FString& Token, int32 Region);
	class UWebApiConnect* SysKpi(class UObject* WorldContextObject, const TArray<struct FKpiNoColumnData>& KpiNoColumnData);
	class UWebApiConnect* SysOfflineKpi(class UObject* WorldContextObject, const TArray<struct FKpiNoColumnData>& KpiNoColumnData);
	class UWebApiConnect* TssRead(class UObject* WorldContextObject);
	class UWebApiConnect* TssReadList(class UObject* WorldContextObject);
	class UWebApiConnect* TusRead(class UObject* WorldContextObject, const class FString& UserId, int32 SlotNo);
	class UWebApiConnect* TusWrite(class UObject* WorldContextObject, int32 SlotNo, const class FString& TusData);
	class UWebApiConnect* UserAuth(class UObject* WorldContextObject, const class FString& PUserId, const class FString& Token, int32 SkuType);
	class UWebApiConnect* UserConvertUserId(class UObject* WorldContextObject, const TArray<class FString>& PUserId);
	class UWebApiConnect* UserCreate(class UObject* WorldContextObject, const class FString& PUserId, int32 SkuType);
	class UWebApiConnect* UserGetTrackingNum(class UObject* WorldContextObject);
	class UWebApiConnect* UserLinkBnid(class UObject* WorldContextObject);
	class UWebApiConnect* UserLogin(class UObject* WorldContextObject, const class FString& PUserId, const class FString& Token, int32 SkuType);
	class UWebApiConnect* UserLoginV2(class UObject* WorldContextObject, const class FString& PUserId, const class FString& Token, int32 SkuType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WebApiConnect">();
	}
	static class UWebApiConnect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWebApiConnect>();
	}
};
static_assert(alignof(UWebApiConnect) == 0x000008, "Wrong alignment on UWebApiConnect");
static_assert(sizeof(UWebApiConnect) == 0x0000E8, "Wrong size on UWebApiConnect");
static_assert(offsetof(UWebApiConnect, OnReceive) == 0x0000C8, "Member 'UWebApiConnect::OnReceive' has a wrong offset!");
static_assert(offsetof(UWebApiConnect, OnError) == 0x0000D8, "Member 'UWebApiConnect::OnError' has a wrong offset!");

}

