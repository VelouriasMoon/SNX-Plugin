#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_BrainCrashPostProcessControl

#include "Basic.hpp"

#include "BPC_BrainCrashPostProcessControl_classes.hpp"
#include "BPC_BrainCrashPostProcessControl_parameters.hpp"


namespace SDK
{

// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.ExecuteUbergraph_BPC_BrainCrashPostProcessControl
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BrainCrashPostProcessControl_C::ExecuteUbergraph_BPC_BrainCrashPostProcessControl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "ExecuteUbergraph_BPC_BrainCrashPostProcessControl");

	Params::BPC_BrainCrashPostProcessControl_C_ExecuteUbergraph_BPC_BrainCrashPostProcessControl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BrainCrashPostProcessControl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "ReceiveTick");

	Params::BPC_BrainCrashPostProcessControl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.LoadAssets
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_BrainCrashPostProcessControl_C::LoadAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "LoadAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.SetupAllOff
// (Public, BlueprintCallable, BlueprintEvent)

void UBPC_BrainCrashPostProcessControl_C::SetupAllOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "SetupAllOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.PrivateGetPerformPostProcess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_BrainCrashPostProcessControl_C::PrivateGetPerformPostProcess(bool* Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "PrivateGetPerformPostProcess");

	Params::BPC_BrainCrashPostProcessControl_C_PrivateGetPerformPostProcess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enable != nullptr)
		*Enable = Parms.Enable;
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.Update
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BrainCrashPostProcessControl_C::Update(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "Update");

	Params::BPC_BrainCrashPostProcessControl_C_Update Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.GetBGCrashMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BrainCrashPostProcessControl_C::GetBGCrashMID(class UMaterialInstanceDynamic** Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "GetBGCrashMID");

	Params::BPC_BrainCrashPostProcessControl_C_GetBGCrashMID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mid != nullptr)
		*Mid = Parms.Mid;
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.SetupGeneral
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    General                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_BrainCrashPostProcessControl_C::SetupGeneral(bool General)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "SetupGeneral");

	Params::BPC_BrainCrashPostProcessControl_C_SetupGeneral Parms{};

	Parms.General = General;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.UpdateProductEnemy
// (Private, BlueprintCallable, BlueprintEvent)

void UBPC_BrainCrashPostProcessControl_C::UpdateProductEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "UpdateProductEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.GetENPCDamageMID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPC_BrainCrashPostProcessControl_C::GetENPCDamageMID(class UMaterialInstanceDynamic** Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "GetENPCDamageMID");

	Params::BPC_BrainCrashPostProcessControl_C_GetENPCDamageMID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mid != nullptr)
		*Mid = Parms.Mid;
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.ActivateENPCDamageMID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_BrainCrashPostProcessControl_C::ActivateENPCDamageMID(bool Param_IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "ActivateENPCDamageMID");

	Params::BPC_BrainCrashPostProcessControl_C_ActivateENPCDamageMID Parms{};

	Parms.Param_IsActive = Param_IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_BrainCrashPostProcessControl.BPC_BrainCrashPostProcessControl_C.SetUseProductEnemyPPM
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPC_BrainCrashPostProcessControl_C::SetUseProductEnemyPPM(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_BrainCrashPostProcessControl_C", "SetUseProductEnemyPPM");

	Params::BPC_BrainCrashPostProcessControl_C_SetUseProductEnemyPPM Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}

}

