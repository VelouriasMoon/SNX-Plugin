#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PsychicObjectBaseInterface

#include "Basic.hpp"

#include "BPI_PsychicObjectBaseInterface_classes.hpp"
#include "BPI_PsychicObjectBaseInterface_parameters.hpp"


namespace SDK
{

// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicObjectActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::IsPsychicObjectActive(bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "IsPsychicObjectActive");

	Params::BPI_PsychicObjectBaseInterface_C_IsPsychicObjectActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.SetPsychicObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::SetPsychicObjectActive(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "SetPsychicObjectActive");

	Params::BPI_PsychicObjectBaseInterface_C_SetPsychicObjectActive Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::IsPsychicObject(bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "IsPsychicObject");

	Params::BPI_PsychicObjectBaseInterface_C_IsPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.SetPsychicObjectVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Is_mesh_only                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::SetPsychicObjectVisibility(bool Flag_in, bool Is_mesh_only)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "SetPsychicObjectVisibility");

	Params::BPI_PsychicObjectBaseInterface_C_SetPsychicObjectVisibility Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Is_mesh_only = Is_mesh_only;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsyObjType                             Psychic_object_type                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PsychicObjectBaseInterface_C::GetPsychicObjectType(EPsyObjType* Psychic_object_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "GetPsychicObjectType");

	Params::BPI_PsychicObjectBaseInterface_C_GetPsychicObjectType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Psychic_object_type != nullptr)
		*Psychic_object_type = Parms.Psychic_object_type;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectWeightGaugePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weight_gauge_pos                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PsychicObjectBaseInterface_C::GetPsychicObjectWeightGaugePos(struct FVector* Weight_gauge_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "GetPsychicObjectWeightGaugePos");

	Params::BPI_PsychicObjectBaseInterface_C_GetPsychicObjectWeightGaugePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weight_gauge_pos != nullptr)
		*Weight_gauge_pos = std::move(Parms.Weight_gauge_pos);
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectCentrePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Centre_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PsychicObjectBaseInterface_C::GetPsychicObjectCentrePos(struct FVector* Centre_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "GetPsychicObjectCentrePos");

	Params::BPI_PsychicObjectBaseInterface_C_GetPsychicObjectCentrePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Centre_pos != nullptr)
		*Centre_pos = std::move(Parms.Centre_pos);
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetPsychicObjectVhsParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveVector*                     ParamCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     ColorCurve                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   VhsSeconds                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PsychicObjectBaseInterface_C::GetPsychicObjectVhsParam(class UCurveVector** ParamCurve, class UCurveVector** ColorCurve, float* VhsSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "GetPsychicObjectVhsParam");

	Params::BPI_PsychicObjectBaseInterface_C_GetPsychicObjectVhsParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParamCurve != nullptr)
		*ParamCurve = Parms.ParamCurve;

	if (ColorCurve != nullptr)
		*ColorCurve = Parms.ColorCurve;

	if (VhsSeconds != nullptr)
		*VhsSeconds = Parms.VhsSeconds;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsPsychicComboAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bComboAttack                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::IsPsychicComboAttack(bool* bComboAttack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "IsPsychicComboAttack");

	Params::BPI_PsychicObjectBaseInterface_C_IsPsychicComboAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bComboAttack != nullptr)
		*bComboAttack = Parms.bComboAttack;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.GetUniqueObjectCaptureMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPlayerID                               PlayerId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bBack                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLeft                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseBlend                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     StartMontage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     CancelMontage                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_PsychicObjectBaseInterface_C::GetUniqueObjectCaptureMontage(EPlayerID PlayerId, bool bBack, bool bLeft, bool* bUseBlend, class UAnimMontage** StartMontage, class UAnimMontage** CancelMontage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "GetUniqueObjectCaptureMontage");

	Params::BPI_PsychicObjectBaseInterface_C_GetUniqueObjectCaptureMontage Parms{};

	Parms.PlayerId = PlayerId;
	Parms.bBack = bBack;
	Parms.bLeft = bLeft;

	UObject::ProcessEvent(Func, &Parms);

	if (bUseBlend != nullptr)
		*bUseBlend = Parms.bUseBlend;

	if (StartMontage != nullptr)
		*StartMontage = Parms.StartMontage;

	if (CancelMontage != nullptr)
		*CancelMontage = Parms.CancelMontage;
}


// Function BPI_PsychicObjectBaseInterface.BPI_PsychicObjectBaseInterface_C.IsKarenUniqueObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bKaren                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_PsychicObjectBaseInterface_C::IsKarenUniqueObject(bool* bKaren) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_PsychicObjectBaseInterface_C", "IsKarenUniqueObject");

	Params::BPI_PsychicObjectBaseInterface_C_IsKarenUniqueObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bKaren != nullptr)
		*bKaren = Parms.bKaren;
}

}

