#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChargeAttackComponent

#include "Basic.hpp"

#include "ChargeAttackData_structs.hpp"
#include "EWeaponAttackAnimStopType_structs.hpp"
#include "Engine_structs.hpp"
#include "EAttackEffectStopType_structs.hpp"
#include "EChargeTelepoStep_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "AttackComponentBaseBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ChargeAttackComponent.ChargeAttackComponent_C
// 0x0160 (0x02F8 - 0x0198)
class UChargeAttackComponent_C final : public UAttackComponentBaseBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_ChargeAttackComponent_C;            // 0x0198(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bInputAttack;                                      // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bPressedAttack;                                    // 0x01A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCharging;                                         // 0x01A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLoopStart;                                        // 0x01A3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxChargeTime;                                     // 0x01A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxChargeTimeNpc;                                  // 0x01A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D6[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          ChargeLoopSE;                                      // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChargeStartMontage;                                // 0x01B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChargeStartFallMontage;                            // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChargeStartLandingMontage;                         // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChargeLoopMontage;                                 // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OwnMontage;                                        // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChargeEffectIndex;                                 // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangingOwnMontage;                               // 0x01E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D7[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   ChargeAudioComp;                                   // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameTimer                             ChargeTimer;                                       // 0x01F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D8[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ChargeWeaponMontage;                               // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ChargeWeaponLoopMontage;                           // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ShortStartMontage;                                 // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ShortStartWeaponMontage;                           // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ChargeLoopEffectAttachPointName;                   // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FChargeAttackData>              AttackDatas;                                       // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          BranchAbleAssassinAttack;                          // 0x0238(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D9[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChargeAttackData                      ExecAttackData;                                    // 0x0240(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bFlyingAttack;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DA[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantName;                                      // 0x02B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCheckTelepo;                                      // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EChargeTelepoStep                             TelepoStep;                                        // 0x02BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bForceAttack;                                      // 0x02BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DB[0x1];                                     // 0x02BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RushStopDistance;                                  // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterHitPriority                         StorePriority;                                     // 0x02C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStorePriority;                                    // 0x02C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DC[0x2];                                     // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ClaimantNameTelepo;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TelepoTargetActor;                                 // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayControllerVibration;                          // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDisableFootIKChargeLoop;                          // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56DD[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        NexusDriveTelepoParticle;                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TelepoTimeDilationStep;                            // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TelepoTimeDilationTimer;                           // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTelepoTimeDilationEnd;                            // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bTelepoTimeDilationStart;                          // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ChargeAttackComponent(int32 EntryPoint);
	void UnbindTelepo();
	void BindTelepo();
	void UnbindFallTick();
	void BindFallTick();
	void UnbindRushTick();
	void BindRushTick();
	void InputButton(bool IsPressed, bool* Dummy);
	void CancelCharge();
	void IsStartCharge(bool* IsStart);
	void ClearInputForChargeAttack();
	void StartCharge();
	void SpawnChargeEffect(int32 Param_ChargeEffectIndex);
	void UpdateChargeEffect();
	void StartChargeLoop();
	void StartChargeSE();
	void EndChargeSE();
	bool OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	bool ClearInput();
	bool CheckStartAttack(float DeltaTime);
	bool InputButtonByCombo(bool bPressed, bool bComboFirst);
	void StartChargeEffect(TArray<struct FFAttackEffectData>& Data);
	void StopChargeEffect(EAttackEffectStopType Timing);
	void StopChargeEffectAll();
	void OnChangeChargeLevel(int32 ChargeLevel, bool* bDummy);
	void BranchAssassinAttack(bool* bBranch);
	void CheckRushStop(float DeltaSeconds);
	void StartAttack(int32 AttackIndex);
	void CheckLanding(float DeltaSeconds);
	void TelepoTick(float DeltaSeconds);
	void DoEndAttack(bool* bDummy);
	void GetCharging(bool* Result);
	void SetRushEndMotion();
	void PlayChargeControllerVibration(EHCHitControllerVibrationType Type);
	void StopChargeControllerVibration();
	void ResetFootIKCustomParam();
	void SpawnNexusDriveTelepoParticle();
	void TelepoTimeDilationTick(float DeltaSeconds);
	void StartTelepoTimeDilation();
	void EndTelepoTimeDilation();

	void GetCurrentMontage(class UAnimMontage** Montage) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ChargeAttackComponent_C">();
	}
	static class UChargeAttackComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChargeAttackComponent_C>();
	}
};
static_assert(alignof(UChargeAttackComponent_C) == 0x000008, "Wrong alignment on UChargeAttackComponent_C");
static_assert(sizeof(UChargeAttackComponent_C) == 0x0002F8, "Wrong size on UChargeAttackComponent_C");
static_assert(offsetof(UChargeAttackComponent_C, UberGraphFrame_ChargeAttackComponent_C) == 0x000198, "Member 'UChargeAttackComponent_C::UberGraphFrame_ChargeAttackComponent_C' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bInputAttack) == 0x0001A0, "Member 'UChargeAttackComponent_C::bInputAttack' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bPressedAttack) == 0x0001A1, "Member 'UChargeAttackComponent_C::bPressedAttack' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bCharging) == 0x0001A2, "Member 'UChargeAttackComponent_C::bCharging' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bLoopStart) == 0x0001A3, "Member 'UChargeAttackComponent_C::bLoopStart' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, MaxChargeTime) == 0x0001A4, "Member 'UChargeAttackComponent_C::MaxChargeTime' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, MaxChargeTimeNpc) == 0x0001A8, "Member 'UChargeAttackComponent_C::MaxChargeTimeNpc' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeLoopSE) == 0x0001B0, "Member 'UChargeAttackComponent_C::ChargeLoopSE' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeStartMontage) == 0x0001B8, "Member 'UChargeAttackComponent_C::ChargeStartMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeStartFallMontage) == 0x0001C0, "Member 'UChargeAttackComponent_C::ChargeStartFallMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeStartLandingMontage) == 0x0001C8, "Member 'UChargeAttackComponent_C::ChargeStartLandingMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeLoopMontage) == 0x0001D0, "Member 'UChargeAttackComponent_C::ChargeLoopMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, OwnMontage) == 0x0001D8, "Member 'UChargeAttackComponent_C::OwnMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeEffectIndex) == 0x0001E0, "Member 'UChargeAttackComponent_C::ChargeEffectIndex' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bChangingOwnMontage) == 0x0001E4, "Member 'UChargeAttackComponent_C::bChangingOwnMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeAudioComp) == 0x0001E8, "Member 'UChargeAttackComponent_C::ChargeAudioComp' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeTimer) == 0x0001F0, "Member 'UChargeAttackComponent_C::ChargeTimer' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeWeaponMontage) == 0x000200, "Member 'UChargeAttackComponent_C::ChargeWeaponMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeWeaponLoopMontage) == 0x000208, "Member 'UChargeAttackComponent_C::ChargeWeaponLoopMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ShortStartMontage) == 0x000210, "Member 'UChargeAttackComponent_C::ShortStartMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ShortStartWeaponMontage) == 0x000218, "Member 'UChargeAttackComponent_C::ShortStartWeaponMontage' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ChargeLoopEffectAttachPointName) == 0x000220, "Member 'UChargeAttackComponent_C::ChargeLoopEffectAttachPointName' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, AttackDatas) == 0x000228, "Member 'UChargeAttackComponent_C::AttackDatas' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, BranchAbleAssassinAttack) == 0x000238, "Member 'UChargeAttackComponent_C::BranchAbleAssassinAttack' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ExecAttackData) == 0x000240, "Member 'UChargeAttackComponent_C::ExecAttackData' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bFlyingAttack) == 0x0002B0, "Member 'UChargeAttackComponent_C::bFlyingAttack' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ClaimantName) == 0x0002B4, "Member 'UChargeAttackComponent_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bCheckTelepo) == 0x0002BC, "Member 'UChargeAttackComponent_C::bCheckTelepo' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, TelepoStep) == 0x0002BD, "Member 'UChargeAttackComponent_C::TelepoStep' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bForceAttack) == 0x0002BE, "Member 'UChargeAttackComponent_C::bForceAttack' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, RushStopDistance) == 0x0002C0, "Member 'UChargeAttackComponent_C::RushStopDistance' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, StorePriority) == 0x0002C4, "Member 'UChargeAttackComponent_C::StorePriority' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bStorePriority) == 0x0002C5, "Member 'UChargeAttackComponent_C::bStorePriority' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, ClaimantNameTelepo) == 0x0002C8, "Member 'UChargeAttackComponent_C::ClaimantNameTelepo' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, TelepoTargetActor) == 0x0002D0, "Member 'UChargeAttackComponent_C::TelepoTargetActor' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bPlayControllerVibration) == 0x0002D8, "Member 'UChargeAttackComponent_C::bPlayControllerVibration' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bDisableFootIKChargeLoop) == 0x0002D9, "Member 'UChargeAttackComponent_C::bDisableFootIKChargeLoop' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, NexusDriveTelepoParticle) == 0x0002E0, "Member 'UChargeAttackComponent_C::NexusDriveTelepoParticle' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, TelepoTimeDilationStep) == 0x0002E8, "Member 'UChargeAttackComponent_C::TelepoTimeDilationStep' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, TelepoTimeDilationTimer) == 0x0002EC, "Member 'UChargeAttackComponent_C::TelepoTimeDilationTimer' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bTelepoTimeDilationEnd) == 0x0002F0, "Member 'UChargeAttackComponent_C::bTelepoTimeDilationEnd' has a wrong offset!");
static_assert(offsetof(UChargeAttackComponent_C, bTelepoTimeDilationStart) == 0x0002F1, "Member 'UChargeAttackComponent_C::bTelepoTimeDilationStart' has a wrong offset!");

}

