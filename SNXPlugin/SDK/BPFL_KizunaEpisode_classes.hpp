#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_KizunaEpisode

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_KizunaEpisode.BPFL_KizunaEpisode_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_KizunaEpisode_C final : public UBlueprintFunctionLibrary
{
public:
	static void IsNeedKizunaIcon(EPlayerID PlayerId, EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckKizunaEpisode_row(EPlayerID PlayerId, EPlayerID TargetCharaId, const struct FKizunaEpisodeCheckInfo& KizunaEpisodeInfo, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckMemberAlreadyUnion(EPlayerID PlayerId, EPlayerID TargetCharaId, class UObject* __WorldContext, bool* AlreadyUnion);
	static void CheckTwoshotPhoto(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckMatchingAttachment(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckKizunaLvup_DLC1(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckKizunaEpisode_DLC1(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckKizunaLvup_DLC2(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckKizunaEpisode_DLC2(EPlayerID TargetCharaId, class UObject* __WorldContext, bool* NeedKizunaIcon);
	static void CheckRunningBondsEP(class UObject* __WorldContext, bool* MidstBondsEP);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_KizunaEpisode_C">();
	}
	static class UBPFL_KizunaEpisode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_KizunaEpisode_C>();
	}
};
static_assert(alignof(UBPFL_KizunaEpisode_C) == 0x000008, "Wrong alignment on UBPFL_KizunaEpisode_C");
static_assert(sizeof(UBPFL_KizunaEpisode_C) == 0x000028, "Wrong size on UBPFL_KizunaEpisode_C");

}

