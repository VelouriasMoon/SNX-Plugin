#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SM_MapModel_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SM_MapModel_Base.SM_MapModel_Base_C
// 0x00B8 (0x03A0 - 0x02E8)
class ASM_MapModel_Base_C final : public ABP_SM_MapModel_Base
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Capsule;                                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUIDetaileMapFloorData>         MapFloorArray;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInterface*                     ScaleMat;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DetaileMat;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScaleMatInstance;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DetaileMatInstance;                                // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Floorindex;                                        // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DirectionRotate;                                   // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                ChidrenComponent;                                  // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsuleCollisionData;                              // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ConstractExe;                                      // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AED[0x3];                                     // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUIMain3DViewModeSetting               Settingparam;                                      // 0x034C(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         RotX;                                              // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rot_Y;                                             // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotZ;                                              // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraPos;                                         // 0x037C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitPosdata;                                       // 0x0388(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomMin;                                           // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZoomMax;                                           // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SM_MapModel_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetChiledComponent();
	class UCapsuleComponent* GetCollisitonData();
	float GetDirectionRotate();
	bool SetFloorIndex(int32 Param_Floorindex);
	bool MaterialUpdate();
	TArray<struct FUIDetaileMapFloorData> GetFloorData();
	float GetZoomMax();
	float GetZoomMin();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SM_MapModel_Base_C">();
	}
	static class ASM_MapModel_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASM_MapModel_Base_C>();
	}
};
static_assert(alignof(ASM_MapModel_Base_C) == 0x000008, "Wrong alignment on ASM_MapModel_Base_C");
static_assert(sizeof(ASM_MapModel_Base_C) == 0x0003A0, "Wrong size on ASM_MapModel_Base_C");
static_assert(offsetof(ASM_MapModel_Base_C, UberGraphFrame) == 0x0002E8, "Member 'ASM_MapModel_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, Capsule) == 0x0002F0, "Member 'ASM_MapModel_Base_C::Capsule' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, MapFloorArray) == 0x0002F8, "Member 'ASM_MapModel_Base_C::MapFloorArray' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ScaleMat) == 0x000308, "Member 'ASM_MapModel_Base_C::ScaleMat' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, DetaileMat) == 0x000310, "Member 'ASM_MapModel_Base_C::DetaileMat' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ScaleMatInstance) == 0x000318, "Member 'ASM_MapModel_Base_C::ScaleMatInstance' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, DetaileMatInstance) == 0x000320, "Member 'ASM_MapModel_Base_C::DetaileMatInstance' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, Floorindex) == 0x000328, "Member 'ASM_MapModel_Base_C::Floorindex' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, DirectionRotate) == 0x00032C, "Member 'ASM_MapModel_Base_C::DirectionRotate' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ChidrenComponent) == 0x000330, "Member 'ASM_MapModel_Base_C::ChidrenComponent' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, CapsuleCollisionData) == 0x000340, "Member 'ASM_MapModel_Base_C::CapsuleCollisionData' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ConstractExe) == 0x000348, "Member 'ASM_MapModel_Base_C::ConstractExe' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, Settingparam) == 0x00034C, "Member 'ASM_MapModel_Base_C::Settingparam' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, RotX) == 0x000370, "Member 'ASM_MapModel_Base_C::RotX' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, Rot_Y) == 0x000374, "Member 'ASM_MapModel_Base_C::Rot_Y' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, RotZ) == 0x000378, "Member 'ASM_MapModel_Base_C::RotZ' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, CameraPos) == 0x00037C, "Member 'ASM_MapModel_Base_C::CameraPos' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, InitPosdata) == 0x000388, "Member 'ASM_MapModel_Base_C::InitPosdata' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ZoomMin) == 0x000394, "Member 'ASM_MapModel_Base_C::ZoomMin' has a wrong offset!");
static_assert(offsetof(ASM_MapModel_Base_C, ZoomMax) == 0x000398, "Member 'ASM_MapModel_Base_C::ZoomMax' has a wrong offset!");

}

