#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EnemyInterface

#include "Basic.hpp"

#include "BPI_EnemyInterface_classes.hpp"
#include "BPI_EnemyInterface_parameters.hpp"


namespace SDK
{

// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetEnemyInterfaceSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemySound                         Enum                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetEnemyInterfaceSound(Enum_EnemySound* Enum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetEnemyInterfaceSound");

	Params::BPI_EnemyInterface_C_GetEnemyInterfaceSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enum != nullptr)
		*Enum = Parms.Enum;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.BeginEnemyAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAttackAnimKind                     Attack                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::BeginEnemyAttack(EnemyAttackAnimKind Attack, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "BeginEnemyAttack");

	Params::BPI_EnemyInterface_C_BeginEnemyAttack Parms{};

	Parms.Attack = Attack;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyAttackAnimKind                     Attack                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyAttack(EnemyAttackAnimKind Attack, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyAttack");

	Params::BPI_EnemyInterface_C_IsEnemyAttack Parms{};

	Parms.Attack = Attack;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.BeginEnemyMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyMoveAnimKind                       Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::BeginEnemyMove(EnemyMoveAnimKind Move, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "BeginEnemyMove");

	Params::BPI_EnemyInterface_C_BeginEnemyMove Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyMoveAnimKind                       Move                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyMove(EnemyMoveAnimKind Move, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyMove");

	Params::BPI_EnemyInterface_C_IsEnemyMove Parms{};

	Parms.Move = Move;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyDamageWince
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDamageWince(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyDamageWince");

	Params::BPI_EnemyInterface_C_IsEnemyDamageWince Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyDamageDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDamageDown(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyDamageDown");

	Params::BPI_EnemyInterface_C_IsEnemyDamageDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.BeginEnemyAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyActionAnimKind                     Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::BeginEnemyAction(EnemyActionAnimKind Action, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "BeginEnemyAction");

	Params::BPI_EnemyInterface_C_BeginEnemyAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EnemyActionAnimKind                     Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyAction(EnemyActionAnimKind Action, bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyAction");

	Params::BPI_EnemyInterface_C_IsEnemyAction Parms{};

	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.isEnemyDamageLaunch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDamageLaunch(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "isEnemyDamageLaunch");

	Params::BPI_EnemyInterface_C_IsEnemyDamageLaunch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyDamageknockBack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDamageknockBack(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyDamageknockBack");

	Params::BPI_EnemyInterface_C_IsEnemyDamageknockBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.isEnemyDamageBlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Bool                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDamageBlow(bool* Bool)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "isEnemyDamageBlow");

	Params::BPI_EnemyInterface_C_IsEnemyDamageBlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bool != nullptr)
		*Bool = Parms.Bool;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateAttack(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateAttack");

	Params::BPI_EnemyInterface_C_IsEnemyStateAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateDamage(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateDamage");

	Params::BPI_EnemyInterface_C_IsEnemyStateDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateDamageDown
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateDamageDown(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateDamageDown");

	Params::BPI_EnemyInterface_C_IsEnemyStateDamageDown Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateMove(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateMove");

	Params::BPI_EnemyInterface_C_IsEnemyStateMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateAction(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateAction");

	Params::BPI_EnemyInterface_C_IsEnemyStateAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyBossActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyBossActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyBossActive");

	Params::BPI_EnemyInterface_C_IsEnemyBossActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainCrashPerformance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainCrashPerformance(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainCrashPerformance");

	Params::BPI_EnemyInterface_C_SetEnemyBrainCrashPerformance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyTarget(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyTarget");

	Params::BPI_EnemyInterface_C_SetEnemyTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.ResetEnemyTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::ResetEnemyTarget(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "ResetEnemyTarget");

	Params::BPI_EnemyInterface_C_ResetEnemyTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyDamageReaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyDamageReaction(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyDamageReaction");

	Params::BPI_EnemyInterface_C_SetEnemyDamageReaction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainFieldMoveInner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainFieldMoveInner(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainFieldMoveInner");

	Params::BPI_EnemyInterface_C_SetEnemyBrainFieldMoveInner Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainFieldMoveNormal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainFieldMoveNormal(bool MoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainFieldMoveNormal");

	Params::BPI_EnemyInterface_C_SetEnemyBrainFieldMoveNormal Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainFieldStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainFieldStart(bool MoveBrainField, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainFieldStart");

	Params::BPI_EnemyInterface_C_SetEnemyBrainFieldStart Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainFieldEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoveBrainField                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainFieldEnd(bool MoveBrainField, bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainFieldEnd");

	Params::BPI_EnemyInterface_C_SetEnemyBrainFieldEnd Parms{};

	Parms.MoveBrainField = MoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetEnemyGroundTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::GetEnemyGroundTransform(const struct FTransform& Transform, struct FTransform* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetEnemyGroundTransform");

	Params::BPI_EnemyInterface_C_GetEnemyGroundTransform Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyWait(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyWait");

	Params::BPI_EnemyInterface_C_SetEnemyWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.ResetEnemyWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::ResetEnemyWait(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "ResetEnemyWait");

	Params::BPI_EnemyInterface_C_ResetEnemyWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnSwitchVisibleBrainFieldLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unused                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnSwitchVisibleBrainFieldLevel(bool Visible, bool* Unused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnSwitchVisibleBrainFieldLevel");

	Params::BPI_EnemyInterface_C_OnSwitchVisibleBrainFieldLevel Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);

	if (Unused != nullptr)
		*Unused = Parms.Unused;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyStealthSeeEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShadowChange                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyStealthSeeEnable(bool On, bool ShadowChange, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyStealthSeeEnable");

	Params::BPI_EnemyInterface_C_SetEnemyStealthSeeEnable Parms{};

	Parms.On = On;
	Parms.ShadowChange = ShadowChange;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyBrainCrashParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BrainCrashTimer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BrainCrashMissScale                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyBrainCrashParam(float BrainCrashTimer, float BrainCrashMissScale, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyBrainCrashParam");

	Params::BPI_EnemyInterface_C_SetEnemyBrainCrashParam Parms{};

	Parms.BrainCrashTimer = BrainCrashTimer;
	Parms.BrainCrashMissScale = BrainCrashMissScale;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnableEnemyMoveRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bReturn                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnableEnemyMoveRange(bool* bReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnableEnemyMoveRange");

	Params::BPI_EnemyInterface_C_IsEnableEnemyMoveRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReturn != nullptr)
		*bReturn = Parms.bReturn;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.PlayerActionForEnemyReaction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// BattlePrototype::EPsychicObjectAttackTypePsychicObjectType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PsychicObjLocation                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::PlayerActionForEnemyReaction(BattlePrototype::EPsychicObjectAttackType PsychicObjectType, const struct FVector& PsychicObjLocation, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "PlayerActionForEnemyReaction");

	Params::BPI_EnemyInterface_C_PlayerActionForEnemyReaction Parms{};

	Parms.PsychicObjectType = PsychicObjectType;
	Parms.PsychicObjLocation = std::move(PsychicObjLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.EnemyDataDrop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SpawnLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpawnDir                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDrop                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::EnemyDataDrop(const struct FVector& SpawnLocation, const struct FVector& SpawnDir, bool* IsDrop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "EnemyDataDrop");

	Params::BPI_EnemyInterface_C_EnemyDataDrop Parms{};

	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnDir = std::move(SpawnDir);

	UObject::ProcessEvent(Func, &Parms);

	if (IsDrop != nullptr)
		*IsDrop = Parms.IsDrop;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemySpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Spawn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemySpawn(bool Spawn, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemySpawn");

	Params::BPI_EnemyInterface_C_SetEnemySpawn Parms{};

	Parms.Spawn = Spawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SpawnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SpawnStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SpawnStart");

	Params::BPI_EnemyInterface_C_SpawnStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsHideWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsHideWeak                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsHideWeak(bool* Param_IsHideWeak)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsHideWeak");

	Params::BPI_EnemyInterface_C_IsHideWeak Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsHideWeak != nullptr)
		*Param_IsHideWeak = Parms.Param_IsHideWeak;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.ReturnStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::ReturnStart(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "ReturnStart");

	Params::BPI_EnemyInterface_C_ReturnStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsAttacking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAttack                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsAttacking(bool* IsAttack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsAttacking");

	Params::BPI_EnemyInterface_C_IsAttacking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsAttack != nullptr)
		*IsAttack = Parms.IsAttack;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetTargetKind
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSPartyPlayerKind                      TargetKind                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetTargetKind(ERSPartyPlayerKind* TargetKind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetTargetKind");

	Params::BPI_EnemyInterface_C_GetTargetKind Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetKind != nullptr)
		*TargetKind = Parms.TargetKind;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetBrainCore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_co2000Base_C*                 CoreObject                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetBrainCore(class ABP_co2000Base_C** CoreObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetBrainCore");

	Params::BPI_EnemyInterface_C_GetBrainCore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CoreObject != nullptr)
		*CoreObject = Parms.CoreObject;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyStateFloating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFloating                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyStateFloating(bool* IsFloating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyStateFloating");

	Params::BPI_EnemyInterface_C_IsEnemyStateFloating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFloating != nullptr)
		*IsFloating = Parms.IsFloating;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.CalcCameraShake
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           InputShakeClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputScale                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShakeLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           OutputShakeClass                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutputScale                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::CalcCameraShake(class UClass* InputShakeClass, float InputScale, const struct FVector& ShakeLocation, class UClass** OutputShakeClass, float* OutputScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "CalcCameraShake");

	Params::BPI_EnemyInterface_C_CalcCameraShake Parms{};

	Parms.InputShakeClass = InputShakeClass;
	Parms.InputScale = InputScale;
	Parms.ShakeLocation = std::move(ShakeLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputShakeClass != nullptr)
		*OutputShakeClass = Parms.OutputShakeClass;

	if (OutputScale != nullptr)
		*OutputScale = Parms.OutputScale;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyPressDownEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyPressDownEnd(bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyPressDownEnd");

	Params::BPI_EnemyInterface_C_SetEnemyPressDownEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.EndUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::EndUniqueObjState(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "EndUniqueObjState");

	Params::BPI_EnemyInterface_C_EndUniqueObjState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.StartUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         AttackObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::StartUniqueObjState(class ABP_PsychicObjectBasic_C* AttackObject, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "StartUniqueObjState");

	Params::BPI_EnemyInterface_C_StartUniqueObjState Parms{};

	Parms.AttackObject = AttackObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.CheckUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::CheckUniqueObjState(const struct FHCHitResult& HitResult, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "CheckUniqueObjState");

	Params::BPI_EnemyInterface_C_CheckUniqueObjState Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsUniqueObjState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnState                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsUniqueObjState(bool* ReturnState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsUniqueObjState");

	Params::BPI_EnemyInterface_C_IsUniqueObjState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnState != nullptr)
		*ReturnState = Parms.ReturnState;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SwitchDispCore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DisplayOn                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SwitchDispCore(bool DisplayOn, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SwitchDispCore");

	Params::BPI_EnemyInterface_C_SwitchDispCore Parms{};

	Parms.DisplayOn = DisplayOn;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnStartCrashChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStart                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnStartCrashChance(bool* bStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnStartCrashChance");

	Params::BPI_EnemyInterface_C_OnStartCrashChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bStart != nullptr)
		*bStart = Parms.bStart;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnEndCrashChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnEndCrashChance(bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnEndCrashChance");

	Params::BPI_EnemyInterface_C_OnEndCrashChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsPossibleTargetAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsPossibleTargetAttack(class AActor* Attacker, bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsPossibleTargetAttack");

	Params::BPI_EnemyInterface_C_IsPossibleTargetAttack Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsDisableLostAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsDisableLostAction(bool* bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsDisableLostAction");

	Params::BPI_EnemyInterface_C_IsDisableLostAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisable != nullptr)
		*bDisable = Parms.bDisable;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetCoreCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamagePartCollisionComponent*    CoreCollision                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetCoreCollision(class UDamagePartCollisionComponent** CoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetCoreCollision");

	Params::BPI_EnemyInterface_C_GetCoreCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CoreCollision != nullptr)
		*CoreCollision = Parms.CoreCollision;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnSpawnMoveStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnSpawnMoveStart(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnSpawnMoveStart");

	Params::BPI_EnemyInterface_C_OnSpawnMoveStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnEnemyBrainFieldResetAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bReset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnEnemyBrainFieldResetAction(bool bMoveBrainField, bool* bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnEnemyBrainFieldResetAction");

	Params::BPI_EnemyInterface_C_OnEnemyBrainFieldResetAction Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (bReset != nullptr)
		*bReset = Parms.bReset;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnEnemyBrainFieldFinishWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnEnemyBrainFieldFinishWeapon(bool bMoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnEnemyBrainFieldFinishWeapon");

	Params::BPI_EnemyInterface_C_OnEnemyBrainFieldFinishWeapon Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnEnemyBrainFieldResetStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bMoveBrainField                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnEnemyBrainFieldResetStatus(bool bMoveBrainField, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnEnemyBrainFieldResetStatus");

	Params::BPI_EnemyInterface_C_OnEnemyBrainFieldResetStatus Parms{};

	Parms.bMoveBrainField = bMoveBrainField;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.OnEnemyBrainFieldCutChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::OnEnemyBrainFieldCutChange(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "OnEnemyBrainFieldCutChange");

	Params::BPI_EnemyInterface_C_OnEnemyBrainFieldCutChange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.ChangeAiType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemyAiType                        Param_ChangeAiType                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFailed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::ChangeAiType(Enum_EnemyAiType Param_ChangeAiType, bool* bFailed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "ChangeAiType");

	Params::BPI_EnemyInterface_C_ChangeAiType Parms{};

	Parms.Param_ChangeAiType = Param_ChangeAiType;

	UObject::ProcessEvent(Func, &Parms);

	if (bFailed != nullptr)
		*bFailed = Parms.bFailed;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.CheckChangeAiTypeForHpRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Failed                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::CheckChangeAiTypeForHpRate(bool* Failed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "CheckChangeAiTypeForHpRate");

	Params::BPI_EnemyInterface_C_CheckChangeAiTypeForHpRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Failed != nullptr)
		*Failed = Parms.Failed;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsChangeAiTypeAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_EnemyAiType                        InAiType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bPossible                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsChangeAiTypeAction(Enum_EnemyAiType InAiType, bool* bPossible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsChangeAiTypeAction");

	Params::BPI_EnemyInterface_C_IsChangeAiTypeAction Parms{};

	Parms.InAiType = InAiType;

	UObject::ProcessEvent(Func, &Parms);

	if (bPossible != nullptr)
		*bPossible = Parms.bPossible;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.em1200_ChangePhaseParamSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1200_ChangePhaseParamSetting(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "em1200_ChangePhaseParamSetting");

	Params::BPI_EnemyInterface_C_Em1200_ChangePhaseParamSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.em1210_AddPSychicFlyObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         FlyObj                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1210_AddPSychicFlyObj(class ABP_PsychicObjectBasic_C* FlyObj, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "em1210_AddPSychicFlyObj");

	Params::BPI_EnemyInterface_C_Em1210_AddPSychicFlyObj Parms{};

	Parms.FlyObj = FlyObj;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.StartReactionDilation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   ReactionKind                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AddDamage                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::StartReactionDilation(uint8 ReactionKind, bool AddDamage, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "StartReactionDilation");

	Params::BPI_EnemyInterface_C_StartReactionDilation Parms{};

	Parms.ReactionKind = ReactionKind;
	Parms.AddDamage = AddDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyDiscoveredOnceInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDiscoverd                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyDiscoveredOnceInterface(bool* bDiscoverd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyDiscoveredOnceInterface");

	Params::BPI_EnemyInterface_C_IsEnemyDiscoveredOnceInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDiscoverd != nullptr)
		*bDiscoverd = Parms.bDiscoverd;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em0700_EnableInvalidDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em0700_EnableInvalidDamage(bool* bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em0700_EnableInvalidDamage");

	Params::BPI_EnemyInterface_C_Em0700_EnableInvalidDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em1400_StartDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TotalDuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1400_StartDither(float TotalDuration, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em1400_StartDither");

	Params::BPI_EnemyInterface_C_Em1400_StartDither Parms{};

	Parms.TotalDuration = TotalDuration;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em1400_EndDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1400_EndDither(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em1400_EndDither");

	Params::BPI_EnemyInterface_C_Em1400_EndDither Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em1400_UpdateDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EEasingFunc                             EasingFunc                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1400_UpdateDither(EEasingFunc EasingFunc, float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em1400_UpdateDither");

	Params::BPI_EnemyInterface_C_Em1400_UpdateDither Parms{};

	Parms.EasingFunc = EasingFunc;
	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em1400_SetSpawnTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1400_SetSpawnTransform(const struct FTransform& SpawnTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em1400_SetSpawnTransform");

	Params::BPI_EnemyInterface_C_Em1400_SetSpawnTransform Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em1400_GetSpawnTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawTransform                                          (Parm, OutParm, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1400_GetSpawnTransform(struct FTransform* SpawTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em1400_GetSpawnTransform");

	Params::BPI_EnemyInterface_C_Em1400_GetSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawTransform != nullptr)
		*SpawTransform = std::move(Parms.SpawTransform);
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsBrainFieldEnemyAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnemyAlive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsBrainFieldEnemyAlive(bool* bEnemyAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsBrainFieldEnemyAlive");

	Params::BPI_EnemyInterface_C_IsBrainFieldEnemyAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnemyAlive != nullptr)
		*bEnemyAlive = Parms.bEnemyAlive;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsSwitchAttackCollisionInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSwitch                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsSwitchAttackCollisionInfo(bool* IsSwitch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsSwitchAttackCollisionInfo");

	Params::BPI_EnemyInterface_C_IsSwitchAttackCollisionInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSwitch != nullptr)
		*IsSwitch = Parms.IsSwitch;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.SetEnemyUpDownWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DownWait                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::SetEnemyUpDownWait(bool DownWait, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "SetEnemyUpDownWait");

	Params::BPI_EnemyInterface_C_SetEnemyUpDownWait Parms{};

	Parms.DownWait = DownWait;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyUpDownWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUpDownWait                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyUpDownWait(bool* bUpDownWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyUpDownWait");

	Params::BPI_EnemyInterface_C_IsEnemyUpDownWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bUpDownWait != nullptr)
		*bUpDownWait = Parms.bUpDownWait;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.StartCriticalHitSlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitResult                     InHitResult                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::StartCriticalHitSlow(const struct FHCHitResult& InHitResult, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "StartCriticalHitSlow");

	Params::BPI_EnemyInterface_C_StartCriticalHitSlow Parms{};

	Parms.InHitResult = std::move(InHitResult);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.em1130_EnableWeak
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em1130_EnableWeak(bool bEnable, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "em1130_EnableWeak");

	Params::BPI_EnemyInterface_C_Em1130_EnableWeak Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetEnemySpawnConditionCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSpawnOK                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::GetEnemySpawnConditionCheck(bool* IsSpawnOK)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetEnemySpawnConditionCheck");

	Params::BPI_EnemyInterface_C_GetEnemySpawnConditionCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSpawnOK != nullptr)
		*IsSpawnOK = Parms.IsSpawnOK;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.StartEnemyCrashVisionHitEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::StartEnemyCrashVisionHitEffect(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "StartEnemyCrashVisionHitEffect");

	Params::BPI_EnemyInterface_C_StartEnemyCrashVisionHitEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.StartEnemyCrashVisionHitUniqueEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::StartEnemyCrashVisionHitUniqueEffect(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "StartEnemyCrashVisionHitUniqueEffect");

	Params::BPI_EnemyInterface_C_StartEnemyCrashVisionHitUniqueEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.BindingCrashVisionEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::BindingCrashVisionEnemy(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "BindingCrashVisionEnemy");

	Params::BPI_EnemyInterface_C_BindingCrashVisionEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.em8300_DeadBattleSimulator
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em8300_DeadBattleSimulator(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "em8300_DeadBattleSimulator");

	Params::BPI_EnemyInterface_C_Em8300_DeadBattleSimulator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyRepop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Repop                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyRepop(bool* Repop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyRepop");

	Params::BPI_EnemyInterface_C_IsEnemyRepop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Repop != nullptr)
		*Repop = Parms.Repop;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyActive(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyActive");

	Params::BPI_EnemyInterface_C_IsEnemyActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsBossEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bBoss                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsBossEnemy(bool* bBoss) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsBossEnemy");

	Params::BPI_EnemyInterface_C_IsBossEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bBoss != nullptr)
		*bBoss = Parms.bBoss;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetDistanceToPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetDistanceToPlayer(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetDistanceToPlayer");

	Params::BPI_EnemyInterface_C_GetDistanceToPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetTargetDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetTargetDistance(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetTargetDistance");

	Params::BPI_EnemyInterface_C_GetTargetDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetEnemySpawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::GetEnemySpawn(bool* Return) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetEnemySpawn");

	Params::BPI_EnemyInterface_C_GetEnemySpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetHeightCheckFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::GetHeightCheckFlag(bool* NewParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetHeightCheckFlag");

	Params::BPI_EnemyInterface_C_GetHeightCheckFlag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsFlyEnemyCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsFlyEnemyCheck(bool* NewParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsFlyEnemyCheck");

	Params::BPI_EnemyInterface_C_IsFlyEnemyCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetBrainCrashSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    IsUnique                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ULevelSequence*                   Sequence                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetBrainCrashSequence(bool IsUnique, class ULevelSequence** Sequence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetBrainCrashSequence");

	Params::BPI_EnemyInterface_C_GetBrainCrashSequence Parms{};

	Parms.IsUnique = IsUnique;

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetMoveToTargetAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EnemyMoveAnimKind                       MoveAnim                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetMoveToTargetAnim(EnemyMoveAnimKind* MoveAnim) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetMoveToTargetAnim");

	Params::BPI_EnemyInterface_C_GetMoveToTargetAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveAnim != nullptr)
		*MoveAnim = Parms.MoveAnim;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.GetMainPlayerDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_EnemyInterface_C::GetMainPlayerDistance(float* Distance) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "GetMainPlayerDistance");

	Params::BPI_EnemyInterface_C_GetMainPlayerDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsRealThings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bReal                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsRealThings(bool* bReal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsRealThings");

	Params::BPI_EnemyInterface_C_IsRealThings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReal != nullptr)
		*bReal = Parms.bReal;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemySpawnNow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    SpawnNow                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemySpawnNow(bool* SpawnNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemySpawnNow");

	Params::BPI_EnemyInterface_C_IsEnemySpawnNow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnNow != nullptr)
		*SpawnNow = Parms.SpawnNow;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsNotFindPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bNotFind                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsNotFindPlayer(bool* bNotFind) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsNotFindPlayer");

	Params::BPI_EnemyInterface_C_IsNotFindPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNotFind != nullptr)
		*bNotFind = Parms.bNotFind;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.IsEnemyTickDisableCondition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bDisableCondition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::IsEnemyTickDisableCondition(bool* bDisableCondition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "IsEnemyTickDisableCondition");

	Params::BPI_EnemyInterface_C_IsEnemyTickDisableCondition Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDisableCondition != nullptr)
		*bDisableCondition = Parms.bDisableCondition;
}


// Function BPI_EnemyInterface.BPI_EnemyInterface_C.Em8310_IsMaskMan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMaskMan                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_EnemyInterface_C::Em8310_IsMaskMan(bool* bMaskMan) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnemyInterface_C", "Em8310_IsMaskMan");

	Params::BPI_EnemyInterface_C_Em8310_IsMaskMan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMaskMan != nullptr)
		*bMaskMan = Parms.bMaskMan;
}

}

