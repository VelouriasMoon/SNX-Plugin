#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateLand

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.Enter
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerActionStateLand_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LandEffect;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5092[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateLand_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateLand_C_Enter");
static_assert(sizeof(BP_PlayerActionStateLand_C_Enter) == 0x000050, "Wrong size on BP_PlayerActionStateLand_C_Enter");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateLand_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateLand_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, LandEffect) == 0x000008, "Member 'BP_PlayerActionStateLand_C_Enter::LandEffect' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_Enter_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'BP_PlayerActionStateLand_C_Enter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000030, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_SetFootIKEnable_Dummy) == 0x000048, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_Conv_IntToByte_ReturnValue) == 0x00004A, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Enter, CallFunc_GetValidValue_ReturnValue) == 0x00004B, "Member 'BP_PlayerActionStateLand_C_Enter::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.Update
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PlayerActionStateLand_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LTempOffset;                                       // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5093[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Update_ReturnValue;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateLand_C_Update) == 0x000004, "Wrong alignment on BP_PlayerActionStateLand_C_Update");
static_assert(sizeof(BP_PlayerActionStateLand_C_Update) == 0x0000D8, "Wrong size on BP_PlayerActionStateLand_C_Update");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateLand_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, LTempOffset) == 0x000004, "Member 'BP_PlayerActionStateLand_C_Update::LTempOffset' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000034, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000BC, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_GetRate_ReturnValue) == 0x0000C0, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_IsOver_ReturnValue) == 0x0000D0, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_IsEnable_ReturnValue) == 0x0000D1, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x0000D2, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x0000D3, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Update, CallFunc_Update_ReturnValue) == 0x0000D4, "Member 'BP_PlayerActionStateLand_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.Transition
// 0x0006 (0x0006 - 0x0000)
struct BP_PlayerActionStateLand_C_Transition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnableActionSprint_bEnable;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLeftStickZero_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Transition_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateLand_C_Transition) == 0x000001, "Wrong alignment on BP_PlayerActionStateLand_C_Transition");
static_assert(sizeof(BP_PlayerActionStateLand_C_Transition) == 0x000006, "Wrong size on BP_PlayerActionStateLand_C_Transition");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateLand_C_Transition::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerActionStateLand_C_Transition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, CallFunc_IsEnableActionSprint_bEnable) == 0x000002, "Member 'BP_PlayerActionStateLand_C_Transition::CallFunc_IsEnableActionSprint_bEnable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, CallFunc_IsLeftStickZero_ReturnValue) == 0x000003, "Member 'BP_PlayerActionStateLand_C_Transition::CallFunc_IsLeftStickZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateLand_C_Transition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Transition, CallFunc_Transition_ReturnValue) == 0x000005, "Member 'BP_PlayerActionStateLand_C_Transition::CallFunc_Transition_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.PlayLandingEffect
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerActionStateLand_C_PlayLandingEffect final
{
public:
	EGamePhysicalSurfaceType                      PhysicsType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5094[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DataTable_RowName;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLandingPower_IsLarge;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5095[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5096[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateLand_C_PlayLandingEffect) == 0x000008, "Wrong alignment on BP_PlayerActionStateLand_C_PlayLandingEffect");
static_assert(sizeof(BP_PlayerActionStateLand_C_PlayLandingEffect) == 0x000040, "Wrong size on BP_PlayerActionStateLand_C_PlayLandingEffect");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, PhysicsType) == 0x000000, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::PhysicsType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, Location) == 0x000004, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, DataTable_RowName) == 0x000010, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::DataTable_RowName' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, CallFunc_GetLandingPower_IsLarge) == 0x000018, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::CallFunc_GetLandingPower_IsLarge' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, CallFunc_GetParticleManager_Particle_Manager) == 0x000020, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffect, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffect::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.PlayLandingSound
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerActionStateLand_C_PlayLandingSound final
{
public:
	EGamePhysicalSurfaceType                      PhysicsType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5097[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DataTable_RowName;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_Sound_Manager;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLandingPower_IsLarge;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5098[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateLand_C_PlayLandingSound) == 0x000008, "Wrong alignment on BP_PlayerActionStateLand_C_PlayLandingSound");
static_assert(sizeof(BP_PlayerActionStateLand_C_PlayLandingSound) == 0x000030, "Wrong size on BP_PlayerActionStateLand_C_PlayLandingSound");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, PhysicsType) == 0x000000, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::PhysicsType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, Location) == 0x000004, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, DataTable_RowName) == 0x000010, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::DataTable_RowName' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, CallFunc_GetSoundManager_Sound_Manager) == 0x000018, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::CallFunc_GetSoundManager_Sound_Manager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, CallFunc_GetLandingPower_IsLarge) == 0x000020, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::CallFunc_GetLandingPower_IsLarge' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingSound, CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateLand_C_PlayLandingSound::CallFunc_GetGeneralPhysicalSurfaceActionResource_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.PlayLandingEffectSound
// 0x0188 (0x0188 - 0x0000)
struct BP_PlayerActionStateLand_C_PlayLandingEffectSound final
{
public:
	EGamePhysicalSurfaceType                      PhysicalType;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5099[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PlayerRootLocation;                                // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      HitTypes;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartLocation;                                     // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509A[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRootLocation_RootLocation;             // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509B[0x1];                                     // 0x00FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGamePhysicalSurfaceType                      CallFunc_ConvertPhysicalSurfaceToGamePhysicalSurface_ReturnValue; // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateLand_C_PlayLandingEffectSound) == 0x000008, "Wrong alignment on BP_PlayerActionStateLand_C_PlayLandingEffectSound");
static_assert(sizeof(BP_PlayerActionStateLand_C_PlayLandingEffectSound) == 0x000188, "Wrong size on BP_PlayerActionStateLand_C_PlayLandingEffectSound");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, PhysicalType) == 0x000000, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::PhysicalType' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, PlayerRootLocation) == 0x000004, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::PlayerRootLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, HitTypes) == 0x000010, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::HitTypes' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, EndLocation) == 0x000020, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::EndLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, StartLocation) == 0x00002C, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::StartLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, Temp_object_Variable) == 0x000048, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_GetRootLocation_RootLocation) == 0x00005C, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_GetRootLocation_RootLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000074, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0000FC, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_bBlockingHit) == 0x0000FD, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000FE, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_Time) == 0x000100, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_Distance) == 0x000104, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_ImpactPoint) == 0x000114, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_Normal) == 0x000120, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_ImpactNormal) == 0x00012C, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_PhysMat) == 0x000138, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_HitActor) == 0x000140, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_HitComponent) == 0x000148, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_HitBoneName) == 0x000150, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_HitItem) == 0x000158, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_FaceIndex) == 0x00015C, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_TraceStart) == 0x000160, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_BreakHitResult_TraceEnd) == 0x00016C, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_Add_VectorVector_ReturnValue) == 0x000178, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_IsValid_ReturnValue_1) == 0x000184, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_PlayLandingEffectSound, CallFunc_ConvertPhysicalSurfaceToGamePhysicalSurface_ReturnValue) == 0x000185, "Member 'BP_PlayerActionStateLand_C_PlayLandingEffectSound::CallFunc_ConvertPhysicalSurfaceToGamePhysicalSurface_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.GetLandingPower
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateLand_C_GetLandingPower final
{
public:
	bool                                          IsLarge;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_509C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateLand_C_GetLandingPower) == 0x000004, "Wrong alignment on BP_PlayerActionStateLand_C_GetLandingPower");
static_assert(sizeof(BP_PlayerActionStateLand_C_GetLandingPower) == 0x000018, "Wrong size on BP_PlayerActionStateLand_C_GetLandingPower");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, IsLarge) == 0x000000, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::IsLarge' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, CallFunc_BreakVector_X) == 0x000004, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, CallFunc_BreakVector_Z) == 0x00000C, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_GetLandingPower, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateLand_C_GetLandingPower::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateLand.BP_PlayerActionStateLand_C.Exit
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateLand_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFootIKEnable_Dummy;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateLand_C_Exit) == 0x000004, "Wrong alignment on BP_PlayerActionStateLand_C_Exit");
static_assert(sizeof(BP_PlayerActionStateLand_C_Exit) == 0x000010, "Wrong size on BP_PlayerActionStateLand_C_Exit");
static_assert(offsetof(BP_PlayerActionStateLand_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateLand_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateLand_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Exit, CallFunc_Exit_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateLand_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateLand_C_Exit, CallFunc_SetFootIKEnable_Dummy) == 0x00000C, "Member 'BP_PlayerActionStateLand_C_Exit::CallFunc_SetFootIKEnable_Dummy' has a wrong offset!");

}

