#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyChangePlayRate

#include "Basic.hpp"

#include "BP_EnemyChangePlayRate_classes.hpp"
#include "BP_EnemyChangePlayRate_parameters.hpp"


namespace SDK
{

// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.ExecuteUbergraph_BP_EnemyChangePlayRate
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::ExecuteUbergraph_BP_EnemyChangePlayRate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "ExecuteUbergraph_BP_EnemyChangePlayRate");

	Params::BP_EnemyChangePlayRate_C_ExecuteUbergraph_BP_EnemyChangePlayRate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "ReceiveTick");

	Params::BP_EnemyChangePlayRate_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.Start
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_StartPlayRate                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_LearpTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEasingFunc                             Param_EaseFunc                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_EaseBlendExp                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Steps                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::Start(float Param_StartPlayRate, float Param_LearpTime, EEasingFunc Param_EaseFunc, float Param_EaseBlendExp, int32 Param_Steps, class UAnimSequenceBase* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "Start");

	Params::BP_EnemyChangePlayRate_C_Start Parms{};

	Parms.Param_StartPlayRate = Param_StartPlayRate;
	Parms.Param_LearpTime = Param_LearpTime;
	Parms.Param_EaseFunc = Param_EaseFunc;
	Parms.Param_EaseBlendExp = Param_EaseBlendExp;
	Parms.Param_Steps = Param_Steps;
	Parms.Animation = Animation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.Update
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::Update(float DeltaSec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "Update");

	Params::BP_EnemyChangePlayRate_C_Update Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.IsPlayerAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAccelerating                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyChangePlayRate_C::IsPlayerAccelerating(bool* bAccelerating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "IsPlayerAccelerating");

	Params::BP_EnemyChangePlayRate_C_IsPlayerAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAccelerating != nullptr)
		*bAccelerating = Parms.bAccelerating;
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.End
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EnemyChangePlayRate_C::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.IsChangePlayRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bChange                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_EnemyChangePlayRate_C::IsChangePlayRate(bool* bChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "IsChangePlayRate");

	Params::BP_EnemyChangePlayRate_C_IsChangePlayRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bChange != nullptr)
		*bChange = Parms.bChange;
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.SetObjType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Obj                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::SetObjType(class AActor* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "SetObjType");

	Params::BP_EnemyChangePlayRate_C_SetObjType Parms{};

	Parms.Obj = Obj;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.ClearObjType
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_EnemyChangePlayRate_C::ClearObjType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "ClearObjType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyChangePlayRate.BP_EnemyChangePlayRate_C.SelectPlayRateParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bAddDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Param_StartPlayRate                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LerpTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EEasingFunc                             Param_EaseFunc                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_EaseBlendExp                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Step                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_EnemyChangePlayRate_C::SelectPlayRateParam(bool bAddDamage, bool* bSuccess, float* Param_StartPlayRate, float* LerpTime, EEasingFunc* Param_EaseFunc, float* Param_EaseBlendExp, int32* Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyChangePlayRate_C", "SelectPlayRateParam");

	Params::BP_EnemyChangePlayRate_C_SelectPlayRateParam Parms{};

	Parms.bAddDamage = bAddDamage;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (Param_StartPlayRate != nullptr)
		*Param_StartPlayRate = Parms.Param_StartPlayRate;

	if (LerpTime != nullptr)
		*LerpTime = Parms.LerpTime;

	if (Param_EaseFunc != nullptr)
		*Param_EaseFunc = Parms.Param_EaseFunc;

	if (Param_EaseBlendExp != nullptr)
		*Param_EaseBlendExp = Parms.Param_EaseBlendExp;

	if (Step != nullptr)
		*Step = Parms.Step;
}

}

