#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainMap_Info_Parts_1

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CharactersSkillData_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1
// 0x0040 (0x0040 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4548[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4549[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UHorizonFlipbookWidget*>         K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1) == 0x000040, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, EntryPoint) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_Event_State) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_Event_SubState) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, CallFunc_MakeLiteralByte_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_SwitchInteger_CmpSuccess) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_MakeArray_Array) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1, K2Node_MakeArray_Array_1) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ExecuteUbergraph_WB_ui_BrainMap_Info_Parts_1::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_UpdateState");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_UpdateState");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateState, State) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.SetSkill
// 0x0148 (0x0148 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_SetSkill final
{
public:
	EPlayerSkill                                  Param_Skill;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlreadyLearn;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsResetParam;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_454A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       _Manager;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharactersSkillData                   _Data;                                             // 0x0010(0x0024)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_454C[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454D[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillLearnPoint_Point;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_454E[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E0(0x0018)()
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillData_return;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_454F[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCharactersSkillData                   CallFunc_GetSkillData_skill_data;                  // 0x00FC(0x0024)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue_3;                    // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0130(0x0018)()
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_SetSkill");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill) == 0x000148, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_SetSkill");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, Param_Skill) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::Param_Skill' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, IsAlreadyLearn) == 0x000001, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::IsAlreadyLearn' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, IsResetParam) == 0x000002, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::IsResetParam' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, _Manager) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, _Data) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::_Data' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetText_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetText_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000080, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetDataBaseManager_Manager) == 0x000088, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetPlayerManager_PlayerManager) == 0x000090, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000098, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x0000A8, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetSkillLearnPoint_Point) == 0x0000C0, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetSkillLearnPoint_Point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000C4, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetText_ReturnValue_2) == 0x0000D0, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E0, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x0000F8, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetSkillData_return) == 0x0000F9, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetSkillData_return' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetSkillData_skill_data) == 0x0000FC, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetSkillData_skill_data' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_GetText_ReturnValue_3) == 0x000120, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkill, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000130, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkill::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.StateNone
// 0x000C (0x000C - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4550[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_StateNone) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_StateNone");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_StateNone) == 0x00000C, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_StateNone");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateNone, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateNone::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateNone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateNone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.StateLoop
// 0x0018 (0x0018 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4551[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4552[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_StateLoop");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop) == 0x000018, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_StateLoop");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue) == 0x000006, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_StateLoop, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_StateLoop::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.SetBaseText
// 0x00B0 (0x00B0 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_SetBaseText final
{
public:
	class UDatabaseManager*                       _Manager;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue_3;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0078(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0090(0x0018)()
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_SetBaseText");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText) == 0x0000B0, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_SetBaseText");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, _Manager) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_GetText_ReturnValue_1) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_GetText_ReturnValue_2) == 0x000058, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_GetText_ReturnValue_3) == 0x000068, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000078, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000090, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetBaseText, CallFunc_GetDataBaseManager_Manager) == 0x0000A8, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetBaseText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.SetPlayerType
// 0x0118 (0x0118 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType final
{
public:
	bool                                          IsKasane;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4553[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerID>                             _IDList;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4554[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerID>                             K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0038(0x00D0)(NoDestructor)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType) == 0x000118, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, IsKasane) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::IsKasane' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, _IDList) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::_IDList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, _index) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::_index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, K2Node_MakeArray_Array) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType, K2Node_MakeArray_Array_1) == 0x000108, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetPlayerType::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.DrawParam
// 0x00B8 (0x00B8 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_DrawParam final
{
public:
	class FString                                 _String;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSlateColor>                    _TextColor;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FSlateColor>                    K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizonFlipbookWidget*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4555[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4556[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_DrawParam");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam) == 0x0000B8, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_DrawParam");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, _String) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::_String' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, _TextColor) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::_TextColor' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, K2Node_MakeArray_Array) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, Temp_int_Variable) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000048, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000088, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000098, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_DrawParam, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'WB_ui_BrainMap_Info_Parts_1_C_DrawParam::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.SetParamOffset
// 0x0130 (0x0130 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset final
{
public:
	EPlayerSkill                                  Param_Skill;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     _PlayerID;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4557[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    _Manager;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillLearned_learned;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4558[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPPlayerManagerInterface_C> CallFunc_AddSkill_self_CastInput;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0030(0x00D0)(NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player_1;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset) == 0x000130, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, Param_Skill) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::Param_Skill' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, _PlayerID) == 0x000001, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::_PlayerID' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, _Manager) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_GetMainPlayer_Player) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_IsSkillLearned_learned) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_IsSkillLearned_learned' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_AddSkill_self_CastInput) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_AddSkill_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_GetPlayerManager_PlayerManager) == 0x000100, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_GetMainPlayer_Player_1) == 0x000108, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_GetMainPlayer_Player_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_Subtract_IntInt_ReturnValue) == 0x000110, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000114, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000118, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00011C, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset, K2Node_MakeArray_Array) == 0x000120, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetParamOffset::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.ResetParamOffset
// 0x0018 (0x0018 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset) == 0x000018, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, Temp_int_Variable) == 0x00000C, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetParamOffset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.initializeMovie
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie final
{
public:
	bool                                          CallFunc_SetMovieImageTexture_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIndividualSetting_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4559[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MovieManager_C*                     CallFunc_GetMovieManager_AsBP_Movie_Manager;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie) == 0x000010, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie, CallFunc_SetMovieImageTexture_ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie::CallFunc_SetMovieImageTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie, CallFunc_SetIndividualSetting_ReturnValue) == 0x000001, "Member 'WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie::CallFunc_SetIndividualSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie, CallFunc_GetMovieManager_AsBP_Movie_Manager) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_InitializeMovie::CallFunc_GetMovieManager_AsBP_Movie_Manager' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.UpdateMovie
// 0x0007 (0x0007 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie final
{
public:
	bool                                          CallFunc_isStop_isStop;                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReady_IsReady;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetMoviePrepareSetting_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LoadMovieTexture_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie) == 0x000001, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie) == 0x000007, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_isStop_isStop) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_isStop_isStop' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_IsReady_IsReady) == 0x000002, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_IsReady_IsReady' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_SetMoviePrepareSetting_ReturnValue) == 0x000003, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_SetMoviePrepareSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_LoadMovieTexture_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_LoadMovieTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie, K2Node_SwitchInteger_CmpSuccess) == 0x000006, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdateMovie::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.CreateMoviePath
// 0x00B0 (0x00B0 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath final
{
public:
	int32                                         CallFunc_GetSkillIndex_Index;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath) == 0x0000B0, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_GetSkillIndex_Index) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_GetSkillIndex_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000060, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000070, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000080, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000090, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000A0, "Member 'WB_ui_BrainMap_Info_Parts_1_C_CreateMoviePath::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.EndMovie
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_EndMovie final
{
public:
	bool                                          CallFunc_SetIndividualSetting_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_EndMovie) == 0x000001, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_EndMovie");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_EndMovie) == 0x000001, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_EndMovie");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_EndMovie, CallFunc_SetIndividualSetting_ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_EndMovie::CallFunc_SetIndividualSetting_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.UpdatePicture
// 0x0118 (0x0118 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture final
{
public:
	class UTexture*                               _Texture;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillIndex_Index;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadObjectGeneric_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455C[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x0088)()
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture) == 0x000118, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, _Texture) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::_Texture' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_GetSkillIndex_Index) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_GetSkillIndex_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000058, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000068, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, CallFunc_LoadObjectGeneric_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::CallFunc_LoadObjectGeneric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, K2Node_DynamicCast_AsTexture) == 0x000080, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'WB_ui_BrainMap_Info_Parts_1_C_UpdatePicture::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.ResetPicture
// 0x0088 (0x0088 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_ResetPicture final
{
public:
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0000(0x0088)()
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_ResetPicture) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_ResetPicture");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_ResetPicture) == 0x000088, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_ResetPicture");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_ResetPicture, K2Node_MakeStruct_SlateBrush) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_ResetPicture::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.GetSkillIndex
// 0x0030 (0x0030 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex final
{
public:
	EPlayerSkill                                  SkillID;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_455D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 _IndexList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex) == 0x000008, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex) == 0x000030, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex, SkillID) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex::SkillID' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex, Param_Index) == 0x000004, "Member 'WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex, _IndexList) == 0x000008, "Member 'WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex::_IndexList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_Info_Parts_1_C_GetSkillIndex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_Info_Parts_1.WB_ui_BrainMap_Info_Parts_1_C.SetSkillPoint
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint final
{
public:
	int32                                         Point;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint) == 0x000004, "Wrong alignment on WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint");
static_assert(sizeof(WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint) == 0x000004, "Wrong size on WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint");
static_assert(offsetof(WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint, Point) == 0x000000, "Member 'WB_ui_BrainMap_Info_Parts_1_C_SetSkillPoint::Point' has a wrong offset!");

}

