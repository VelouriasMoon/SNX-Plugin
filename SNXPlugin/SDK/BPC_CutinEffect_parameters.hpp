#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_CutinEffect

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPC_CutinEffect.BPC_CutinEffect_C.ExecuteUbergraph_BPC_CutinEffect
// 0x000C (0x000C - 0x0000)
struct BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95FE[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect) == 0x000004, "Wrong alignment on BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect");
static_assert(sizeof(BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect) == 0x00000C, "Wrong size on BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect");
static_assert(offsetof(BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect, EntryPoint) == 0x000000, "Member 'BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BPC_CutinEffect_C_ExecuteUbergraph_BPC_CutinEffect::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_CutinEffect_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CutinEffect_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_CutinEffect_C_ReceiveTick");
static_assert(sizeof(BPC_CutinEffect_C_ReceiveTick) == 0x000004, "Wrong size on BPC_CutinEffect_C_ReceiveTick");
static_assert(offsetof(BPC_CutinEffect_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_CutinEffect_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.InitializePPM
// 0x0010 (0x0010 - 0x0000)
struct BPC_CutinEffect_C_InitializePPM final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CutinEffect_C_InitializePPM) == 0x000008, "Wrong alignment on BPC_CutinEffect_C_InitializePPM");
static_assert(sizeof(BPC_CutinEffect_C_InitializePPM) == 0x000010, "Wrong size on BPC_CutinEffect_C_InitializePPM");
static_assert(offsetof(BPC_CutinEffect_C_InitializePPM, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BPC_CutinEffect_C_InitializePPM::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_InitializePPM, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'BPC_CutinEffect_C_InitializePPM::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.UpdatePPM
// 0x00F0 (0x00F0 - 0x0000)
struct BPC_CutinEffect_C_UpdatePPM final
{
public:
	float                                         DilationScale;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          QualityUseTapeDistortion;                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          QualityUseDotCraw;                                 // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95FF[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 TapeDistortionParameterValues;                     // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FName>                           TapeDistortionParameterNames;                      // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9600[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGradualQuality                               CallFunc_UseRenderingOptionPPMSAS_Quality;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9601[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array_2;                          // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array_3;                          // 0x0088(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9602[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 K2Node_MakeArray_Array_4;                          // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9603[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<float>                                 K2Node_MakeArray_Array_5;                          // 0x00C8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9604[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_CutinEffect_C_UpdatePPM) == 0x000008, "Wrong alignment on BPC_CutinEffect_C_UpdatePPM");
static_assert(sizeof(BPC_CutinEffect_C_UpdatePPM) == 0x0000F0, "Wrong size on BPC_CutinEffect_C_UpdatePPM");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, DilationScale) == 0x000000, "Member 'BPC_CutinEffect_C_UpdatePPM::DilationScale' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, QualityUseTapeDistortion) == 0x000004, "Member 'BPC_CutinEffect_C_UpdatePPM::QualityUseTapeDistortion' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, QualityUseDotCraw) == 0x000005, "Member 'BPC_CutinEffect_C_UpdatePPM::QualityUseDotCraw' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, TapeDistortionParameterValues) == 0x000008, "Member 'BPC_CutinEffect_C_UpdatePPM::TapeDistortionParameterValues' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, TapeDistortionParameterNames) == 0x000018, "Member 'BPC_CutinEffect_C_UpdatePPM::TapeDistortionParameterNames' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000028, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_UseRenderingOptionPPMSAS_Quality) == 0x000038, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_UseRenderingOptionPPMSAS_Quality' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array) == 0x000040, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000068, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000070, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000074, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array_2) == 0x000078, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array_3) == 0x000088, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000098, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array_4) == 0x0000A0, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000B4, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000B8, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, K2Node_MakeArray_Array_5) == 0x0000C8, "Member 'BPC_CutinEffect_C_UpdatePPM::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D9, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x0000DC, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdatePPM, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x0000E0, "Member 'BPC_CutinEffect_C_UpdatePPM::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.UpdateCharaMat
// 0x0050 (0x0050 - 0x0000)
struct BPC_CutinEffect_C_UpdateCharaMat final
{
public:
	class ABP_CutinCharacterBase_C*               SASCharacter;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9605[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CutinCharacterBase_C*               K2Node_DynamicCast_AsBP_Cutin_Character_Base;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9606[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_CutinEffect_C_UpdateCharaMat) == 0x000008, "Wrong alignment on BPC_CutinEffect_C_UpdateCharaMat");
static_assert(sizeof(BPC_CutinEffect_C_UpdateCharaMat) == 0x000050, "Wrong size on BPC_CutinEffect_C_UpdateCharaMat");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, SASCharacter) == 0x000000, "Member 'BPC_CutinEffect_C_UpdateCharaMat::SASCharacter' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BPC_CutinEffect_C_UpdateCharaMat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BPC_CutinEffect_C_UpdateCharaMat::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BPC_CutinEffect_C_UpdateCharaMat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, K2Node_DynamicCast_AsBP_Cutin_Character_Base) == 0x000018, "Member 'BPC_CutinEffect_C_UpdateCharaMat::K2Node_DynamicCast_AsBP_Cutin_Character_Base' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BPC_CutinEffect_C_UpdateCharaMat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_BreakColor_R) == 0x00002C, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_BreakColor_G) == 0x000030, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_BreakColor_B) == 0x000034, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_BreakColor_A) == 0x000038, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_UpdateCharaMat, CallFunc_MakeColor_ReturnValue) == 0x00003C, "Member 'BPC_CutinEffect_C_UpdateCharaMat::CallFunc_MakeColor_ReturnValue' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.SetUseCharaMaterial
// 0x0001 (0x0001 - 0x0000)
struct BPC_CutinEffect_C_SetUseCharaMaterial final
{
public:
	bool                                          Use;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_CutinEffect_C_SetUseCharaMaterial) == 0x000001, "Wrong alignment on BPC_CutinEffect_C_SetUseCharaMaterial");
static_assert(sizeof(BPC_CutinEffect_C_SetUseCharaMaterial) == 0x000001, "Wrong size on BPC_CutinEffect_C_SetUseCharaMaterial");
static_assert(offsetof(BPC_CutinEffect_C_SetUseCharaMaterial, Use) == 0x000000, "Member 'BPC_CutinEffect_C_SetUseCharaMaterial::Use' has a wrong offset!");

// Function BPC_CutinEffect.BPC_CutinEffect_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct BPC_CutinEffect_C_Initialize final
{
public:
	class URSSceneCaptureComponent2D*             RsSceneCapture2D;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_CutinEffect_C_Initialize) == 0x000008, "Wrong alignment on BPC_CutinEffect_C_Initialize");
static_assert(sizeof(BPC_CutinEffect_C_Initialize) == 0x000010, "Wrong size on BPC_CutinEffect_C_Initialize");
static_assert(offsetof(BPC_CutinEffect_C_Initialize, RsSceneCapture2D) == 0x000000, "Member 'BPC_CutinEffect_C_Initialize::RsSceneCapture2D' has a wrong offset!");
static_assert(offsetof(BPC_CutinEffect_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BPC_CutinEffect_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

