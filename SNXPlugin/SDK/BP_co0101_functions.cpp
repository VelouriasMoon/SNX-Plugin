#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_co0101

#include "Basic.hpp"

#include "BP_co0101_classes.hpp"
#include "BP_co0101_parameters.hpp"


namespace SDK
{

// Function BP_co0101.BP_co0101_C.ExecuteUbergraph_BP_co0101
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::ExecuteUbergraph_BP_co0101(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "ExecuteUbergraph_BP_co0101");

	Params::BP_co0101_C_ExecuteUbergraph_BP_co0101 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.EndOverrideGravity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSCableGravityType                     Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::EndOverrideGravity(ERSCableGravityType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "EndOverrideGravity");

	Params::BP_co0101_C_EndOverrideGravity Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.BeginOverrideGravity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSCableGravityType                     Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::BeginOverrideGravity(ERSCableGravityType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "BeginOverrideGravity");

	Params::BP_co0101_C_BeginOverrideGravity Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "ReceiveTick");

	Params::BP_co0101_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_co0101_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_co0101.BP_co0101_C.SetCodePower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::SetCodePower(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SetCodePower");

	Params::BP_co0101_C_SetCodePower Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.SetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::SetVisibility(bool New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SetVisibility");

	Params::BP_co0101_C_SetVisibility Parms{};

	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.UpdateDither
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_co0101_C::UpdateDither()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "UpdateDither");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_co0101.BP_co0101_C.DoCodeStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOptionNoCutin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNexusDrive                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bExColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::DoCodeStart(ECableType Type, bool bOptionNoCutin, bool bNexusDrive, bool bExColor, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "DoCodeStart");

	Params::BP_co0101_C_DoCodeStart Parms{};

	Parms.Type = Type;
	Parms.bOptionNoCutin = bOptionNoCutin;
	Parms.bNexusDrive = bNexusDrive;
	Parms.bExColor = bExColor;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_co0101.BP_co0101_C.DoCodeEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Ttype                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::DoCodeEnd(ECableType Ttype, bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "DoCodeEnd");

	Params::BP_co0101_C_DoCodeEnd Parms{};

	Parms.Ttype = Ttype;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BP_co0101.BP_co0101_C.EventPhysicsIdling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   IdlingSec                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::EventPhysicsIdling(float IdlingSec, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "EventPhysicsIdling");

	Params::BP_co0101_C_EventPhysicsIdling Parms{};

	Parms.IdlingSec = IdlingSec;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_co0101.BP_co0101_C.GetSASStartAnimSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    AnimSequence                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::GetSASStartAnimSequence(class UAnimSequence** AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "GetSASStartAnimSequence");

	Params::BP_co0101_C_GetSASStartAnimSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimSequence != nullptr)
		*AnimSequence = Parms.AnimSequence;
}


// Function BP_co0101.BP_co0101_C.UpdateSwitchNexusDrive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_co0101_C::UpdateSwitchNexusDrive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "UpdateSwitchNexusDrive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_co0101.BP_co0101_C.SwitchNexusDrive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNexusDrive                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::SwitchNexusDrive(bool bNexusDrive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SwitchNexusDrive");

	Params::BP_co0101_C_SwitchNexusDrive Parms{};

	Parms.bNexusDrive = bNexusDrive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.UpdateSwitchExColor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_co0101_C::UpdateSwitchExColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "UpdateSwitchExColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_co0101.BP_co0101_C.SwitchExColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_co0101_C::SwitchExColor(bool bExColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SwitchExColor");

	Params::BP_co0101_C_SwitchExColor Parms{};

	Parms.bExColor = bExColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.SettingTickInterval
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_co0101_C::SettingTickInterval()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SettingTickInterval");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_co0101.BP_co0101_C.SetUseNexusDrive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::SetUseNexusDrive(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "SetUseNexusDrive");

	Params::BP_co0101_C_SetUseNexusDrive Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_co0101.BP_co0101_C.GetCableIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::GetCableIndex(int32* Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "GetCableIndex");

	Params::BP_co0101_C_GetCableIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_co0101.BP_co0101_C.GetMaterialLocationParamName
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ParamName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_co0101_C::GetMaterialLocationParamName(class FName* ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_co0101_C", "GetMaterialLocationParamName");

	Params::BP_co0101_C_GetMaterialLocationParamName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParamName != nullptr)
		*ParamName = Parms.ParamName;
}

}

