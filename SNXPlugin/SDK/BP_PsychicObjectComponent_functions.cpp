#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PsychicObjectComponent

#include "Basic.hpp"

#include "BP_PsychicObjectComponent_classes.hpp"
#include "BP_PsychicObjectComponent_parameters.hpp"


namespace SDK
{

// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.OnSetEffectFocus__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::OnSetEffectFocus__DelegateSignature(bool FlagIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "OnSetEffectFocus__DelegateSignature");

	Params::BP_PsychicObjectComponent_C_OnSetEffectFocus__DelegateSignature Parms{};

	Parms.FlagIn = FlagIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DispatcherGimmickObjectEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DispatcherGimmickObjectEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DispatcherGimmickObjectEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ExecuteUbergraph_BP_PsychicObjectComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::ExecuteUbergraph_BP_PsychicObjectComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ExecuteUbergraph_BP_PsychicObjectComponent");

	Params::BP_PsychicObjectComponent_C_ExecuteUbergraph_BP_PsychicObjectComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ReceiveEndPlay");

	Params::BP_PsychicObjectComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ReceiveTick");

	Params::BP_PsychicObjectComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Initialize
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Finalize
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::Finalize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "Finalize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsPsychicObjectActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsPsychicObjectActive(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsPsychicObjectActive");

	Params::BP_PsychicObjectComponent_C_IsPsychicObjectActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Flag_only                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectActive(bool Flag_in, bool Flag_only)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectActive");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectActive Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Flag_only = Flag_only;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitializeParameter
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitializeParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitializeParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsFocusable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsFocusable(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsFocusable");

	Params::BP_PsychicObjectComponent_C_IsFocusable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CanCapture(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CanCapture");

	Params::BP_PsychicObjectComponent_C_CanCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Air_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_field_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPhaseCapture(bool Flag_in, bool Capture_success_in, bool Combo_in, bool Air_in, bool Psychic_field_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseCapture");

	Params::BP_PsychicObjectComponent_C_SetPhaseCapture Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_success_in = Capture_success_in;
	Parms.Combo_in = Combo_in;
	Parms.Air_in = Air_in;
	Parms.Psychic_field_in = Psychic_field_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCapture
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARsBattleHero_C*                  Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Air_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Psychic_field_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectCapture(bool Flag_in, class ARsBattleHero_C* Capture_owner_in, bool Capture_success_in, bool Combo_in, bool Air_in, bool Psychic_field_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectCapture");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectCapture Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_owner_in = Capture_owner_in;
	Parms.Capture_success_in = Capture_success_in;
	Parms.Combo_in = Combo_in;
	Parms.Air_in = Air_in;
	Parms.Psychic_field_in = Psychic_field_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Wait_gauge_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetFocus(bool Flag_in, bool Wait_gauge_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetFocus");

	Params::BP_PsychicObjectComponent_C_SetFocus Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Wait_gauge_in = Wait_gauge_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectFocus(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectFocus");

	Params::BP_PsychicObjectComponent_C_SetEffectFocus Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unique_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Air_combo_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Enemy_direct_shot_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    brain_field_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Combo_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Combo_index_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimSequence*                    Anim_seq_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectAttack(class AActor* Target_actor_in, bool Direct_drop_in, bool Unique_in, bool Combo_in, bool Air_combo_in, bool Enemy_direct_shot_in, bool brain_field_in, int32 Combo_level_in, int32 Combo_index_in, float Attract_time_in, class UAnimSequence* Anim_seq_in, EPsychicObjectBrainFieldAttackType Attack_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectAttack");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectAttack Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Direct_drop_in = Direct_drop_in;
	Parms.Unique_in = Unique_in;
	Parms.Combo_in = Combo_in;
	Parms.Air_combo_in = Air_combo_in;
	Parms.Enemy_direct_shot_in = Enemy_direct_shot_in;
	Parms.brain_field_in = brain_field_in;
	Parms.Combo_level_in = Combo_level_in;
	Parms.Combo_index_in = Combo_index_in;
	Parms.Attract_time_in = Attract_time_in;
	Parms.Anim_seq_in = Anim_seq_in;
	Parms.Attack_type_in = Attack_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseLiftUpOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPhaseLiftUpOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseLiftUpOld");

	Params::BP_PsychicObjectComponent_C_SetPhaseLiftUpOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CanAttack(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CanAttack");

	Params::BP_PsychicObjectComponent_C_CanAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseAttack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPhaseAttack(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseAttack");

	Params::BP_PsychicObjectComponent_C_SetPhaseAttack Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsync
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsync
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsync");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetLerpStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Actor_pos_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Actor_rot_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use_swing_arrow_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetLerpStart(bool Actor_pos_in, bool Actor_rot_in, bool Use_swing_arrow_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetLerpStart");

	Params::BP_PsychicObjectComponent_C_SetLerpStart Parms{};

	Parms.Actor_pos_in = Actor_pos_in;
	Parms.Actor_rot_in = Actor_rot_in;
	Parms.Use_swing_arrow_in = Use_swing_arrow_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ApplyLerpResult
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Actor_pos_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Actor_rot_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use_swing_arrow_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::ApplyLerpResult(bool Actor_pos_in, bool Actor_rot_in, bool Use_swing_arrow_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ApplyLerpResult");

	Params::BP_PsychicObjectComponent_C_ApplyLerpResult Parms{};

	Parms.Actor_pos_in = Actor_pos_in;
	Parms.Actor_rot_in = Actor_rot_in;
	Parms.Use_swing_arrow_in = Use_swing_arrow_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitializeComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  Arrow_comp_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USphereComponent*                 Attack_sphere_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCapsuleComponent*                Attack_capsule_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCapsuleComponent*                Physics_capsule_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitializeComponent(class UMeshComponent* Mesh_comp_in, class USceneComponent* Arrow_comp_in, class USphereComponent* Attack_sphere_in, class UCapsuleComponent* Attack_capsule_in, class UCapsuleComponent* Physics_capsule_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitializeComponent");

	Params::BP_PsychicObjectComponent_C_InitializeComponent Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;
	Parms.Arrow_comp_in = Arrow_comp_in;
	Parms.Attack_sphere_in = Attack_sphere_in;
	Parms.Attack_capsule_in = Attack_capsule_in;
	Parms.Physics_capsule_in = Physics_capsule_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetActorPosRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetActorPosRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetActorPosRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttackThrow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotate                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetCameraTransform(struct FVector* Location, struct FRotator* Rotate, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetCameraTransform");

	Params::BP_PsychicObjectComponent_C_GetCameraTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotate != nullptr)
		*Rotate = std::move(Parms.Rotate);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjPosRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Actor_pos_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Actor_rot_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use_swing_arrow_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sweep_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teleport_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjPosRot(const struct FVector& Pos_in, const struct FRotator& Rot_in, bool Actor_pos_in, bool Actor_rot_in, bool Use_swing_arrow_in, bool Sweep_in, bool Teleport_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjPosRot");

	Params::BP_PsychicObjectComponent_C_SetPsyObjPosRot Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Rot_in = std::move(Rot_in);
	Parms.Actor_pos_in = Actor_pos_in;
	Parms.Actor_rot_in = Actor_rot_in;
	Parms.Use_swing_arrow_in = Use_swing_arrow_in;
	Parms.Sweep_in = Sweep_in;
	Parms.Teleport_in = Teleport_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseAttract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPhaseAttract(bool Flag_in, float Attract_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseAttract");

	Params::BP_PsychicObjectComponent_C_SetPhaseAttract Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Attract_time_in = Attract_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackCombo(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackCombo");

	Params::BP_PsychicObjectComponent_C_SetAttackCombo Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Throw_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackCollisionOld(bool Flag_in, bool Throw_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackCollisionOld");

	Params::BP_PsychicObjectComponent_C_SetAttackCollisionOld Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Throw_in = Throw_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitResult                     Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FHitResult                       Hit_result_bg_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_PsychicObjectComponent_C::SetHit(bool Hit_enemy_in, bool Hit_background_in, const struct FHCHitResult& Hit_result_in, const struct FHitResult& Hit_result_bg_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHit");

	Params::BP_PsychicObjectComponent_C_SetHit Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Hit_result_in = std::move(Hit_result_in);
	Parms.Hit_result_bg_in = std::move(Hit_result_bg_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAttract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Attract_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectAttract(class ARsBattleHero_C* Capture_owner_in, float Attract_time_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectAttract");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectAttract Parms{};

	Parms.Capture_owner_in = Capture_owner_in;
	Parms.Attract_time_in = Attract_time_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanAttract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CanAttract(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CanAttract");

	Params::BP_PsychicObjectComponent_C_CanAttract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCapturing
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsCapturing(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsCapturing");

	Params::BP_PsychicObjectComponent_C_IsCapturing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckPsychicObjectState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectState                     State_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CheckPsychicObjectState(EPsychicObjectState State_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckPsychicObjectState");

	Params::BP_PsychicObjectComponent_C_CheckPsychicObjectState Parms{};

	Parms.State_in = State_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectState                     State_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicObjectState(EPsychicObjectState State_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectState");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectState Parms{};

	Parms.State_in = State_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPsychicObjectState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectState                     Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetPsychicObjectState(EPsychicObjectState* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetPsychicObjectState");

	Params::BP_PsychicObjectComponent_C_GetPsychicObjectState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAttackThrow(bool Flag_in, float Throw_speed_in, float Homing_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackThrow");

	Params::BP_PsychicObjectComponent_C_SetAttackThrow Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Throw_speed_in = Throw_speed_in;
	Parms.Homing_speed_in = Homing_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetProcedurePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectProcedure                 Phase_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetProcedurePhase(EPsychicObjectProcedure Phase_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetProcedurePhase");

	Params::BP_PsychicObjectComponent_C_SetProcedurePhase Parms{};

	Parms.Phase_in = Phase_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetProcedurePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectProcedure                 Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetProcedurePhase(EPsychicObjectProcedure* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetProcedurePhase");

	Params::BP_PsychicObjectComponent_C_GetProcedurePhase Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckProcedurePhase
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectProcedure                 Phase_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CheckProcedurePhase(EPsychicObjectProcedure Phase_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckProcedurePhase");

	Params::BP_PsychicObjectComponent_C_CheckProcedurePhase Parms{};

	Parms.Phase_in = Phase_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseDestroy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Delay_time_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPhaseDestroy(bool Flag_in, float Delay_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseDestroy");

	Params::BP_PsychicObjectComponent_C_SetPhaseDestroy Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Delay_time_in = Delay_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectDestroy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectDestroy(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectDestroy");

	Params::BP_PsychicObjectComponent_C_SetEffectDestroy Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEffectDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateEffectDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateEffectDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsPsychicObjectUnique
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsPsychicObjectUnique(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsPsychicObjectUnique");

	Params::BP_PsychicObjectComponent_C_IsPsychicObjectUnique Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetUniqueMontageType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectUniqueMontageType         Montage_type                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetUniqueMontageType(EPsychicObjectUniqueMontageType* Montage_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetUniqueMontageType");

	Params::BP_PsychicObjectComponent_C_GetUniqueMontageType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage_type != nullptr)
		*Montage_type = Parms.Montage_type;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Show_button_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetWeightGauge(bool Flag_in, bool Capture_success_in, bool Show_button_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetWeightGauge");

	Params::BP_PsychicObjectComponent_C_SetWeightGauge Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_success_in = Capture_success_in;
	Parms.Show_button_in = Show_button_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateWeightGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Percent_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::UpdateWeightGauge(int32 Level_in, float Percent_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateWeightGauge");

	Params::BP_PsychicObjectComponent_C_UpdateWeightGauge Parms{};

	Parms.Level_in = Level_in;
	Parms.Percent_in = Percent_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateInput
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionSphereOld
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackCollisionSphereOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackCollisionSphereOld");

	Params::BP_PsychicObjectComponent_C_SetAttackCollisionSphereOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackCollisionParam(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackCollisionParam");

	Params::BP_PsychicObjectComponent_C_SetAttackCollisionParam Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CanUniqueAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CanUniqueAttack(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CanUniqueAttack");

	Params::BP_PsychicObjectComponent_C_CanUniqueAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Name_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetTimeDilation(bool Flag_in, const class FString& Name_in, float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetTimeDilation");

	Params::BP_PsychicObjectComponent_C_SetTimeDilation Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Name_in = std::move(Name_in);
	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetLerpLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetLerpLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetLerpLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureLiftUpOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetCaptureLiftUpOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureLiftUpOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectCapture(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectCapture");

	Params::BP_PsychicObjectComponent_C_SetEffectCapture Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetHUD
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHUDMainGame_C*                   Hud_main                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetHUD(class AHUDMainGame_C** Hud_main)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetHUD");

	Params::BP_PsychicObjectComponent_C_GetHUD Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hud_main != nullptr)
		*Hud_main = Parms.Hud_main;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackThrowAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enemy_direct_shot_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Enemy_attack_row_name_in                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAttackThrowAnim(float Throw_speed_in, float Homing_speed_in, bool Enemy_direct_shot_in, class FName Enemy_attack_row_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackThrowAnim");

	Params::BP_PsychicObjectComponent_C_SetAttackThrowAnim Parms{};

	Parms.Throw_speed_in = Throw_speed_in;
	Parms.Homing_speed_in = Homing_speed_in;
	Parms.Enemy_direct_shot_in = Enemy_direct_shot_in;
	Parms.Enemy_attack_row_name_in = Enemy_attack_row_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetEffectAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckHitBackGround
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CheckHitBackGround()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckHitBackGround");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncVibrate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncVibrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncVibrate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncVibrate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncVibrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncVibrate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncVibrate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncVibrate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncVibrate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetMeshPosRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetMeshPosRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetMeshPosRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncCapture
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncCapture
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncCapture
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncVibrate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAsyncVibrate(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAsyncVibrate");

	Params::BP_PsychicObjectComponent_C_SetAsyncVibrate Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncLiftUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAsyncLiftUp(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAsyncLiftUp");

	Params::BP_PsychicObjectComponent_C_SetAsyncLiftUp Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DetachAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DetachAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DetachAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEffectCaptureParam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               SAS_Kind                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Capture                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RateAura                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SizeAura                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEffectCaptureParam(E_SASKind* SAS_Kind, bool* Capture, float* Rate, struct FVector* Size, float* RateAura, struct FVector* SizeAura)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEffectCaptureParam");

	Params::BP_PsychicObjectComponent_C_GetEffectCaptureParam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SAS_Kind != nullptr)
		*SAS_Kind = Parms.SAS_Kind;

	if (Capture != nullptr)
		*Capture = Parms.Capture;

	if (Rate != nullptr)
		*Rate = Parms.Rate;

	if (Size != nullptr)
		*Size = std::move(Parms.Size);

	if (RateAura != nullptr)
		*RateAura = Parms.RateAura;

	if (SizeAura != nullptr)
		*SizeAura = std::move(Parms.SizeAura);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCheckHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Check_floor_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_wall_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_ceiling_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCheckHit(bool Check_floor_in, bool Check_wall_in, bool Check_ceiling_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCheckHit");

	Params::BP_PsychicObjectComponent_C_SetCheckHit Parms{};

	Parms.Check_floor_in = Check_floor_in;
	Parms.Check_wall_in = Check_wall_in;
	Parms.Check_ceiling_in = Check_ceiling_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrab
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Throw_interpolation_in                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandleGrab(bool Flag_in, bool Throw_interpolation_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleGrab");

	Params::BP_PsychicObjectComponent_C_SetHandleGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Throw_interpolation_in = Throw_interpolation_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractExtendLerp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttractExtendLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttractExtendLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCapture(bool Flag_in, bool Capture_success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCapture");

	Params::BP_PsychicObjectComponent_C_SetCapture Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_success_in = Capture_success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateThrowVectorHoming
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateThrowVectorHoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateThrowVectorHoming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitCaptureTimer
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bAirIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::InitCaptureTimer(bool Combo_in, bool bAirIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitCaptureTimer");

	Params::BP_PsychicObjectComponent_C_InitCaptureTimer Parms{};

	Parms.Combo_in = Combo_in;
	Parms.bAirIn = bAirIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCaptureTimer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Finish                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::UpdateCaptureTimer(bool* Finish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCaptureTimer");

	Params::BP_PsychicObjectComponent_C_UpdateCaptureTimer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Finish != nullptr)
		*Finish = Parms.Finish;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcCaptureRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Capture_rate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::CalcCaptureRate(int32* Level, float* Capture_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CalcCaptureRate");

	Params::BP_PsychicObjectComponent_C_CalcCaptureRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;

	if (Capture_rate != nullptr)
		*Capture_rate = Parms.Capture_rate;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureLevel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetCaptureLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PrevAsyncCommon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PrevAsyncCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PrevAsyncCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncCommon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncCommon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCompTick
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Name_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsyObjCompTick(bool Flag_in, class FName Name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjCompTick");

	Params::BP_PsychicObjectComponent_C_SetPsyObjCompTick Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Name_in = Name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimSequence*                    Anim_sequence                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetAnimation(class UAnimSequence** Anim_sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetAnimation");

	Params::BP_PsychicObjectComponent_C_GetAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Anim_sequence != nullptr)
		*Anim_sequence = Parms.Anim_sequence;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawRotArrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Len_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Size_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::DebugDrawRotArrow(const struct FVector& Pos_in, const struct FRotator& Rot_in, float Len_in, float Size_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDrawRotArrow");

	Params::BP_PsychicObjectComponent_C_DebugDrawRotArrow Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Rot_in = std::move(Rot_in);
	Parms.Len_in = Len_in;
	Parms.Size_in = Size_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCurrentAttackType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Attack_type                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetCurrentAttackType(int32* Attack_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetCurrentAttackType");

	Params::BP_PsychicObjectComponent_C_GetCurrentAttackType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_type != nullptr)
		*Attack_type = Parms.Attack_type;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhaseInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPhaseInput(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhaseInput");

	Params::BP_PsychicObjectComponent_C_SetPhaseInput Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddChildObjList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Child_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddChildObjList(class ABP_PsychicObjectBasic_C* Child_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddChildObjList");

	Params::BP_PsychicObjectComponent_C_AddChildObjList Parms{};

	Parms.Child_obj_in = Child_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveChildObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Child_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::RemoveChildObj(class ABP_PsychicObjectBasic_C* Child_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RemoveChildObj");

	Params::BP_PsychicObjectComponent_C_RemoveChildObj Parms{};

	Parms.Child_obj_in = Child_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetChildObjList
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetChildObjList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetChildObjList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyChild
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetDestroyChild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestroyChild");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       Mesh_collision_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Simulate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Gravity_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjSimulatePhysics(ECollisionEnabled Mesh_collision_in, bool Simulate_in, bool Gravity_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjSimulatePhysics");

	Params::BP_PsychicObjectComponent_C_SetPsyObjSimulatePhysics Parms{};

	Parms.Mesh_collision_in = Mesh_collision_in;
	Parms.Simulate_in = Simulate_in;
	Parms.Gravity_in = Gravity_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandleTarget(const struct FVector& Pos_in, bool Set_rot_in, const struct FRotator& Rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleTarget");

	Params::BP_PsychicObjectComponent_C_SetHandleTarget Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Set_rot_in = Set_rot_in;
	Parms.Rot_in = std::move(Rot_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDisplayState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDisplayState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayAttackSphere
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDisplayAttackSphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDisplayAttackSphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayChild
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDisplayChild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDisplayChild");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDisplayAttackCollision
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDisplayAttackCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDisplayAttackCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcAttackSide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CalcAttackSide(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CalcAttackSide");

	Params::BP_PsychicObjectComponent_C_CalcAttackSide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetWeightGaugePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Gauge_pos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetWeightGaugePos(struct FVector* Gauge_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetWeightGaugePos");

	Params::BP_PsychicObjectComponent_C_GetWeightGaugePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Gauge_pos != nullptr)
		*Gauge_pos = std::move(Parms.Gauge_pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitDamageMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Damage_comp_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitDamageMesh(class UMeshComponent* Damage_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitDamageMesh");

	Params::BP_PsychicObjectComponent_C_InitDamageMesh Parms{};

	Parms.Damage_comp_in = Damage_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDamageMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetDamageMesh(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDamageMesh");

	Params::BP_PsychicObjectComponent_C_SetDamageMesh Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetEffectAttack(bool Flag_in, E_SASKind Sas_kind_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectAttack");

	Params::BP_PsychicObjectComponent_C_SetEffectAttack Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAura
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Instance_on_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectAura(bool Flag_in, bool Instance_on_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectAura");

	Params::BP_PsychicObjectComponent_C_SetEffectAura Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Instance_on_in = Instance_on_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitWreckageMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Wreckage_mesh_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitWreckageMesh(class UMeshComponent* Wreckage_mesh_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitWreckageMesh");

	Params::BP_PsychicObjectComponent_C_InitWreckageMesh Parms{};

	Parms.Wreckage_mesh_in = Wreckage_mesh_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECollisionEnabled                       Mesh_collision_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Simulate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Gravity_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetMeshSimulatePhysics(class UMeshComponent* Mesh_in, ECollisionEnabled Mesh_collision_in, bool Simulate_in, bool Gravity_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMeshSimulatePhysics");

	Params::BP_PsychicObjectComponent_C_SetMeshSimulatePhysics Parms{};

	Parms.Mesh_in = Mesh_in;
	Parms.Mesh_collision_in = Mesh_collision_in;
	Parms.Simulate_in = Simulate_in;
	Parms.Gravity_in = Gravity_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectCaptureWreckageOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectCaptureWreckageOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectCaptureWreckageOld");

	Params::BP_PsychicObjectComponent_C_SetEffectCaptureWreckageOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCaptureChild
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddCaptureChild(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddCaptureChild");

	Params::BP_PsychicObjectComponent_C_AddCaptureChild Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveCaptureChild
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::RemoveCaptureChild(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RemoveCaptureChild");

	Params::BP_PsychicObjectComponent_C_RemoveCaptureChild Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyReaction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetEnemyReaction(int32 Attack_type_in, class AActor* Target_actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyReaction");

	Params::BP_PsychicObjectComponent_C_SetEnemyReaction Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Target_actor_in = Target_actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Attack_collision                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetAttackCollision(class UPrimitiveComponent** Attack_collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetAttackCollision");

	Params::BP_PsychicObjectComponent_C_GetAttackCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_collision != nullptr)
		*Attack_collision = Parms.Attack_collision;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetWeightGaugeEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Unq_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Check_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetWeightGaugeEnable(bool Flag_in, bool Unq_obj_in, bool Check_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetWeightGaugeEnable");

	Params::BP_PsychicObjectComponent_C_SetWeightGaugeEnable Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Unq_obj_in = Unq_obj_in;
	Parms.Check_in = Check_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitPsychicBullet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitPsychicBullet(class ABP_PsychicObjectBasic_C* Parent_obj_in, int32 Index_in, int32 Num_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitPsychicBullet");

	Params::BP_PsychicObjectComponent_C_InitPsychicBullet Parms{};

	Parms.Parent_obj_in = Parent_obj_in;
	Parms.Index_in = Index_in;
	Parms.Num_in = Num_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicBulletParent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicBulletParent(class ABP_PsychicObjectBasic_C* Parent_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicBulletParent");

	Params::BP_PsychicObjectComponent_C_SetPsychicBulletParent Parms{};

	Parms.Parent_obj_in = Parent_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CreateHandle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CreateHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CreateHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DeleteHandle
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DeleteHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DeleteHandle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckChildDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delay_time_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::CheckChildDestroy(float Delay_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckChildDestroy");

	Params::BP_PsychicObjectComponent_C_CheckChildDestroy Parms{};

	Parms.Delay_time_in = Delay_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Keep_effect_attack_in                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjVisibility(bool Flag_in, bool Keep_effect_attack_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjVisibility");

	Params::BP_PsychicObjectComponent_C_SetPsyObjVisibility Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Keep_effect_attack_in = Keep_effect_attack_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureChild
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetCaptureChild(class ARsBattleHero_C* Capture_owner_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureChild");

	Params::BP_PsychicObjectComponent_C_SetCaptureChild Parms{};

	Parms.Capture_owner_in = Capture_owner_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSpline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetAttackSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetChildObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Child_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetChildObj(class ABP_PsychicObjectBasic_C* Child_obj_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetChildObj");

	Params::BP_PsychicObjectComponent_C_SetChildObj Parms{};

	Parms.Child_obj_in = Child_obj_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicBulletIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Num_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicBulletIndex(int32 Num_in, int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicBulletIndex");

	Params::BP_PsychicObjectComponent_C_SetPsychicBulletIndex Parms{};

	Parms.Num_in = Num_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcCircleArrangment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Sector_num_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_min_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_max_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Valid_angle_rate_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height_min_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height_max_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::CalcCircleArrangment(int32 Sector_num_in, int32 Index_in, float Radius_min_in, float Radius_max_in, float Valid_angle_rate_in, float Height_min_in, float Height_max_in, float* Radius, float* Angle, float* Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CalcCircleArrangment");

	Params::BP_PsychicObjectComponent_C_CalcCircleArrangment Parms{};

	Parms.Sector_num_in = Sector_num_in;
	Parms.Index_in = Index_in;
	Parms.Radius_min_in = Radius_min_in;
	Parms.Radius_max_in = Radius_max_in;
	Parms.Valid_angle_rate_in = Valid_angle_rate_in;
	Parms.Height_min_in = Height_min_in;
	Parms.Height_max_in = Height_max_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;

	if (Angle != nullptr)
		*Angle = Parms.Angle;

	if (Height != nullptr)
		*Height = Parms.Height;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectTick
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectTick(bool Flag_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectTick");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectTick Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshCompHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Prim_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_PsychicObjectComponent_C::SetMeshCompHit(class UPrimitiveComponent* Prim_comp_in, const struct FVector& Normal_in, const struct FHitResult& Hit_result_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMeshCompHit");

	Params::BP_PsychicObjectComponent_C_SetMeshCompHit Parms{};

	Parms.Prim_comp_in = Prim_comp_in;
	Parms.Normal_in = std::move(Normal_in);
	Parms.Hit_result_in = std::move(Hit_result_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAsyncCommon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Ref_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAsyncCommon(class FName Ref_name_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAsyncCommon");

	Params::BP_PsychicObjectComponent_C_SetAsyncCommon Parms{};

	Parms.Ref_name_in = Ref_name_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPsychicObjectCommonParameter    Common_param_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetCommonParameter(const struct FPsychicObjectCommonParameter& Common_param_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCommonParameter");

	Params::BP_PsychicObjectComponent_C_SetCommonParameter Parms{};

	Parms.Common_param_in = std::move(Common_param_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetMaterialParameter
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetMaterialParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetMaterialParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInstanceValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetInstanceValue(int32 Index_in, float Value_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetInstanceValue");

	Params::BP_PsychicObjectComponent_C_SetInstanceValue Parms{};

	Parms.Index_in = Index_in;
	Parms.Value_in = Value_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetInstanceValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetInstanceValue(int32 Index_in, bool* Return, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetInstanceValue");

	Params::BP_PsychicObjectComponent_C_GetInstanceValue Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDataRevision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Revision_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetDataRevision(int32 Revision_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDataRevision");

	Params::BP_PsychicObjectComponent_C_SetDataRevision Parms{};

	Parms.Revision_in = Revision_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetDataRevision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Revision                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetDataRevision(int32* Revision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetDataRevision");

	Params::BP_PsychicObjectComponent_C_GetDataRevision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Revision != nullptr)
		*Revision = Parms.Revision;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IncrementDataRevision
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::IncrementDataRevision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IncrementDataRevision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.Check Unique Object
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_UniqueObjectComponentBase_C*  Unq_obj_comp_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::Check_Unique_Object(class UBP_UniqueObjectComponentBase_C* Unq_obj_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "Check Unique Object");

	Params::BP_PsychicObjectComponent_C_Check_Unique_Object Parms{};

	Parms.Unq_obj_comp_in = Unq_obj_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ChkPsyObjMan
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::ChkPsyObjMan(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ChkPsyObjMan");

	Params::BP_PsychicObjectComponent_C_ChkPsyObjMan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SearchEnemyAround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Search_num_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Height_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   Search_list                                            (Parm, OutParm, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SearchEnemyAround(class AActor* Target_actor_in, int32 Search_num_in, float Radius_in, float Height_in, TArray<class AActor*>* Search_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SearchEnemyAround");

	Params::BP_PsychicObjectComponent_C_SearchEnemyAround Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Search_num_in = Search_num_in;
	Parms.Radius_in = Radius_in;
	Parms.Height_in = Height_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Search_list != nullptr)
		*Search_list = std::move(Parms.Search_list);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetTargetAttackPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Safety_height_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Player_front_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Camera_front_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetTargetAttackPoint(float Safety_height_in, const struct FVector& Player_front_in, const struct FVector& Camera_front_in, struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetTargetAttackPoint");

	Params::BP_PsychicObjectComponent_C_GetTargetAttackPoint Parms{};

	Parms.Safety_height_in = Safety_height_in;
	Parms.Player_front_in = std::move(Player_front_in);
	Parms.Camera_front_in = std::move(Camera_front_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearPsychicBulletList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroy_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::ClearPsychicBulletList(bool Destroy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ClearPsychicBulletList");

	Params::BP_PsychicObjectComponent_C_ClearPsychicBulletList Parms{};

	Parms.Destroy_in = Destroy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddPsychicBulletList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         bullet_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddPsychicBulletList(class ABP_PsychicObjectBasic_C* bullet_obj_in, int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddPsychicBulletList");

	Params::BP_PsychicObjectComponent_C_AddPsychicBulletList Parms{};

	Parms.bullet_obj_in = bullet_obj_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPsychicBulletList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ABP_PsychicObjectBasic_C*> bullet_obj                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetPsychicBulletList(TArray<class ABP_PsychicObjectBasic_C*>* bullet_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetPsychicBulletList");

	Params::BP_PsychicObjectComponent_C_GetPsychicBulletList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bullet_obj != nullptr)
		*bullet_obj = std::move(Parms.bullet_obj);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSasKind
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSasKind(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSasKind");

	Params::BP_PsychicObjectComponent_C_SetSasKind Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetPsyObjCompTick
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetPsyObjCompTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetPsyObjCompTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSeHit(bool Hit_enemy_in, bool Hit_background_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSeHit");

	Params::BP_PsychicObjectComponent_C_SetSeHit Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeLiftUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetSeLiftUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSeLiftUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSeAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Throw_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetSeAttack(bool Throw_in, int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSeAttack");

	Params::BP_PsychicObjectComponent_C_SetSeAttack Parms{};

	Parms.Throw_in = Throw_in;
	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugPrintString
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Str_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Obj_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Draw_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    On_player_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Screen_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::DebugPrintString(bool Flag_in, const class FString& Str_in, bool Obj_name_in, bool Draw_in, bool On_player_in, bool Screen_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugPrintString");

	Params::BP_PsychicObjectComponent_C_DebugPrintString Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Str_in = std::move(Str_in);
	Parms.Obj_name_in = Obj_name_in;
	Parms.Draw_in = Draw_in;
	Parms.On_player_in = On_player_in;
	Parms.Screen_in = Screen_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugPrintError
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Func_str_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Msg_str_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Screen_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::DebugPrintError(const class FString& Func_str_in, const class FString& Msg_str_in, bool Screen_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugPrintError");

	Params::BP_PsychicObjectComponent_C_DebugPrintError Parms{};

	Parms.Func_str_in = std::move(Func_str_in);
	Parms.Msg_str_in = std::move(Msg_str_in);
	Parms.Screen_in = Screen_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckFocusable
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CheckFocusable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckFocusable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitPartsObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitPartsObj(class ABP_PsychicObjectBasic_C* Parent_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitPartsObj");

	Params::BP_PsychicObjectComponent_C_InitPartsObj Parms{};

	Parms.Parent_obj_in = Parent_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPartsObj1
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetPartsObj1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPartsObj1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPartsObj2
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetPartsObj2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPartsObj2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPartsObj3
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetPartsObj3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPartsObj3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearPartsObjList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroy_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::ClearPartsObjList(bool Destroy_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ClearPartsObjList");

	Params::BP_PsychicObjectComponent_C_ClearPartsObjList Parms{};

	Parms.Destroy_in = Destroy_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddPartsObjList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parts_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddPartsObjList(class ABP_PsychicObjectBasic_C* Parts_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddPartsObjList");

	Params::BP_PsychicObjectComponent_C_AddPartsObjList Parms{};

	Parms.Parts_obj_in = Parts_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetPartsObjList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_PsychicObjectBasic_C*         Parts_obj                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetPartsObjList(int32 Index_in, class ABP_PsychicObjectBasic_C** Parts_obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetPartsObjList");

	Params::BP_PsychicObjectComponent_C_GetPartsObjList Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Parts_obj != nullptr)
		*Parts_obj = Parms.Parts_obj;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawAsyncCommon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDrawAsyncCommon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDrawAsyncCommon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitResult                     Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FHitResult                       Hit_result_bg_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_PsychicObjectComponent_C::SetEffectHit(bool Hit_enemy_in, bool Hit_background_in, const struct FHCHitResult& Hit_result_in, const struct FHitResult& Hit_result_bg_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectHit");

	Params::BP_PsychicObjectComponent_C_SetEffectHit Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Hit_result_in = std::move(Hit_result_in);
	Parms.Hit_result_bg_in = std::move(Hit_result_bg_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCheckDestroy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCheckDestroy(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCheckDestroy");

	Params::BP_PsychicObjectComponent_C_SetCheckDestroy Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCheckDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCheckDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCheckDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetDestroyEffectMeshList
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetDestroyEffectMeshList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetDestroyEffectMeshList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddDestroyEffectMeshList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddDestroyEffectMeshList(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddDestroyEffectMeshList");

	Params::BP_PsychicObjectComponent_C_AddDestroyEffectMeshList Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetParameterEffectFade
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetParameterEffectFade(float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetParameterEffectFade");

	Params::BP_PsychicObjectComponent_C_SetParameterEffectFade Parms{};

	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHitDestroy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetHitDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHitDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHitBarrier
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetHitBarrier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHitBarrier");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitBrainFieldObjOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InitBrainFieldObjOld(int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitBrainFieldObjOld");

	Params::BP_PsychicObjectComponent_C_InitBrainFieldObjOld Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldGrab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ARsBattleHero_C*                  Hero_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Max_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBrainFieldGrab(bool Flag_in, class ARsBattleHero_C* Hero_in, int32 Max_in, int32 Index_in, const struct FVector& Offset_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldGrab");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldGrab Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Hero_in = Hero_in;
	Parms.Max_in = Max_in;
	Parms.Index_in = Index_in;
	Parms.Offset_pos_in = std::move(Offset_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAppearOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAppearOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAppearOld");

	Params::BP_PsychicObjectComponent_C_SetAppearOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset_random_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetBrainFieldPos(bool Reset_random_in, struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetBrainFieldPos");

	Params::BP_PsychicObjectComponent_C_GetBrainFieldPos Parms{};

	Parms.Reset_random_in = Reset_random_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshPosRot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetMeshPosRot(const struct FVector& Pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMeshPosRot");

	Params::BP_PsychicObjectComponent_C_SetMeshPosRot Parms{};

	Parms.Pos_in = std::move(Pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldAttackType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBrainFieldAttackType(EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Level_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldAttackType");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldAttackType Parms{};

	Parms.Attack_type_in = Attack_type_in;
	Parms.Level_in = Level_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonSpline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveFloat*                      Dist_curve_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time_rate_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetCommonSpline(bool Flag_in, class UCurveFloat* Dist_curve_in, float Time_rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCommonSpline");

	Params::BP_PsychicObjectComponent_C_SetCommonSpline Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Dist_curve_in = Dist_curve_in;
	Parms.Time_rate_in = Time_rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PreAsyncSpline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PreAsyncSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PreAsyncSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAsyncSpline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAsyncSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAsyncSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.PostAsyncSpline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::PostAsyncSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "PostAsyncSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCommonSpline
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCommonSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCommonSpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetSplinePoint
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetSplinePoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetSplinePoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplinePoint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Update_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSplinePoint(const struct FVector& Pos_in, bool Update_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSplinePoint");

	Params::BP_PsychicObjectComponent_C_SetSplinePoint Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Update_in = Update_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackDrop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Drop_arrow_rot_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Drop_time_rate_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAttackDrop(bool Flag_in, bool Drop_arrow_rot_in, float Drop_time_rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackDrop");

	Params::BP_PsychicObjectComponent_C_SetAttackDrop Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Drop_arrow_rot_in = Drop_arrow_rot_in;
	Parms.Drop_time_rate_in = Drop_time_rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcAttackDropSpline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CalcAttackDropSpline(bool Force_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CalcAttackDropSpline");

	Params::BP_PsychicObjectComponent_C_CalcAttackDropSpline Parms{};

	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSwing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackSwing(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackSwing");

	Params::BP_PsychicObjectComponent_C_SetAttackSwing Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCommonAttract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCommonAttract(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCommonAttract");

	Params::BP_PsychicObjectComponent_C_SetCommonAttract Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCommonAttract
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCommonAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCommonAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimNotifyReturn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAnimNotifyReturn(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAnimNotifyReturn");

	Params::BP_PsychicObjectComponent_C_SetAnimNotifyReturn Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ExecAttackDrop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Drop_level_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attack_collision_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::ExecAttackDrop(int32 Drop_level_in, bool Attack_collision_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ExecAttackDrop");

	Params::BP_PsychicObjectComponent_C_ExecAttackDrop Parms{};

	Parms.Drop_level_in = Drop_level_in;
	Parms.Attack_collision_in = Attack_collision_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyTopWeakPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weak_pos                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEnemyTopWeakPoint(struct FVector* Weak_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEnemyTopWeakPoint");

	Params::BP_PsychicObjectComponent_C_GetEnemyTopWeakPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weak_pos != nullptr)
		*Weak_pos = std::move(Parms.Weak_pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBackupAttackParamOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBackupAttackParamOld(bool Flag_in, EPsychicObjectBrainFieldAttackType Attack_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBackupAttackParamOld");

	Params::BP_PsychicObjectComponent_C_SetBackupAttackParamOld Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Attack_type_in = Attack_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCheckChildObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Child_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Coll_profile_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Focus_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::AddCheckChildObj(class ABP_PsychicObjectBasic_C* Child_obj_in, bool Coll_profile_in, bool Focus_in, bool Capture_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddCheckChildObj");

	Params::BP_PsychicObjectComponent_C_AddCheckChildObj Parms{};

	Parms.Child_obj_in = Child_obj_in;
	Parms.Coll_profile_in = Coll_profile_in;
	Parms.Focus_in = Focus_in;
	Parms.Capture_in = Capture_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionProfileIgnore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Skip_check_obj_type_in                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjCollisionProfileIgnore(bool Flag_in, bool Skip_check_obj_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjCollisionProfileIgnore");

	Params::BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileIgnore Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Skip_check_obj_type_in = Skip_check_obj_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraLookAtPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetCameraLookAtPos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetCameraLookAtPos");

	Params::BP_PsychicObjectComponent_C_GetCameraLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjLocationRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotation_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Mesh_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Center_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Swing_center_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjLocationRotation(bool Location_in, const struct FVector& Pos_in, bool Rotation_in, const struct FRotator& Rot_in, bool Mesh_in, class UMeshComponent* Mesh_comp_in, bool Center_in, bool Swing_center_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjLocationRotation");

	Params::BP_PsychicObjectComponent_C_SetPsyObjLocationRotation Parms{};

	Parms.Location_in = Location_in;
	Parms.Pos_in = std::move(Pos_in);
	Parms.Rotation_in = Rotation_in;
	Parms.Rot_in = std::move(Rot_in);
	Parms.Mesh_in = Mesh_in;
	Parms.Mesh_comp_in = Mesh_comp_in;
	Parms.Center_in = Center_in;
	Parms.Swing_center_in = Swing_center_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallUniqueAttackSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueMontageIndex        Montage_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CallUniqueAttackSuccess(EPsychicObjectUniqueMontageIndex Montage_index_in, bool Left_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CallUniqueAttackSuccess");

	Params::BP_PsychicObjectComponent_C_CallUniqueAttackSuccess Parms{};

	Parms.Montage_index_in = Montage_index_in;
	Parms.Left_in = Left_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionProfileNoColl
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Skip_check_obj_type_in                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjCollisionProfileNoColl(bool Flag_in, bool Skip_check_obj_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjCollisionProfileNoColl");

	Params::BP_PsychicObjectComponent_C_SetPsyObjCollisionProfileNoColl Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Skip_check_obj_type_in = Skip_check_obj_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetPsyObjCollisionProfile
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetPsyObjCollisionProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetPsyObjCollisionProfile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckAttackType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectBrainFieldAttackType      Attack_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Level_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::CheckAttackType(bool Direct_drop_in, EPsychicObjectBrainFieldAttackType Attack_type_in, int32 Level_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckAttackType");

	Params::BP_PsychicObjectComponent_C_CheckAttackType Parms{};

	Parms.Direct_drop_in = Direct_drop_in;
	Parms.Attack_type_in = Attack_type_in;
	Parms.Level_in = Level_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSkipAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSkipAttack(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSkipAttack");

	Params::BP_PsychicObjectComponent_C_SetSkipAttack Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnpcObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetEnpcObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnpcObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPhasePullOut
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPhasePullOut(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPhasePullOut");

	Params::BP_PsychicObjectComponent_C_SetPhasePullOut Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePullOut
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdatePullOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdatePullOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectUniqueType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueType                Unique_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicObjectUniqueType(EPsychicObjectUniqueType Unique_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectUniqueType");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectUniqueType Parms{};

	Parms.Unique_type_in = Unique_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckPsychicObjectUniqueType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPsychicObjectUniqueType                Unique_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CheckPsychicObjectUniqueType(EPsychicObjectUniqueType Unique_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckPsychicObjectUniqueType");

	Params::BP_PsychicObjectComponent_C_CheckPsychicObjectUniqueType Parms{};

	Parms.Unique_type_in = Unique_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureVibrate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Handle_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCaptureVibrate(bool Flag_in, bool Handle_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureVibrate");

	Params::BP_PsychicObjectComponent_C_SetCaptureVibrate Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Handle_in = Handle_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureVibrateAngle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Vt_speed_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Hz_speed_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle_range_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetCaptureVibrateAngle(float Vt_speed_in, float Hz_speed_in, float Angle_range_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureVibrateAngle");

	Params::BP_PsychicObjectComponent_C_SetCaptureVibrateAngle Parms{};

	Parms.Vt_speed_in = Vt_speed_in;
	Parms.Hz_speed_in = Hz_speed_in;
	Parms.Angle_range_in = Angle_range_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPullOut
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Capture_to_pull_out_in                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveVector*                     Pos_curve_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      Angle_curve_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Handle_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveVector*                     Rot_curve_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Check_wall_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPullOut(bool Capture_to_pull_out_in, class UCurveVector* Pos_curve_in, class UCurveFloat* Angle_curve_in, bool Handle_in, class UCurveVector* Rot_curve_in, bool Check_wall_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPullOut");

	Params::BP_PsychicObjectComponent_C_SetPullOut Parms{};

	Parms.Capture_to_pull_out_in = Capture_to_pull_out_in;
	Parms.Pos_curve_in = Pos_curve_in;
	Parms.Angle_curve_in = Angle_curve_in;
	Parms.Handle_in = Handle_in;
	Parms.Rot_curve_in = Rot_curve_in;
	Parms.Check_wall_in = Check_wall_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePullOutCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::UpdatePullOutCurve(bool* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdatePullOutCurve");

	Params::BP_PsychicObjectComponent_C_UpdatePullOutCurve Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (End != nullptr)
		*End = Parms.End;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetUniqueObjectPlayerMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectUniqueMontageIndex        Montage_index_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Left_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetUniqueObjectPlayerMontage(EPsychicObjectUniqueMontageIndex Montage_index_in, bool Left_in, class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetUniqueObjectPlayerMontage");

	Params::BP_PsychicObjectComponent_C_GetUniqueObjectPlayerMontage Parms{};

	Parms.Montage_index_in = Montage_index_in;
	Parms.Left_in = Left_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplinePointEx
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Tangent_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ESplinePointType                        Type_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Update_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSplinePointEx(const struct FVector& Pos_in, const struct FVector& Tangent_in, const struct FRotator& Rot_in, ESplinePointType Type_in, bool Update_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSplinePointEx");

	Params::BP_PsychicObjectComponent_C_SetSplinePointEx Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Tangent_in = std::move(Tangent_in);
	Parms.Rot_in = std::move(Rot_in);
	Parms.Type_in = Type_in;
	Parms.Update_in = Update_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDrawSpline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::DebugDrawSpline(float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDrawSpline");

	Params::BP_PsychicObjectComponent_C_DebugDrawSpline Parms{};

	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplineAboveEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Dst_pos_offest_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      Dist_curve_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Dst_angle_offset_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Actor_location_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetSplineAboveEnemy(bool Flag_in, const struct FVector& Dst_pos_offest_in, class UCurveFloat* Dist_curve_in, float Dst_angle_offset_in, bool Actor_location_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSplineAboveEnemy");

	Params::BP_PsychicObjectComponent_C_SetSplineAboveEnemy Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Dst_pos_offest_in = std::move(Dst_pos_offest_in);
	Parms.Dist_curve_in = Dist_curve_in;
	Parms.Dst_angle_offset_in = Dst_angle_offset_in;
	Parms.Actor_location_in = Actor_location_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CalcSplineAboveEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CalcSplineAboveEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CalcSplineAboveEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackCollisionNew
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectBrainFieldAttackType      brain_field_attack_type_in                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_capsule_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackCollisionNew(bool Flag_in, EPsychicObjectBrainFieldAttackType brain_field_attack_type_in, float Radius_in, bool Use_capsule_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackCollisionNew");

	Params::BP_PsychicObjectComponent_C_SetAttackCollisionNew Parms{};

	Parms.Flag_in = Flag_in;
	Parms.brain_field_attack_type_in = brain_field_attack_type_in;
	Parms.Radius_in = Radius_in;
	Parms.Use_capsule_in = Use_capsule_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyAttackParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCCollisionCommonInfo           Common_info_in                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FHCSkillCommonInfo               Skill_info_in                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PsychicObjectComponent_C::SetEnemyAttackParameter(bool Flag_in, const struct FHCCollisionCommonInfo& Common_info_in, const struct FHCSkillCommonInfo& Skill_info_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyAttackParameter");

	Params::BP_PsychicObjectComponent_C_SetEnemyAttackParameter Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Common_info_in = std::move(Common_info_in);
	Parms.Skill_info_in = std::move(Skill_info_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleFix
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetHandleFix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleFix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandleSimulatePhysics(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleSimulatePhysics");

	Params::BP_PsychicObjectComponent_C_SetHandleSimulatePhysics Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandlePosRot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandlePosRot(const struct FVector& Pos_in, const struct FRotator& Rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandlePosRot");

	Params::BP_PsychicObjectComponent_C_SetHandlePosRot Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Rot_in = std::move(Rot_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetSplineFollowTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetSplineFollowTarget(bool Flag_in, const struct FVector& Pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetSplineFollowTarget");

	Params::BP_PsychicObjectComponent_C_SetSplineFollowTarget Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Pos_in = std::move(Pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitializeCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitializeCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitializeCopyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCopyPsychicObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsCopyPsychicObject(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsCopyPsychicObject");

	Params::BP_PsychicObjectComponent_C_IsCopyPsychicObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetupCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Parent_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Direct_drop_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Combo_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Combo_level_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Copy_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetupCopyPsychicObject(class ABP_PsychicObjectBasic_C* Parent_obj_in, const struct FVector& Pos_in, bool Direct_drop_in, bool Combo_in, int32 Combo_level_in, int32 Copy_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetupCopyPsychicObject");

	Params::BP_PsychicObjectComponent_C_SetupCopyPsychicObject Parms{};

	Parms.Parent_obj_in = Parent_obj_in;
	Parms.Pos_in = std::move(Pos_in);
	Parms.Direct_drop_in = Direct_drop_in;
	Parms.Combo_in = Combo_in;
	Parms.Combo_level_in = Combo_level_in;
	Parms.Copy_index_in = Copy_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCopyAppear
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCopyAppear(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCopyAppear");

	Params::BP_PsychicObjectComponent_C_SetCopyAppear Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCopyAppear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCopyAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCopyAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AttackCopyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::AttackCopyPsychicObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AttackCopyPsychicObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCameraShakeData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CameraShakeType                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CameraShakeScale                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetCameraShakeData(class UClass** CameraShakeType, float* CameraShakeScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetCameraShakeData");

	Params::BP_PsychicObjectComponent_C_GetCameraShakeData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraShakeType != nullptr)
		*CameraShakeType = Parms.CameraShakeType;

	if (CameraShakeScale != nullptr)
		*CameraShakeScale = Parms.CameraShakeScale;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetMeshVisibility(class UMeshComponent* Mesh_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMeshVisibility");

	Params::BP_PsychicObjectComponent_C_SetMeshVisibility Parms{};

	Parms.Mesh_in = Mesh_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetParameterCopy
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetParameterCopy(float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetParameterCopy");

	Params::BP_PsychicObjectComponent_C_SetParameterCopy Parms{};

	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleFixAngular
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetHandleFixAngular()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleFixAngular");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackParameterIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_index                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetAttackParameterIndex(int32* Attack_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetAttackParameterIndex");

	Params::BP_PsychicObjectComponent_C_GetAttackParameterIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Attack_index != nullptr)
		*Attack_index = Parms.Attack_index;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrabLock
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandleGrabLock(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleGrabLock");

	Params::BP_PsychicObjectComponent_C_SetHandleGrabLock Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCopyAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCopyAttackThrow(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCopyAttackThrow");

	Params::BP_PsychicObjectComponent_C_SetCopyAttackThrow Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCopyAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCopyAttackThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCopyAttackThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetDeltaSecond
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Delta_second                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetDeltaSecond(float* Delta_second)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetDeltaSecond");

	Params::BP_PsychicObjectComponent_C_GetDeltaSecond Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Delta_second != nullptr)
		*Delta_second = Parms.Delta_second;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimationAsset*                  Animation_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Play_rate_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicObjectAnimation(class UAnimationAsset* Animation_in, bool Loop_in, float Play_rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectAnimation");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectAnimation Parms{};

	Parms.Animation_in = Animation_in;
	Parms.Loop_in = Loop_in;
	Parms.Play_rate_in = Play_rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.EndPhaseAttract
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::EndPhaseAttract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "EndPhaseAttract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InterceptReserve
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InterceptReserve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InterceptReserve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InterceptAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Interceprter_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             New_target_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::InterceptAttack(class ARSBattleCharacter_C* Interceprter_in, class ARSBattleCharacter_C* New_target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InterceptAttack");

	Params::BP_PsychicObjectComponent_C_InterceptAttack Parms{};

	Parms.Interceprter_in = Interceprter_in;
	Parms.New_target_in = New_target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InterceptCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InterceptCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InterceptCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddFocusMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddFocusMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddFocusMesh");

	Params::BP_PsychicObjectComponent_C_AddFocusMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveFocusMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::RemoveFocusMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RemoveFocusMesh");

	Params::BP_PsychicObjectComponent_C_RemoveFocusMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddCaptureMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddCaptureMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddCaptureMesh");

	Params::BP_PsychicObjectComponent_C_AddCaptureMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveCaptureMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::RemoveCaptureMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RemoveCaptureMesh");

	Params::BP_PsychicObjectComponent_C_RemoveCaptureMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMeshComp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMesh*                      Mesh_comp                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetMeshComp(class UStaticMesh** Mesh_comp, struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetMeshComp");

	Params::BP_PsychicObjectComponent_C_GetMeshComp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh_comp != nullptr)
		*Mesh_comp = Parms.Mesh_comp;

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyCapsuleRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEnemyCapsuleRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEnemyCapsuleRadius");

	Params::BP_PsychicObjectComponent_C_GetEnemyCapsuleRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestructibleSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetDestructibleSetting(class UClass* Class_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestructibleSetting");

	Params::BP_PsychicObjectComponent_C_SetDestructibleSetting Parms{};

	Parms.Class_in = Class_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SpawnDestructibleActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse_dir_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Impulse_value_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SpawnDestructibleActor(const struct FVector& Impulse_dir_in, float Impulse_value_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SpawnDestructibleActor");

	Params::BP_PsychicObjectComponent_C_SpawnDestructibleActor Parms{};

	Parms.Impulse_dir_in = std::move(Impulse_dir_in);
	Parms.Impulse_value_in = Impulse_value_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DestroyDestructibleActor
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DestroyDestructibleActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DestroyDestructibleActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHitDestructible
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetHitDestructible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHitDestructible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RestoreSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::RestoreSimulatePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RestoreSimulatePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPullOutOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Use_end_pos_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          End_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Use_end_rot_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         End_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPullOutOption(bool Use_end_pos_in, const struct FVector& End_pos_in, bool Use_end_rot_in, const struct FRotator& End_rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPullOutOption");

	Params::BP_PsychicObjectComponent_C_SetPullOutOption Parms{};

	Parms.Use_end_pos_in = Use_end_pos_in;
	Parms.End_pos_in = std::move(End_pos_in);
	Parms.Use_end_rot_in = Use_end_rot_in;
	Parms.End_rot_in = std::move(End_rot_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEffectAppear
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reverse_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEffectAppear(bool Flag_in, bool Reverse_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEffectAppear");

	Params::BP_PsychicObjectComponent_C_SetEffectAppear Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Reverse_in = Reverse_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEffectAppear
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateEffectAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateEffectAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldObjPosRot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBrainFieldObjPosRot(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldObjPosRot");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldObjPosRot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckBrainFieldAttackCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CheckBrainFieldAttackCollision(bool* Return_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckBrainFieldAttackCollision");

	Params::BP_PsychicObjectComponent_C_CheckBrainFieldAttackCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_ != nullptr)
		*Return_ = Parms.Return_;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldAttackCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetBrainFieldAttackCollision(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldAttackCollision");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldAttackCollision Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallAttackDirectDrop
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CallAttackDirectDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CallAttackDirectDrop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCheckTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCheckTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCheckTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBoundsOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetBoundsOffset(struct FVector* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetBoundsOffset");

	Params::BP_PsychicObjectComponent_C_GetBoundsOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetCaptureTimeDilation(bool Flag_in, bool Success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureTimeDilation");

	Params::BP_PsychicObjectComponent_C_SetCaptureTimeDilation Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Success_in = Success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateCaptureTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateCaptureTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateCaptureTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationApply
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Updated                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetTimeDilationApply(bool Flag_in, bool* Updated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetTimeDilationApply");

	Params::BP_PsychicObjectComponent_C_SetTimeDilationApply Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Updated != nullptr)
		*Updated = Parms.Updated;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationPull
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Target_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Interpolate_speed_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetTimeDilationPull(bool Flag_in, const struct FVector& Target_pos_in, bool Set_rot_in, const struct FRotator& Rot_in, float Interpolate_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetTimeDilationPull");

	Params::BP_PsychicObjectComponent_C_SetTimeDilationPull Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Target_pos_in = std::move(Target_pos_in);
	Parms.Set_rot_in = Set_rot_in;
	Parms.Rot_in = std::move(Rot_in);
	Parms.Interpolate_speed_in = Interpolate_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateTimeDilationPull
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateTimeDilationPull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateTimeDilationPull");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleGrabNew
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Pull_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Set_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Interpolate_speed_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetHandleGrabNew(bool Flag_in, bool Pull_in, bool Set_pos_in, const struct FVector& Pos_in, bool Set_rot_in, const struct FRotator& Rot_in, float Interpolate_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleGrabNew");

	Params::BP_PsychicObjectComponent_C_SetHandleGrabNew Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Pull_in = Pull_in;
	Parms.Set_pos_in = Set_pos_in;
	Parms.Pos_in = std::move(Pos_in);
	Parms.Set_rot_in = Set_rot_in;
	Parms.Rot_in = std::move(Rot_in);
	Parms.Interpolate_speed_in = Interpolate_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetHandleTargetNew
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetHandleTargetNew(const struct FVector& Pos_in, bool Set_rot_in, const struct FRotator& Rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetHandleTargetNew");

	Params::BP_PsychicObjectComponent_C_SetHandleTargetNew Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Set_rot_in = Set_rot_in;
	Parms.Rot_in = std::move(Rot_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTimeDilationAttack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetTimeDilationAttack(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetTimeDilationAttack");

	Params::BP_PsychicObjectComponent_C_SetTimeDilationAttack Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UParticleSystem*                  Emitter_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URSParticleSystemComponentBase*   Effect_component_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attach_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  Attach_comp_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Attach_socket_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       Transform_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class URSParticleSystemComponentBase*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class URSParticleSystemComponentBase* UBP_PsychicObjectComponent_C::SetPsychicObjectEffect(bool Flag_in, class UParticleSystem* Emitter_in, class URSParticleSystemComponentBase* Effect_component_in, bool Attach_in, class USceneComponent* Attach_comp_in, class FName Attach_socket_in, bool Location_in, const struct FTransform& Transform_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectEffect");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectEffect Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Emitter_in = Emitter_in;
	Parms.Effect_component_in = Effect_component_in;
	Parms.Attach_in = Attach_in;
	Parms.Attach_comp_in = Attach_comp_in;
	Parms.Attach_socket_in = Attach_socket_in;
	Parms.Location_in = Location_in;
	Parms.Transform_in = std::move(Transform_in);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdatePsychicObjectEffect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdatePsychicObjectEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdatePsychicObjectEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearPsychicObjectEffect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ClearPsychicObjectEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ClearPsychicObjectEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsAcceleratorValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsAcceleratorValid(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsAcceleratorValid");

	Params::BP_PsychicObjectComponent_C_IsAcceleratorValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBackUpSimulatePhysics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ECollisionEnabled                       Mesh_collision_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Simulate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Gravity_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetBackUpSimulatePhysics(bool Flag_in, ECollisionEnabled Mesh_collision_in, bool Simulate_in, bool Gravity_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBackUpSimulatePhysics");

	Params::BP_PsychicObjectComponent_C_SetBackUpSimulatePhysics Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Mesh_collision_in = Mesh_collision_in;
	Parms.Simulate_in = Simulate_in;
	Parms.Gravity_in = Gravity_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitMaterialCaptureStartParam
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitMaterialCaptureStartParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitMaterialCaptureStartParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.LoadMaterialCaptureStartCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSPsychicCaptureMaterial         SPsychicCaptureMaterial                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UCurveVector*                     AsCurve_Vector                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::LoadMaterialCaptureStartCurve(const struct FSPsychicCaptureMaterial& SPsychicCaptureMaterial, class UCurveVector** AsCurve_Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "LoadMaterialCaptureStartCurve");

	Params::BP_PsychicObjectComponent_C_LoadMaterialCaptureStartCurve Parms{};

	Parms.SPsychicCaptureMaterial = std::move(SPsychicCaptureMaterial);

	UObject::ProcessEvent(Func, &Parms);

	if (AsCurve_Vector != nullptr)
		*AsCurve_Vector = Parms.AsCurve_Vector;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMaterialCaptureStartParam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSPsychicCaptureMaterial         Material_param                                         (Parm, OutParm, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetMaterialCaptureStartParam(E_SASKind Sas_kind_in, struct FSPsychicCaptureMaterial* Material_param)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetMaterialCaptureStartParam");

	Params::BP_PsychicObjectComponent_C_GetMaterialCaptureStartParam Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Material_param != nullptr)
		*Material_param = std::move(Parms.Material_param);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMaterialCaptureStartCurve
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveVector*                     Material_curve                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetMaterialCaptureStartCurve(E_SASKind Sas_kind_in, class UCurveVector** Material_curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetMaterialCaptureStartCurve");

	Params::BP_PsychicObjectComponent_C_GetMaterialCaptureStartCurve Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Material_curve != nullptr)
		*Material_curve = Parms.Material_curve;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMaterialCaptureStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetMaterialCaptureStart(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMaterialCaptureStart");

	Params::BP_PsychicObjectComponent_C_SetMaterialCaptureStart Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateMaterialCaptureStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateMaterialCaptureStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateMaterialCaptureStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ClearMaterialCaptureStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ClearMaterialCaptureStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ClearMaterialCaptureStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMIParameterAura
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetMIParameterAura(float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMIParameterAura");

	Params::BP_PsychicObjectComponent_C_SetMIParameterAura Parms{};

	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackSkillInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCSkillCommonInfo               Skill_info_in                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FHCSkillCommonInfo               Skill_info                                             (Parm, OutParm)

void UBP_PsychicObjectComponent_C::SetAttackSkillInfo(const struct FHCSkillCommonInfo& Skill_info_in, struct FHCSkillCommonInfo* Skill_info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackSkillInfo");

	Params::BP_PsychicObjectComponent_C_SetAttackSkillInfo Parms{};

	Parms.Skill_info_in = std::move(Skill_info_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Skill_info != nullptr)
		*Skill_info = std::move(Parms.Skill_info);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddExtraType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EHCSkillExtraType>               Extra_type_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// EHCSkillExtraType                       Add_type_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddExtraType(TArray<EHCSkillExtraType>& Extra_type_in, EHCSkillExtraType Add_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddExtraType");

	Params::BP_PsychicObjectComponent_C_AddExtraType Parms{};

	Parms.Extra_type_in = std::move(Extra_type_in);
	Parms.Add_type_in = Add_type_in;

	UObject::ProcessEvent(Func, &Parms);

	Extra_type_in = std::move(Parms.Extra_type_in);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class URSAtomComponentBase*             Atom_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundAtomCue*                    Sound_atom_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Attach                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USceneComponent*                  Attach_comp_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Attach_socket_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class URSAtomComponentBase*             Rs_atom_comp                                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicObjectSound(bool Flag_in, class URSAtomComponentBase* Atom_comp_in, class USoundAtomCue* Sound_atom_in, bool Attach, class USceneComponent* Attach_comp_in, class FName Attach_socket_in, bool Location, const struct FVector& Location_in, class URSAtomComponentBase** Rs_atom_comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectSound");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectSound Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Atom_comp_in = Atom_comp_in;
	Parms.Sound_atom_in = Sound_atom_in;
	Parms.Attach = Attach;
	Parms.Attach_comp_in = Attach_comp_in;
	Parms.Attach_socket_in = Attach_socket_in;
	Parms.Location = Location;
	Parms.Location_in = std::move(Location_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Rs_atom_comp != nullptr)
		*Rs_atom_comp = Parms.Rs_atom_comp;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetMaterialCaptureStartInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetMaterialCaptureStartInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetMaterialCaptureStartInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetCaptureOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARsBattleHero_C*                  Capture_owner_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetCaptureOwner(class ARsBattleHero_C* Capture_owner_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetCaptureOwner");

	Params::BP_PsychicObjectComponent_C_SetCaptureOwner Parms{};

	Parms.Capture_owner_in = Capture_owner_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Attach_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARsBattleHero_C*                  Hero_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APsychicAnimObject_C*             Anim_owner                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAnimOwner(bool Flag_in, bool Attach_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, class ARsBattleHero_C* Hero_in, class APsychicAnimObject_C** Anim_owner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAnimOwner");

	Params::BP_PsychicObjectComponent_C_SetAnimOwner Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Attach_in = Attach_in;
	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Hero_in = Hero_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Anim_owner != nullptr)
		*Anim_owner = Parms.Anim_owner;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetMeshBoundCentrePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetMeshBoundCentrePos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetMeshBoundCentrePos");

	Params::BP_PsychicObjectComponent_C_GetMeshBoundCentrePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldDropLookAtPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetBrainFieldDropLookAtPos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetBrainFieldDropLookAtPos");

	Params::BP_PsychicObjectComponent_C_GetBrainFieldDropLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      brain_field_attack_type_in                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVector>                  Swing_pos_list_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBrainFieldSetting(EPsychicObjectBrainFieldAttackType brain_field_attack_type_in, int32 Attack_index_in, TArray<struct FVector>& Swing_pos_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldSetting");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldSetting Parms{};

	Parms.brain_field_attack_type_in = brain_field_attack_type_in;
	Parms.Attack_index_in = Attack_index_in;
	Parms.Swing_pos_list_in = std::move(Swing_pos_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Swing_pos_list_in = std::move(Parms.Swing_pos_list_in);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDirectSwingCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetDirectSwingCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDirectSwingCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicFieldSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Obj_num_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsychicFieldSetting(int32 Attack_index_in, int32 Obj_num_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicFieldSetting");

	Params::BP_PsychicObjectComponent_C_SetPsychicFieldSetting Parms{};

	Parms.Attack_index_in = Attack_index_in;
	Parms.Obj_num_in = Obj_num_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddExtendExtraType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCSkillExtraType                       Extra_type_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddExtendExtraType(EHCSkillExtraType Extra_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddExtendExtraType");

	Params::BP_PsychicObjectComponent_C_AddExtendExtraType Parms{};

	Parms.Extra_type_in = Extra_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetNoRespawn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetNoRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetNoRespawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyComp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetDestroyComp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestroyComp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsParent(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsParent");

	Params::BP_PsychicObjectComponent_C_IsParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyEffectSas
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetEnemyEffectSas(E_SASKind Sas_kind_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyEffectSas");

	Params::BP_PsychicObjectComponent_C_SetEnemyEffectSas Parms{};

	Parms.Sas_kind_in = Sas_kind_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitEnemyPsychicObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Enemy_owner_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_SASKind                               Sas_kind_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Drop_type_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Random_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::InitEnemyPsychicObject(class ARSBattleCharacter_C* Enemy_owner_in, E_SASKind Sas_kind_in, bool Drop_type_in, bool Random_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitEnemyPsychicObject");

	Params::BP_PsychicObjectComponent_C_InitEnemyPsychicObject Parms{};

	Parms.Enemy_owner_in = Enemy_owner_in;
	Parms.Sas_kind_in = Sas_kind_in;
	Parms.Drop_type_in = Drop_type_in;
	Parms.Random_obj_in = Random_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPsychicObjectActive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Obj_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetEnemyPsychicObjectActive(bool Active_in, const struct FVector& Obj_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyPsychicObjectActive");

	Params::BP_PsychicObjectComponent_C_SetEnemyPsychicObjectActive Parms{};

	Parms.Active_in = Active_in;
	Parms.Obj_pos_in = std::move(Obj_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitPsychicFieldSpawn
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitPsychicFieldSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitPsychicFieldSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyWeakPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Weak_pos                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEnemyWeakPoint(struct FVector* Weak_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEnemyWeakPoint");

	Params::BP_PsychicObjectComponent_C_GetEnemyWeakPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weak_pos != nullptr)
		*Weak_pos = std::move(Parms.Weak_pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttackEffectInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCHitEffectInfo                 Effect_info_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttackEffectInfo(const struct FHCHitEffectInfo& Effect_info_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttackEffectInfo");

	Params::BP_PsychicObjectComponent_C_SetAttackEffectInfo Parms{};

	Parms.Effect_info_in = std::move(Effect_info_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAnimationBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPsychicObjectBrainFieldAttackType      brain_field_attack_type_in                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimSequence*                    Anim_sequence                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetAnimationBrainField(EPsychicObjectBrainFieldAttackType brain_field_attack_type_in, bool* Return, class UAnimSequence** Anim_sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetAnimationBrainField");

	Params::BP_PsychicObjectComponent_C_GetAnimationBrainField Parms{};

	Parms.brain_field_attack_type_in = brain_field_attack_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Anim_sequence != nullptr)
		*Anim_sequence = Parms.Anim_sequence;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetBrainFieldAttachOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Attack_index_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset_pos                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetBrainFieldAttachOffset(int32 Attack_index_in, struct FVector* Offset_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetBrainFieldAttachOffset");

	Params::BP_PsychicObjectComponent_C_GetBrainFieldAttachOffset Parms{};

	Parms.Attack_index_in = Attack_index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset_pos != nullptr)
		*Offset_pos = std::move(Parms.Offset_pos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetBrainFieldSwingLerp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Lerp_time_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Update_time_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetBrainFieldSwingLerp(bool Flag_in, float Lerp_time_in, float Update_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetBrainFieldSwingLerp");

	Params::BP_PsychicObjectComponent_C_SetBrainFieldSwingLerp Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Lerp_time_in = Lerp_time_in;
	Parms.Update_time_in = Update_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetJustDodge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Owner_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Target_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetJustDodge(class ARSBattleCharacter_C* Owner_in, class ARSBattleCharacter_C* Target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetJustDodge");

	Params::BP_PsychicObjectComponent_C_SetJustDodge Parms{};

	Parms.Owner_in = Owner_in;
	Parms.Target_in = Target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetIntercept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattleCharacter_C*             Owner_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Target_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetIntercept(class ARSBattleCharacter_C* Owner_in, class ARSBattleCharacter_C* Target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetIntercept");

	Params::BP_PsychicObjectComponent_C_SetIntercept Parms{};

	Parms.Owner_in = Owner_in;
	Parms.Target_in = Target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInterceptEnemy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Enemy_obj_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Owner_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARSBattleCharacter_C*             Target_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetInterceptEnemy(bool Flag_in, class AActor* Enemy_obj_in, class ARSBattleCharacter_C* Owner_in, class ARSBattleCharacter_C* Target_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetInterceptEnemy");

	Params::BP_PsychicObjectComponent_C_SetInterceptEnemy Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Enemy_obj_in = Enemy_obj_in;
	Parms.Owner_in = Owner_in;
	Parms.Target_in = Target_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitInterceptObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitInterceptObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitInterceptObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetInterceptObjectActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetInterceptObjectActive(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetInterceptObjectActive");

	Params::BP_PsychicObjectComponent_C_SetInterceptObjectActive Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CallEnemyIntercpetableThrow
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::CallEnemyIntercpetableThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CallEnemyIntercpetableThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetCaptureOwnerHalfHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Half_height                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetCaptureOwnerHalfHeight(float* Half_height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetCaptureOwnerHalfHeight");

	Params::BP_PsychicObjectComponent_C_GetCaptureOwnerHalfHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Half_height != nullptr)
		*Half_height = Parms.Half_height;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyExplosion
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetDestroyExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestroyExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestroyExplosionProc
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetDestroyExplosionProc(bool Flag_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestroyExplosionProc");

	Params::BP_PsychicObjectComponent_C_SetDestroyExplosionProc Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateDestroyExplosionProc
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateDestroyExplosionProc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateDestroyExplosionProc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimationScaleLerp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Letp_time_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Dst_scale_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAnimationScaleLerp(float Letp_time_in, const struct FVector& Dst_scale_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAnimationScaleLerp");

	Params::BP_PsychicObjectComponent_C_SetAnimationScaleLerp Parms{};

	Parms.Letp_time_in = Letp_time_in;
	Parms.Dst_scale_in = std::move(Dst_scale_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAnimationScaleLerp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAnimationScaleLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAnimationScaleLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.ResetAnimationScaleLerp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::ResetAnimationScaleLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "ResetAnimationScaleLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAnimationScaleIntercept
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Letp_time_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetAnimationScaleIntercept(float Letp_time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAnimationScaleIntercept");

	Params::BP_PsychicObjectComponent_C_SetAnimationScaleIntercept Parms{};

	Parms.Letp_time_in = Letp_time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCaptureOwnerMale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Male                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsCaptureOwnerMale(bool* Return, bool* Male)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsCaptureOwnerMale");

	Params::BP_PsychicObjectComponent_C_IsCaptureOwnerMale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Male != nullptr)
		*Male = Parms.Male;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFellOutOfWorld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDamageType*                      Dmg_type_in                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetFellOutOfWorld(const class UDamageType* Dmg_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetFellOutOfWorld");

	Params::BP_PsychicObjectComponent_C_SetFellOutOfWorld Parms{};

	Parms.Dmg_type_in = Dmg_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.CheckStillInWorld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   KillZ_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::CheckStillInWorld(float KillZ_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "CheckStillInWorld");

	Params::BP_PsychicObjectComponent_C_CheckStillInWorld Parms{};

	Parms.KillZ_in = KillZ_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetThrowHoming
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetThrowHoming(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetThrowHoming");

	Params::BP_PsychicObjectComponent_C_SetThrowHoming Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAttractDecel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAttractDecel(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAttractDecel");

	Params::BP_PsychicObjectComponent_C_SetAttractDecel Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractDecel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttractDecel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttractDecel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.AddAuraMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::AddAuraMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "AddAuraMesh");

	Params::BP_PsychicObjectComponent_C_AddAuraMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.RemoveAuraMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::RemoveAuraMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "RemoveAuraMesh");

	Params::BP_PsychicObjectComponent_C_RemoveAuraMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjDestroy
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetPsyObjDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyAttackThrowTargetPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TargetPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEnemyAttackThrowTargetPoint(struct FVector* TargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEnemyAttackThrowTargetPoint");

	Params::BP_PsychicObjectComponent_C_GetEnemyAttackThrowTargetPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetPos != nullptr)
		*TargetPos = std::move(Parms.TargetPos);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetFloatObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetFloatObject(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetFloatObject");

	Params::BP_PsychicObjectComponent_C_SetFloatObject Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPsychicObjectThrow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetEnemyPsychicObjectThrow(class AActor* Target_actor_in, float Throw_speed_in, float Homing_speed_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyPsychicObjectThrow");

	Params::BP_PsychicObjectComponent_C_SetEnemyPsychicObjectThrow Parms{};

	Parms.Target_actor_in = Target_actor_in;
	Parms.Throw_speed_in = Throw_speed_in;
	Parms.Homing_speed_in = Homing_speed_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetAchievementThrowObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetAchievementThrowObject(bool Force_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetAchievementThrowObject");

	Params::BP_PsychicObjectComponent_C_SetAchievementThrowObject Parms{};

	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateAttractBrainField
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateAttractBrainField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateAttractBrainField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetAttackDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetAttackDirection(bool* Return, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetAttackDirection");

	Params::BP_PsychicObjectComponent_C_GetAttackDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetRespawnRestrictRadius
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Radius                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetRespawnRestrictRadius(float* Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetRespawnRestrictRadius");

	Params::BP_PsychicObjectComponent_C_GetRespawnRestrictRadius Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Radius != nullptr)
		*Radius = Parms.Radius;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsCompTickEnable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsCompTickEnable(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsCompTickEnable");

	Params::BP_PsychicObjectComponent_C_IsCompTickEnable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateEnemyInterceptRot
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateEnemyInterceptRot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateEnemyInterceptRot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.DebugDraw
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::DebugDraw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "DebugDraw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.InitSimulateDefault
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::InitSimulateDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "InitSimulateDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetKeepSimulate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetKeepSimulate(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetKeepSimulate");

	Params::BP_PsychicObjectComponent_C_SetKeepSimulate Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.UpdateKeepSimulate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::UpdateKeepSimulate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "UpdateKeepSimulate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSimulateControl
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsychicObjectSimulateControl(bool Flag_in, bool Capture_success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectSimulateControl");

	Params::BP_PsychicObjectComponent_C_SetPsychicObjectSimulateControl Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_success_in = Capture_success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsychicObjectSimulateControlAwake
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PsychicObjectComponent_C::SetPsychicObjectSimulateControlAwake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsychicObjectSimulateControlAwake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEnemyPhysicsCollisionActive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEnemyPhysicsCollisionActive(bool FlagIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEnemyPhysicsCollisionActive");

	Params::BP_PsychicObjectComponent_C_SetEnemyPhysicsCollisionActive Parms{};

	Parms.FlagIn = FlagIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.EnemyPhysicsCollisionOnHitComponentFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_PsychicObjectComponent_C::EnemyPhysicsCollisionOnHitComponentFunc(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "EnemyPhysicsCollisionOnHitComponentFunc");

	Params::BP_PsychicObjectComponent_C_EnemyPhysicsCollisionOnHitComponentFunc Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEventSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Event_start_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEventSetting(bool Event_start_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEventSetting");

	Params::BP_PsychicObjectComponent_C_SetEventSetting Parms{};

	Parms.Event_start_in = Event_start_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetEventBackupPhysic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetEventBackupPhysic(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetEventBackupPhysic");

	Params::BP_PsychicObjectComponent_C_SetEventBackupPhysic Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetDestructibleVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetDestructibleVisibility(bool FlagIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetDestructibleVisibility");

	Params::BP_PsychicObjectComponent_C_SetDestructibleVisibility Parms{};

	Parms.FlagIn = FlagIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjCollisionEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       Mesh_collision_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::SetPsyObjCollisionEnable(ECollisionEnabled Mesh_collision_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjCollisionEnable");

	Params::BP_PsychicObjectComponent_C_SetPsyObjCollisionEnable Parms{};

	Parms.Mesh_collision_in = Mesh_collision_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetPsyObjDistanceDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetPsyObjDistanceDestroy(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetPsyObjDistanceDestroy");

	Params::BP_PsychicObjectComponent_C_SetPsyObjDistanceDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.IsInterceptFail
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bFail                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::IsInterceptFail(bool* bFail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "IsInterceptFail");

	Params::BP_PsychicObjectComponent_C_IsInterceptFail Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bFail != nullptr)
		*bFail = Parms.bFail;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.SetTenpCollisionProfile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PsychicObjectComponent_C::SetTenpCollisionProfile(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "SetTenpCollisionProfile");

	Params::BP_PsychicObjectComponent_C_SetTenpCollisionProfile Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetInterceptThrowParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Throw_speed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetInterceptThrowParameter(float* Throw_speed, float* Homing_speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetInterceptThrowParameter");

	Params::BP_PsychicObjectComponent_C_GetInterceptThrowParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Throw_speed != nullptr)
		*Throw_speed = Parms.Throw_speed;

	if (Homing_speed != nullptr)
		*Homing_speed = Parms.Homing_speed;
}


// Function BP_PsychicObjectComponent.BP_PsychicObjectComponent_C.GetEnemyThrowParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    brain_field_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Throw_speed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PsychicObjectComponent_C::GetEnemyThrowParameter(bool brain_field_in, float* Throw_speed, float* Homing_speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PsychicObjectComponent_C", "GetEnemyThrowParameter");

	Params::BP_PsychicObjectComponent_C_GetEnemyThrowParameter Parms{};

	Parms.brain_field_in = brain_field_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Throw_speed != nullptr)
		*Throw_speed = Parms.Throw_speed;

	if (Homing_speed != nullptr)
		*Homing_speed = Parms.Homing_speed;
}

}

