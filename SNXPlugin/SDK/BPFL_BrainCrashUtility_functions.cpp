#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_BrainCrashUtility

#include "Basic.hpp"

#include "BPFL_BrainCrashUtility_classes.hpp"
#include "BPFL_BrainCrashUtility_parameters.hpp"


namespace SDK
{

// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.GetSafePointEnemyIndexFromName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EnemyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_BrainCrashUtility_C::GetSafePointEnemyIndexFromName(class FName Param_Name, class UObject* __WorldContext, int32* EnemyIndex, bool* Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "GetSafePointEnemyIndexFromName");

	Params::BPFL_BrainCrashUtility_C_GetSafePointEnemyIndexFromName Parms{};

	Parms.Param_Name = Param_Name;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EnemyIndex != nullptr)
		*EnemyIndex = Parms.EnemyIndex;

	if (Valid != nullptr)
		*Valid = Parms.Valid;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.GetSafePointRotationAngle
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::GetSafePointRotationAngle(class UObject* __WorldContext, int32* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "GetSafePointRotationAngle");

	Params::BPFL_BrainCrashUtility_C_GetSafePointRotationAngle Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.GetSafePointRotationAngleNum
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::GetSafePointRotationAngleNum(class UObject* __WorldContext, int32* Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "GetSafePointRotationAngleNum");

	Params::BPFL_BrainCrashUtility_C_GetSafePointRotationAngleNum Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Num != nullptr)
		*Num = Parms.Num;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.GetSafePointSettingsFromEmName
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EmName                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FBrainCrashSequenceSettings      Settings                                               (Parm, OutParm)
// bool                                    Find                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_BrainCrashUtility_C::GetSafePointSettingsFromEmName(class FName EmName, class UObject* __WorldContext, struct FBrainCrashSequenceSettings* Settings, bool* Find)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "GetSafePointSettingsFromEmName");

	Params::BPFL_BrainCrashUtility_C_GetSafePointSettingsFromEmName Parms{};

	Parms.EmName = EmName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Settings != nullptr)
		*Settings = std::move(Parms.Settings);

	if (Find != nullptr)
		*Find = Parms.Find;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.SearchSafePoint
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBrainCrashSafePoint>     SafePoints                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             EnemyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_SplineMesh_C*>         BattleFieldActors                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class ATriggerBox*>              EventTriggerActors                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SafePointTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform                       SequencerRootTransform                                 (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::SearchSafePoint(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggerActors, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "SearchSafePoint");

	Params::BPFL_BrainCrashUtility_C_SearchSafePoint Parms{};

	Parms.SafePoints = std::move(SafePoints);
	Parms.EnemyName = EnemyName;
	Parms.Location = std::move(Location);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.BattleFieldActors = std::move(BattleFieldActors);
	Parms.EventTriggerActors = std::move(EventTriggerActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SafePoints = std::move(Parms.SafePoints);
	BattleFieldActors = std::move(Parms.BattleFieldActors);
	EventTriggerActors = std::move(Parms.EventTriggerActors);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (SafePointTransform != nullptr)
		*SafePointTransform = std::move(Parms.SafePointTransform);

	if (SequencerRootTransform != nullptr)
		*SequencerRootTransform = std::move(Parms.SequencerRootTransform);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.LoadSafePointLocationAsset
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocationId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AreaId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBrainCrashLocationSettings*      LocationSetting                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           AssetPath                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::LoadSafePointLocationAsset(int32 LocationId, int32 AreaId, class UObject* __WorldContext, class UBrainCrashLocationSettings** LocationSetting, class FString* AssetPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "LoadSafePointLocationAsset");

	Params::BPFL_BrainCrashUtility_C_LoadSafePointLocationAsset Parms{};

	Parms.LocationId = LocationId;
	Parms.AreaId = AreaId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (LocationSetting != nullptr)
		*LocationSetting = Parms.LocationSetting;

	if (AssetPath != nullptr)
		*AssetPath = std::move(Parms.AssetPath);
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.SearchSafePointFromLocationSettings
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBrainCrashLocationSettings*      BCLocationSettings                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EnemyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_SplineMesh_C*>         BattleFieldActors                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class ATriggerBox*>              EventTriggers                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SafePointTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform                       SequencerRootTransform                                 (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::SearchSafePointFromLocationSettings(class UBrainCrashLocationSettings* BCLocationSettings, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggers, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "SearchSafePointFromLocationSettings");

	Params::BPFL_BrainCrashUtility_C_SearchSafePointFromLocationSettings Parms{};

	Parms.BCLocationSettings = BCLocationSettings;
	Parms.EnemyName = EnemyName;
	Parms.Location = std::move(Location);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.BattleFieldActors = std::move(BattleFieldActors);
	Parms.EventTriggers = std::move(EventTriggers);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	BattleFieldActors = std::move(Parms.BattleFieldActors);
	EventTriggers = std::move(Parms.EventTriggers);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (SafePointTransform != nullptr)
		*SafePointTransform = std::move(Parms.SafePointTransform);

	if (SequencerRootTransform != nullptr)
		*SequencerRootTransform = std::move(Parms.SequencerRootTransform);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.PrivateSearchSafePointNormalizeRotation
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawDir                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NormalizedDir                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::PrivateSearchSafePointNormalizeRotation(const struct FVector& Start, const struct FVector& Target, class UObject* __WorldContext, float* RawDir, float* NormalizedDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "PrivateSearchSafePointNormalizeRotation");

	Params::BPFL_BrainCrashUtility_C_PrivateSearchSafePointNormalizeRotation Parms{};

	Parms.Start = std::move(Start);
	Parms.Target = std::move(Target);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RawDir != nullptr)
		*RawDir = Parms.RawDir;

	if (NormalizedDir != nullptr)
		*NormalizedDir = Parms.NormalizedDir;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.PrivateSearchSafePointGetLength
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FBrainCrashSafePoint             SafePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SequencerCenterLocation                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RotateYaw                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::PrivateSearchSafePointGetLength(const struct FBrainCrashSafePoint& SafePoint, const struct FVector& Location, const struct FVector& SequencerCenterLocation, float RotateYaw, class UObject* __WorldContext, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "PrivateSearchSafePointGetLength");

	Params::BPFL_BrainCrashUtility_C_PrivateSearchSafePointGetLength Parms{};

	Parms.SafePoint = std::move(SafePoint);
	Parms.Location = std::move(Location);
	Parms.SequencerCenterLocation = std::move(SequencerCenterLocation);
	Parms.RotateYaw = RotateYaw;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.PrivateSearchSafePointBattleField
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBrainCrashSafePoint             SafePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FBrainCrashSequenceSettings      SequencerSettings                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_SplineMesh_C*>         BattleFieldActors                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Usable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_BrainCrashUtility_C::PrivateSearchSafePointBattleField(struct FBrainCrashSafePoint& SafePoint, struct FBrainCrashSequenceSettings& SequencerSettings, const struct FVector& Location, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, class UObject* __WorldContext, bool* Usable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "PrivateSearchSafePointBattleField");

	Params::BPFL_BrainCrashUtility_C_PrivateSearchSafePointBattleField Parms{};

	Parms.SafePoint = std::move(SafePoint);
	Parms.SequencerSettings = std::move(SequencerSettings);
	Parms.Location = std::move(Location);
	Parms.BattleFieldActors = std::move(BattleFieldActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SafePoint = std::move(Parms.SafePoint);
	SequencerSettings = std::move(Parms.SequencerSettings);
	BattleFieldActors = std::move(Parms.BattleFieldActors);

	if (Usable != nullptr)
		*Usable = Parms.Usable;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.PrivateSearchSafePointEventTrigger
// (Static, Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBrainCrashSequenceSettings      SequenceSetting                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTransform                       SafePointTransform                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVector                          PlayerLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ATriggerBox*>              TriggerActors                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Usable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_BrainCrashUtility_C::PrivateSearchSafePointEventTrigger(struct FBrainCrashSequenceSettings& SequenceSetting, const struct FTransform& SafePointTransform, const struct FVector& PlayerLocation, TArray<class ATriggerBox*>& TriggerActors, class UObject* __WorldContext, bool* Usable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "PrivateSearchSafePointEventTrigger");

	Params::BPFL_BrainCrashUtility_C_PrivateSearchSafePointEventTrigger Parms{};

	Parms.SequenceSetting = std::move(SequenceSetting);
	Parms.SafePointTransform = std::move(SafePointTransform);
	Parms.PlayerLocation = std::move(PlayerLocation);
	Parms.TriggerActors = std::move(TriggerActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SequenceSetting = std::move(Parms.SequenceSetting);
	TriggerActors = std::move(Parms.TriggerActors);

	if (Usable != nullptr)
		*Usable = Parms.Usable;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.SearchSafePointCheckBFET
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBrainCrashSafePoint>     SafePoints                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             EnemyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SafePointTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform                       SequencerRootTransform                                 (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::SearchSafePointCheckBFET(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "SearchSafePointCheckBFET");

	Params::BPFL_BrainCrashUtility_C_SearchSafePointCheckBFET Parms{};

	Parms.SafePoints = std::move(SafePoints);
	Parms.EnemyName = EnemyName;
	Parms.Location = std::move(Location);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SafePoints = std::move(Parms.SafePoints);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (SafePointTransform != nullptr)
		*SafePointTransform = std::move(Parms.SafePointTransform);

	if (SequencerRootTransform != nullptr)
		*SequencerRootTransform = std::move(Parms.SequencerRootTransform);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.SearchSafePointCheckBFETFromLocationSettings
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBrainCrashLocationSettings*      BCLocationSettings                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EnemyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SafePointTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform                       SequencerRootTransform                                 (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::SearchSafePointCheckBFETFromLocationSettings(class UBrainCrashLocationSettings* BCLocationSettings, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "SearchSafePointCheckBFETFromLocationSettings");

	Params::BPFL_BrainCrashUtility_C_SearchSafePointCheckBFETFromLocationSettings Parms{};

	Parms.BCLocationSettings = BCLocationSettings;
	Parms.EnemyName = EnemyName;
	Parms.Location = std::move(Location);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (SafePointTransform != nullptr)
		*SafePointTransform = std::move(Parms.SafePointTransform);

	if (SequencerRootTransform != nullptr)
		*SequencerRootTransform = std::move(Parms.SequencerRootTransform);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.PrivateSearchSafePointHeight
// (Static, Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBrainCrashSafePoint             SafePoint                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          PlayerLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Usable                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_BrainCrashUtility_C::PrivateSearchSafePointHeight(struct FBrainCrashSafePoint& SafePoint, const struct FVector& PlayerLocation, class UObject* __WorldContext, bool* Usable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "PrivateSearchSafePointHeight");

	Params::BPFL_BrainCrashUtility_C_PrivateSearchSafePointHeight Parms{};

	Parms.SafePoint = std::move(SafePoint);
	Parms.PlayerLocation = std::move(PlayerLocation);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SafePoint = std::move(Parms.SafePoint);

	if (Usable != nullptr)
		*Usable = Parms.Usable;
}


// Function BPFL_BrainCrashUtility.BPFL_BrainCrashUtility_C.SearchSafePointOld
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBrainCrashSafePoint>     SafePoints                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FName                             EnemyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_SplineMesh_C*>         BattleFieldActors                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class ATriggerBox*>              EventTriggerActors                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SafePointTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FTransform                       SequencerRootTransform                                 (Parm, OutParm, IsPlainOldData, NoDestructor)
// float                                   Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_BrainCrashUtility_C::SearchSafePointOld(TArray<struct FBrainCrashSafePoint>& SafePoints, class FName EnemyName, const struct FVector& Location, const struct FVector& TargetLocation, TArray<class ABP_SplineMesh_C*>& BattleFieldActors, TArray<class ATriggerBox*>& EventTriggerActors, class UObject* __WorldContext, bool* Hit, struct FTransform* SafePointTransform, struct FTransform* SequencerRootTransform, float* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_BrainCrashUtility_C", "SearchSafePointOld");

	Params::BPFL_BrainCrashUtility_C_SearchSafePointOld Parms{};

	Parms.SafePoints = std::move(SafePoints);
	Parms.EnemyName = EnemyName;
	Parms.Location = std::move(Location);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.BattleFieldActors = std::move(BattleFieldActors);
	Parms.EventTriggerActors = std::move(EventTriggerActors);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SafePoints = std::move(Parms.SafePoints);
	BattleFieldActors = std::move(Parms.BattleFieldActors);
	EventTriggerActors = std::move(Parms.EventTriggerActors);

	if (Hit != nullptr)
		*Hit = Parms.Hit;

	if (SafePointTransform != nullptr)
		*SafePointTransform = std::move(Parms.SafePointTransform);

	if (SequencerRootTransform != nullptr)
		*SequencerRootTransform = std::move(Parms.SequencerRootTransform);

	if (Length != nullptr)
		*Length = Parms.Length;
}

}

