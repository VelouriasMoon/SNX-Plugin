#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BSPManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BSPManager.BP_BSPManager_C.ExecuteUbergraph_BP_BSPManager
// 0x0228 (0x0228 - 0x0000)
struct BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABSPBlockVolume*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AA7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVolume_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA9[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_OverlappedActor_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABSPBlockVolume*                        K2Node_DynamicCast_AsBSPBlock_Volume;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AAB[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0040)(HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OverlappedActor;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABSPBlockVolume*                        K2Node_DynamicCast_AsBSPBlock_Volume_1;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AAC[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0110(0x0018)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B0(0x0018)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AAD[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AAE[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x020C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager) == 0x000008, "Wrong alignment on BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager");
static_assert(sizeof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager) == 0x000228, "Wrong size on BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, EntryPoint) == 0x000000, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_IsValid_ReturnValue_1) == 0x00004C, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_IsInVolume_ReturnValue) == 0x00004D, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_IsInVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CustomEvent_OverlappedActor_1) == 0x000058, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CustomEvent_OverlappedActor_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CustomEvent_OtherActor_1) == 0x000060, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_DynamicCast_AsBSPBlock_Volume) == 0x000068, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_DynamicCast_AsBSPBlock_Volume' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetDisplayName_ReturnValue) == 0x000078, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CustomEvent_OverlappedActor) == 0x0000E0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CustomEvent_OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CustomEvent_OtherActor) == 0x0000E8, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_MakeArray_Array) == 0x0000F0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_DynamicCast_AsBSPBlock_Volume_1) == 0x000100, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_DynamicCast_AsBSPBlock_Volume_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_DynamicCast_bSuccess_1) == 0x000108, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Format_ReturnValue) == 0x000110, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetDisplayName_ReturnValue_1) == 0x000128, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Conv_TextToString_ReturnValue) == 0x000138, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000148, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x000160, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_MakeArray_Array_1) == 0x0001A0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Format_ReturnValue_1) == 0x0001B0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001C8, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001D0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0001E0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x0001E8, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_IsValid_ReturnValue_2) == 0x0001F0, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_IsValid_ReturnValue_3) == 0x0001F1, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001F2, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001F3, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, Temp_int_Loop_Counter_Variable) == 0x0001F4, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001F8, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Less_IntInt_ReturnValue) == 0x0001FC, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000204, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000208, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x00020C, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Add_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_BSPManager_C_ExecuteUbergraph_BP_BSPManager::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.OnBlockBeginOverlap_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_BSPManager_C_OnBlockBeginOverlap_Event_0 final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_OnBlockBeginOverlap_Event_0) == 0x000008, "Wrong alignment on BP_BSPManager_C_OnBlockBeginOverlap_Event_0");
static_assert(sizeof(BP_BSPManager_C_OnBlockBeginOverlap_Event_0) == 0x000010, "Wrong size on BP_BSPManager_C_OnBlockBeginOverlap_Event_0");
static_assert(offsetof(BP_BSPManager_C_OnBlockBeginOverlap_Event_0, OverlappedActor) == 0x000000, "Member 'BP_BSPManager_C_OnBlockBeginOverlap_Event_0::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_OnBlockBeginOverlap_Event_0, OtherActor) == 0x000008, "Member 'BP_BSPManager_C_OnBlockBeginOverlap_Event_0::OtherActor' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.OnBlockEndOverlap_Event_0
// 0x0010 (0x0010 - 0x0000)
struct BP_BSPManager_C_OnBlockEndOverlap_Event_0 final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_OnBlockEndOverlap_Event_0) == 0x000008, "Wrong alignment on BP_BSPManager_C_OnBlockEndOverlap_Event_0");
static_assert(sizeof(BP_BSPManager_C_OnBlockEndOverlap_Event_0) == 0x000010, "Wrong size on BP_BSPManager_C_OnBlockEndOverlap_Event_0");
static_assert(offsetof(BP_BSPManager_C_OnBlockEndOverlap_Event_0, OverlappedActor) == 0x000000, "Member 'BP_BSPManager_C_OnBlockEndOverlap_Event_0::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_OnBlockEndOverlap_Event_0, OtherActor) == 0x000008, "Member 'BP_BSPManager_C_OnBlockEndOverlap_Event_0::OtherActor' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BSPManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BSPManager_C_ReceiveTick");
static_assert(sizeof(BP_BSPManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_BSPManager_C_ReceiveTick");
static_assert(offsetof(BP_BSPManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BSPManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.AddBlockInPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_BSPManager_C_AddBlockInPlayer final
{
public:
	class ABSPBlockVolume*                        bLock;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_AddBlockInPlayer) == 0x000008, "Wrong alignment on BP_BSPManager_C_AddBlockInPlayer");
static_assert(sizeof(BP_BSPManager_C_AddBlockInPlayer) == 0x000010, "Wrong size on BP_BSPManager_C_AddBlockInPlayer");
static_assert(offsetof(BP_BSPManager_C_AddBlockInPlayer, bLock) == 0x000000, "Member 'BP_BSPManager_C_AddBlockInPlayer::bLock' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_AddBlockInPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_BSPManager_C_AddBlockInPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.RemoveBlockInPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_BSPManager_C_RemoveBlockInPlayer final
{
public:
	class ABSPBlockVolume*                        bLock;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_RemoveBlockInPlayer) == 0x000008, "Wrong alignment on BP_BSPManager_C_RemoveBlockInPlayer");
static_assert(sizeof(BP_BSPManager_C_RemoveBlockInPlayer) == 0x000010, "Wrong size on BP_BSPManager_C_RemoveBlockInPlayer");
static_assert(offsetof(BP_BSPManager_C_RemoveBlockInPlayer, bLock) == 0x000000, "Member 'BP_BSPManager_C_RemoveBlockInPlayer::bLock' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_RemoveBlockInPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_BSPManager_C_RemoveBlockInPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.UpdateBlockNearPlayer
// 0x0018 (0x0018 - 0x0000)
struct BP_BSPManager_C_UpdateBlockNearPlayer final
{
public:
	TArray<class ABP_BSPPortal_C*>                NextAddBlocks;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         MaxVolumeRate;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInAnyBlock_InBlock;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_UpdateBlockNearPlayer) == 0x000008, "Wrong alignment on BP_BSPManager_C_UpdateBlockNearPlayer");
static_assert(sizeof(BP_BSPManager_C_UpdateBlockNearPlayer) == 0x000018, "Wrong size on BP_BSPManager_C_UpdateBlockNearPlayer");
static_assert(offsetof(BP_BSPManager_C_UpdateBlockNearPlayer, NextAddBlocks) == 0x000000, "Member 'BP_BSPManager_C_UpdateBlockNearPlayer::NextAddBlocks' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBlockNearPlayer, MaxVolumeRate) == 0x000010, "Member 'BP_BSPManager_C_UpdateBlockNearPlayer::MaxVolumeRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBlockNearPlayer, CallFunc_IsPlayerInAnyBlock_InBlock) == 0x000014, "Member 'BP_BSPManager_C_UpdateBlockNearPlayer::CallFunc_IsPlayerInAnyBlock_InBlock' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.RegisterAllBlocksInArea_
// 0x0010 (0x0010 - 0x0000)
struct BP_BSPManager_C_RegisterAllBlocksInArea_ final
{
public:
	TArray<class ABSPBlockVolume*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_RegisterAllBlocksInArea_) == 0x000008, "Wrong alignment on BP_BSPManager_C_RegisterAllBlocksInArea_");
static_assert(sizeof(BP_BSPManager_C_RegisterAllBlocksInArea_) == 0x000010, "Wrong size on BP_BSPManager_C_RegisterAllBlocksInArea_");
static_assert(offsetof(BP_BSPManager_C_RegisterAllBlocksInArea_, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_BSPManager_C_RegisterAllBlocksInArea_::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.UpdateBSPAttenuation
// 0x0090 (0x0090 - 0x0000)
struct BP_BSPManager_C_UpdateBSPAttenuation final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                _PlayerLocation;                                   // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_RSAtomComponent_C*                  Atom;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AAF[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB1[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB2[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB3[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB4[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB6[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_UpdateBSPAttenuation) == 0x000008, "Wrong alignment on BP_BSPManager_C_UpdateBSPAttenuation");
static_assert(sizeof(BP_BSPManager_C_UpdateBSPAttenuation) == 0x000090, "Wrong size on BP_BSPManager_C_UpdateBSPAttenuation");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, DeltaSeconds) == 0x000000, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, _PlayerLocation) == 0x000004, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Atom) == 0x000010, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Atom' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Array_Length_ReturnValue_2) == 0x000054, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Array_Length_ReturnValue_3) == 0x000058, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Array_Index_Variable_2) == 0x000068, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_IsValid_ReturnValue_3) == 0x00006C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Loop_Counter_Variable_3) == 0x000074, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Less_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Add_IntInt_ReturnValue_2) == 0x00007C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Less_IntInt_ReturnValue_3) == 0x000080, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_Add_IntInt_ReturnValue_3) == 0x000084, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, Temp_int_Array_Index_Variable_3) == 0x000088, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_UpdateBSPAttenuation, CallFunc_IsValid_ReturnValue_4) == 0x00008C, "Member 'BP_BSPManager_C_UpdateBSPAttenuation::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.IsPlayerInAnyBlock
// 0x000C (0x000C - 0x0000)
struct BP_BSPManager_C_IsPlayerInAnyBlock final
{
public:
	bool                                          InBlock;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_IsPlayerInAnyBlock) == 0x000004, "Wrong alignment on BP_BSPManager_C_IsPlayerInAnyBlock");
static_assert(sizeof(BP_BSPManager_C_IsPlayerInAnyBlock) == 0x00000C, "Wrong size on BP_BSPManager_C_IsPlayerInAnyBlock");
static_assert(offsetof(BP_BSPManager_C_IsPlayerInAnyBlock, InBlock) == 0x000000, "Member 'BP_BSPManager_C_IsPlayerInAnyBlock::InBlock' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_IsPlayerInAnyBlock, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'BP_BSPManager_C_IsPlayerInAnyBlock::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_IsPlayerInAnyBlock, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_BSPManager_C_IsPlayerInAnyBlock::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.GetSoundAttenuationRate
// 0x0028 (0x0028 - 0x0000)
struct BP_BSPManager_C_GetSoundAttenuationRate final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRate;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABSPBlockVolume*                        bLock;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInAnyVolume;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AB8[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSoundAttenuationRate_Native_AttenuationRate; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABSPBlockVolume*                        CallFunc_GetSoundAttenuationRate_Native_Block;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_GetSoundAttenuationRate) == 0x000008, "Wrong alignment on BP_BSPManager_C_GetSoundAttenuationRate");
static_assert(sizeof(BP_BSPManager_C_GetSoundAttenuationRate) == 0x000028, "Wrong size on BP_BSPManager_C_GetSoundAttenuationRate");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, Pos) == 0x000000, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::Pos' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, AttenuationRate) == 0x00000C, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, bLock) == 0x000010, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::bLock' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, IsInAnyVolume) == 0x000018, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::IsInAnyVolume' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, CallFunc_GetSoundAttenuationRate_Native_AttenuationRate) == 0x00001C, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::CallFunc_GetSoundAttenuationRate_Native_AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate, CallFunc_GetSoundAttenuationRate_Native_Block) == 0x000020, "Member 'BP_BSPManager_C_GetSoundAttenuationRate::CallFunc_GetSoundAttenuationRate_Native_Block' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.Update
// 0x0030 (0x0030 - 0x0000)
struct BP_BSPManager_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AB9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ABA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ABB[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_Update) == 0x000008, "Wrong alignment on BP_BSPManager_C_Update");
static_assert(sizeof(BP_BSPManager_C_Update) == 0x000030, "Wrong size on BP_BSPManager_C_Update");
static_assert(offsetof(BP_BSPManager_C_Update, DeltaSeconds) == 0x000000, "Member 'BP_BSPManager_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'BP_BSPManager_C_Update::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BSPManager_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_BSPManager_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000020, "Member 'BP_BSPManager_C_Update::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BSPManager_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_Update, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_BSPManager_C_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.CalcBSPAttenuationFirstFromPlayer
// 0x0098 (0x0098 - 0x0000)
struct BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer final
{
public:
	class ABSPBlockVolume*                        FromBSPVolume;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABSPPortalBase*>                 Portals;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                BasePos;                                           // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5ABC[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABSPPortalBase*                         _Portal;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewBasePos;                                        // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PortalAttenuation;                                 // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SrcAttenuation;                                    // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttenuationByLength_AttenuationRate;  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalAttenuationRate_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ABD[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalcLengthToPortal_Length;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckAndSetUpdateID_IsFirstTime;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ABE[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5ABF[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AC0[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer) == 0x000008, "Wrong alignment on BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer");
static_assert(sizeof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer) == 0x000098, "Wrong size on BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, FromBSPVolume) == 0x000000, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::FromBSPVolume' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Portals) == 0x000008, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Portals' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, BasePos) == 0x000018, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::BasePos' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, _Portal) == 0x000028, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::_Portal' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, NewBasePos) == 0x000030, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::NewBasePos' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Distance) == 0x00003C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Distance' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, PortalAttenuation) == 0x000040, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::PortalAttenuation' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, SrcAttenuation) == 0x000044, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::SrcAttenuation' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_CalcAttenuationByLength_AttenuationRate) == 0x000058, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_CalcAttenuationByLength_AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_GetTotalAttenuationRate_ReturnValue) == 0x000060, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_GetTotalAttenuationRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_CalcLengthToPortal_Length) == 0x000068, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_CalcLengthToPortal_Length' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_CheckAndSetUpdateID_IsFirstTime) == 0x00006C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_CheckAndSetUpdateID_IsFirstTime' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000084, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000085, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00008C, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_BSPManager_C_CalcBSPAttenuationFirstFromPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.CalcAttenuationByPortal
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BSPManager_C_CalcAttenuationByPortal final
{
public:
	class ABSPPortalBase*                         PortalSrc;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABSPPortalBase*                         PortalDst;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRate;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC1[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttenuation_AttenuationRate;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_CalcAttenuationByPortal) == 0x000010, "Wrong alignment on BP_BSPManager_C_CalcAttenuationByPortal");
static_assert(sizeof(BP_BSPManager_C_CalcAttenuationByPortal) == 0x0000D0, "Wrong size on BP_BSPManager_C_CalcAttenuationByPortal");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, PortalSrc) == 0x000000, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::PortalSrc' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, PortalDst) == 0x000008, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::PortalDst' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, AttenuationRate) == 0x000010, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_GetTransform_ReturnValue_1) == 0x000050, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Rotation) == 0x00008C, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Location_1) == 0x0000A4, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Rotation_1) == 0x0000B0, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_BreakTransform_Scale_1) == 0x0000BC, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByPortal, CallFunc_CalcAttenuation_AttenuationRate) == 0x0000C8, "Member 'BP_BSPManager_C_CalcAttenuationByPortal::CallFunc_CalcAttenuation_AttenuationRate' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.CalcAttenuation
// 0x0030 (0x0030 - 0x0000)
struct BP_BSPManager_C_CalcAttenuation final
{
public:
	struct FVector                                Src;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Dst;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRate;                                   // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcAttenuationByLength_AttenuationRate;  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_CalcAttenuation) == 0x000004, "Wrong alignment on BP_BSPManager_C_CalcAttenuation");
static_assert(sizeof(BP_BSPManager_C_CalcAttenuation) == 0x000030, "Wrong size on BP_BSPManager_C_CalcAttenuation");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, Src) == 0x000000, "Member 'BP_BSPManager_C_CalcAttenuation::Src' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, Dst) == 0x00000C, "Member 'BP_BSPManager_C_CalcAttenuation::Dst' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, AttenuationRate) == 0x000018, "Member 'BP_BSPManager_C_CalcAttenuation::AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_BSPManager_C_CalcAttenuation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'BP_BSPManager_C_CalcAttenuation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuation, CallFunc_CalcAttenuationByLength_AttenuationRate) == 0x00002C, "Member 'BP_BSPManager_C_CalcAttenuation::CallFunc_CalcAttenuationByLength_AttenuationRate' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.CalcAttenuationByLength
// 0x000C (0x000C - 0x0000)
struct BP_BSPManager_C_CalcAttenuationByLength final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRate;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_CalcAttenuationByLength) == 0x000004, "Wrong alignment on BP_BSPManager_C_CalcAttenuationByLength");
static_assert(sizeof(BP_BSPManager_C_CalcAttenuationByLength) == 0x00000C, "Wrong size on BP_BSPManager_C_CalcAttenuationByLength");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByLength, Distance) == 0x000000, "Member 'BP_BSPManager_C_CalcAttenuationByLength::Distance' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByLength, AttenuationRate) == 0x000004, "Member 'BP_BSPManager_C_CalcAttenuationByLength::AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcAttenuationByLength, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_BSPManager_C_CalcAttenuationByLength::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.CalcLengthToPortal
// 0x0038 (0x0038 - 0x0000)
struct BP_BSPManager_C_CalcLengthToPortal final
{
public:
	class AActor*                                 Portal;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos;                                               // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_CalcLengthToPortal) == 0x000008, "Wrong alignment on BP_BSPManager_C_CalcLengthToPortal");
static_assert(sizeof(BP_BSPManager_C_CalcLengthToPortal) == 0x000038, "Wrong size on BP_BSPManager_C_CalcLengthToPortal");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, Portal) == 0x000000, "Member 'BP_BSPManager_C_CalcLengthToPortal::Portal' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, Pos) == 0x000008, "Member 'BP_BSPManager_C_CalcLengthToPortal::Pos' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, Length) == 0x000014, "Member 'BP_BSPManager_C_CalcLengthToPortal::Length' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_BSPManager_C_CalcLengthToPortal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000024, "Member 'BP_BSPManager_C_CalcLengthToPortal::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_CalcLengthToPortal, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'BP_BSPManager_C_CalcLengthToPortal::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.ResetBlockNearPlayer_
// 0x0050 (0x0050 - 0x0000)
struct BP_BSPManager_C_ResetBlockNearPlayer_ final
{
public:
	struct FVector                                _PlayerLocation;                                   // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC2[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BSPPortal_C*>                NextAddBlocks;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	float                                         MaxVolumeRate;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVolume_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AC3[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AC4[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_ResetBlockNearPlayer_) == 0x000008, "Wrong alignment on BP_BSPManager_C_ResetBlockNearPlayer_");
static_assert(sizeof(BP_BSPManager_C_ResetBlockNearPlayer_) == 0x000050, "Wrong size on BP_BSPManager_C_ResetBlockNearPlayer_");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, _PlayerLocation) == 0x000000, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::_PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, NextAddBlocks) == 0x000010, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::NextAddBlocks' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, MaxVolumeRate) == 0x000020, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::MaxVolumeRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_IsInVolume_ReturnValue) == 0x00003A, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_IsInVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_ResetBlockNearPlayer_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'BP_BSPManager_C_ResetBlockNearPlayer_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_BSPManager.BP_BSPManager_C.GetSoundAttenuationRate_Call
// 0x0020 (0x0020 - 0x0000)
struct BP_BSPManager_C_GetSoundAttenuationRate_Call final
{
public:
	struct FVector                                Pos;                                               // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttenuationRate;                                   // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSoundAttenuationRate_AttenuationRate;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC5[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABSPBlockVolume*                        CallFunc_GetSoundAttenuationRate_Block;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BSPManager_C_GetSoundAttenuationRate_Call) == 0x000008, "Wrong alignment on BP_BSPManager_C_GetSoundAttenuationRate_Call");
static_assert(sizeof(BP_BSPManager_C_GetSoundAttenuationRate_Call) == 0x000020, "Wrong size on BP_BSPManager_C_GetSoundAttenuationRate_Call");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate_Call, Pos) == 0x000000, "Member 'BP_BSPManager_C_GetSoundAttenuationRate_Call::Pos' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate_Call, AttenuationRate) == 0x00000C, "Member 'BP_BSPManager_C_GetSoundAttenuationRate_Call::AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate_Call, CallFunc_GetSoundAttenuationRate_AttenuationRate) == 0x000010, "Member 'BP_BSPManager_C_GetSoundAttenuationRate_Call::CallFunc_GetSoundAttenuationRate_AttenuationRate' has a wrong offset!");
static_assert(offsetof(BP_BSPManager_C_GetSoundAttenuationRate_Call, CallFunc_GetSoundAttenuationRate_Block) == 0x000018, "Member 'BP_BSPManager_C_GetSoundAttenuationRate_Call::CallFunc_GetSoundAttenuationRate_Block' has a wrong offset!");

}

