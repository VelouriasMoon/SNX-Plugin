#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_RotateToTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TaskBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ch_RotateToTarget.BTT_ch_RotateToTarget_C
// 0x0018 (0x00C8 - 0x00B0)
class UBTT_ch_RotateToTarget_C final : public UTaskBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTT_ch_RotateToTarget_C;            // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FRotator                               LookAtRot;                                         // 0x00B8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BTT_ch_RotateToTarget(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_ch_RotateToTarget_C">();
	}
	static class UBTT_ch_RotateToTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ch_RotateToTarget_C>();
	}
};
static_assert(alignof(UBTT_ch_RotateToTarget_C) == 0x000008, "Wrong alignment on UBTT_ch_RotateToTarget_C");
static_assert(sizeof(UBTT_ch_RotateToTarget_C) == 0x0000C8, "Wrong size on UBTT_ch_RotateToTarget_C");
static_assert(offsetof(UBTT_ch_RotateToTarget_C, UberGraphFrame_BTT_ch_RotateToTarget_C) == 0x0000B0, "Member 'UBTT_ch_RotateToTarget_C::UberGraphFrame_BTT_ch_RotateToTarget_C' has a wrong offset!");
static_assert(offsetof(UBTT_ch_RotateToTarget_C, LookAtRot) == 0x0000B8, "Member 'UBTT_ch_RotateToTarget_C::LookAtRot' has a wrong offset!");

}

