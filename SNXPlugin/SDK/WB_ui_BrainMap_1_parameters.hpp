#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainMap_1

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Struct_ui_brainmap_info_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetPopupMode__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature final
{
public:
	bool                                          IsPopup;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature) == 0x000001, "Wrong size on WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature, IsPopup) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetPopupMode__DelegateSignature::IsPopup' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.ExecuteUbergraph_WB_ui_BrainMap_1
// 0x0068 (0x0068 - 0x0000)
struct WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED9[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDA[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDB[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOverlay*>                       K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UOverlay*>                       K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDD[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1");
static_assert(sizeof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1) == 0x000068, "Wrong size on WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, EntryPoint) == 0x000000, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000005, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_Event_State) == 0x000010, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_Event_SubState) == 0x000014, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00001D, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x00001E, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000020, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000024, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000028, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000029, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000030, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_MakeArray_Array) == 0x000038, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, K2Node_MakeArray_Array_1) == 0x000048, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000058, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000059, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x00005C, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x000060, "Member 'WB_ui_BrainMap_1_C_ExecuteUbergraph_WB_ui_BrainMap_1::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateState");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_BrainMap_1_C_UpdateState");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateState, State) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_BrainMap_1_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateNone
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_BrainMap_1_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EDE[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EDF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateNone) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_StateNone");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateNone) == 0x000020, "Wrong size on WB_ui_BrainMap_1_C_StateNone");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'WB_ui_BrainMap_1_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_IsValid_ReturnValue) == 0x000006, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_AddChild_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_AddChild_ReturnValue_1) == 0x000010, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_MakeLiteralByte_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateNone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_StateNone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateOpen
// 0x0038 (0x0038 - 0x0000)
struct WB_ui_BrainMap_1_C_StateOpen final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE1[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isTutoTips_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE3[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isPlayingContentsIn_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE4[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateOpen) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_StateOpen");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateOpen) == 0x000038, "Wrong size on WB_ui_BrainMap_1_C_StateOpen");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateOpen::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, K2Node_SwitchInteger_CmpSuccess) == 0x000010, "Member 'WB_ui_BrainMap_1_C_StateOpen::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_MakeLiteralByte_ReturnValue) == 0x000011, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000018, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000020, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_isTutoTips_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_isTutoTips_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_DisplayTipsOrMiniTipsByHelpID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_isPlayingContentsIn_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_isPlayingContentsIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000031, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000032, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpen, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000034, "Member 'WB_ui_BrainMap_1_C_StateOpen::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateLoop
// 0x0050 (0x0050 - 0x0000)
struct WB_ui_BrainMap_1_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE5[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectSkill_IsSelect;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE6[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRectangle_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInput_IsInput;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectSkill_IsSelect_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE7[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySE_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EE8[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResultIndex_ResultIndex;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EE9[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EEA[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInput_IsInput_1;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckDecide_IsOpen;                       // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckInput_IsInput_2;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EEB[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateLoop) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_StateLoop");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateLoop) == 0x000050, "Wrong size on WB_ui_BrainMap_1_C_StateLoop");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_BrainMap_1_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000006, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_IsSelectSkill_IsSelect) == 0x000010, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_IsSelectSkill_IsSelect' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000011, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_CheckRectangle_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_CheckRectangle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_CheckInput_IsInput) == 0x000019, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_CheckInput_IsInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_IsSelectSkill_IsSelect_1) == 0x00001A, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_IsSelectSkill_IsSelect_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_BooleanAND_ReturnValue_1) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_PlaySE_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_PlaySE_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000028, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000029, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_GetResultIndex_ResultIndex) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_GetResultIndex_ResultIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000034, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000038, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x00003C, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000041, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_CheckInput_IsInput_1) == 0x000042, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_CheckInput_IsInput_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_CheckDecide_IsOpen) == 0x000043, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_CheckDecide_IsOpen' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_CheckInput_IsInput_2) == 0x000044, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_CheckInput_IsInput_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_BooleanAND_ReturnValue_2) == 0x000045, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000046, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000048, "Member 'WB_ui_BrainMap_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateClose
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_BrainMap_1_C_StateClose final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayAnyBPWork_IsPlay;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_isPlayingContentsOut_ReturnValue;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEC[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateClose) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_StateClose");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateClose) == 0x000010, "Wrong size on WB_ui_BrainMap_1_C_StateClose");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateClose::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, CallFunc_IsPlayAnyBPWork_IsPlay) == 0x000004, "Member 'WB_ui_BrainMap_1_C_StateClose::CallFunc_IsPlayAnyBPWork_IsPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_BrainMap_1_C_StateClose::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, CallFunc_isPlayingContentsOut_ReturnValue) == 0x000006, "Member 'WB_ui_BrainMap_1_C_StateClose::CallFunc_isPlayingContentsOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, CallFunc_MakeLiteralByte_ReturnValue) == 0x000007, "Member 'WB_ui_BrainMap_1_C_StateClose::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateClose::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateClose, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_StateClose::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetContentsChange
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_1_C_SetContentsChange final
{
public:
	bool                                          IsChange;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetContentsChange) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_SetContentsChange");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetContentsChange) == 0x000001, "Wrong size on WB_ui_BrainMap_1_C_SetContentsChange");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetContentsChange, IsChange) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetContentsChange::IsChange' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.InitPartsList
// 0x00A8 (0x00A8 - 0x0000)
struct WB_ui_BrainMap_1_C_InitPartsList final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EED[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EEE[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UREDImage*                              K2Node_DynamicCast_AsREDImage;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EEF[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UImage*>                         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_1;                          // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_2;                          // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_3;                          // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_4;                          // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_5;                          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_6;                          // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         K2Node_MakeArray_Array_7;                          // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_InitPartsList) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_InitPartsList");
static_assert(sizeof(WB_ui_BrainMap_1_C_InitPartsList) == 0x0000A8, "Wrong size on WB_ui_BrainMap_1_C_InitPartsList");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ui_BrainMap_1_C_InitPartsList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_InitPartsList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, CallFunc_InRange_IntInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_InitPartsList::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_InitPartsList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_InitPartsList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_DynamicCast_AsREDImage) == 0x000018, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_DynamicCast_AsREDImage' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'WB_ui_BrainMap_1_C_InitPartsList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array) == 0x000028, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_1) == 0x000038, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_2) == 0x000048, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_3) == 0x000058, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_4) == 0x000068, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_5) == 0x000078, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_6) == 0x000088, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitPartsList, K2Node_MakeArray_Array_7) == 0x000098, "Member 'WB_ui_BrainMap_1_C_InitPartsList::K2Node_MakeArray_Array_7' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CreateCursor
// 0x0008 (0x0008 - 0x0000)
struct WB_ui_BrainMap_1_C_CreateCursor final
{
public:
	class UWB_ui_BrainMap_SkillMap_Parts_2_C*     CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CreateCursor) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_CreateCursor");
static_assert(sizeof(WB_ui_BrainMap_1_C_CreateCursor) == 0x000008, "Wrong size on WB_ui_BrainMap_1_C_CreateCursor");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateCursor, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CreateCursor::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupSkillOpen
// 0x0100 (0x0100 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupSkillOpen final
{
public:
	bool                                          _IsEnableLearn;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     _PlayerID;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _MaterialIndex;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 _FrameIndexList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         _SkillStatus;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    _Manager;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ui_brainmap_info               _Work;                                             // 0x0030(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF3[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_ui_brainmap_info>       CallFunc_GetBrainmapTable_Table;                   // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF4[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF5[0x2];                                     // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayerSkillPoint_skill_point;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF6[0x2];                                     // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EF7[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF8[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillLearnAble_bOK;                     // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillLearned_learned;                   // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupSkillOpen) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupSkillOpen");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupSkillOpen) == 0x000100, "Wrong size on WB_ui_BrainMap_1_C_SetupSkillOpen");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _IsEnableLearn) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_IsEnableLearn' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _PlayerID) == 0x000001, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_PlayerID' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _MaterialIndex) == 0x000004, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_MaterialIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _index) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _FrameIndexList) == 0x000010, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_FrameIndexList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _SkillStatus) == 0x000020, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_SkillStatus' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _Manager) == 0x000028, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, _Work) == 0x000030, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Variable) == 0x000064, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Variable_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Variable_2) == 0x000078, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Add_IntInt_ReturnValue_3) == 0x00007C, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetBrainmapTable_Table) == 0x000088, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetBrainmapTable_Table' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetPlayerSkillPoint_skill_point) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetPlayerSkillPoint_skill_point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B0, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B4, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000B5, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetMainPlayer_Player) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetPlayerID_self_CastInput) == 0x0000C0, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetPlayerID_ReturnValue) == 0x0000D0, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, K2Node_MakeArray_Array) == 0x0000D8, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E8, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GetPlayerManager_PlayerManager) == 0x0000F0, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, Temp_int_Variable_3) == 0x0000F8, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FC, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_IsSkillLearnAble_bOK) == 0x0000FD, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_IsSkillLearnAble_bOK' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillOpen, CallFunc_IsSkillLearned_learned) == 0x0000FE, "Member 'WB_ui_BrainMap_1_C_SetupSkillOpen::CallFunc_IsSkillLearned_learned' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.MoveCursor
// 0x0060 (0x0060 - 0x0000)
struct WB_ui_BrainMap_1_C_MoveCursor final
{
public:
	struct FVector2D                              _Work;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _Backup;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EF9[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAnalogStickL_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_MoveCursor) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_MoveCursor");
static_assert(sizeof(WB_ui_BrainMap_1_C_MoveCursor) == 0x000060, "Wrong size on WB_ui_BrainMap_1_C_MoveCursor");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, _Work) == 0x000000, "Member 'WB_ui_BrainMap_1_C_MoveCursor::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, _Backup) == 0x000008, "Member 'WB_ui_BrainMap_1_C_MoveCursor::_Backup' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_MakeVector2D_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_BreakVector2D_X) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_FClamp_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_FClamp_ReturnValue_1) == 0x000028, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_MakeVector2D_ReturnValue_1) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000038, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_GetAnalogStickL_ReturnValue) == 0x000040, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_GetAnalogStickL_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveCursor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'WB_ui_BrainMap_1_C_MoveCursor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateCurrentSkillIndex
// 0x00E8 (0x00E8 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex final
{
public:
	struct FVector2D                              _WorkCursorPos;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _BackupCursorIndex;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EFA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ui_brainmap_info               _WorkParam;                                        // 0x0010(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector2D                              _WorkPos;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkIndex;                                        // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EFB[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EFC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySE_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EFD[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EFE[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillLearnPoint_Point;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EFF[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F00[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_Vector2DVector2D_ReturnValue;    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex) == 0x0000E8, "Wrong size on WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, _WorkCursorPos) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::_WorkCursorPos' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, _BackupCursorIndex) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::_BackupCursorIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, _WorkParam) == 0x000010, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::_WorkParam' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, _WorkPos) == 0x000040, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::_WorkPos' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, _WorkIndex) == 0x000048, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::_WorkIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00005C, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_PlaySE_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_PlaySE_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, Temp_int_Array_Index_Variable) == 0x000074, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Array_Get_Item) == 0x000098, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_GetPlayerManager_PlayerManager) == 0x0000B0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000BA, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_GetSkillLearnPoint_Point) == 0x0000BC, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_GetSkillLearnPoint_Point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x0000C1, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000C2, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Not_PreBool_ReturnValue) == 0x0000C3, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_BooleanAND_ReturnValue) == 0x0000C4, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_IsVisible_ReturnValue) == 0x0000CC, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x0000E0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E1, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_NotEqual_Vector2DVector2D_ReturnValue) == 0x0000E2, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_NotEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E3, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupSkillLine
// 0x0068 (0x0068 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupSkillLine final
{
public:
	int32                                         _WorkStatus;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F01[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ui_brainmap_info               _WorkTable;                                        // 0x0008(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F02[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F03[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupSkillLine) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupSkillLine");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupSkillLine) == 0x000068, "Wrong size on WB_ui_BrainMap_1_C_SetupSkillLine");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, _WorkStatus) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::_WorkStatus' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, _WorkTable) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::_WorkTable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000044, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, Temp_int_Variable) == 0x00004C, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Array_Get_Item) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000061, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000062, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_BooleanAND_ReturnValue) == 0x000063, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillLine, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'WB_ui_BrainMap_1_C_SetupSkillLine::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CheckDecide
// 0x0050 (0x0050 - 0x0000)
struct WB_ui_BrainMap_1_C_CheckDecide final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _IsEnableOpen;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F04[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ui_brainmap_info               _Work;                                             // 0x0008(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F05[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F06[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CheckDecide) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_CheckDecide");
static_assert(sizeof(WB_ui_BrainMap_1_C_CheckDecide) == 0x000050, "Wrong size on WB_ui_BrainMap_1_C_CheckDecide");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, IsOpen) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CheckDecide::IsOpen' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, _IsEnableOpen) == 0x000001, "Member 'WB_ui_BrainMap_1_C_CheckDecide::_IsEnableOpen' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, _Work) == 0x000008, "Member 'WB_ui_BrainMap_1_C_CheckDecide::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, Temp_int_Variable) == 0x000040, "Member 'WB_ui_BrainMap_1_C_CheckDecide::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckDecide, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00004D, "Member 'WB_ui_BrainMap_1_C_CheckDecide::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateSkillOpen
// 0x0218 (0x0218 - 0x0000)
struct WB_ui_BrainMap_1_C_StateSkillOpen final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIBase*                                _WorkEffect;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BrainMap_LineEffect_2_C*         _WorkLine2;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     _Player;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F07[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _SkillIndex;                                       // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BrainMap_LineEffect_1_C*         _WorkLine;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _index;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F08[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_ui_brainmap_info               _Work;                                             // 0x0030(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F09[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0A[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0B[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F0C[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsInput;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLineEffectAnimation_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLineEffectAnimation_ReturnValue_1;      // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F0D[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URSAtomComponentBase*                   CallFunc_PlaySE_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderTransformAngle_ReturnValue;      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F0E[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F0F[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F10[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySE_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F11[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F12[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F13[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMap_LineEffect_1_C*         CallFunc_Array_Get_Item_1;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F14[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingAnimation_ReturnValue;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerSkillPoint_skill_point;          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LearnSkill_bSuccess;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F15[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F16[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_2;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F17[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F18[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F19[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BrainMap_LineEffect_1_C*         CallFunc_Array_Get_Item_3;                         // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_1;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1A[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1B[0x2];                                     // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsInput_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_2;        // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1C[0x1];                                     // 0x019B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResultIndex_ResultIndex;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1D[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1E[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_4;                         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1F[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMap_LineEffect_1_C*         CallFunc_Array_Get_Item_5;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_6;                         // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnectLineStart_IsStart;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConnectLineUnique_IsUnique;             // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F20[0x1];                                     // 0x01DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F21[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_7;                         // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnectLineStart_IsStart_1;             // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsConnectLineUnique_IsUnique_1;           // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F22[0x2];                                     // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F23[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BrainMap_LineEffect_1_C*         CallFunc_Array_Get_Item_8;                         // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateSkillOpen) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_StateSkillOpen");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateSkillOpen) == 0x000218, "Wrong size on WB_ui_BrainMap_1_C_StateSkillOpen");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _WorkIndex) == 0x000004, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_WorkIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _WorkEffect) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_WorkEffect' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _WorkLine2) == 0x000010, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_WorkLine2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _Player) == 0x000018, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_Player' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _SkillIndex) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_SkillIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _WorkLine) == 0x000020, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_WorkLine' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _index) == 0x000028, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, _Work) == 0x000030, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, K2Node_SwitchInteger_CmpSuccess) == 0x000061, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable) == 0x000064, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00006C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000080, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000084, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000088, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_1) == 0x00008C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000090, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_CheckInput_IsInput) == 0x000098, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_CheckInput_IsInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsLineEffectAnimation_ReturnValue) == 0x000099, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsLineEffectAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsLineEffectAnimation_ReturnValue_1) == 0x00009A, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsLineEffectAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_PlaySE_ReturnValue) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_PlaySE_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_GetRenderTransformAngle_ReturnValue) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_GetRenderTransformAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000AC, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Add_ReturnValue) == 0x0000C4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000CC, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000D0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Array_Index_Variable_2) == 0x0000D4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000D8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_PlaySE_ReturnValue_1) == 0x0000E0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_PlaySE_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000E8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_PlayAnimation_ReturnValue) == 0x0000F0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000100, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000104, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000108, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_2) == 0x000118, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00011C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000120, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsPlayingAnimation_ReturnValue) == 0x000124, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsPlayingAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_BooleanAND_ReturnValue) == 0x000125, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Not_PreBool_ReturnValue) == 0x000126, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Not_PreBool_ReturnValue_1) == 0x000127, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_GetPlayerManager_PlayerManager) == 0x000128, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_GetPlayerSkillPoint_skill_point) == 0x000130, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_GetPlayerSkillPoint_skill_point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_LearnSkill_bSuccess) == 0x000134, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_LearnSkill_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_3) == 0x000138, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_7) == 0x00013C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000140, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Length_ReturnValue_1) == 0x000154, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000158, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00015C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000160, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_FClamp_ReturnValue) == 0x000164, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000168, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_BooleanOR_ReturnValue) == 0x000169, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Array_Index_Variable_3) == 0x00016C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_3) == 0x000170, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsPlayUICurrentAnimation_isPlay_1) == 0x000178, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsPlayUICurrentAnimation_isPlay_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Loop_Counter_Variable_3) == 0x00017C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Length_ReturnValue_2) == 0x000180, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Less_IntInt_ReturnValue_2) == 0x000185, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_8) == 0x000188, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00018C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000190, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_FClamp_ReturnValue_1) == 0x000194, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_CheckInput_IsInput_1) == 0x000198, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_CheckInput_IsInput_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_BooleanOR_ReturnValue_1) == 0x000199, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsPlayUICurrentAnimation_isPlay_2) == 0x00019A, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsPlayUICurrentAnimation_isPlay_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_GetResultIndex_ResultIndex) == 0x00019C, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_GetResultIndex_ResultIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_9) == 0x0001A4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_PlayAnimation_ReturnValue_1) == 0x0001A8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001B0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_4) == 0x0001B4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_4) == 0x0001B8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_5) == 0x0001C0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_5) == 0x0001C8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_6) == 0x0001D0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsConnectLineStart_IsStart) == 0x0001D8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsConnectLineStart_IsStart' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsConnectLineUnique_IsUnique) == 0x0001D9, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsConnectLineUnique_IsUnique' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001DA, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Add_IntInt_ReturnValue_10) == 0x0001DC, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Length_ReturnValue_3) == 0x0001E0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, Temp_int_Variable_6) == 0x0001E4, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001E8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0001E9, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_7) == 0x0001F0, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsConnectLineStart_IsStart_1) == 0x0001F8, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsConnectLineStart_IsStart_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_IsConnectLineUnique_IsUnique_1) == 0x0001F9, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_IsConnectLineUnique_IsUnique_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001FC, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000200, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000201, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000204, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_Array_Get_Item_8) == 0x000208, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateSkillOpen, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000210, "Member 'WB_ui_BrainMap_1_C_StateSkillOpen::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.InitEffect
// 0x0040 (0x0040 - 0x0000)
struct WB_ui_BrainMap_1_C_InitEffect final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F24[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_ui_BrainMap_LineEffect_1_C*> K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F25[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F26[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_ui_BrainMap_LineEffect_1_C*> K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_InitEffect) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_InitEffect");
static_assert(sizeof(WB_ui_BrainMap_1_C_InitEffect) == 0x000040, "Wrong size on WB_ui_BrainMap_1_C_InitEffect");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ui_BrainMap_1_C_InitEffect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_InitEffect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_InitEffect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, K2Node_MakeArray_Array) == 0x000010, "Member 'WB_ui_BrainMap_1_C_InitEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_1_C_InitEffect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_InitEffect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'WB_ui_BrainMap_1_C_InitEffect::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitEffect, K2Node_MakeArray_Array_1) == 0x000030, "Member 'WB_ui_BrainMap_1_C_InitEffect::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupSkillIcon
// 0x0098 (0x0098 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupSkillIcon final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Status;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _MaterialIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F27[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 _FrameIndexList;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FStruct_ui_brainmap_info               _Work;                                             // 0x0020(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F28[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F29[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2A[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2B[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupSkillIcon) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupSkillIcon");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupSkillIcon) == 0x000098, "Wrong size on WB_ui_BrainMap_1_C_SetupSkillIcon");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, Param_Index) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, Status) == 0x000004, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::Status' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, _MaterialIndex) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::_MaterialIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, _FrameIndexList) == 0x000010, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::_FrameIndexList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, _Work) == 0x000020, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Array_Get_Item) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000074, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, K2Node_SwitchInteger_CmpSuccess) == 0x000078, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupSkillIcon, K2Node_MakeArray_Array) == 0x000088, "Member 'WB_ui_BrainMap_1_C_SetupSkillIcon::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.isEndMenu
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_1_C_IsEndMenu final
{
public:
	bool                                          Param_IsEnd;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsEndMenu) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_IsEndMenu");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsEndMenu) == 0x000001, "Wrong size on WB_ui_BrainMap_1_C_IsEndMenu");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsEndMenu, Param_IsEnd) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsEndMenu::Param_IsEnd' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.MoveMouse
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_BrainMap_1_C_MoveMouse final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCurrentSkillIndexMouse_sameindex;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputDeviceType                              CallFunc_getIconDeviceType_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlatFormType                                 CallFunc_GetPlatformType_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_MoveMouse) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_MoveMouse");
static_assert(sizeof(WB_ui_BrainMap_1_C_MoveMouse) == 0x000010, "Wrong size on WB_ui_BrainMap_1_C_MoveMouse");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_UpdateCurrentSkillIndexMouse_sameindex) == 0x000008, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_UpdateCurrentSkillIndexMouse_sameindex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_getIconDeviceType_ReturnValue) == 0x000009, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_getIconDeviceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_GetPlatformType_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_GetPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_MoveMouse, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000D, "Member 'WB_ui_BrainMap_1_C_MoveMouse::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateCurrentSkillIndexMouse
// 0x00C8 (0x00C8 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse final
{
public:
	bool                                          Sameindex;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _BackupCursorIndex;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStruct_ui_brainmap_info               _WorkParam;                                        // 0x0008(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector2D                              _WorkPos;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _WorkIndex;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_PlaySE_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2E[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F2F[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UREDImage*                              K2Node_DynamicCast_AsREDImage;                     // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRectangle_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F30[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F31[0x1];                                     // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillLearnPoint_Point;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F32[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F33[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F34[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse) == 0x0000C8, "Wrong size on WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, Sameindex) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::Sameindex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, _BackupCursorIndex) == 0x000004, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::_BackupCursorIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, _WorkParam) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::_WorkParam' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, _WorkPos) == 0x000038, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::_WorkPos' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, _WorkIndex) == 0x000040, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::_WorkIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, Temp_int_Array_Index_Variable) == 0x000044, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_PlaySE_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_PlaySE_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, Temp_bool_True_if_break_was_hit_Variable) == 0x000065, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Not_PreBool_ReturnValue) == 0x000066, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_BooleanAND_ReturnValue) == 0x000067, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, K2Node_DynamicCast_AsREDImage) == 0x000070, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::K2Node_DynamicCast_AsREDImage' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_CheckRectangle_ReturnValue) == 0x000079, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_CheckRectangle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_GetPlayerManager_PlayerManager) == 0x000080, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000088, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000089, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00008A, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_GetSkillLearnPoint_Point) == 0x00008C, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_GetSkillLearnPoint_Point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000090, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000094, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000B0, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_UpdateCurrentSkillIndexMouse::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.IsConnectLineUnique
// 0x0078 (0x0078 - 0x0000)
struct WB_ui_BrainMap_1_C_IsConnectLineUnique final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnique;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F35[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 _UniqueLineListKasane;                             // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 _UniqueLineListYuito;                              // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          _IsUnique;                                         // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F36[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F37[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F38[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsConnectLineUnique) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_IsConnectLineUnique");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsConnectLineUnique) == 0x000078, "Wrong size on WB_ui_BrainMap_1_C_IsConnectLineUnique");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, Param_Index) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, IsUnique) == 0x000004, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::IsUnique' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, _UniqueLineListKasane) == 0x000008, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::_UniqueLineListKasane' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, _UniqueLineListYuito) == 0x000018, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::_UniqueLineListYuito' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, _IsUnique) == 0x000028, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::_IsUnique' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, K2Node_MakeArray_Array) == 0x000040, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, K2Node_MakeArray_Array_1) == 0x000058, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00006C, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000074, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineUnique, CallFunc_Less_IntInt_ReturnValue_1) == 0x000075, "Member 'WB_ui_BrainMap_1_C_IsConnectLineUnique::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CorrectCursor
// 0x0040 (0x0040 - 0x0000)
struct WB_ui_BrainMap_1_C_CorrectCursor final
{
public:
	float                                         _MoveLength;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _WorkLength;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              _Work;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F39[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CorrectCursor) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_CorrectCursor");
static_assert(sizeof(WB_ui_BrainMap_1_C_CorrectCursor) == 0x000040, "Wrong size on WB_ui_BrainMap_1_C_CorrectCursor");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, _MoveLength) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::_MoveLength' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, _WorkLength) == 0x000004, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::_WorkLength' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, _Work) == 0x000008, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_VSize2D_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CorrectCursor, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'WB_ui_BrainMap_1_C_CorrectCursor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.IsConnectLineStart
// 0x0080 (0x0080 - 0x0000)
struct WB_ui_BrainMap_1_C_IsConnectLineStart final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStart;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F3A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 _StartLineListKasane;                              // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 _StartLineListYuito;                               // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          _IsStart;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F3B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3C[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F3D[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F3E[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsConnectLineStart) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_IsConnectLineStart");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsConnectLineStart) == 0x000080, "Wrong size on WB_ui_BrainMap_1_C_IsConnectLineStart");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, Param_Index) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, IsStart) == 0x000004, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::IsStart' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, _StartLineListKasane) == 0x000008, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::_StartLineListKasane' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, _StartLineListYuito) == 0x000018, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::_StartLineListYuito' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, _IsStart) == 0x000028, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::_IsStart' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, K2Node_MakeArray_Array) == 0x000040, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, K2Node_MakeArray_Array_1) == 0x000058, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000078, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsConnectLineStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x000079, "Member 'WB_ui_BrainMap_1_C_IsConnectLineStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupUnlockBrainField
// 0x00C8 (0x00C8 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupUnlockBrainField final
{
public:
	bool                                          _IsExtension;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F3F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _IndexPositionList;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      _IconPositionList;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FVector2D>                      _MapPositionList;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	ESlateVisibility                              _WorkVisibility;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F40[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F41[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F42[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F43[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F44[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F45[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstance*                        CallFunc_GetRSGameInstance_RSGameInstance;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlagManager*                           CallFunc_GetFlagManager_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsContentsOpened_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsContentsOpened_ReturnValue_1;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F46[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F47[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupUnlockBrainField) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupUnlockBrainField");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupUnlockBrainField) == 0x0000C8, "Wrong size on WB_ui_BrainMap_1_C_SetupUnlockBrainField");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, _IsExtension) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::_IsExtension' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, _IndexPositionList) == 0x000004, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::_IndexPositionList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, _IconPositionList) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::_IconPositionList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, _MapPositionList) == 0x000018, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::_MapPositionList' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, _WorkVisibility) == 0x000028, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::_WorkVisibility' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Variable) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, K2Node_MakeArray_Array) == 0x000040, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetChildAt_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetChildrenCount_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000075, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, K2Node_MakeArray_Array_1) == 0x000078, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000094, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000098, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetRSGameInstance_RSGameInstance) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetRSGameInstance_RSGameInstance' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetFlagManager_ReturnValue) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetFlagManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_IsContentsOpened_ReturnValue) == 0x0000B0, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_IsContentsOpened_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_IsContentsOpened_ReturnValue_1) == 0x0000B1, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_IsContentsOpened_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, Temp_int_Variable_1) == 0x0000B4, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_GetChildAt_ReturnValue_1) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupUnlockBrainField, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000C4, "Member 'WB_ui_BrainMap_1_C_SetupUnlockBrainField::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.StateOpenCheck
// 0x0044 (0x0044 - 0x0000)
struct WB_ui_BrainMap_1_C_StateOpenCheck final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F48[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F49[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResultIndex_ResultIndex;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_1;        // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4B[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4C[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResultIndex_ResultIndex_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_2;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F4D[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4E[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_StateOpenCheck) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_StateOpenCheck");
static_assert(sizeof(WB_ui_BrainMap_1_C_StateOpenCheck) == 0x000044, "Wrong size on WB_ui_BrainMap_1_C_StateOpenCheck");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, SubState) == 0x000000, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000014, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_GetResultIndex_ResultIndex) == 0x000018, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_GetResultIndex_ResultIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, K2Node_SwitchInteger_CmpSuccess_1) == 0x00001D, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_IsPlayUICurrentAnimation_isPlay_1) == 0x00001E, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_IsPlayUICurrentAnimation_isPlay_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000020, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000024, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000025, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000028, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_GetResultIndex_ResultIndex_1) == 0x000030, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_GetResultIndex_ResultIndex_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000035, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_IsPlayUICurrentAnimation_isPlay_2) == 0x000036, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_IsPlayUICurrentAnimation_isPlay_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000038, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x00003C, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_StateOpenCheck, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000040, "Member 'WB_ui_BrainMap_1_C_StateOpenCheck::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.InitializeCommonParts
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_BrainMap_1_C_InitializeCommonParts final
{
public:
	class UTextBlock*                             Param_TextHelp;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_Guide_C*                         Guide;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_InitializeCommonParts) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_InitializeCommonParts");
static_assert(sizeof(WB_ui_BrainMap_1_C_InitializeCommonParts) == 0x000010, "Wrong size on WB_ui_BrainMap_1_C_InitializeCommonParts");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitializeCommonParts, Param_TextHelp) == 0x000000, "Member 'WB_ui_BrainMap_1_C_InitializeCommonParts::Param_TextHelp' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_InitializeCommonParts, Guide) == 0x000008, "Member 'WB_ui_BrainMap_1_C_InitializeCommonParts::Guide' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupChoiceText
// 0x0110 (0x0110 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupChoiceText final
{
public:
	class FText                                   _TextMessage;                                      // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   _TextNo;                                           // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   _TextYes;                                          // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   _TextTitle;                                        // 0x0048(0x0018)(Edit, BlueprintVisible)
	class UDatabaseManager*                       _Manager;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00C8(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_3;                    // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x00F0(0x0018)()
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupChoiceText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupChoiceText");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupChoiceText) == 0x000110, "Wrong size on WB_ui_BrainMap_1_C_SetupChoiceText");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, _TextMessage) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::_TextMessage' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, _TextNo) == 0x000018, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::_TextNo' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, _TextYes) == 0x000030, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::_TextYes' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, _TextTitle) == 0x000048, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::_TextTitle' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, _Manager) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_GetText_ReturnValue) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_GetText_ReturnValue_1) == 0x000090, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_GetText_ReturnValue_2) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000C8, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_GetText_ReturnValue_3) == 0x0000E0, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0000F0, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupChoiceText, CallFunc_GetDataBaseManager_Manager) == 0x000108, "Member 'WB_ui_BrainMap_1_C_SetupChoiceText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupHelpText
// 0x0038 (0x0038 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupHelpText final
{
public:
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupHelpText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupHelpText");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupHelpText) == 0x000038, "Wrong size on WB_ui_BrainMap_1_C_SetupHelpText");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupHelpText, CallFunc_GetDataBaseManager_Manager) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupHelpText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupHelpText, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupHelpText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupHelpText, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_SetupHelpText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupHelpText, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_SetupHelpText::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupGuide
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupGuide final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupGuide) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_SetupGuide");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupGuide) == 0x000001, "Wrong size on WB_ui_BrainMap_1_C_SetupGuide");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupGuide, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupGuide::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupLearnText
// 0x00F0 (0x00F0 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupLearnText final
{
public:
	int32                                         Type;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F4F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   _Message;                                          // 0x0008(0x0018)(Edit, BlueprintVisible)
	class FText                                   _Title;                                            // 0x0020(0x0018)(Edit, BlueprintVisible)
	class UDatabaseManager*                       _Manager;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F50[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0080(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00A8(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_3;                    // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x00D0(0x0018)()
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupLearnText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupLearnText");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupLearnText) == 0x0000F0, "Wrong size on WB_ui_BrainMap_1_C_SetupLearnText");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, Type) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::Type' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, _Message) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::_Message' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, _Title) == 0x000020, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::_Title' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, _Manager) == 0x000038, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_GetText_ReturnValue) == 0x000040, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, K2Node_SwitchInteger_CmpSuccess) == 0x000050, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_GetText_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000080, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_GetText_ReturnValue_2) == 0x000098, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_GetText_ReturnValue_3) == 0x0000C0, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0000D0, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupLearnText, CallFunc_GetDataBaseManager_Manager) == 0x0000E8, "Member 'WB_ui_BrainMap_1_C_SetupLearnText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupBaseText
// 0x00D8 (0x00D8 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupBaseText final
{
public:
	class UDatabaseManager*                       _Manager;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue;                      // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetText_ReturnValue_1;                    // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0040(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_2;                    // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0068(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_3;                    // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0090(0x0018)()
	class FString                                 CallFunc_GetText_ReturnValue_4;                    // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x00B8(0x0018)()
	class UDatabaseManager*                       CallFunc_GetDataBaseManager_Manager;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupBaseText) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupBaseText");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupBaseText) == 0x0000D8, "Wrong size on WB_ui_BrainMap_1_C_SetupBaseText");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, _Manager) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetText_ReturnValue_1) == 0x000018, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000040, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetText_ReturnValue_2) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetText_ReturnValue_3) == 0x000080, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000090, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetText_ReturnValue_4) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_Conv_StringToText_ReturnValue_4) == 0x0000B8, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupBaseText, CallFunc_GetDataBaseManager_Manager) == 0x0000D0, "Member 'WB_ui_BrainMap_1_C_SetupBaseText::CallFunc_GetDataBaseManager_Manager' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateVicinitySkill
// 0x0030 (0x0030 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateVicinitySkill final
{
public:
	int32                                         BaseIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     _PlayerID;                                         // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F51[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    _Manager;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillLearnAble_bOK;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F52[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateVicinitySkill) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateVicinitySkill");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateVicinitySkill) == 0x000030, "Wrong size on WB_ui_BrainMap_1_C_UpdateVicinitySkill");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, BaseIndex) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::BaseIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, _PlayerID) == 0x000004, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::_PlayerID' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, _Manager) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, Temp_int_Variable) == 0x000010, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001E, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_BooleanOR_ReturnValue) == 0x00001F, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_IsSkillLearnAble_bOK) == 0x000020, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_IsSkillLearnAble_bOK' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateVicinitySkill, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'WB_ui_BrainMap_1_C_UpdateVicinitySkill::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateScale
// 0x0014 (0x0014 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateScale final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInput_IsInput;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F53[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateScale) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateScale");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateScale) == 0x000014, "Wrong size on WB_ui_BrainMap_1_C_UpdateScale");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateScale, DeltaSeconds) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateScale::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateScale, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_UpdateScale::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateScale, CallFunc_CheckInput_IsInput) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateScale::CallFunc_CheckInput_IsInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateScale, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_UpdateScale::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateScale, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_UpdateScale::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateMapScale
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateMapScale final
{
public:
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateMapScale) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateMapScale");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateMapScale) == 0x000020, "Wrong size on WB_ui_BrainMap_1_C_UpdateMapScale");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateMapScale, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateMapScale::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateMapScale, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateMapScale::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateMapScale, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_UpdateMapScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateMapScale, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_UpdateMapScale::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CreateBPWork
// 0x0040 (0x0040 - 0x0000)
struct WB_ui_BrainMap_1_C_CreateBPWork final
{
public:
	class UOverlay*                               _Parent;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F54[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWB_ui_BrainMap_Bp_1_C*                 CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F55[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CreateBPWork) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_CreateBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_CreateBPWork) == 0x000040, "Wrong size on WB_ui_BrainMap_1_C_CreateBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, _Parent) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::_Parent' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, Temp_int_Variable) == 0x000008, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000026, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_BooleanOR_ReturnValue) == 0x000027, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CreateBPWork, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_1_C_CreateBPWork::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.ReleaseBPWork
// 0x0014 (0x0014 - 0x0000)
struct WB_ui_BrainMap_1_C_ReleaseBPWork final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_ReleaseBPWork) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_ReleaseBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_ReleaseBPWork) == 0x000014, "Wrong size on WB_ui_BrainMap_1_C_ReleaseBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_ReleaseBPWork, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ui_BrainMap_1_C_ReleaseBPWork::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ReleaseBPWork, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_ReleaseBPWork::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ReleaseBPWork, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_ReleaseBPWork::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ReleaseBPWork, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_ReleaseBPWork::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_ReleaseBPWork, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_ReleaseBPWork::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.OpenFreeBPWork
// 0x0068 (0x0068 - 0x0000)
struct WB_ui_BrainMap_1_C_OpenFreeBPWork final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _Work;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BrainMap_Bp_1_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F56[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMap_Bp_1_C*                 CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSkillLearnPoint_Point;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F57[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMap_Bp_1_C*                 CallFunc_Array_Get_Item_2;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F58[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_Array_Get_Item_3;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFreeBPWorkIndex_Index;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F59[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BrainMap_Bp_1_C*                 CallFunc_Array_Get_Item_4;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CallFunc_Array_Get_Item_5;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_OpenFreeBPWork) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_OpenFreeBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_OpenFreeBPWork) == 0x000068, "Wrong size on WB_ui_BrainMap_1_C_OpenFreeBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, TargetIndex) == 0x000000, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::TargetIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, _Work) == 0x000004, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GetSkillLearnPoint_Point) == 0x000028, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GetSkillLearnPoint_Point' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item_2) == 0x000030, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000038, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item_3) == 0x000040, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GetFreeBPWorkIndex_Index) == 0x000048, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GetFreeBPWorkIndex_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item_4) == 0x000050, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_Array_Get_Item_5) == 0x000058, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_GetVisibility_ReturnValue) == 0x000060, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_OpenFreeBPWork, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000061, "Member 'WB_ui_BrainMap_1_C_OpenFreeBPWork::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CloseAllBPWork
// 0x0014 (0x0014 - 0x0000)
struct WB_ui_BrainMap_1_C_CloseAllBPWork final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CloseAllBPWork) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_CloseAllBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_CloseAllBPWork) == 0x000014, "Wrong size on WB_ui_BrainMap_1_C_CloseAllBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseAllBPWork, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CloseAllBPWork::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseAllBPWork, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_CloseAllBPWork::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseAllBPWork, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_ui_BrainMap_1_C_CloseAllBPWork::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseAllBPWork, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_CloseAllBPWork::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseAllBPWork, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_CloseAllBPWork::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.IsPlayAnyBPWork
// 0x001C (0x001C - 0x0000)
struct WB_ui_BrainMap_1_C_IsPlayAnyBPWork final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          _IsPlay;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_IsPlayAnyBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork) == 0x00001C, "Wrong size on WB_ui_BrainMap_1_C_IsPlayAnyBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, IsPlay) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::IsPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, _IsPlay) == 0x000001, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::_IsPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, CallFunc_IsPlaying_IsPlaying) == 0x000010, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsPlayAnyBPWork, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_IsPlayAnyBPWork::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.GetFreeBPWorkIndex
// 0x002C (0x002C - 0x0000)
struct WB_ui_BrainMap_1_C_GetFreeBPWorkIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _RetValue;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5C[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_IsPlaying;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F5F[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_GetFreeBPWorkIndex");
static_assert(sizeof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex) == 0x00002C, "Wrong size on WB_ui_BrainMap_1_C_GetFreeBPWorkIndex");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, Param_Index) == 0x000000, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, _RetValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::_RetValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, Temp_int_Loop_Num_Variable) == 0x000014, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_IsPlaying_IsPlaying) == 0x000025, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_IsPlaying_IsPlaying' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetFreeBPWorkIndex, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_ui_BrainMap_1_C_GetFreeBPWorkIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CloseBPWork
// 0x0030 (0x0030 - 0x0000)
struct WB_ui_BrainMap_1_C_CloseBPWork final
{
public:
	int32                                         TargetIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F60[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F61[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F62[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F63[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndex_Index;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CloseBPWork) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_CloseBPWork");
static_assert(sizeof(WB_ui_BrainMap_1_C_CloseBPWork) == 0x000030, "Wrong size on WB_ui_BrainMap_1_C_CloseBPWork");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, TargetIndex) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::TargetIndex' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, Temp_bool_True_if_break_was_hit_Variable) == 0x000004, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_GetIndex_Index) == 0x000028, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_GetIndex_Index' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CloseBPWork, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_CloseBPWork::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.UpdateSkillStatus
// 0x0038 (0x0038 - 0x0000)
struct WB_ui_BrainMap_1_C_UpdateSkillStatus final
{
public:
	EPlayerID                                     _PlayerID;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F64[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    _Manager;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillLearnAble_bOK;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F65[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_UpdateSkillStatus) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_UpdateSkillStatus");
static_assert(sizeof(WB_ui_BrainMap_1_C_UpdateSkillStatus) == 0x000038, "Wrong size on WB_ui_BrainMap_1_C_UpdateSkillStatus");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, _PlayerID) == 0x000000, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::_PlayerID' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, _Manager) == 0x000008, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, Temp_int_Variable) == 0x00001C, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_IsSkillLearnAble_bOK) == 0x000028, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_IsSkillLearnAble_bOK' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_UpdateSkillStatus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'WB_ui_BrainMap_1_C_UpdateSkillStatus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetCursorSpeed
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_SetCursorSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetCursorSpeed) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_SetCursorSpeed");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetCursorSpeed) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_SetCursorSpeed");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetCursorSpeed, Speed) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetCursorSpeed::Speed' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.GetCursorSpeed
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_GetCursorSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_GetCursorSpeed) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_GetCursorSpeed");
static_assert(sizeof(WB_ui_BrainMap_1_C_GetCursorSpeed) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_GetCursorSpeed");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetCursorSpeed, Speed) == 0x000000, "Member 'WB_ui_BrainMap_1_C_GetCursorSpeed::Speed' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetCursorCorrectSpeed
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_SetCursorCorrectSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetCursorCorrectSpeed) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_SetCursorCorrectSpeed");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetCursorCorrectSpeed) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_SetCursorCorrectSpeed");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetCursorCorrectSpeed, Speed) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetCursorCorrectSpeed::Speed' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.GetCursorCorrectSpeed
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_GetCursorCorrectSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_GetCursorCorrectSpeed) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_GetCursorCorrectSpeed");
static_assert(sizeof(WB_ui_BrainMap_1_C_GetCursorCorrectSpeed) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_GetCursorCorrectSpeed");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetCursorCorrectSpeed, Speed) == 0x000000, "Member 'WB_ui_BrainMap_1_C_GetCursorCorrectSpeed::Speed' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetCursorCorrectArea
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_SetCursorCorrectArea final
{
public:
	float                                         Area;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetCursorCorrectArea) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_SetCursorCorrectArea");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetCursorCorrectArea) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_SetCursorCorrectArea");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetCursorCorrectArea, Area) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetCursorCorrectArea::Area' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.GetCursorCorrectArea
// 0x0004 (0x0004 - 0x0000)
struct WB_ui_BrainMap_1_C_GetCursorCorrectArea final
{
public:
	float                                         Area;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_GetCursorCorrectArea) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_GetCursorCorrectArea");
static_assert(sizeof(WB_ui_BrainMap_1_C_GetCursorCorrectArea) == 0x000004, "Wrong size on WB_ui_BrainMap_1_C_GetCursorCorrectArea");
static_assert(offsetof(WB_ui_BrainMap_1_C_GetCursorCorrectArea, Area) == 0x000000, "Member 'WB_ui_BrainMap_1_C_GetCursorCorrectArea::Area' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupDebugParam
// 0x00B0 (0x00B0 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupDebugParam final
{
public:
	class FText                                   _TextCursorCorrectArea;                            // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   _TextCursorCorrectSpeed;                           // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   _TextCursorSpeed;                                  // 0x0030(0x0018)(Edit, BlueprintVisible)
	class UObject*                                _Manager;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F66[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemBase*                     CallFunc_SearchItem_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADebuggingItemFloat*                    K2Node_DynamicCast_AsDebugging_Item_Float;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F67[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemBase*                     CallFunc_SearchItem_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F68[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADebuggingItemFloat*                    K2Node_DynamicCast_AsDebugging_Item_Float_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F69[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADebuggingItemBase*                     CallFunc_SearchItem_ReturnValue_2;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADebuggingItemFloat*                    K2Node_DynamicCast_AsDebugging_Item_Float_2;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F6A[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupDebugParam) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_SetupDebugParam");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupDebugParam) == 0x0000B0, "Wrong size on WB_ui_BrainMap_1_C_SetupDebugParam");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, _TextCursorCorrectArea) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::_TextCursorCorrectArea' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, _TextCursorCorrectSpeed) == 0x000018, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::_TextCursorCorrectSpeed' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, _TextCursorSpeed) == 0x000030, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::_TextCursorSpeed' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, _Manager) == 0x000048, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_SearchItem_ReturnValue) == 0x000058, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_SearchItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_AsDebugging_Item_Float) == 0x000060, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_AsDebugging_Item_Float' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_SearchItem_ReturnValue_1) == 0x000070, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_SearchItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_GetValue_ReturnValue) == 0x000078, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_AsDebugging_Item_Float_1) == 0x000080, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_AsDebugging_Item_Float_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_GetValue_ReturnValue_1) == 0x00008C, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_SearchItem_ReturnValue_2) == 0x000090, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_SearchItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_GetDebuggingManager_Manager) == 0x000098, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_AsDebugging_Item_Float_2) == 0x0000A0, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_AsDebugging_Item_Float_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDebugParam, CallFunc_GetValue_ReturnValue_2) == 0x0000AC, "Member 'WB_ui_BrainMap_1_C_SetupDebugParam::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.IsLineEffectAnimation
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_BrainMap_1_C_IsLineEffectAnimation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue_1;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimation_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingAnimation_ReturnValue_1;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F6B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIBase*                                CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingAnimation_ReturnValue_2;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsLineEffectAnimation) == 0x000008, "Wrong alignment on WB_ui_BrainMap_1_C_IsLineEffectAnimation");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsLineEffectAnimation) == 0x000020, "Wrong size on WB_ui_BrainMap_1_C_IsLineEffectAnimation");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, ReturnValue) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_GetVisibility_ReturnValue) == 0x000001, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_GetVisibility_ReturnValue_1) == 0x000002, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_GetVisibility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000004, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_IsPlayingAnimation_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_IsPlayingAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_IsPlayingAnimation_ReturnValue_1) == 0x000006, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_IsPlayingAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_IsPlayingAnimation_ReturnValue_2) == 0x000018, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_IsPlayingAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsLineEffectAnimation, CallFunc_BooleanOR_ReturnValue_1) == 0x00001A, "Member 'WB_ui_BrainMap_1_C_IsLineEffectAnimation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.CheckInputMouse
// 0x0002 (0x0002 - 0x0000)
struct WB_ui_BrainMap_1_C_CheckInputMouse final
{
public:
	bool                                          IsInput;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckRectangle_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_CheckInputMouse) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_CheckInputMouse");
static_assert(sizeof(WB_ui_BrainMap_1_C_CheckInputMouse) == 0x000002, "Wrong size on WB_ui_BrainMap_1_C_CheckInputMouse");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckInputMouse, IsInput) == 0x000000, "Member 'WB_ui_BrainMap_1_C_CheckInputMouse::IsInput' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_CheckInputMouse, CallFunc_CheckRectangle_ReturnValue) == 0x000001, "Member 'WB_ui_BrainMap_1_C_CheckInputMouse::CallFunc_CheckRectangle_ReturnValue' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.SetupDefaultParts
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_BrainMap_1_C_SetupDefaultParts final
{
public:
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BrainMap_1_C_SetupDefaultParts) == 0x000004, "Wrong alignment on WB_ui_BrainMap_1_C_SetupDefaultParts");
static_assert(sizeof(WB_ui_BrainMap_1_C_SetupDefaultParts) == 0x000020, "Wrong size on WB_ui_BrainMap_1_C_SetupDefaultParts");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDefaultParts, K2Node_MakeStruct_LinearColor) == 0x000000, "Member 'WB_ui_BrainMap_1_C_SetupDefaultParts::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_SetupDefaultParts, K2Node_MakeStruct_LinearColor_1) == 0x000010, "Member 'WB_ui_BrainMap_1_C_SetupDefaultParts::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");

// Function WB_ui_BrainMap_1.WB_ui_BrainMap_1_C.IsSelectSkill
// 0x0006 (0x0006 - 0x0000)
struct WB_ui_BrainMap_1_C_IsSelectSkill final
{
public:
	bool                                          IsSelect;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RetValue;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_BrainMap_1_C_IsSelectSkill) == 0x000001, "Wrong alignment on WB_ui_BrainMap_1_C_IsSelectSkill");
static_assert(sizeof(WB_ui_BrainMap_1_C_IsSelectSkill) == 0x000006, "Wrong size on WB_ui_BrainMap_1_C_IsSelectSkill");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, IsSelect) == 0x000000, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::IsSelect' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, RetValue) == 0x000001, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::RetValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000002, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, CallFunc_Less_IntInt_ReturnValue) == 0x000003, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BrainMap_1_C_IsSelectSkill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000005, "Member 'WB_ui_BrainMap_1_C_IsSelectSkill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

