#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_UseItem

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.ExecuteUbergraph_BTT_ch_UseItem
// 0x00A0 (0x00A0 - 0x0000)
struct BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4772[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4773[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_1;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CancelUseItem_bDummy;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4774[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_2;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4775[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface_3;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInputAI_UseItem_bON;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckNeedsUseItem_bNeedsUseItem;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem");
static_assert(sizeof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem) == 0x0000A0, "Wrong size on BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, EntryPoint) == 0x000000, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, Temp_int_Variable) == 0x000004, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_OwnerController_1) == 0x000018, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_ControlledPawn_1) == 0x000020, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000030, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_AsBPI_Player_AIInterface_1) == 0x000048, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_AsBPI_Player_AIInterface_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, CallFunc_CancelUseItem_bDummy) == 0x000059, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::CallFunc_CancelUseItem_bDummy' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_AsBPI_Player_AIInterface_2) == 0x000060, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_AsBPI_Player_AIInterface_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_AsBPI_Player_AIInterface_3) == 0x000078, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_AsBPI_Player_AIInterface_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, CallFunc_IsInputAI_UseItem_bON) == 0x000089, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::CallFunc_IsInputAI_UseItem_bON' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, CallFunc_CheckNeedsUseItem_bNeedsUseItem) == 0x00008A, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::CallFunc_CheckNeedsUseItem_bNeedsUseItem' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_SwitchInteger_CmpSuccess) == 0x00008B, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_OwnerController) == 0x000090, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem, K2Node_Event_ControlledPawn) == 0x000098, "Member 'BTT_ch_UseItem_C_ExecuteUbergraph_BTT_ch_UseItem::K2Node_Event_ControlledPawn' has a wrong offset!");

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_UseItem_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_UseItem_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_ReceiveAbortAI");
static_assert(sizeof(BTT_ch_UseItem_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTT_ch_UseItem_C_ReceiveAbortAI");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTT_ch_UseItem_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_UseItem_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTT_ch_UseItem_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_UseItem_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_ReceiveTickAI");
static_assert(sizeof(BTT_ch_UseItem_C_ReceiveTickAI) == 0x000018, "Wrong size on BTT_ch_UseItem_C_ReceiveTickAI");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTT_ch_UseItem_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_UseItem_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTT_ch_UseItem_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTT_ch_UseItem_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTT_ch_UseItem_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_ReceiveExecuteAI");
static_assert(sizeof(BTT_ch_UseItem_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTT_ch_UseItem_C_ReceiveExecuteAI");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTT_ch_UseItem_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTT_ch_UseItem_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.Exit
// 0x0020 (0x0020 - 0x0000)
struct BTT_ch_UseItem_C_Exit final
{
public:
	class APawn*                                  Controlled_pawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_UseItem_C_Exit) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_Exit");
static_assert(sizeof(BTT_ch_UseItem_C_Exit) == 0x000020, "Wrong size on BTT_ch_UseItem_C_Exit");
static_assert(offsetof(BTT_ch_UseItem_C_Exit, Controlled_pawn) == 0x000000, "Member 'BTT_ch_UseItem_C_Exit::Controlled_pawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_Exit, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000008, "Member 'BTT_ch_UseItem_C_Exit::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_Exit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BTT_ch_UseItem_C_Exit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BTT_ch_UseItem.BTT_ch_UseItem_C.CheckNeedsUseItem
// 0x0058 (0x0058 - 0x0000)
struct BTT_ch_UseItem_C_CheckNeedsUseItem final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedsUseItem;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4776[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerAIInterface_C> K2Node_DynamicCast_AsBPI_Player_AIInterface;       // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeItemID                                CallFunc_GetUseItemID_ItemID;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4777[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedsStatusAssist_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4778[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingItem_bUsing;                       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeItemID                                CallFunc_IsUsingItem_ItemID;                       // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTT_ch_UseItem_C_CheckNeedsUseItem) == 0x000008, "Wrong alignment on BTT_ch_UseItem_C_CheckNeedsUseItem");
static_assert(sizeof(BTT_ch_UseItem_C_CheckNeedsUseItem) == 0x000058, "Wrong size on BTT_ch_UseItem_C_CheckNeedsUseItem");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, Pawn) == 0x000000, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::Pawn' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, bNeedsUseItem) == 0x000008, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::bNeedsUseItem' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, K2Node_DynamicCast_AsBPI_Player_AIInterface) == 0x000010, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::K2Node_DynamicCast_AsBPI_Player_AIInterface' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_GetUseItemID_ItemID) == 0x000021, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_GetUseItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_GetPlayer_ReturnValue) == 0x000030, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_NeedsStatusAssist_ReturnValue) == 0x000038, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_NeedsStatusAssist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000040, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_IsUsingItem_bUsing) == 0x000051, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_IsUsingItem_bUsing' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_IsUsingItem_ItemID) == 0x000052, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_IsUsingItem_ItemID' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000053, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000054, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTT_ch_UseItem_C_CheckNeedsUseItem, CallFunc_BooleanOR_ReturnValue) == 0x000055, "Member 'BTT_ch_UseItem_C_CheckNeedsUseItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

