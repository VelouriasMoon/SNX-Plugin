#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_PlayerHologramInterface

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"


namespace SDK::Params
{

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyHologramAttack
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttack::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyHologramAttackBegin
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackBegin::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyHologramAttackEnd
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyHologramAttackEnd::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.HologramWeaponEmissive
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_HologramWeaponEmissive final
{
public:
	float                                         Emissive;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_HologramWeaponEmissive) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_HologramWeaponEmissive");
static_assert(sizeof(BPI_PlayerHologramInterface_C_HologramWeaponEmissive) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_HologramWeaponEmissive");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramWeaponEmissive, Emissive) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_HologramWeaponEmissive::Emissive' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramWeaponEmissive, PlayerId) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_HologramWeaponEmissive::PlayerId' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramWeaponEmissive, bDummy) == 0x000005, "Member 'BPI_PlayerHologramInterface_C_HologramWeaponEmissive::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.HologramAttackScar
// 0x0010 (0x0010 - 0x0000)
struct BPI_PlayerHologramInterface_C_HologramAttackScar final
{
public:
	class FName                                   HightTargetSocket;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_HologramAttackScar) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_HologramAttackScar");
static_assert(sizeof(BPI_PlayerHologramInterface_C_HologramAttackScar) == 0x000010, "Wrong size on BPI_PlayerHologramInterface_C_HologramAttackScar");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramAttackScar, HightTargetSocket) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_HologramAttackScar::HightTargetSocket' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramAttackScar, Angle) == 0x000008, "Member 'BPI_PlayerHologramInterface_C_HologramAttackScar::Angle' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_HologramAttackScar, bDummy) == 0x00000C, "Member 'BPI_PlayerHologramInterface_C_HologramAttackScar::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyCombinationAttack
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttack::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyCombinationAttackBegin
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackBegin::bDummy' has a wrong offset!");

// Function BPI_PlayerHologramInterface.BPI_PlayerHologramInterface_C.AnimNotifyCombinationAttackEnd
// 0x0008 (0x0008 - 0x0000)
struct BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd) == 0x000004, "Wrong alignment on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd");
static_assert(sizeof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd) == 0x000008, "Wrong size on BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd, Param) == 0x000000, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd::Param' has a wrong offset!");
static_assert(offsetof(BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd, bDummy) == 0x000004, "Member 'BPI_PlayerHologramInterface_C_AnimNotifyCombinationAttackEnd::bDummy' has a wrong offset!");

}

