#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SASCableAnim

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SASCableAnim_structs.hpp"


namespace SDK
{

// Class SASCableAnim.SCAnimationDataAsset
// 0x0010 (0x0040 - 0x0030)
class USCAnimationDataAsset final : public UDataAsset
{
public:
	float                                         blendWeightParts_Divid;                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         blendWeightParts_Minus;                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         blendWeightMax;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         blendWeightMinRate;                                // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SCAnimationDataAsset">();
	}
	static class USCAnimationDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimationDataAsset>();
	}
};
static_assert(alignof(USCAnimationDataAsset) == 0x000008, "Wrong alignment on USCAnimationDataAsset");
static_assert(sizeof(USCAnimationDataAsset) == 0x000040, "Wrong size on USCAnimationDataAsset");
static_assert(offsetof(USCAnimationDataAsset, blendWeightParts_Divid) == 0x000030, "Member 'USCAnimationDataAsset::blendWeightParts_Divid' has a wrong offset!");
static_assert(offsetof(USCAnimationDataAsset, blendWeightParts_Minus) == 0x000034, "Member 'USCAnimationDataAsset::blendWeightParts_Minus' has a wrong offset!");
static_assert(offsetof(USCAnimationDataAsset, blendWeightMax) == 0x000038, "Member 'USCAnimationDataAsset::blendWeightMax' has a wrong offset!");
static_assert(offsetof(USCAnimationDataAsset, blendWeightMinRate) == 0x00003C, "Member 'USCAnimationDataAsset::blendWeightMinRate' has a wrong offset!");

// Class SASCableAnim.SCAnimInstance
// 0x0070 (0x02E0 - 0x0270)
class USCAnimInstance final : public UAnimInstance
{
public:
	TMap<class FName, struct FTransform>          SASCodeSocketWorldLocations_;                      // 0x0270(0x0050)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBoneAnimParts>                 boneAnimPartsArray_;                               // 0x02C0(0x0010)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PhysicsIdlingSec_;                                 // 0x02D0(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15D3[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USCAnimationDataAsset*                  AnimDataAsset_;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void Init();
	void SaveToBeforeFrameSocketLocations();
	void SetSASCodeSocketWorldLocations(const TMap<class FName, struct FTransform>& Locations);
	void Update(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SCAnimInstance">();
	}
	static class USCAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<USCAnimInstance>();
	}
};
static_assert(alignof(USCAnimInstance) == 0x000010, "Wrong alignment on USCAnimInstance");
static_assert(sizeof(USCAnimInstance) == 0x0002E0, "Wrong size on USCAnimInstance");
static_assert(offsetof(USCAnimInstance, SASCodeSocketWorldLocations_) == 0x000270, "Member 'USCAnimInstance::SASCodeSocketWorldLocations_' has a wrong offset!");
static_assert(offsetof(USCAnimInstance, boneAnimPartsArray_) == 0x0002C0, "Member 'USCAnimInstance::boneAnimPartsArray_' has a wrong offset!");
static_assert(offsetof(USCAnimInstance, PhysicsIdlingSec_) == 0x0002D0, "Member 'USCAnimInstance::PhysicsIdlingSec_' has a wrong offset!");
static_assert(offsetof(USCAnimInstance, AnimDataAsset_) == 0x0002D8, "Member 'USCAnimInstance::AnimDataAsset_' has a wrong offset!");

}

