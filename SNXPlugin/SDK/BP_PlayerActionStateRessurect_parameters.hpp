#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateRessurect

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.ExecuteUbergraph_BP_PlayerActionStateRessurect
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9839[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* RevivePlayer)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_TriggerEffectManager_C*             CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect) == 0x000050, "Wrong size on BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, EntryPoint) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000020, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000028, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager) == 0x000030, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_GetTriggerEffectManager_BP_TriggerEffectManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_GetPlayer_ReturnValue) == 0x000038, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000040, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_PlayerActionStateRessurect_C_ExecuteUbergraph_BP_PlayerActionStateRessurect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.Enter
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerActionStateRessurect_C_Enter final
{
public:
	int32                                         Param;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Enter_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_983A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_983B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcReviveDirectionActor_C*          CallFunc_GetNpcReviveDirectionManage_Manage;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetResurrectAblePlayer_DeadPlayer;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_Enter) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_Enter");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_Enter) == 0x000050, "Wrong size on BP_PlayerActionStateRessurect_C_Enter");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, Param) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_Enter::Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateRessurect_C_Enter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_Enter_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_Enter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_SetLookAtEnable_self_CastInput) == 0x000010, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_SetLookAtEnable_bResult) == 0x000020, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_GetNpcReviveDirectionManage_Manage) == 0x000038, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_GetNpcReviveDirectionManage_Manage' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_GetResurrectAblePlayer_DeadPlayer) == 0x000040, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_GetResurrectAblePlayer_DeadPlayer' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Enter, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_PlayerActionStateRessurect_C_Enter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.Update
// 0x0208 (0x0208 - 0x0000)
struct BP_PlayerActionStateRessurect_C_Update final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LTimeRate;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LDistance;                                         // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_983C[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0078(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_983D[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_1; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerAccessoryEffect_bEquip;          // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_983E[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayerAccessoryEffect_Param;           // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_983F[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9840[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9841[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckSuspend_bSuspend;                    // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9842[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLearnedSkillParameter_bLearned;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9843[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLearnedSkillParameter_Parameter;       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLearnedSkillParameter_Parameter2;      // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSuspend_bSuspend_1;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9844[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_2; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue;              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9845[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x01F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9846[0x2];                                     // 0x01F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetProcess_ReturnValue;                   // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsASAnimPlayEnd_ReturnValue_1;            // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9847[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Update_ReturnValue;                       // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_Update) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_Update");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_Update) == 0x000208, "Wrong size on BP_PlayerActionStateRessurect_C_Update");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_Update::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, LTimeRate) == 0x000004, "Member 'BP_PlayerActionStateRessurect_C_Update::LTimeRate' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, LDistance) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_Update::LDistance' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds) == 0x000024, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_VSizeSquared_ReturnValue) == 0x00004C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Normal_ReturnValue) == 0x000050, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Less_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00006C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000078, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000100, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00010C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000118, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_X_1) == 0x000124, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakVector_Z_1) == 0x00012C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_SetInvalidDamage_Dummy) == 0x00013C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_1) == 0x000140, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetPlayerAccessoryEffect_bEquip) == 0x000144, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetPlayerAccessoryEffect_bEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetPlayerAccessoryEffect_Param) == 0x000148, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetPlayerAccessoryEffect_Param' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetPlayerID_self_CastInput) == 0x000150, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetPlayerID_ReturnValue) == 0x000160, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000161, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_IsDead_self_CastInput) == 0x000170, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_IsDead_bDead) == 0x000180, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_CheckSuspend_bSuspend) == 0x000181, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_CheckSuspend_bSuspend' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetPlayerManager_PlayerManager) == 0x000188, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetLearnedSkillParameter_bLearned) == 0x000190, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetLearnedSkillParameter_bLearned' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetLearnedSkillParameter_Parameter) == 0x000194, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetLearnedSkillParameter_Parameter' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetLearnedSkillParameter_Parameter2) == 0x000198, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetLearnedSkillParameter_Parameter2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_CheckSuspend_bSuspend_1) == 0x00019C, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_CheckSuspend_bSuspend_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001A0, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_FindLookAtRotation_ReturnValue) == 0x0001AC, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_2) == 0x0001B8, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetActorDeltaSeconds_ActorDeltaSeconds_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001BC, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue) == 0x0001C8, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_RInterpTo_ReturnValue) == 0x0001CC, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakRotator_Roll) == 0x0001D8, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakRotator_Pitch) == 0x0001DC, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_BreakRotator_Yaw) == 0x0001E0, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, Temp_float_Variable) == 0x0001E4, "Member 'BP_PlayerActionStateRessurect_C_Update::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_MakeRotator_ReturnValue) == 0x0001E8, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001F4, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, Temp_bool_Variable) == 0x0001F5, "Member 'BP_PlayerActionStateRessurect_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, K2Node_Select_Default) == 0x0001F8, "Member 'BP_PlayerActionStateRessurect_C_Update::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_GetProcess_ReturnValue) == 0x0001FC, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_GetProcess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, K2Node_SwitchInteger_CmpSuccess) == 0x000200, "Member 'BP_PlayerActionStateRessurect_C_Update::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_IsASAnimPlayEnd_ReturnValue_1) == 0x000201, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_IsASAnimPlayEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Update, CallFunc_Update_ReturnValue) == 0x000204, "Member 'BP_PlayerActionStateRessurect_C_Update::CallFunc_Update_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.OnSuccessResurrect
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerActionStateRessurect_C_OnSuccessResurrect final
{
public:
	class AActor*                                 Param_RevivePlayer;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_OnSuccessResurrect) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_OnSuccessResurrect");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_OnSuccessResurrect) == 0x000008, "Wrong size on BP_PlayerActionStateRessurect_C_OnSuccessResurrect");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_OnSuccessResurrect, Param_RevivePlayer) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_OnSuccessResurrect::Param_RevivePlayer' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.Exit
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerActionStateRessurect_C_Exit final
{
public:
	int32                                         NextStateIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Exit_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9848[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInvalidDamage_Dummy;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9849[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LookAtInterface_C> CallFunc_SetLookAtEnable_self_CastInput;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLookAtEnable_bResult;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_984A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_Exit) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_Exit");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_Exit) == 0x000048, "Wrong size on BP_PlayerActionStateRessurect_C_Exit");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, NextStateIndex) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_Exit::NextStateIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateRessurect_C_Exit::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_Exit_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_Exit_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x000010, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_SetInvalidDamage_Dummy) == 0x000019, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_SetInvalidDamage_Dummy' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_SetLookAtEnable_self_CastInput) == 0x000020, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_SetLookAtEnable_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_SetLookAtEnable_bResult) == 0x000030, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_SetLookAtEnable_bResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_GetPlayerManager_PlayerManager) == 0x000038, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_Exit, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_PlayerActionStateRessurect_C_Exit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.CheckSuspend
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerActionStateRessurect_C_CheckSuspend final
{
public:
	bool                                          bSuspend;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbSuspend;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_984B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_984C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnResurrect_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_CheckSuspend) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_CheckSuspend");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_CheckSuspend) == 0x000030, "Wrong size on BP_PlayerActionStateRessurect_C_CheckSuspend");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, bSuspend) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::bSuspend' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, LbSuspend) == 0x000001, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::LbSuspend' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, CallFunc_IsDead_self_CastInput) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, CallFunc_IsDead_bDead) == 0x000018, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_CheckSuspend, CallFunc_IsOnResurrect_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateRessurect_C_CheckSuspend::CallFunc_IsOnResurrect_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.BeginReviveParticle
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateRessurect_C_BeginReviveParticle final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcReviveDirectionActor_C*          CallFunc_GetNpcReviveDirectionManage_Manage;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_BeginReviveParticle) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_BeginReviveParticle");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_BeginReviveParticle) == 0x000010, "Wrong size on BP_PlayerActionStateRessurect_C_BeginReviveParticle");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_BeginReviveParticle, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_BeginReviveParticle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_BeginReviveParticle, CallFunc_GetNpcReviveDirectionManage_Manage) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_BeginReviveParticle::CallFunc_GetNpcReviveDirectionManage_Manage' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.EndReviveParticle
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateRessurect_C_EndReviveParticle final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcReviveDirectionActor_C*          CallFunc_GetNpcReviveDirectionManage_Manage;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_EndReviveParticle) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_EndReviveParticle");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_EndReviveParticle) == 0x000010, "Wrong size on BP_PlayerActionStateRessurect_C_EndReviveParticle");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_EndReviveParticle, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_EndReviveParticle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_EndReviveParticle, CallFunc_GetNpcReviveDirectionManage_Manage) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_EndReviveParticle::CallFunc_GetNpcReviveDirectionManage_Manage' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.PlayLoopSe
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerActionStateRessurect_C_PlayLoopSe final
{
public:
	class URSAtomComponentBase*                   CallFunc_PlaySoundAttachedRS_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_PlayLoopSe) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_PlayLoopSe");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_PlayLoopSe) == 0x000008, "Wrong size on BP_PlayerActionStateRessurect_C_PlayLoopSe");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayLoopSe, CallFunc_PlaySoundAttachedRS_ReturnValue) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_PlayLoopSe::CallFunc_PlaySoundAttachedRS_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.PlayEndSE
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerActionStateRessurect_C_PlayEndSE final
{
public:
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_984D[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_PlayEndSE) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_PlayEndSE");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_PlayEndSE) == 0x000030, "Wrong size on BP_PlayerActionStateRessurect_C_PlayEndSE");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, Temp_object_Variable) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, Temp_object_Variable_1) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, Temp_bool_Variable) == 0x000010, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, K2Node_Select_Default) == 0x000020, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_PlayEndSE, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PlayerActionStateRessurect_C_PlayEndSE::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.EndReviveCamera
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateRessurect_C_EndReviveCamera final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcReviveDirectionActor_C*          CallFunc_GetNpcReviveDirectionManage_Manage;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_EndReviveCamera) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_EndReviveCamera");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_EndReviveCamera) == 0x000010, "Wrong size on BP_PlayerActionStateRessurect_C_EndReviveCamera");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_EndReviveCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_EndReviveCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_EndReviveCamera, CallFunc_GetNpcReviveDirectionManage_Manage) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_EndReviveCamera::CallFunc_GetNpcReviveDirectionManage_Manage' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.UpdateReticleParticle
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerActionStateRessurect_C_UpdateReticleParticle final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_984E[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle) == 0x000004, "Wrong alignment on BP_PlayerActionStateRessurect_C_UpdateReticleParticle");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle) == 0x000010, "Wrong size on BP_PlayerActionStateRessurect_C_UpdateReticleParticle");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle, DeltaSeconds) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_UpdateReticleParticle::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_PlayerActionStateRessurect_C_UpdateReticleParticle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_UpdateReticleParticle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_UpdateReticleParticle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerActionStateRessurect_C_UpdateReticleParticle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerActionStateRessurect.BP_PlayerActionStateRessurect_C.DelayReviveParticle
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerActionStateRessurect_C_DelayReviveParticle final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NpcReviveDirectionActor_C*          CallFunc_GetNpcReviveDirectionManage_Manage;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReticleParticleDelay_DelayTime;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerActionStateRessurect_C_DelayReviveParticle) == 0x000008, "Wrong alignment on BP_PlayerActionStateRessurect_C_DelayReviveParticle");
static_assert(sizeof(BP_PlayerActionStateRessurect_C_DelayReviveParticle) == 0x000018, "Wrong size on BP_PlayerActionStateRessurect_C_DelayReviveParticle");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_DelayReviveParticle, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_PlayerActionStateRessurect_C_DelayReviveParticle::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_DelayReviveParticle, CallFunc_GetNpcReviveDirectionManage_Manage) == 0x000008, "Member 'BP_PlayerActionStateRessurect_C_DelayReviveParticle::CallFunc_GetNpcReviveDirectionManage_Manage' has a wrong offset!");
static_assert(offsetof(BP_PlayerActionStateRessurect_C_DelayReviveParticle, CallFunc_GetReticleParticleDelay_DelayTime) == 0x000010, "Member 'BP_PlayerActionStateRessurect_C_DelayReviveParticle::CallFunc_GetReticleParticleDelay_DelayTime' has a wrong offset!");

}

