#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BrainCrash

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BPI_BrainCrash.BPI_BrainCrash_C.OnBrainCrashStart
// 0x0001 (0x0001 - 0x0000)
struct BPI_BrainCrash_C_OnBrainCrashStart final
{
public:
	bool                                          bBeginActor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_BrainCrash_C_OnBrainCrashStart) == 0x000001, "Wrong alignment on BPI_BrainCrash_C_OnBrainCrashStart");
static_assert(sizeof(BPI_BrainCrash_C_OnBrainCrashStart) == 0x000001, "Wrong size on BPI_BrainCrash_C_OnBrainCrashStart");
static_assert(offsetof(BPI_BrainCrash_C_OnBrainCrashStart, bBeginActor) == 0x000000, "Member 'BPI_BrainCrash_C_OnBrainCrashStart::bBeginActor' has a wrong offset!");

// Function BPI_BrainCrash.BPI_BrainCrash_C.OnBrainCrashEnd
// 0x0010 (0x0010 - 0x0000)
struct BPI_BrainCrash_C_OnBrainCrashEnd final
{
public:
	bool                                          bBeginActor;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43BA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           PlayerEndMontage;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BrainCrash_C_OnBrainCrashEnd) == 0x000008, "Wrong alignment on BPI_BrainCrash_C_OnBrainCrashEnd");
static_assert(sizeof(BPI_BrainCrash_C_OnBrainCrashEnd) == 0x000010, "Wrong size on BPI_BrainCrash_C_OnBrainCrashEnd");
static_assert(offsetof(BPI_BrainCrash_C_OnBrainCrashEnd, bBeginActor) == 0x000000, "Member 'BPI_BrainCrash_C_OnBrainCrashEnd::bBeginActor' has a wrong offset!");
static_assert(offsetof(BPI_BrainCrash_C_OnBrainCrashEnd, PlayerEndMontage) == 0x000008, "Member 'BPI_BrainCrash_C_OnBrainCrashEnd::PlayerEndMontage' has a wrong offset!");

// Function BPI_BrainCrash.BPI_BrainCrash_C.GetBrainCrashDamageLocation
// 0x000C (0x000C - 0x0000)
struct BPI_BrainCrash_C_GetBrainCrashDamageLocation final
{
public:
	struct FVector                                WorldLocation;                                     // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_BrainCrash_C_GetBrainCrashDamageLocation) == 0x000004, "Wrong alignment on BPI_BrainCrash_C_GetBrainCrashDamageLocation");
static_assert(sizeof(BPI_BrainCrash_C_GetBrainCrashDamageLocation) == 0x00000C, "Wrong size on BPI_BrainCrash_C_GetBrainCrashDamageLocation");
static_assert(offsetof(BPI_BrainCrash_C_GetBrainCrashDamageLocation, WorldLocation) == 0x000000, "Member 'BPI_BrainCrash_C_GetBrainCrashDamageLocation::WorldLocation' has a wrong offset!");

}

