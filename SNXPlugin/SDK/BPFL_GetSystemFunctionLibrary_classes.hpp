#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_GetSystemFunctionLibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPFL_GetSystemFunctionLibrary.BPFL_GetSystemFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBPFL_GetSystemFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetPlayerManager(class UObject* __WorldContext, class ABP_PlayerManager_C** PlayerManager);
	static void GetPlayerFixParam(class UObject* __WorldContext, class UBP_PlayerFixParamater_C** Param);
	static void GetLevelManager(class UObject* __WorldContext, class ABP_LevelManager_C** LevelManager);
	static void GetSoundManager(class UObject* __WorldContext, class ABP_SoundManager_C** Sound_Manager);
	static void GetParticleManager(class UObject* __WorldContext, class ABP_ParticleManager_C** Particle_Manager);
	static void GetSASManager(class UObject* __WorldContext, class ABP_SASManager_C** SAS_Manager);
	static void GetGameSystemManager(class UObject* __WorldContext, class ABP_GameSystemManager_C** Manater);
	static void GetEnemyManager(class UObject* __WorldContext, class ABP_EnemyManager_C** Manager);
	static void GetHitManager(class UObject* __WorldContext, class AHitManager_C** Manager);
	static void GetBrainCrashManager(class UObject* __WorldContext, class ABP_BrainCrashManager_C** Manager);
	static void GetPostProcessManager(class UObject* __WorldContext, class ABP_PostProcessManager_C** Manager);
	static void GetDatabaseManager(class UObject* __WorldContext, class UDatabaseManager** Manager);
	static void GetDebuggingManager(class UObject* __WorldContext, class UObject** Manager);
	static void GetStageParameterSettingManager(class UObject* __WorldContext, class ABP_StageParameterSettingVolumeManager_C** Settingmanager);
	static void GetRSGameMode(class UObject* __WorldContext, class ARSGameModeBP_C** GameMode);
	static void GetRenderTargetManager(class UObject* __WorldContext, class ABP_RenderTargetManager_C** Manager);
	static void GetBrainFieldManager(class UObject* __WorldContext, class ABP_BrainFieldManager_C** Manager);
	static void GetRadialBlurManager(class UObject* __WorldContext, class ABP_RadialBlurManager_C** RadialBlurManager);
	static void GetEventManager(class UObject* __WorldContext, class ABP_EventManager_C** EventManager);
	static void GetBattleManager(class UObject* __WorldContext, class ABP_BattleManager_C** BattleManager);
	static void GetStageManager(class UObject* __WorldContext, class ABP_StageManager_C** Manager);
	static void GetArrangeItemManager(class UObject* __WorldContext, class AArrangeItemManager** ArrangeItemManager);
	static void GetNpcManager(class UObject* __WorldContext, class UNpcManager** NpcManager);
	static void GetActionManager(class UObject* __WorldContext, class AActionManager** ActionManager);
	static void GetSceneManager(class UObject* __WorldContext, class ABP_SceneManager_C** SceneManager);
	static void GetBSPManager(class UObject* __WorldContext, class ABP_BSPManager_C** BSPManager);
	static void GetHUDMainGame(class UObject* __WorldContext, class AHUDMainGame_C** HUDMainGame);
	static void GetBattleSituation(class UObject* __WorldContext, class UBattleSituationComponent** BattleSituation);
	static void GetPsychicObjectManager(class UObject* __WorldContext, class APsychicObjectManager_C** PsyObjManager);
	static void GetResourceManager(class UObject* __WorldContext, class ABP_ResourceManager_C** ResourceManager);
	static void GetMovieManager(class UObject* __WorldContext, class ABP_MovieManager_C** AsBP_Movie_Manager);
	static void GetInputManager(class UObject* __WorldContext, class ABP_InputManager_C** BP_InputManager);
	static void GetMessageHudManager(class UObject* __WorldContext, class AMessageHudManager** MessageHudManager);
	static void GetBattlefieldManager(class UObject* __WorldContext, class ABP_BattlefieldManager_C** BP_BattlefieldManager);
	static void GetParallelObjectManager(class UObject* __WorldContext, class ARSParallelObjectManager** NewParam);
	static void GetDropItemManager(class UObject* __WorldContext, class ADropItemManager** Drop_Item_Manager);
	static void GetUserParamManager(class UObject* __WorldContext, class UUserParamManager** User_Param_Manager);
	static void GetRSGameInstance(class UObject* __WorldContext, class URSGameInstanceBP_C** AsRSGame_Instance_BP);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPFL_GetSystemFunctionLibrary_C">();
	}
	static class UBPFL_GetSystemFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPFL_GetSystemFunctionLibrary_C>();
	}
};
static_assert(alignof(UBPFL_GetSystemFunctionLibrary_C) == 0x000008, "Wrong alignment on UBPFL_GetSystemFunctionLibrary_C");
static_assert(sizeof(UBPFL_GetSystemFunctionLibrary_C) == 0x000028, "Wrong size on UBPFL_GetSystemFunctionLibrary_C");

}

