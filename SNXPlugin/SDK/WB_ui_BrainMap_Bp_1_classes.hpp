#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BrainMap_Bp_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_BrainMap_Bp_1.WB_ui_BrainMap_Bp_1_C
// 0x0040 (0x03C8 - 0x0388)
class UWB_ui_BrainMap_Bp_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base;                                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_Bmap_icon_bp_1_num;                           // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ConnectFlag;                                       // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerSkill                                  SkillID;                                           // 0x03BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockFlag;                                          // 0x03BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OpenFlag;                                          // 0x03BE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50FB[0x1];                                     // 0x03BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SkillIndex;                                        // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_BrainMap_Bp_1(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void OnInitialized();
	void Construct();
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateClose(int32 SubState);
	void SetCost(int32 Cost);
	void SetIndex(int32 Param_Index);
	void GetIndex(int32* Param_Index);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_BrainMap_Bp_1_C">();
	}
	static class UWB_ui_BrainMap_Bp_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_BrainMap_Bp_1_C>();
	}
};
static_assert(alignof(UWB_ui_BrainMap_Bp_1_C) == 0x000008, "Wrong alignment on UWB_ui_BrainMap_Bp_1_C");
static_assert(sizeof(UWB_ui_BrainMap_Bp_1_C) == 0x0003C8, "Wrong size on UWB_ui_BrainMap_Bp_1_C");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_BrainMap_Bp_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, Out) == 0x000390, "Member 'UWB_ui_BrainMap_Bp_1_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, In) == 0x000398, "Member 'UWB_ui_BrainMap_Bp_1_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, Default) == 0x0003A0, "Member 'UWB_ui_BrainMap_Bp_1_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, Base) == 0x0003A8, "Member 'UWB_ui_BrainMap_Bp_1_C::Base' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, Text_Bmap_icon_bp_1_num) == 0x0003B0, "Member 'UWB_ui_BrainMap_Bp_1_C::Text_Bmap_icon_bp_1_num' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, ConnectFlag) == 0x0003B8, "Member 'UWB_ui_BrainMap_Bp_1_C::ConnectFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, SkillID) == 0x0003BC, "Member 'UWB_ui_BrainMap_Bp_1_C::SkillID' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, LockFlag) == 0x0003BD, "Member 'UWB_ui_BrainMap_Bp_1_C::LockFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, OpenFlag) == 0x0003BE, "Member 'UWB_ui_BrainMap_Bp_1_C::OpenFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_BrainMap_Bp_1_C, SkillIndex) == 0x0003C0, "Member 'UWB_ui_BrainMap_Bp_1_C::SkillIndex' has a wrong offset!");

}

