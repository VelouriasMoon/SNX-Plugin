#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AttachmentManageComponent

#include "Basic.hpp"

#include "BP_AttachmentManageComponent_classes.hpp"
#include "BP_AttachmentManageComponent_parameters.hpp"


namespace SDK
{

// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ED_LoadCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_AttachmentManageComponent_C::ED_LoadCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ED_LoadCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ExecuteUbergraph_BP_AttachmentManageComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::ExecuteUbergraph_BP_AttachmentManageComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ExecuteUbergraph_BP_AttachmentManageComponent");

	Params::BP_AttachmentManageComponent_C_ExecuteUbergraph_BP_AttachmentManageComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.OnHiddenSetoMask
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHidden                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::OnHiddenSetoMask(bool bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "OnHiddenSetoMask");

	Params::BP_AttachmentManageComponent_C_OnHiddenSetoMask Parms{};

	Parms.bHidden = bHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.LoadAttachmentMeshOld
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::LoadAttachmentMeshOld(int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "LoadAttachmentMeshOld");

	Params::BP_AttachmentManageComponent_C_LoadAttachmentMeshOld Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_AttachmentManageComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.OnLoaded_0CFCF78E4D34EAE44DCD22AC2752519B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::OnLoaded_0CFCF78E4D34EAE44DCD22AC2752519B(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "OnLoaded_0CFCF78E4D34EAE44DCD22AC2752519B");

	Params::BP_AttachmentManageComponent_C_OnLoaded_0CFCF78E4D34EAE44DCD22AC2752519B Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.Equip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerAttachment                       AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentItemID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::Equip(EPlayerAttachment AttachmentIndex, int32 AttachmentItemID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "Equip");

	Params::BP_AttachmentManageComponent_C_Equip Parms{};

	Parms.AttachmentIndex = AttachmentIndex;
	Parms.AttachmentItemID = AttachmentItemID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetAttachmentDataTable
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentItemID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFAttachmentData                 Param_AttachmentData                                   (Parm, OutParm, HasGetValueTypeHash)
// struct FFAttachmentEquipData            Param_EquipData                                        (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetAttachmentDataTable(int32 AttachmentItemID, bool* bSuccess, struct FFAttachmentData* Param_AttachmentData, struct FFAttachmentEquipData* Param_EquipData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetAttachmentDataTable");

	Params::BP_AttachmentManageComponent_C_GetAttachmentDataTable Parms{};

	Parms.AttachmentItemID = AttachmentItemID;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (Param_AttachmentData != nullptr)
		*Param_AttachmentData = std::move(Parms.Param_AttachmentData);

	if (Param_EquipData != nullptr)
		*Param_EquipData = std::move(Parms.Param_EquipData);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.TakeOff
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerAttachment                       AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::TakeOff(EPlayerAttachment AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "TakeOff");

	Params::BP_AttachmentManageComponent_C_TakeOff Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.IsCategoryVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAttachmentCategory                     Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bVisibility                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::IsCategoryVisibility(EAttachmentCategory Category, bool* bVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "IsCategoryVisibility");

	Params::BP_AttachmentManageComponent_C_IsCategoryVisibility Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);

	if (bVisibility != nullptr)
		*bVisibility = Parms.bVisibility;
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.Attachment
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MeshIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          LoadedObject                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::Attachment(int32 AttachmentIndex, int32 MeshIndex, class UObject* LoadedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "Attachment");

	Params::BP_AttachmentManageComponent_C_Attachment Parms{};

	Parms.AttachmentIndex = AttachmentIndex;
	Parms.MeshIndex = MeshIndex;
	Parms.LoadedObject = LoadedObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialScalarParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialScalarParameter(class FName ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialScalarParameter");

	Params::BP_AttachmentManageComponent_C_SetMaterialScalarParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialVectorParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialVectorParameter(class FName ParamName, const struct FVector& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialVectorParameter");

	Params::BP_AttachmentManageComponent_C_SetMaterialVectorParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ReserveLoadAsset
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::ReserveLoadAsset(int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ReserveLoadAsset");

	Params::BP_AttachmentManageComponent_C_ReserveLoadAsset Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.IsLoadComplete
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bComplete                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::IsLoadComplete(int32 AttachmentIndex, bool* bComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "IsLoadComplete");

	Params::BP_AttachmentManageComponent_C_IsLoadComplete Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (bComplete != nullptr)
		*bComplete = Parms.bComplete;
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetNextLoadAsset
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSoftObjectPtr<class UObject>           Array_Element                                          (Parm, OutParm, HasGetValueTypeHash)
// int32                                   MeshIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetNextLoadAsset(int32 AttachmentIndex, bool* bSuccess, TSoftObjectPtr<class UObject>* Array_Element, int32* MeshIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetNextLoadAsset");

	Params::BP_AttachmentManageComponent_C_GetNextLoadAsset Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (Array_Element != nullptr)
		*Array_Element = Parms.Array_Element;

	if (MeshIndex != nullptr)
		*MeshIndex = Parms.MeshIndex;
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialVector4Parameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialVector4Parameter(class FName ParamName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialVector4Parameter");

	Params::BP_AttachmentManageComponent_C_SetMaterialVector4Parameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialScalarArrayParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<float>                           Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialScalarArrayParameter(TArray<class FName>& ParamName, TArray<float>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialScalarArrayParameter");

	Params::BP_AttachmentManageComponent_C_SetMaterialScalarArrayParameter Parms{};

	Parms.ParamName = std::move(ParamName);
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	ParamName = std::move(Parms.ParamName);
	Value = std::move(Parms.Value);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialVector4ArrayParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FName>                     ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FLinearColor>             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialVector4ArrayParameter(TArray<class FName>& ParamName, TArray<struct FLinearColor>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialVector4ArrayParameter");

	Params::BP_AttachmentManageComponent_C_SetMaterialVector4ArrayParameter Parms{};

	Parms.ParamName = std::move(ParamName);
	Parms.Value = std::move(Value);

	UObject::ProcessEvent(Func, &Parms);

	ParamName = std::move(Parms.ParamName);
	Value = std::move(Parms.Value);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.EquipAttachmentFromPlayerInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerInfo                      PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_AttachmentManageComponent_C::EquipAttachmentFromPlayerInfo(const struct FPlayerInfo& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "EquipAttachmentFromPlayerInfo");

	Params::BP_AttachmentManageComponent_C_EquipAttachmentFromPlayerInfo Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetAttachmentLight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Channel0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Channel1                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Channel2                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::SetAttachmentLight(bool Channel0, bool Channel1, bool Channel2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetAttachmentLight");

	Params::BP_AttachmentManageComponent_C_SetAttachmentLight Parms{};

	Parms.Channel0 = Channel0;
	Parms.Channel1 = Channel1;
	Parms.Channel2 = Channel2;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SwitchMaterial
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMaterialSwitchCache             MaterialCache                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     ExcludeSlots                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UMaterialInterface*               NewMaterial                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SwitchMaterial(struct FMaterialSwitchCache& MaterialCache, TArray<class FName>& ExcludeSlots, class UMaterialInterface* NewMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SwitchMaterial");

	Params::BP_AttachmentManageComponent_C_SwitchMaterial Parms{};

	Parms.MaterialCache = std::move(MaterialCache);
	Parms.ExcludeSlots = std::move(ExcludeSlots);
	Parms.NewMaterial = NewMaterial;

	UObject::ProcessEvent(Func, &Parms);

	MaterialCache = std::move(Parms.MaterialCache);
	ExcludeSlots = std::move(Parms.ExcludeSlots);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ResetupSwitchMaterial
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMaterialSwitchCache             MaterialCache                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FName>                     ExcludeSlots                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UMaterialInterface*               NewMaterial                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::ResetupSwitchMaterial(struct FMaterialSwitchCache& MaterialCache, TArray<class FName>& ExcludeSlots, class UMaterialInterface* NewMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ResetupSwitchMaterial");

	Params::BP_AttachmentManageComponent_C_ResetupSwitchMaterial Parms{};

	Parms.MaterialCache = std::move(MaterialCache);
	Parms.ExcludeSlots = std::move(ExcludeSlots);
	Parms.NewMaterial = NewMaterial;

	UObject::ProcessEvent(Func, &Parms);

	MaterialCache = std::move(Parms.MaterialCache);
	ExcludeSlots = std::move(Parms.ExcludeSlots);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.AnimationSetting
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           InMesh                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::AnimationSetting(class USkeletalMeshComponent* InMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "AnimationSetting");

	Params::BP_AttachmentManageComponent_C_AnimationSetting Parms{};

	Parms.InMesh = InMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetoMaskAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInBattle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::SetoMaskAnim(bool bInBattle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetoMaskAnim");

	Params::BP_AttachmentManageComponent_C_SetoMaskAnim Parms{};

	Parms.bInBattle = bInBattle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.RestoreSwitchMaterial
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMaterialSwitchCache             MaterialCahe                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_AttachmentManageComponent_C::RestoreSwitchMaterial(struct FMaterialSwitchCache& MaterialCahe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "RestoreSwitchMaterial");

	Params::BP_AttachmentManageComponent_C_RestoreSwitchMaterial Parms{};

	Parms.MaterialCahe = std::move(MaterialCahe);

	UObject::ProcessEvent(Func, &Parms);

	MaterialCahe = std::move(Parms.MaterialCahe);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.VisibilityOffOnHead
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bOff                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::VisibilityOffOnHead(bool bOff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "VisibilityOffOnHead");

	Params::BP_AttachmentManageComponent_C_VisibilityOffOnHead Parms{};

	Parms.bOff = bOff;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetRenderCustomDepth
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::SetRenderCustomDepth(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetRenderCustomDepth");

	Params::BP_AttachmentManageComponent_C_SetRenderCustomDepth Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetCustomDepthStencilValue
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetCustomDepthStencilValue(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetCustomDepthStencilValue");

	Params::BP_AttachmentManageComponent_C_SetCustomDepthStencilValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetCustomDepthStencilValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RenderCustomDepth                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CustomDepthStencilValue                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetCustomDepthStencilValue(bool* RenderCustomDepth, int32* CustomDepthStencilValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetCustomDepthStencilValue");

	Params::BP_AttachmentManageComponent_C_GetCustomDepthStencilValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderCustomDepth != nullptr)
		*RenderCustomDepth = Parms.RenderCustomDepth;

	if (CustomDepthStencilValue != nullptr)
		*CustomDepthStencilValue = Parms.CustomDepthStencilValue;
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.LoadAttachmentMesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::LoadAttachmentMesh(int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "LoadAttachmentMesh");

	Params::BP_AttachmentManageComponent_C_LoadAttachmentMesh Parms{};

	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           MeshComps                                              (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetMeshes(TArray<class UMeshComponent*>* MeshComps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetMeshes");

	Params::BP_AttachmentManageComponent_C_GetMeshes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComps != nullptr)
		*MeshComps = std::move(Parms.MeshComps);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.HiddenSetoMask
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHidden                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::HiddenSetoMask(bool bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "HiddenSetoMask");

	Params::BP_AttachmentManageComponent_C_HiddenSetoMask Parms{};

	Parms.bHidden = bHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetSetoMaskMesh
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetSetoMaskMesh(class USkeletalMeshComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetSetoMaskMesh");

	Params::BP_AttachmentManageComponent_C_GetSetoMaskMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetoMaskEventSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEvent                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::SetoMaskEventSetting(bool bEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetoMaskEventSetting");

	Params::BP_AttachmentManageComponent_C_SetoMaskEventSetting Parms{};

	Parms.bEvent = bEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.Set Attachment Visibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_AttachmentManageComponent_C::Set_Attachment_Visibility(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "Set Attachment Visibility");

	Params::BP_AttachmentManageComponent_C_Set_Attachment_Visibility Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.ResetCopyPlayerMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AttachmentManageComponent_C::ResetCopyPlayerMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "ResetCopyPlayerMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.SetMaterialFromOtherManage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_AttachmentManageComponent_C*  OtherManage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::SetMaterialFromOtherManage(class UBP_AttachmentManageComponent_C* OtherManage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "SetMaterialFromOtherManage");

	Params::BP_AttachmentManageComponent_C_SetMaterialFromOtherManage Parms{};

	Parms.OtherManage = OtherManage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.GetMeshAll
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMeshComponent*>           MeshList                                               (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::GetMeshAll(TArray<class UMeshComponent*>* MeshList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "GetMeshAll");

	Params::BP_AttachmentManageComponent_C_GetMeshAll Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshList != nullptr)
		*MeshList = std::move(Parms.MeshList);
}


// Function BP_AttachmentManageComponent.BP_AttachmentManageComponent_C.EventBackBodyAttachmentDither
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DitherRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentManageComponent_C::EventBackBodyAttachmentDither(float DitherRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentManageComponent_C", "EventBackBodyAttachmentDither");

	Params::BP_AttachmentManageComponent_C_EventBackBodyAttachmentDither Parms{};

	Parms.DitherRate = DitherRate;

	UObject::ProcessEvent(Func, &Parms);
}

}

