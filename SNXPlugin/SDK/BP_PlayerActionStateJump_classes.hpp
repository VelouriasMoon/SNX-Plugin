#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateJump

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EPlayerJumpActionStep_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"
#include "EPlayerJumpTransitionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateJump.BP_PlayerActionStateJump_C
// 0x0028 (0x0110 - 0x00E8)
class UBP_PlayerActionStateJump_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	struct FRotator                               JumpRot;                                           // 0x00E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLerpRot;                                          // 0x00F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bOrientRotation;                                   // 0x00F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EJumpActionParam                              JumpParam;                                         // 0x00F6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAnimKind                               JumpAnimKind;                                      // 0x00F7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerJumpActionStep                         JumpStateStep;                                     // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F3C[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                JumpDir;                                           // 0x00FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLandingAble;                                      // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	int32 Enter(int32 Param);
	int32 Update();
	bool Transition();
	int32 Exit(int32 NextStateIndex);
	void BeginJump();
	void BeginJumpIn();

	void CalcJumpDir(struct FVector* Dir) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateJump_C">();
	}
	static class UBP_PlayerActionStateJump_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateJump_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateJump_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateJump_C");
static_assert(sizeof(UBP_PlayerActionStateJump_C) == 0x000110, "Wrong size on UBP_PlayerActionStateJump_C");
static_assert(offsetof(UBP_PlayerActionStateJump_C, JumpRot) == 0x0000E8, "Member 'UBP_PlayerActionStateJump_C::JumpRot' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, bLerpRot) == 0x0000F4, "Member 'UBP_PlayerActionStateJump_C::bLerpRot' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, bOrientRotation) == 0x0000F5, "Member 'UBP_PlayerActionStateJump_C::bOrientRotation' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, JumpParam) == 0x0000F6, "Member 'UBP_PlayerActionStateJump_C::JumpParam' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, JumpAnimKind) == 0x0000F7, "Member 'UBP_PlayerActionStateJump_C::JumpAnimKind' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, JumpStateStep) == 0x0000F8, "Member 'UBP_PlayerActionStateJump_C::JumpStateStep' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, JumpDir) == 0x0000FC, "Member 'UBP_PlayerActionStateJump_C::JumpDir' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateJump_C, bLandingAble) == 0x000108, "Member 'UBP_PlayerActionStateJump_C::bLandingAble' has a wrong offset!");

}

