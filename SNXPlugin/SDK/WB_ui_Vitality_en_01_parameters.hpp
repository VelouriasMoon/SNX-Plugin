#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_Vitality_en_01

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_ui_Vitality_en_01.WB_ui_Vitality_en_01_C.ExecuteUbergraph_WB_ui_Vitality_en_01
// 0x0030 (0x0030 - 0x0000)
struct WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_Event_icon_1;                               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index_1;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A0B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Event_icon;                                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_index;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01) == 0x000008, "Wrong alignment on WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01");
static_assert(sizeof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01) == 0x000030, "Wrong size on WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, EntryPoint) == 0x000000, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_State) == 0x000004, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_SubState) == 0x000008, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_icon_1) == 0x000010, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_icon_1' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_index_1) == 0x000018, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_index_1' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_icon) == 0x000020, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_icon' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01, K2Node_Event_index) == 0x000028, "Member 'WB_ui_Vitality_en_01_C_ExecuteUbergraph_WB_ui_Vitality_en_01::K2Node_Event_index' has a wrong offset!");

// Function WB_ui_Vitality_en_01.WB_ui_Vitality_en_01_C.SetIcon2
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_Vitality_en_01_C_SetIcon2 final
{
public:
	class UImage*                                 Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Vitality_en_01_C_SetIcon2) == 0x000008, "Wrong alignment on WB_ui_Vitality_en_01_C_SetIcon2");
static_assert(sizeof(WB_ui_Vitality_en_01_C_SetIcon2) == 0x000010, "Wrong size on WB_ui_Vitality_en_01_C_SetIcon2");
static_assert(offsetof(WB_ui_Vitality_en_01_C_SetIcon2, Icon) == 0x000000, "Member 'WB_ui_Vitality_en_01_C_SetIcon2::Icon' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_SetIcon2, Param_Index) == 0x000008, "Member 'WB_ui_Vitality_en_01_C_SetIcon2::Param_Index' has a wrong offset!");

// Function WB_ui_Vitality_en_01.WB_ui_Vitality_en_01_C.SetIcon1
// 0x0010 (0x0010 - 0x0000)
struct WB_ui_Vitality_en_01_C_SetIcon1 final
{
public:
	class UImage*                                 Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Vitality_en_01_C_SetIcon1) == 0x000008, "Wrong alignment on WB_ui_Vitality_en_01_C_SetIcon1");
static_assert(sizeof(WB_ui_Vitality_en_01_C_SetIcon1) == 0x000010, "Wrong size on WB_ui_Vitality_en_01_C_SetIcon1");
static_assert(offsetof(WB_ui_Vitality_en_01_C_SetIcon1, Icon) == 0x000000, "Member 'WB_ui_Vitality_en_01_C_SetIcon1::Icon' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_SetIcon1, Param_Index) == 0x000008, "Member 'WB_ui_Vitality_en_01_C_SetIcon1::Param_Index' has a wrong offset!");

// Function WB_ui_Vitality_en_01.WB_ui_Vitality_en_01_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_Vitality_en_01_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_Vitality_en_01_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_Vitality_en_01_C_UpdateState");
static_assert(sizeof(WB_ui_Vitality_en_01_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_Vitality_en_01_C_UpdateState");
static_assert(offsetof(WB_ui_Vitality_en_01_C_UpdateState, State) == 0x000000, "Member 'WB_ui_Vitality_en_01_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_Vitality_en_01_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_Vitality_en_01_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_Vitality_en_01_C_UpdateState::DeltaSeconds' has a wrong offset!");

}

