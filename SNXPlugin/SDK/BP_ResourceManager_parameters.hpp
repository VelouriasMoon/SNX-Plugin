#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResourceManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "FPlayerWeaponLoadData_structs.hpp"
#include "FAttachmentEquipData_structs.hpp"
#include "FPlayerCostumeData_structs.hpp"
#include "S_AssetList_structs.hpp"
#include "FAttachmentData_structs.hpp"


namespace SDK::Params
{

// Function BP_ResourceManager.BP_ResourceManager_C.ExecuteUbergraph_BP_ResourceManager
// 0x0008 (0x0008 - 0x0000)
struct BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager) == 0x000004, "Wrong alignment on BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager");
static_assert(sizeof(BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager) == 0x000008, "Wrong size on BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager");
static_assert(offsetof(BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager, EntryPoint) == 0x000000, "Member 'BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_ResourceManager_C_ExecuteUbergraph_BP_ResourceManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ResourceManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ResourceManager_C_ReceiveTick");
static_assert(sizeof(BP_ResourceManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_ResourceManager_C_ReceiveTick");
static_assert(offsetof(BP_ResourceManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ResourceManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.RegisterLoadAsset
// 0x0038 (0x0038 - 0x0000)
struct BP_ResourceManager_C_RegisterLoadAsset final
{
public:
	class FName                                   AssetList;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 AssetSoftRef;                                      // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                AssetRef;                                          // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_RegisterLoadAsset) == 0x000008, "Wrong alignment on BP_ResourceManager_C_RegisterLoadAsset");
static_assert(sizeof(BP_ResourceManager_C_RegisterLoadAsset) == 0x000038, "Wrong size on BP_ResourceManager_C_RegisterLoadAsset");
static_assert(offsetof(BP_ResourceManager_C_RegisterLoadAsset, AssetList) == 0x000000, "Member 'BP_ResourceManager_C_RegisterLoadAsset::AssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RegisterLoadAsset, AssetSoftRef) == 0x000008, "Member 'BP_ResourceManager_C_RegisterLoadAsset::AssetSoftRef' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RegisterLoadAsset, AssetRef) == 0x000030, "Member 'BP_ResourceManager_C_RegisterLoadAsset::AssetRef' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.UnregisterLoadAsset
// 0x0040 (0x0040 - 0x0000)
struct BP_ResourceManager_C_UnregisterLoadAsset final
{
public:
	TSoftObjectPtr<class UObject>                 AssetSoftRef;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6421[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_UnregisterLoadAsset) == 0x000008, "Wrong alignment on BP_ResourceManager_C_UnregisterLoadAsset");
static_assert(sizeof(BP_ResourceManager_C_UnregisterLoadAsset) == 0x000040, "Wrong size on BP_ResourceManager_C_UnregisterLoadAsset");
static_assert(offsetof(BP_ResourceManager_C_UnregisterLoadAsset, AssetSoftRef) == 0x000000, "Member 'BP_ResourceManager_C_UnregisterLoadAsset::AssetSoftRef' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterLoadAsset, CallFunc_Map_Remove_ReturnValue) == 0x000028, "Member 'BP_ResourceManager_C_UnregisterLoadAsset::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterLoadAsset, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_ResourceManager_C_UnregisterLoadAsset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterLoadAsset, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'BP_ResourceManager_C_UnregisterLoadAsset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.RegisterAssetList
// 0x000C (0x000C - 0x0000)
struct BP_ResourceManager_C_RegisterAssetList final
{
public:
	class FName                                   AssetList;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_RegisterAssetList) == 0x000004, "Wrong alignment on BP_ResourceManager_C_RegisterAssetList");
static_assert(sizeof(BP_ResourceManager_C_RegisterAssetList) == 0x00000C, "Wrong size on BP_ResourceManager_C_RegisterAssetList");
static_assert(offsetof(BP_ResourceManager_C_RegisterAssetList, AssetList) == 0x000000, "Member 'BP_ResourceManager_C_RegisterAssetList::AssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RegisterAssetList, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_ResourceManager_C_RegisterAssetList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.UnregisterAssetList
// 0x0088 (0x0088 - 0x0000)
struct BP_ResourceManager_C_UnregisterAssetList final
{
public:
	class FName                                   AssetList;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6422[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         AssetsInOtherAssetList;                            // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AssetList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6423[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         CallFunc_MakeLoadedAssetListAssets_Assets;         // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0050(0x0028)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6424[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_UnregisterAssetList) == 0x000008, "Wrong alignment on BP_ResourceManager_C_UnregisterAssetList");
static_assert(sizeof(BP_ResourceManager_C_UnregisterAssetList) == 0x000088, "Wrong size on BP_ResourceManager_C_UnregisterAssetList");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, AssetList) == 0x000000, "Member 'BP_ResourceManager_C_UnregisterAssetList::AssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, Error) == 0x000008, "Member 'BP_ResourceManager_C_UnregisterAssetList::Error' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, AssetsInOtherAssetList) == 0x000010, "Member 'BP_ResourceManager_C_UnregisterAssetList::AssetsInOtherAssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_MakeLoadedAssetListAssets_Assets) == 0x000038, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_MakeLoadedAssetListAssets_Assets' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_ResourceManager_C_UnregisterAssetList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_ResourceManager_C_UnregisterAssetList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Map_Remove_ReturnValue) == 0x00007C, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_UnregisterAssetList, CallFunc_Array_Contains_ReturnValue) == 0x000084, "Member 'BP_ResourceManager_C_UnregisterAssetList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.MakeLoadedAssetListAssets
// 0x0060 (0x0060 - 0x0000)
struct BP_ResourceManager_C_MakeLoadedAssetListAssets final
{
public:
	class FName                                   ExcludeAssetList;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Assets;                                            // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         CurLoadedAssets;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6425[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AssetList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_MakeLoadedAssetListAssets) == 0x000008, "Wrong alignment on BP_ResourceManager_C_MakeLoadedAssetListAssets");
static_assert(sizeof(BP_ResourceManager_C_MakeLoadedAssetListAssets) == 0x000060, "Wrong size on BP_ResourceManager_C_MakeLoadedAssetListAssets");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, ExcludeAssetList) == 0x000000, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::ExcludeAssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, Assets) == 0x000008, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::Assets' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CurLoadedAssets) == 0x000018, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CurLoadedAssets' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MakeLoadedAssetListAssets, CallFunc_NotEqual_NameName_ReturnValue) == 0x000059, "Member 'BP_ResourceManager_C_MakeLoadedAssetListAssets::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.IsContainAssetInAssetList
// 0x0068 (0x0068 - 0x0000)
struct BP_ResourceManager_C_IsContainAssetInAssetList final
{
public:
	TSoftObjectPtr<class UObject>                 Asset;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   ExcludeAssetList;                                  // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6426[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6427[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AssetList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_IsContainAssetInAssetList) == 0x000008, "Wrong alignment on BP_ResourceManager_C_IsContainAssetInAssetList");
static_assert(sizeof(BP_ResourceManager_C_IsContainAssetInAssetList) == 0x000068, "Wrong size on BP_ResourceManager_C_IsContainAssetInAssetList");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, Asset) == 0x000000, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::Asset' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, ExcludeAssetList) == 0x000028, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::ExcludeAssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, Found) == 0x000030, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::Found' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_NotEqual_NameName_ReturnValue) == 0x000061, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_IsContainAssetInAssetList, CallFunc_Array_Contains_ReturnValue) == 0x000062, "Member 'BP_ResourceManager_C_IsContainAssetInAssetList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.RequestLoadAssetList
// 0x0080 (0x0080 - 0x0000)
struct BP_ResourceManager_C_RequestLoadAssetList final
{
public:
	class FName                                   AssetList;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         AssetsToLoad;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_AssetList                           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6428[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0038(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6429[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642A[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_RequestLoadAssetList) == 0x000008, "Wrong alignment on BP_ResourceManager_C_RequestLoadAssetList");
static_assert(sizeof(BP_ResourceManager_C_RequestLoadAssetList) == 0x000080, "Wrong size on BP_ResourceManager_C_RequestLoadAssetList");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, AssetList) == 0x000000, "Member 'BP_ResourceManager_C_RequestLoadAssetList::AssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, AssetsToLoad) == 0x000008, "Member 'BP_ResourceManager_C_RequestLoadAssetList::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000028, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_ResourceManager_C_RequestLoadAssetList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_ResourceManager_C_RequestLoadAssetList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestLoadAssetList, CallFunc_GetLevelManager_LevelManager) == 0x000078, "Member 'BP_ResourceManager_C_RequestLoadAssetList::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.RequestUnloadAssetList
// 0x0028 (0x0028 - 0x0000)
struct BP_ResourceManager_C_RequestUnloadAssetList final
{
public:
	class FName                                   AssetList;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Error;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         AssetsToLoad;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_UnregisterAssetList_Error;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_RequestUnloadAssetList) == 0x000008, "Wrong alignment on BP_ResourceManager_C_RequestUnloadAssetList");
static_assert(sizeof(BP_ResourceManager_C_RequestUnloadAssetList) == 0x000028, "Wrong size on BP_ResourceManager_C_RequestUnloadAssetList");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, AssetList) == 0x000000, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::AssetList' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, Error) == 0x000008, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::Error' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, AssetsToLoad) == 0x000010, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, CallFunc_UnregisterAssetList_Error) == 0x000020, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::CallFunc_UnregisterAssetList_Error' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, CallFunc_Array_RemoveItem_ReturnValue) == 0x000021, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_RequestUnloadAssetList, CallFunc_Array_Contains_ReturnValue) == 0x000022, "Member 'BP_ResourceManager_C_RequestUnloadAssetList::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.ProtectedGetMipPrestreamPlayerMeshes
// 0x0268 (0x0268 - 0x0000)
struct BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes final
{
public:
	TArray<class USkeletalMesh*>                  SkeletalMeshes;                                    // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    StaticMeshes;                                      // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLoad;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMesh*>                    RetStaticMeshes;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class USkeletalMesh*>                  RetSkelMeshes;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           CostueMesh;                                        // 0x0048(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FPlayerInfo                            Info;                                              // 0x0070(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642D[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642E[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642F[0x2];                                     // 0x016A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6430[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6431[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0190(0x00D0)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes) == 0x000008, "Wrong alignment on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes");
static_assert(sizeof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes) == 0x000268, "Wrong size on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, SkeletalMeshes) == 0x000000, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, StaticMeshes) == 0x000010, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::StaticMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, PlayerId) == 0x000020, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, bLoad) == 0x000021, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::bLoad' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, RetStaticMeshes) == 0x000028, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::RetStaticMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, RetSkelMeshes) == 0x000038, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::RetSkelMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CostueMesh) == 0x000048, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CostueMesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, Info) == 0x000070, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::Info' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, K2Node_SwitchEnum_CmpSuccess) == 0x000140, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_LoadSoftObject_ReturnValue) == 0x000148, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000150, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000160, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_IsValid_ReturnValue_1) == 0x000169, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_Array_Add_ReturnValue) == 0x00016C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x000170, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, K2Node_DynamicCast_bSuccess_1) == 0x000178, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_Array_Add_ReturnValue_1) == 0x00017C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000180, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_GetPlayerManager_PlayerManager) == 0x000188, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000190, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes, CallFunc_IsValid_ReturnValue_2) == 0x000260, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerMeshes::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.LoadWeaponMesh
// 0x0B60 (0x0B60 - 0x0000)
struct BP_ResourceManager_C_LoadWeaponMesh final
{
public:
	int32                                         InWeaponID;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6432[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 InMeshComp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         InExtraMeshComp;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          bDisableYuitoString;                               // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbDisableYuitoString;                              // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6433[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 LExtraMesh;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LTableIndex;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6434[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerWeaponLoadData                 LMeshData;                                         // 0x0038(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         LWeaponID;                                         // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbSuccess;                                         // 0x009C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6435[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             LEquipDataTable;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6436[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6437[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshMaterialOverrideParameters        CallFunc_GetMeshMaterialOverrideParameters_OutParam; // 0x0100(0x0460)()
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0568(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6438[0x2];                                     // 0x0572(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0574(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMeshMaterialOverrideParameters        CallFunc_GetMeshMaterialOverrideParameters_OutParam_1; // 0x0578(0x0460)()
	class UDataTable*                             Temp_object_Variable_8;                            // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6439[0x7];                                     // 0x09E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_643A[0x3];                                     // 0x09F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_643B[0x7];                                     // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_643C[0x3];                                     // 0x0A21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_643D[0x4];                                     // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_9;                            // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0A40(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0A50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerWeaponLoadData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0A68(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0AC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_643E[0x6];                                     // 0x0ACA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_10;                           // 0x0AD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_643F[0x4];                                     // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default;                             // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6440[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerWeaponLoadData                 CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0AF0(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6441[0x2];                                     // 0x0B52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_LoadWeaponMesh) == 0x000008, "Wrong alignment on BP_ResourceManager_C_LoadWeaponMesh");
static_assert(sizeof(BP_ResourceManager_C_LoadWeaponMesh) == 0x000B60, "Wrong size on BP_ResourceManager_C_LoadWeaponMesh");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, InWeaponID) == 0x000000, "Member 'BP_ResourceManager_C_LoadWeaponMesh::InWeaponID' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, InMeshComp) == 0x000008, "Member 'BP_ResourceManager_C_LoadWeaponMesh::InMeshComp' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, InExtraMeshComp) == 0x000010, "Member 'BP_ResourceManager_C_LoadWeaponMesh::InExtraMeshComp' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, bDisableYuitoString) == 0x000020, "Member 'BP_ResourceManager_C_LoadWeaponMesh::bDisableYuitoString' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LbDisableYuitoString) == 0x000021, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LbDisableYuitoString' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LExtraMesh) == 0x000028, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LExtraMesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LTableIndex) == 0x000030, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LTableIndex' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LMeshData) == 0x000038, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LMeshData' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LWeaponID) == 0x000098, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LWeaponID' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LbSuccess) == 0x00009C, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LbSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, LEquipDataTable) == 0x0000A0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::LEquipDataTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable) == 0x0000A8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_1) == 0x0000B0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_2) == 0x0000B8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_3) == 0x0000C0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_4) == 0x0000C8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_5) == 0x0000D0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Loop_Num_Variable) == 0x0000DC, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Loop_Num_Variable_1) == 0x0000EC, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Array_Index_Variable_1) == 0x0000F4, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_6) == 0x0000F8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetMeshMaterialOverrideParameters_OutParam) == 0x000100, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetMeshMaterialOverrideParameters_OutParam' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_7) == 0x000560, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Array_Get_Item) == 0x000568, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_IsValid_ReturnValue_1) == 0x000570, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000571, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Divide_IntInt_ReturnValue) == 0x000574, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetMeshMaterialOverrideParameters_OutParam_1) == 0x000578, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetMeshMaterialOverrideParameters_OutParam_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_8) == 0x0009D8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_LoadSoftObject_ReturnValue) == 0x0009E0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0009E8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0009F0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, K2Node_DynamicCast_bSuccess) == 0x0009F8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Array_Length_ReturnValue) == 0x0009FC, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000A00, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000A08, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000A10, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x000A18, "Member 'BP_ResourceManager_C_LoadWeaponMesh::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, K2Node_DynamicCast_bSuccess_1) == 0x000A20, "Member 'BP_ResourceManager_C_LoadWeaponMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Array_Length_ReturnValue_1) == 0x000A24, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000A28, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Variable) == 0x000A30, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_9) == 0x000A38, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000A40, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Conv_IntToString_ReturnValue) == 0x000A50, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Conv_StringToName_ReturnValue) == 0x000A60, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000A68, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000AC8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000AC9, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_object_Variable_10) == 0x000AD0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetItemCategoryID_ReturnValue) == 0x000AD8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, K2Node_Select_Default) == 0x000AE0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, Temp_int_Loop_Counter_Variable_1) == 0x000AE8, "Member 'BP_ResourceManager_C_LoadWeaponMesh::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000AF0, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000B50, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B51, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_Add_IntInt_ReturnValue_1) == 0x000B54, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadWeaponMesh, CallFunc_IsValid_ReturnValue_2) == 0x000B58, "Member 'BP_ResourceManager_C_LoadWeaponMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.LoadCostumeMesh
// 0x0210 (0x0210 - 0x0000)
struct BP_ResourceManager_C_LoadCostumeMesh final
{
public:
	EPlayerID                                     InPlayerID;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6442[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InCostumeItemID;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 InMeshComp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerCostumeData                    LMeshData;                                         // 0x0010(0x0038)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             LEquipDataTable;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LCostumeID;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6443[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6444[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_11;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_12;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_13;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_14;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_15;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_16;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_17;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_18;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_19;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_20;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_21;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_22;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_23;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_24;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_25;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_26;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6445[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6446[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6447[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFPlayerCostumeData                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0180(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6448[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6449[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPlayerCostumeData                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x01C8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644A[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_LoadCostumeMesh) == 0x000008, "Wrong alignment on BP_ResourceManager_C_LoadCostumeMesh");
static_assert(sizeof(BP_ResourceManager_C_LoadCostumeMesh) == 0x000210, "Wrong size on BP_ResourceManager_C_LoadCostumeMesh");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, InPlayerID) == 0x000000, "Member 'BP_ResourceManager_C_LoadCostumeMesh::InPlayerID' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, InCostumeItemID) == 0x000004, "Member 'BP_ResourceManager_C_LoadCostumeMesh::InCostumeItemID' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, InMeshComp) == 0x000008, "Member 'BP_ResourceManager_C_LoadCostumeMesh::InMeshComp' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, LMeshData) == 0x000010, "Member 'BP_ResourceManager_C_LoadCostumeMesh::LMeshData' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, LEquipDataTable) == 0x000048, "Member 'BP_ResourceManager_C_LoadCostumeMesh::LEquipDataTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, LCostumeID) == 0x000050, "Member 'BP_ResourceManager_C_LoadCostumeMesh::LCostumeID' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable) == 0x000058, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_1) == 0x000068, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_2) == 0x000070, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_3) == 0x000078, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_4) == 0x000080, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_5) == 0x000088, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_6) == 0x000090, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_7) == 0x000098, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_8) == 0x0000A0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_9) == 0x0000A8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_10) == 0x0000B0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_11) == 0x0000B8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_12) == 0x0000C0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_13) == 0x0000C8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_14) == 0x0000D0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_15) == 0x0000D8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_16) == 0x0000E0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_17) == 0x0000E8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_18) == 0x0000F0, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_19) == 0x0000F8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_20) == 0x000100, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_21) == 0x000108, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_22) == 0x000110, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_23) == 0x000118, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_24) == 0x000120, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_25) == 0x000128, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_object_Variable_26) == 0x000130, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_LoadSoftObject_ReturnValue) == 0x000140, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000148, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_IsValid_ReturnValue_2) == 0x000149, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000150, "Member 'BP_ResourceManager_C_LoadCostumeMesh::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'BP_ResourceManager_C_LoadCostumeMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000160, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_Conv_IntToString_ReturnValue) == 0x000170, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetDataTableRowFromName_OutRow) == 0x000180, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_Conv_StringToName_ReturnValue) == 0x0001BC, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001C4, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0001C8, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000200, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, Temp_byte_Variable) == 0x000201, "Member 'BP_ResourceManager_C_LoadCostumeMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, CallFunc_GetItemCategoryID_ReturnValue) == 0x000204, "Member 'BP_ResourceManager_C_LoadCostumeMesh::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_LoadCostumeMesh, K2Node_Select_Default) == 0x000208, "Member 'BP_ResourceManager_C_LoadCostumeMesh::K2Node_Select_Default' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.MeshSetting
// 0x0498 (0x0498 - 0x0000)
struct BP_ResourceManager_C_MeshSetting final
{
public:
	class USkeletalMeshComponent*                 InMeshComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          InNewMesh;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_644B[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_644C[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMeshMaterialOverrideParameters        CallFunc_GetMeshMaterialOverrideParameters_OutParam; // 0x0038(0x0460)()
};
static_assert(alignof(BP_ResourceManager_C_MeshSetting) == 0x000008, "Wrong alignment on BP_ResourceManager_C_MeshSetting");
static_assert(sizeof(BP_ResourceManager_C_MeshSetting) == 0x000498, "Wrong size on BP_ResourceManager_C_MeshSetting");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, InMeshComp) == 0x000000, "Member 'BP_ResourceManager_C_MeshSetting::InMeshComp' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, InNewMesh) == 0x000008, "Member 'BP_ResourceManager_C_MeshSetting::InNewMesh' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_ResourceManager_C_MeshSetting::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_IsValid_ReturnValue_1) == 0x000015, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_ResourceManager_C_MeshSetting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ResourceManager_C_MeshSetting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_MeshSetting, CallFunc_GetMeshMaterialOverrideParameters_OutParam) == 0x000038, "Member 'BP_ResourceManager_C_MeshSetting::CallFunc_GetMeshMaterialOverrideParameters_OutParam' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.ProtectedGetMipPrestreamPlayerSoftMeshes
// 0x07E8 (0x07E8 - 0x0000)
struct BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes final
{
public:
	TArray<TSoftObjectPtr<class USkeletalMesh>>   SkeletalMeshes;                                    // 0x0000(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Attachment1Meshes;                                 // 0x0010(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> Attachment1Materials;                              // 0x0020(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Attachment2Meshes;                                 // 0x0030(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> Attachment2Materials;                              // 0x0040(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         Attachment3Meshes;                                 // 0x0050(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> Attachment3Materials;                              // 0x0060(0x0010)(Parm, OutParm, UObjectWrapper, HasGetValueTypeHash)
	EPlayerID                                     PlayerId;                                          // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644E[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UMaterialInstance>> LoadAttachment3Materials;                          // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LoadAttachment3Meshes;                             // 0x0088(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> LoadAttachment2Materials;                          // 0x0098(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LoadAttachment2Meshes;                             // 0x00A8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> LoadAttachment1Materials;                          // 0x00B8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LoadAttachment1Meshes;                             // 0x00C8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> LoadMaterials;                                     // 0x00D8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         LoadMeshes;                                        // 0x00E8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   LoadSkelMeshes;                                    // 0x00F8(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             AttachmentTable;                                   // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CostumeTable;                                      // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             WeaponTable;                                       // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            Info;                                              // 0x0120(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	TArray<int32>                                 AttachmentIDs;                                     // 0x01F0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         WeaponId;                                          // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostumeId;                                         // 0x0204(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable;                              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_11;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_12;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_13;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_14;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_15;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_16;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_17;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_18;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_19;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_20;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_644F[0x5];                                     // 0x02B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_21;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_22;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_23;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_24;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_25;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_26;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_27;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_28;                           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_29;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_30;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_31;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_32;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_33;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_34;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_35;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_36;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_37;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_38;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_39;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_40;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_41;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_42;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_43;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_44;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_45;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_46;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_47;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6450[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_48;                           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_49;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_50;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_51;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_52;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_53;                           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_54;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_55;                           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_56;                           // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_57;                           // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_58;                           // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_59;                           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_60;                           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_61;                           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_62;                           // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_63;                           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_64;                           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_65;                           // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_66;                           // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_67;                           // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_68;                           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_69;                           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_70;                           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_71;                           // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_72;                           // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_73;                           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_74;                           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_1;          // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_2;          // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_3;          // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6451[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0488(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6452[0x3];                                     // 0x0499(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_4;          // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6453[0x3];                                     // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6454[0x2];                                     // 0x04C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_75;                           // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_2;                              // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6455[0x7];                                     // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_76;                           // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_77;                           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6456[0x4];                                     // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_78;                           // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6457[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0518(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_79;                           // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6458[0x3];                                     // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0548(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6459[0x3];                                     // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x0574(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645A[0x4];                                     // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0580(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFPlayerCostumeData                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0590(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645B[0x3];                                     // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x05CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645C[0x4];                                     // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAttachmentData                       CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x05D8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645D[0x3];                                     // 0x05F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645E[0x3];                                     // 0x0601(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645F[0x4];                                     // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6460[0x4];                                     // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAttachmentEquipData                  CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0630(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6461[0x7];                                     // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_80;                           // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6462[0x7];                                     // 0x0661(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_3;                           // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_4;                           // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerWeaponLoadData                 CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x0690(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6463[0x7];                                     // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6464[0x3];                                     // 0x0701(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0704(0x00D0)(NoDestructor)
	uint8                                         Pad_6465[0x4];                                     // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class USkeletalMesh>>   K2Node_MakeArray_Array_1;                          // 0x07D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes) == 0x000008, "Wrong alignment on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes");
static_assert(sizeof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes) == 0x0007E8, "Wrong size on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, SkeletalMeshes) == 0x000000, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment1Meshes) == 0x000010, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment1Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment1Materials) == 0x000020, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment1Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment2Meshes) == 0x000030, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment2Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment2Materials) == 0x000040, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment2Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment3Meshes) == 0x000050, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment3Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Attachment3Materials) == 0x000060, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Attachment3Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, PlayerId) == 0x000070, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment3Materials) == 0x000078, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment3Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment3Meshes) == 0x000088, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment3Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment2Materials) == 0x000098, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment2Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment2Meshes) == 0x0000A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment2Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment1Materials) == 0x0000B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment1Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadAttachment1Meshes) == 0x0000C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadAttachment1Meshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadMaterials) == 0x0000D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadMaterials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadMeshes) == 0x0000E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, LoadSkelMeshes) == 0x0000F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::LoadSkelMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, AttachmentTable) == 0x000108, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::AttachmentTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CostumeTable) == 0x000110, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CostumeTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, WeaponTable) == 0x000118, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::WeaponTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Info) == 0x000120, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Info' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, AttachmentIDs) == 0x0001F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::AttachmentIDs' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, WeaponId) == 0x000200, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::WeaponId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CostumeId) == 0x000204, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CostumeId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable) == 0x000208, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_1) == 0x000210, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_2) == 0x000218, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_3) == 0x000220, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_4) == 0x000228, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_5) == 0x000230, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_6) == 0x000238, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_7) == 0x000240, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_8) == 0x000248, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_9) == 0x000250, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_10) == 0x000258, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_11) == 0x000260, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_12) == 0x000268, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_13) == 0x000270, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_14) == 0x000278, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_15) == 0x000280, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_16) == 0x000288, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_17) == 0x000290, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_18) == 0x000298, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_19) == 0x0002A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_20) == 0x0002A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_bool_Variable) == 0x0002B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_byte_Variable) == 0x0002B1, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_IsValid_ReturnValue) == 0x0002B2, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_21) == 0x0002B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_22) == 0x0002C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_23) == 0x0002C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_24) == 0x0002D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_25) == 0x0002D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_26) == 0x0002E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_27) == 0x0002E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_28) == 0x0002F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_29) == 0x0002F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_30) == 0x000300, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_31) == 0x000308, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_32) == 0x000310, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_33) == 0x000318, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_34) == 0x000320, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_35) == 0x000328, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_36) == 0x000330, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_37) == 0x000338, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_38) == 0x000340, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_39) == 0x000348, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_40) == 0x000350, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_41) == 0x000358, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_42) == 0x000360, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_43) == 0x000368, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_44) == 0x000370, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_45) == 0x000378, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_46) == 0x000380, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_47) == 0x000388, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_byte_Variable_1) == 0x000390, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_48) == 0x000398, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_49) == 0x0003A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_50) == 0x0003A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_51) == 0x0003B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_52) == 0x0003B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_53) == 0x0003C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_54) == 0x0003C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_55) == 0x0003D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_56) == 0x0003D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_57) == 0x0003E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_58) == 0x0003E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_59) == 0x0003F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_60) == 0x0003F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_61) == 0x000400, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_62) == 0x000408, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_63) == 0x000410, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_64) == 0x000418, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_65) == 0x000420, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_66) == 0x000428, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_67) == 0x000430, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_68) == 0x000438, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_69) == 0x000440, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_70) == 0x000448, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_71) == 0x000450, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_72) == 0x000458, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_73) == 0x000460, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_74) == 0x000468, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Array_Index_Variable) == 0x000470, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetItemCategoryID_ReturnValue) == 0x000474, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetItemCategoryID_ReturnValue_1) == 0x000478, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetItemCategoryID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetItemCategoryID_ReturnValue_2) == 0x00047C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetItemCategoryID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetItemCategoryID_ReturnValue_3) == 0x000480, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetItemCategoryID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_MakeArray_Array) == 0x000488, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000498, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Loop_Num_Variable) == 0x00049C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_SelectInt_ReturnValue) == 0x0004A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetItemCategoryID_ReturnValue_4) == 0x0004A4, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetItemCategoryID_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Loop_Counter_Variable) == 0x0004A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x0004AC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x0004B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Loop_Counter_Variable_1) == 0x0004B4, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0004B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Array_Index_Variable_1) == 0x0004BC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_int_Loop_Num_Variable_1) == 0x0004C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_SwitchInteger_CmpSuccess) == 0x0004C4, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004C5, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_75) == 0x0004C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_byte_Variable_2) == 0x0004D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_76) == 0x0004D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_77) == 0x0004E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_MakeLiteralInt_ReturnValue) == 0x0004E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_78) == 0x0004F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue) == 0x0004F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue) == 0x000508, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000510, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000518, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_79) == 0x000528, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000530, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000538, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Multiply_IntInt_ReturnValue) == 0x00053C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_IsValid_ReturnValue_1) == 0x000540, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000544, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000548, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000558, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_Select_Default) == 0x000560, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_Select_Default_1) == 0x000568, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_bool_Variable_1) == 0x000570, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_Select_Default_2) == 0x000574, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000580, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_OutRow) == 0x000590, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0005C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue_3) == 0x0005CC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0005D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0005F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Array_Add_ReturnValue) == 0x0005FC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Greater_IntInt_ReturnValue) == 0x000600, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Array_Length_ReturnValue) == 0x000604, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Array_Length_ReturnValue_1) == 0x000608, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000610, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue_4) == 0x000620, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Array_Length_ReturnValue_2) == 0x000628, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000630, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000650, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, Temp_object_Variable_80) == 0x000658, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000660, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_Select_Default_3) == 0x000668, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000670, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_Conv_StringToName_ReturnValue_5) == 0x000680, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_Select_Default_4) == 0x000688, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x000690, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x0006F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetPlayerManager_PlayerManager) == 0x0006F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_IsValid_ReturnValue_2) == 0x000700, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000704, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes, K2Node_MakeArray_Array_1) == 0x0007D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_ResourceManager.BP_ResourceManager_C.ProtectedGetMipPrestreamPlayerSoftMeshes_0
// 0x0728 (0x0728 - 0x0000)
struct BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0 final
{
public:
	EPlayerID                                     PlayerId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6466[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class USkeletalMesh>>   SkeletalMeshes;                                    // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UStaticMesh>>     StaticMeshes;                                      // 0x0018(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> Materials;                                         // 0x0028(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UMaterialInstance>> LoadMaterials;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             AttachmentTable;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   LoadSkelMeshes;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UDataTable*                             CostumeTable;                                      // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             WeaponTable;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPlayerInfo                            Info;                                              // 0x0070(0x00D0)(Edit, BlueprintVisible, NoDestructor)
	TArray<int32>                                 AttachmentIDs;                                     // 0x0140(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         WeaponId;                                          // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CostumeId;                                         // 0x0154(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_1;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_2;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_3;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_4;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_5;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_6;                            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_7;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_8;                            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_9;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_10;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_11;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_12;                           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_13;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_14;                           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_15;                           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_16;                           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_17;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_18;                           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_19;                           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_20;                           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_21;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_22;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     Temp_byte_Variable;                                // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6467[0x5];                                     // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_23;                           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_24;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_25;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_26;                           // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_27;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_28;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_29;                           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_30;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_31;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_32;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_33;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_34;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_35;                           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_36;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_37;                           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_38;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_39;                           // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_40;                           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_41;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_42;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_43;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_44;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_45;                           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_46;                           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_47;                           // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_48;                           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_49;                           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_1;                              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6468[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_50;                           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_51;                           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_52;                           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_53;                           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_54;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_55;                           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_56;                           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_57;                           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_58;                           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_59;                           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_60;                           // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_61;                           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_62;                           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_63;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_64;                           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_65;                           // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_66;                           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_67;                           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_68;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_69;                           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_70;                           // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_71;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_72;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_73;                           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_74;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_75;                           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_76;                           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue;            // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_1;          // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_2;          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_3;          // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6469[0x4];                                     // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x03E8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646A[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_77;                           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCategoryID_ReturnValue_4;          // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646B[0x3];                                     // 0x0421(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646C[0x3];                                     // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_646D[0x4];                                     // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Temp_object_Variable_78;                           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     Temp_byte_Variable_2;                              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646E[0x6];                                     // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_79;                           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646F[0x3];                                     // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default;                             // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6470[0x3];                                     // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_2;                           // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerCostumeData                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x04C8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6471[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0508(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6472[0x3];                                     // 0x0519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x051C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6473[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFAttachmentData                       CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0528(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6474[0x3];                                     // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6475[0x4];                                     // 0x055C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0560(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFAttachmentEquipData                  CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0578(0x0020)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6476[0x6];                                     // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x05A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             Temp_object_Variable_80;                           // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPlayerWeaponLoadData                 CallFunc_GetDataTableRowFromName_OutRow_3;         // 0x05C8(0x0060)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_3;    // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6477[0x7];                                     // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_4;                           // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class USkeletalMesh>>   K2Node_MakeArray_Array_1;                          // 0x0638(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6478[0x3];                                     // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlayerInfo                            CallFunc_GetPartyMemberInfo_ReturnValue;           // 0x0654(0x00D0)(NoDestructor)
};
static_assert(alignof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0) == 0x000008, "Wrong alignment on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0");
static_assert(sizeof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0) == 0x000728, "Wrong size on BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, PlayerId) == 0x000000, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, SkeletalMeshes) == 0x000008, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::SkeletalMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, StaticMeshes) == 0x000018, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::StaticMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Materials) == 0x000028, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Materials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, LoadMaterials) == 0x000038, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::LoadMaterials' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, AttachmentTable) == 0x000048, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::AttachmentTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, LoadSkelMeshes) == 0x000050, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::LoadSkelMeshes' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CostumeTable) == 0x000060, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CostumeTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, WeaponTable) == 0x000068, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::WeaponTable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Info) == 0x000070, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Info' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, AttachmentIDs) == 0x000140, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::AttachmentIDs' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, WeaponId) == 0x000150, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::WeaponId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CostumeId) == 0x000154, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CostumeId' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable) == 0x000158, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_1) == 0x000160, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_2) == 0x000168, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_3) == 0x000170, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_4) == 0x000178, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_5) == 0x000180, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_6) == 0x000188, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_7) == 0x000190, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_8) == 0x000198, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_9) == 0x0001A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_10) == 0x0001A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_11) == 0x0001B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_12) == 0x0001B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_13) == 0x0001C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_14) == 0x0001C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_15) == 0x0001D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_16) == 0x0001D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_17) == 0x0001E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_18) == 0x0001E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_19) == 0x0001F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_20) == 0x0001F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_21) == 0x000200, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_22) == 0x000208, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_bool_Variable) == 0x000210, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_byte_Variable) == 0x000211, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_IsValid_ReturnValue) == 0x000212, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_23) == 0x000218, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_24) == 0x000220, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_25) == 0x000228, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_26) == 0x000230, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_27) == 0x000238, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_28) == 0x000240, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_29) == 0x000248, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_30) == 0x000250, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_31) == 0x000258, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_32) == 0x000260, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_33) == 0x000268, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_34) == 0x000270, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_35) == 0x000278, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_36) == 0x000280, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_37) == 0x000288, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_38) == 0x000290, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_39) == 0x000298, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_40) == 0x0002A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_41) == 0x0002A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_42) == 0x0002B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_43) == 0x0002B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_44) == 0x0002C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_44' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_45) == 0x0002C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_45' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_46) == 0x0002D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_46' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_47) == 0x0002D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_47' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_48) == 0x0002E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_48' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_49) == 0x0002E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_49' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_byte_Variable_1) == 0x0002F0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_50) == 0x0002F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_50' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_51) == 0x000300, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_51' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_52) == 0x000308, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_52' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_53) == 0x000310, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_53' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_54) == 0x000318, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_54' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_55) == 0x000320, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_55' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_56) == 0x000328, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_56' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_57) == 0x000330, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_57' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_58) == 0x000338, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_58' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_59) == 0x000340, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_59' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_60) == 0x000348, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_60' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_61) == 0x000350, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_61' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_62) == 0x000358, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_62' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_63) == 0x000360, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_63' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_64) == 0x000368, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_64' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_65) == 0x000370, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_65' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_66) == 0x000378, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_66' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_67) == 0x000380, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_67' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_68) == 0x000388, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_68' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_69) == 0x000390, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_69' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_70) == 0x000398, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_70' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_71) == 0x0003A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_71' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_72) == 0x0003A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_72' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_73) == 0x0003B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_73' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_74) == 0x0003B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_74' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_75) == 0x0003C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_75' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_76) == 0x0003C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_76' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Loop_Num_Variable) == 0x0003D0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetItemCategoryID_ReturnValue) == 0x0003D4, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetItemCategoryID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetItemCategoryID_ReturnValue_1) == 0x0003D8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetItemCategoryID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetItemCategoryID_ReturnValue_2) == 0x0003DC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetItemCategoryID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetItemCategoryID_ReturnValue_3) == 0x0003E0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetItemCategoryID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_MakeArray_Array) == 0x0003E8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0003F8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_77) == 0x000400, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_77' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_SelectInt_ReturnValue) == 0x000408, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetItemCategoryID_ReturnValue_4) == 0x00040C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetItemCategoryID_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Loop_Counter_Variable) == 0x000410, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Add_IntInt_ReturnValue) == 0x000414, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Array_Index_Variable) == 0x000418, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Loop_Num_Variable_1) == 0x00041C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Less_IntInt_ReturnValue) == 0x000420, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Loop_Counter_Variable_1) == 0x000424, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Less_IntInt_ReturnValue_1) == 0x000428, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Add_IntInt_ReturnValue_1) == 0x00042C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_MakeLiteralInt_ReturnValue) == 0x000430, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_78) == 0x000438, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_78' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000440, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue) == 0x000450, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_byte_Variable_2) == 0x000458, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000459, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000460, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_79) == 0x000470, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_79' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000478, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000480, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Multiply_IntInt_ReturnValue) == 0x000484, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_IsValid_ReturnValue_1) == 0x000488, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Add_IntInt_ReturnValue_2) == 0x00048C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000490, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0004A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_Select_Default) == 0x0004A8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_Select_Default_1) == 0x0004B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_int_Array_Index_Variable_1) == 0x0004B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_bool_Variable_1) == 0x0004BC, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_Select_Default_2) == 0x0004C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_OutRow) == 0x0004C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000500, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000508, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000518, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue_3) == 0x00051C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000528, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000548, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Array_Add_ReturnValue) == 0x00054C, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Array_Length_ReturnValue) == 0x000550, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Array_Length_ReturnValue_1) == 0x000554, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Array_Add_ReturnValue_1) == 0x000558, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000560, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue_4) == 0x000570, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000578, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000598, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000599, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0005A0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_Conv_StringToName_ReturnValue_5) == 0x0005B0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, Temp_object_Variable_80) == 0x0005B8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::Temp_object_Variable_80' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_Select_Default_3) == 0x0005C0, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_OutRow_3) == 0x0005C8, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_OutRow_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetDataTableRowFromName_ReturnValue_3) == 0x000628, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetDataTableRowFromName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_Select_Default_4) == 0x000630, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, K2Node_MakeArray_Array_1) == 0x000638, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetPlayerManager_PlayerManager) == 0x000648, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_IsValid_ReturnValue_2) == 0x000650, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0, CallFunc_GetPartyMemberInfo_ReturnValue) == 0x000654, "Member 'BP_ResourceManager_C_ProtectedGetMipPrestreamPlayerSoftMeshes_0::CallFunc_GetPartyMemberInfo_ReturnValue' has a wrong offset!");

}

