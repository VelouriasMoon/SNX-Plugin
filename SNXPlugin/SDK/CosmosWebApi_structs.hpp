#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CosmosWebApi

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct CosmosWebApi.RewardInfo
// 0x0060 (0x0060 - 0x0000)
struct FRewardInfo final
{
public:
	class FString                                 CampaignId;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TicketId;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemDetail;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountAll;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CountPiece;                                        // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Rank;                                              // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Point;                                             // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRewardInfo) == 0x000008, "Wrong alignment on FRewardInfo");
static_assert(sizeof(FRewardInfo) == 0x000060, "Wrong size on FRewardInfo");
static_assert(offsetof(FRewardInfo, CampaignId) == 0x000000, "Member 'FRewardInfo::CampaignId' has a wrong offset!");
static_assert(offsetof(FRewardInfo, TicketId) == 0x000010, "Member 'FRewardInfo::TicketId' has a wrong offset!");
static_assert(offsetof(FRewardInfo, ItemId) == 0x000020, "Member 'FRewardInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FRewardInfo, ItemName) == 0x000030, "Member 'FRewardInfo::ItemName' has a wrong offset!");
static_assert(offsetof(FRewardInfo, ItemDetail) == 0x000040, "Member 'FRewardInfo::ItemDetail' has a wrong offset!");
static_assert(offsetof(FRewardInfo, CountAll) == 0x000050, "Member 'FRewardInfo::CountAll' has a wrong offset!");
static_assert(offsetof(FRewardInfo, CountPiece) == 0x000054, "Member 'FRewardInfo::CountPiece' has a wrong offset!");
static_assert(offsetof(FRewardInfo, Rank) == 0x000058, "Member 'FRewardInfo::Rank' has a wrong offset!");
static_assert(offsetof(FRewardInfo, Point) == 0x00005C, "Member 'FRewardInfo::Point' has a wrong offset!");

// ScriptStruct CosmosWebApi.CampaignInfo
// 0x0090 (0x0090 - 0x0000)
struct FCampaignInfo final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitleCd;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartDate;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndDate;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemCount;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Config;                                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRewardInfo>                    RewardList;                                        // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCampaignInfo) == 0x000008, "Wrong alignment on FCampaignInfo");
static_assert(sizeof(FCampaignInfo) == 0x000090, "Wrong size on FCampaignInfo");
static_assert(offsetof(FCampaignInfo, ID) == 0x000000, "Member 'FCampaignInfo::ID' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, TitleCd) == 0x000010, "Member 'FCampaignInfo::TitleCd' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, Name) == 0x000020, "Member 'FCampaignInfo::Name' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, StartDate) == 0x000030, "Member 'FCampaignInfo::StartDate' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, EndDate) == 0x000040, "Member 'FCampaignInfo::EndDate' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, ItemCount) == 0x000050, "Member 'FCampaignInfo::ItemCount' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, URL) == 0x000058, "Member 'FCampaignInfo::URL' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, Description) == 0x000068, "Member 'FCampaignInfo::Description' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, Config) == 0x000078, "Member 'FCampaignInfo::Config' has a wrong offset!");
static_assert(offsetof(FCampaignInfo, RewardList) == 0x000080, "Member 'FCampaignInfo::RewardList' has a wrong offset!");

// ScriptStruct CosmosWebApi.CampaignGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCampaignGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCampaignInfo>                  CampaignList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCampaignGetListResponseParam) == 0x000008, "Wrong alignment on FCampaignGetListResponseParam");
static_assert(sizeof(FCampaignGetListResponseParam) == 0x000018, "Wrong size on FCampaignGetListResponseParam");
static_assert(offsetof(FCampaignGetListResponseParam, Status) == 0x000000, "Member 'FCampaignGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCampaignGetListResponseParam, CampaignList) == 0x000008, "Member 'FCampaignGetListResponseParam::CampaignList' has a wrong offset!");

// ScriptStruct CosmosWebApi.SavedataMultipartuploadResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FSavedataMultipartuploadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSavedataMultipartuploadResponseParam) == 0x000004, "Wrong alignment on FSavedataMultipartuploadResponseParam");
static_assert(sizeof(FSavedataMultipartuploadResponseParam) == 0x000004, "Wrong size on FSavedataMultipartuploadResponseParam");
static_assert(offsetof(FSavedataMultipartuploadResponseParam, Status) == 0x000000, "Member 'FSavedataMultipartuploadResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.SavedataDeleteResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FSavedataDeleteResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSavedataDeleteResponseParam) == 0x000004, "Wrong alignment on FSavedataDeleteResponseParam");
static_assert(sizeof(FSavedataDeleteResponseParam) == 0x000004, "Wrong size on FSavedataDeleteResponseParam");
static_assert(offsetof(FSavedataDeleteResponseParam, Status) == 0x000000, "Member 'FSavedataDeleteResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.SavedataDownloadResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FSavedataDownloadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SaveData;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSavedataDownloadResponseParam) == 0x000008, "Wrong alignment on FSavedataDownloadResponseParam");
static_assert(sizeof(FSavedataDownloadResponseParam) == 0x000018, "Wrong size on FSavedataDownloadResponseParam");
static_assert(offsetof(FSavedataDownloadResponseParam, Status) == 0x000000, "Member 'FSavedataDownloadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FSavedataDownloadResponseParam, SaveData) == 0x000008, "Member 'FSavedataDownloadResponseParam::SaveData' has a wrong offset!");

// ScriptStruct CosmosWebApi.SavedataUploadResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FSavedataUploadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSavedataUploadResponseParam) == 0x000004, "Wrong alignment on FSavedataUploadResponseParam");
static_assert(sizeof(FSavedataUploadResponseParam) == 0x000004, "Wrong size on FSavedataUploadResponseParam");
static_assert(offsetof(FSavedataUploadResponseParam, Status) == 0x000000, "Member 'FSavedataUploadResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.MissionInfo
// 0x0070 (0x0070 - 0x0000)
struct FMissionInfo final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitleCd;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Keyword;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Point;                                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CampaignCategoryId;                                // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CampaignCategoryName;                              // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Upto;                                              // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMissionInfo) == 0x000008, "Wrong alignment on FMissionInfo");
static_assert(sizeof(FMissionInfo) == 0x000070, "Wrong size on FMissionInfo");
static_assert(offsetof(FMissionInfo, ID) == 0x000000, "Member 'FMissionInfo::ID' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Name) == 0x000010, "Member 'FMissionInfo::Name' has a wrong offset!");
static_assert(offsetof(FMissionInfo, TitleCd) == 0x000020, "Member 'FMissionInfo::TitleCd' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Description) == 0x000030, "Member 'FMissionInfo::Description' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Keyword) == 0x000040, "Member 'FMissionInfo::Keyword' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Point) == 0x000050, "Member 'FMissionInfo::Point' has a wrong offset!");
static_assert(offsetof(FMissionInfo, CampaignCategoryId) == 0x000054, "Member 'FMissionInfo::CampaignCategoryId' has a wrong offset!");
static_assert(offsetof(FMissionInfo, CampaignCategoryName) == 0x000058, "Member 'FMissionInfo::CampaignCategoryName' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Count) == 0x000068, "Member 'FMissionInfo::Count' has a wrong offset!");
static_assert(offsetof(FMissionInfo, Upto) == 0x00006C, "Member 'FMissionInfo::Upto' has a wrong offset!");

// ScriptStruct CosmosWebApi.MissionGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FMissionGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMissionInfo>                   MissionList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMissionGetListResponseParam) == 0x000008, "Wrong alignment on FMissionGetListResponseParam");
static_assert(sizeof(FMissionGetListResponseParam) == 0x000018, "Wrong size on FMissionGetListResponseParam");
static_assert(offsetof(FMissionGetListResponseParam, Status) == 0x000000, "Member 'FMissionGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FMissionGetListResponseParam, MissionList) == 0x000008, "Member 'FMissionGetListResponseParam::MissionList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxResultInfo
// 0x0048 (0x0048 - 0x0000)
struct FRootBoxResultInfo final
{
public:
	class FString                                 ItemConfigId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemType;                                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineType;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReplaceFlag;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReplaceItemId;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReplaceItemNum;                                    // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         boxRemaining;                                      // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxResultInfo) == 0x000008, "Wrong alignment on FRootBoxResultInfo");
static_assert(sizeof(FRootBoxResultInfo) == 0x000048, "Wrong size on FRootBoxResultInfo");
static_assert(offsetof(FRootBoxResultInfo, ItemConfigId) == 0x000000, "Member 'FRootBoxResultInfo::ItemConfigId' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ItemId) == 0x000010, "Member 'FRootBoxResultInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ItemNum) == 0x000020, "Member 'FRootBoxResultInfo::ItemNum' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ItemType) == 0x000024, "Member 'FRootBoxResultInfo::ItemType' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, OnlineType) == 0x000028, "Member 'FRootBoxResultInfo::OnlineType' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ReplaceFlag) == 0x00002C, "Member 'FRootBoxResultInfo::ReplaceFlag' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ReplaceItemId) == 0x000030, "Member 'FRootBoxResultInfo::ReplaceItemId' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, ReplaceItemNum) == 0x000040, "Member 'FRootBoxResultInfo::ReplaceItemNum' has a wrong offset!");
static_assert(offsetof(FRootBoxResultInfo, boxRemaining) == 0x000044, "Member 'FRootBoxResultInfo::boxRemaining' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxRunResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FRootBoxRunResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalCount;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRootBoxResultInfo>             RootboxResultList;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxRunResponseParam) == 0x000008, "Wrong alignment on FRootBoxRunResponseParam");
static_assert(sizeof(FRootBoxRunResponseParam) == 0x000018, "Wrong size on FRootBoxRunResponseParam");
static_assert(offsetof(FRootBoxRunResponseParam, Status) == 0x000000, "Member 'FRootBoxRunResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRootBoxRunResponseParam, TotalCount) == 0x000004, "Member 'FRootBoxRunResponseParam::TotalCount' has a wrong offset!");
static_assert(offsetof(FRootBoxRunResponseParam, RootboxResultList) == 0x000008, "Member 'FRootBoxRunResponseParam::RootboxResultList' has a wrong offset!");

// ScriptStruct CosmosWebApi.KpiData
// 0x0010 (0x0010 - 0x0000)
struct FKpiData final
{
public:
	TArray<class FString>                         KpiData;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKpiData) == 0x000008, "Wrong alignment on FKpiData");
static_assert(sizeof(FKpiData) == 0x000010, "Wrong size on FKpiData");
static_assert(offsetof(FKpiData, KpiData) == 0x000000, "Member 'FKpiData::KpiData' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxCampaignInfo
// 0x0040 (0x0040 - 0x0000)
struct FRootBoxCampaignInfo final
{
public:
	class FString                                 CampaignId;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CampaignStartTime;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CampaignEndTime;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CampaignOption;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxCampaignInfo) == 0x000008, "Wrong alignment on FRootBoxCampaignInfo");
static_assert(sizeof(FRootBoxCampaignInfo) == 0x000040, "Wrong size on FRootBoxCampaignInfo");
static_assert(offsetof(FRootBoxCampaignInfo, CampaignId) == 0x000000, "Member 'FRootBoxCampaignInfo::CampaignId' has a wrong offset!");
static_assert(offsetof(FRootBoxCampaignInfo, CampaignStartTime) == 0x000010, "Member 'FRootBoxCampaignInfo::CampaignStartTime' has a wrong offset!");
static_assert(offsetof(FRootBoxCampaignInfo, CampaignEndTime) == 0x000020, "Member 'FRootBoxCampaignInfo::CampaignEndTime' has a wrong offset!");
static_assert(offsetof(FRootBoxCampaignInfo, CampaignOption) == 0x000030, "Member 'FRootBoxCampaignInfo::CampaignOption' has a wrong offset!");

// ScriptStruct CosmosWebApi.RarityItemInfo
// 0x0058 (0x0058 - 0x0000)
struct FRarityItemInfo final
{
public:
	class FString                                 ItemConfigId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemRarityRate;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CampaignItemRarityRate;                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_142F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemInfo;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemType;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineType;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SingleItemFlag;                                    // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         boxCount;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         boxRemaining;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1430[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FRarityItemInfo) == 0x000008, "Wrong alignment on FRarityItemInfo");
static_assert(sizeof(FRarityItemInfo) == 0x000058, "Wrong size on FRarityItemInfo");
static_assert(offsetof(FRarityItemInfo, ItemConfigId) == 0x000000, "Member 'FRarityItemInfo::ItemConfigId' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, ItemId) == 0x000010, "Member 'FRarityItemInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, ItemNum) == 0x000020, "Member 'FRarityItemInfo::ItemNum' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, ItemRarityRate) == 0x000024, "Member 'FRarityItemInfo::ItemRarityRate' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, CampaignItemRarityRate) == 0x000028, "Member 'FRarityItemInfo::CampaignItemRarityRate' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, ItemInfo) == 0x000030, "Member 'FRarityItemInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, ItemType) == 0x000040, "Member 'FRarityItemInfo::ItemType' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, OnlineType) == 0x000044, "Member 'FRarityItemInfo::OnlineType' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, SingleItemFlag) == 0x000048, "Member 'FRarityItemInfo::SingleItemFlag' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, boxCount) == 0x00004C, "Member 'FRarityItemInfo::boxCount' has a wrong offset!");
static_assert(offsetof(FRarityItemInfo, boxRemaining) == 0x000050, "Member 'FRarityItemInfo::boxRemaining' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxStatusInfo
// 0x0028 (0x0028 - 0x0000)
struct FRootBoxStatusInfo final
{
public:
	class FString                                 RarityId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RarityRate;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CampaignRarityRate;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRarityItemInfo>                RarityItemList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxStatusInfo) == 0x000008, "Wrong alignment on FRootBoxStatusInfo");
static_assert(sizeof(FRootBoxStatusInfo) == 0x000028, "Wrong size on FRootBoxStatusInfo");
static_assert(offsetof(FRootBoxStatusInfo, RarityId) == 0x000000, "Member 'FRootBoxStatusInfo::RarityId' has a wrong offset!");
static_assert(offsetof(FRootBoxStatusInfo, RarityRate) == 0x000010, "Member 'FRootBoxStatusInfo::RarityRate' has a wrong offset!");
static_assert(offsetof(FRootBoxStatusInfo, CampaignRarityRate) == 0x000014, "Member 'FRootBoxStatusInfo::CampaignRarityRate' has a wrong offset!");
static_assert(offsetof(FRootBoxStatusInfo, RarityItemList) == 0x000018, "Member 'FRootBoxStatusInfo::RarityItemList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxGetProbabilityResponseParam
// 0x0028 (0x0028 - 0x0000)
struct FRootBoxGetProbabilityResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1431[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRootBoxCampaignInfo>           CampaignInfo;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRootBoxStatusInfo>             RootboxStatusList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxGetProbabilityResponseParam) == 0x000008, "Wrong alignment on FRootBoxGetProbabilityResponseParam");
static_assert(sizeof(FRootBoxGetProbabilityResponseParam) == 0x000028, "Wrong size on FRootBoxGetProbabilityResponseParam");
static_assert(offsetof(FRootBoxGetProbabilityResponseParam, Status) == 0x000000, "Member 'FRootBoxGetProbabilityResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRootBoxGetProbabilityResponseParam, CampaignInfo) == 0x000008, "Member 'FRootBoxGetProbabilityResponseParam::CampaignInfo' has a wrong offset!");
static_assert(offsetof(FRootBoxGetProbabilityResponseParam, RootboxStatusList) == 0x000018, "Member 'FRootBoxGetProbabilityResponseParam::RootboxStatusList' has a wrong offset!");

// ScriptStruct CosmosWebApi.PaymentInfo
// 0x0030 (0x0030 - 0x0000)
struct FPaymentInfo final
{
public:
	class FString                                 PaymentId;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PaymentType;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PerExecution;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Limit;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Num;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PaymentItemid;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPaymentInfo) == 0x000008, "Wrong alignment on FPaymentInfo");
static_assert(sizeof(FPaymentInfo) == 0x000030, "Wrong size on FPaymentInfo");
static_assert(offsetof(FPaymentInfo, PaymentId) == 0x000000, "Member 'FPaymentInfo::PaymentId' has a wrong offset!");
static_assert(offsetof(FPaymentInfo, PaymentType) == 0x000010, "Member 'FPaymentInfo::PaymentType' has a wrong offset!");
static_assert(offsetof(FPaymentInfo, PerExecution) == 0x000014, "Member 'FPaymentInfo::PerExecution' has a wrong offset!");
static_assert(offsetof(FPaymentInfo, Limit) == 0x000018, "Member 'FPaymentInfo::Limit' has a wrong offset!");
static_assert(offsetof(FPaymentInfo, Num) == 0x00001C, "Member 'FPaymentInfo::Num' has a wrong offset!");
static_assert(offsetof(FPaymentInfo, PaymentItemid) == 0x000020, "Member 'FPaymentInfo::PaymentItemid' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxGetDetailResponseParam
// 0x0068 (0x0068 - 0x0000)
struct FRootBoxGetDetailResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1432[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RootboxId;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RootboxLavel;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPaymentInfo>                   PaymentList;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Option;                                            // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxGetDetailResponseParam) == 0x000008, "Wrong alignment on FRootBoxGetDetailResponseParam");
static_assert(sizeof(FRootBoxGetDetailResponseParam) == 0x000068, "Wrong size on FRootBoxGetDetailResponseParam");
static_assert(offsetof(FRootBoxGetDetailResponseParam, Status) == 0x000000, "Member 'FRootBoxGetDetailResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, RootboxId) == 0x000008, "Member 'FRootBoxGetDetailResponseParam::RootboxId' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, RootboxLavel) == 0x000018, "Member 'FRootBoxGetDetailResponseParam::RootboxLavel' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, StartTime) == 0x000028, "Member 'FRootBoxGetDetailResponseParam::StartTime' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, EndTime) == 0x000038, "Member 'FRootBoxGetDetailResponseParam::EndTime' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, PaymentList) == 0x000048, "Member 'FRootBoxGetDetailResponseParam::PaymentList' has a wrong offset!");
static_assert(offsetof(FRootBoxGetDetailResponseParam, Option) == 0x000058, "Member 'FRootBoxGetDetailResponseParam::Option' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxInfo
// 0x0068 (0x0068 - 0x0000)
struct FRootBoxInfo final
{
public:
	class FString                                 RootboxId;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RootboxLavel;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RootboxType;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1433[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Option;                                            // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRootBoxCampaignInfo>           CampaignInfo;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxInfo) == 0x000008, "Wrong alignment on FRootBoxInfo");
static_assert(sizeof(FRootBoxInfo) == 0x000068, "Wrong size on FRootBoxInfo");
static_assert(offsetof(FRootBoxInfo, RootboxId) == 0x000000, "Member 'FRootBoxInfo::RootboxId' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, RootboxLavel) == 0x000010, "Member 'FRootBoxInfo::RootboxLavel' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, StartTime) == 0x000020, "Member 'FRootBoxInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, EndTime) == 0x000030, "Member 'FRootBoxInfo::EndTime' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, RootboxType) == 0x000040, "Member 'FRootBoxInfo::RootboxType' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, Option) == 0x000048, "Member 'FRootBoxInfo::Option' has a wrong offset!");
static_assert(offsetof(FRootBoxInfo, CampaignInfo) == 0x000058, "Member 'FRootBoxInfo::CampaignInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.RootBoxGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FRootBoxGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1434[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRootBoxInfo>                   RootboxList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRootBoxGetListResponseParam) == 0x000008, "Wrong alignment on FRootBoxGetListResponseParam");
static_assert(sizeof(FRootBoxGetListResponseParam) == 0x000018, "Wrong size on FRootBoxGetListResponseParam");
static_assert(offsetof(FRootBoxGetListResponseParam, Status) == 0x000000, "Member 'FRootBoxGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRootBoxGetListResponseParam, RootboxList) == 0x000008, "Member 'FRootBoxGetListResponseParam::RootboxList' has a wrong offset!");

// ScriptStruct CosmosWebApi.PointInfo
// 0x0058 (0x0058 - 0x0000)
struct FPointInfo final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitleCd;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CampaignId;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Point;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalPoint;                                        // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NowRank;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrecedeRank;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1435[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPointInfo) == 0x000008, "Wrong alignment on FPointInfo");
static_assert(sizeof(FPointInfo) == 0x000058, "Wrong size on FPointInfo");
static_assert(offsetof(FPointInfo, ID) == 0x000000, "Member 'FPointInfo::ID' has a wrong offset!");
static_assert(offsetof(FPointInfo, UserId) == 0x000010, "Member 'FPointInfo::UserId' has a wrong offset!");
static_assert(offsetof(FPointInfo, TitleCd) == 0x000020, "Member 'FPointInfo::TitleCd' has a wrong offset!");
static_assert(offsetof(FPointInfo, CampaignId) == 0x000030, "Member 'FPointInfo::CampaignId' has a wrong offset!");
static_assert(offsetof(FPointInfo, Point) == 0x000040, "Member 'FPointInfo::Point' has a wrong offset!");
static_assert(offsetof(FPointInfo, TotalPoint) == 0x000044, "Member 'FPointInfo::TotalPoint' has a wrong offset!");
static_assert(offsetof(FPointInfo, NowRank) == 0x000048, "Member 'FPointInfo::NowRank' has a wrong offset!");
static_assert(offsetof(FPointInfo, Count) == 0x00004C, "Member 'FPointInfo::Count' has a wrong offset!");
static_assert(offsetof(FPointInfo, PrecedeRank) == 0x000050, "Member 'FPointInfo::PrecedeRank' has a wrong offset!");

// ScriptStruct CosmosWebApi.GamecurrencyGetLimitedOwnedInfo
// 0x0028 (0x0028 - 0x0000)
struct FGamecurrencyGetLimitedOwnedInfo final
{
public:
	class FString                                 Limit;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LimitCurrencyNum;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1436[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ChargedFlag;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGamecurrencyGetLimitedOwnedInfo) == 0x000008, "Wrong alignment on FGamecurrencyGetLimitedOwnedInfo");
static_assert(sizeof(FGamecurrencyGetLimitedOwnedInfo) == 0x000028, "Wrong size on FGamecurrencyGetLimitedOwnedInfo");
static_assert(offsetof(FGamecurrencyGetLimitedOwnedInfo, Limit) == 0x000000, "Member 'FGamecurrencyGetLimitedOwnedInfo::Limit' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetLimitedOwnedInfo, LimitCurrencyNum) == 0x000010, "Member 'FGamecurrencyGetLimitedOwnedInfo::LimitCurrencyNum' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetLimitedOwnedInfo, ChargedFlag) == 0x000018, "Member 'FGamecurrencyGetLimitedOwnedInfo::ChargedFlag' has a wrong offset!");

// ScriptStruct CosmosWebApi.GamecurrencyGetLimitedOwnedResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGamecurrencyGetLimitedOwnedResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1437[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGamecurrencyGetLimitedOwnedInfo> CurrencyList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGamecurrencyGetLimitedOwnedResponseParam) == 0x000008, "Wrong alignment on FGamecurrencyGetLimitedOwnedResponseParam");
static_assert(sizeof(FGamecurrencyGetLimitedOwnedResponseParam) == 0x000018, "Wrong size on FGamecurrencyGetLimitedOwnedResponseParam");
static_assert(offsetof(FGamecurrencyGetLimitedOwnedResponseParam, Status) == 0x000000, "Member 'FGamecurrencyGetLimitedOwnedResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetLimitedOwnedResponseParam, CurrencyList) == 0x000008, "Member 'FGamecurrencyGetLimitedOwnedResponseParam::CurrencyList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GamecurrencyGetOwnedResponseParam
// 0x0038 (0x0038 - 0x0000)
struct FGamecurrencyGetOwnedResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalChargedCurrencyNum;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFreeCurrencyNum;                              // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1438[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RecentLimit;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RecentLimitCurrencyNum;                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1439[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RecentChargedFlag;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGamecurrencyGetOwnedResponseParam) == 0x000008, "Wrong alignment on FGamecurrencyGetOwnedResponseParam");
static_assert(sizeof(FGamecurrencyGetOwnedResponseParam) == 0x000038, "Wrong size on FGamecurrencyGetOwnedResponseParam");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, Status) == 0x000000, "Member 'FGamecurrencyGetOwnedResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, TotalChargedCurrencyNum) == 0x000004, "Member 'FGamecurrencyGetOwnedResponseParam::TotalChargedCurrencyNum' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, TotalFreeCurrencyNum) == 0x000008, "Member 'FGamecurrencyGetOwnedResponseParam::TotalFreeCurrencyNum' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, RecentLimit) == 0x000010, "Member 'FGamecurrencyGetOwnedResponseParam::RecentLimit' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, RecentLimitCurrencyNum) == 0x000020, "Member 'FGamecurrencyGetOwnedResponseParam::RecentLimitCurrencyNum' has a wrong offset!");
static_assert(offsetof(FGamecurrencyGetOwnedResponseParam, RecentChargedFlag) == 0x000028, "Member 'FGamecurrencyGetOwnedResponseParam::RecentChargedFlag' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseTokushoResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCommonpurchaseTokushoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseTokushoResponseParam) == 0x000008, "Wrong alignment on FCommonpurchaseTokushoResponseParam");
static_assert(sizeof(FCommonpurchaseTokushoResponseParam) == 0x000018, "Wrong size on FCommonpurchaseTokushoResponseParam");
static_assert(offsetof(FCommonpurchaseTokushoResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseTokushoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseTokushoResponseParam, Text) == 0x000008, "Member 'FCommonpurchaseTokushoResponseParam::Text' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseGetPurchaseStatusResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCommonpurchaseGetPurchaseStatusResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PurchaseInfoId;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseGetPurchaseStatusResponseParam) == 0x000008, "Wrong alignment on FCommonpurchaseGetPurchaseStatusResponseParam");
static_assert(sizeof(FCommonpurchaseGetPurchaseStatusResponseParam) == 0x000018, "Wrong size on FCommonpurchaseGetPurchaseStatusResponseParam");
static_assert(offsetof(FCommonpurchaseGetPurchaseStatusResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseGetPurchaseStatusResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetPurchaseStatusResponseParam, PurchaseInfoId) == 0x000008, "Member 'FCommonpurchaseGetPurchaseStatusResponseParam::PurchaseInfoId' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseCancelPurchaseResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FCommonpurchaseCancelPurchaseResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseCancelPurchaseResponseParam) == 0x000004, "Wrong alignment on FCommonpurchaseCancelPurchaseResponseParam");
static_assert(sizeof(FCommonpurchaseCancelPurchaseResponseParam) == 0x000004, "Wrong size on FCommonpurchaseCancelPurchaseResponseParam");
static_assert(offsetof(FCommonpurchaseCancelPurchaseResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseCancelPurchaseResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseCompletePurchaseResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FCommonpurchaseCompletePurchaseResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseCompletePurchaseResponseParam) == 0x000004, "Wrong alignment on FCommonpurchaseCompletePurchaseResponseParam");
static_assert(sizeof(FCommonpurchaseCompletePurchaseResponseParam) == 0x000004, "Wrong size on FCommonpurchaseCompletePurchaseResponseParam");
static_assert(offsetof(FCommonpurchaseCompletePurchaseResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseCompletePurchaseResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseStartPurchaseResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCommonpurchaseStartPurchaseResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PurchaseInfoId;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseStartPurchaseResponseParam) == 0x000008, "Wrong alignment on FCommonpurchaseStartPurchaseResponseParam");
static_assert(sizeof(FCommonpurchaseStartPurchaseResponseParam) == 0x000018, "Wrong size on FCommonpurchaseStartPurchaseResponseParam");
static_assert(offsetof(FCommonpurchaseStartPurchaseResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseStartPurchaseResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseStartPurchaseResponseParam, PurchaseInfoId) == 0x000008, "Member 'FCommonpurchaseStartPurchaseResponseParam::PurchaseInfoId' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseGetCatalogInfo
// 0x0070 (0x0070 - 0x0000)
struct FCommonpurchaseGetCatalogInfo final
{
public:
	class FString                                 CatalogId;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Caption;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Image;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EstablishedPrice;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CurrentPrice;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Option;                                            // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseGetCatalogInfo) == 0x000008, "Wrong alignment on FCommonpurchaseGetCatalogInfo");
static_assert(sizeof(FCommonpurchaseGetCatalogInfo) == 0x000070, "Wrong size on FCommonpurchaseGetCatalogInfo");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, CatalogId) == 0x000000, "Member 'FCommonpurchaseGetCatalogInfo::CatalogId' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, Name) == 0x000010, "Member 'FCommonpurchaseGetCatalogInfo::Name' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, Caption) == 0x000020, "Member 'FCommonpurchaseGetCatalogInfo::Caption' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, Image) == 0x000030, "Member 'FCommonpurchaseGetCatalogInfo::Image' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, EstablishedPrice) == 0x000040, "Member 'FCommonpurchaseGetCatalogInfo::EstablishedPrice' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, CurrentPrice) == 0x000050, "Member 'FCommonpurchaseGetCatalogInfo::CurrentPrice' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogInfo, Option) == 0x000060, "Member 'FCommonpurchaseGetCatalogInfo::Option' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonpurchaseGetCatalogResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCommonpurchaseGetCatalogResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCommonpurchaseGetCatalogInfo>  CatalogList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonpurchaseGetCatalogResponseParam) == 0x000008, "Wrong alignment on FCommonpurchaseGetCatalogResponseParam");
static_assert(sizeof(FCommonpurchaseGetCatalogResponseParam) == 0x000018, "Wrong size on FCommonpurchaseGetCatalogResponseParam");
static_assert(offsetof(FCommonpurchaseGetCatalogResponseParam, Status) == 0x000000, "Member 'FCommonpurchaseGetCatalogResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCommonpurchaseGetCatalogResponseParam, CatalogList) == 0x000008, "Member 'FCommonpurchaseGetCatalogResponseParam::CatalogList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RankingMasterInfo
// 0x0030 (0x0030 - 0x0000)
struct FRankingMasterInfo final
{
public:
	class FString                                 RankingId;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SortType;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ScoreType;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SetType;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RankingInfo;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRankingMasterInfo) == 0x000008, "Wrong alignment on FRankingMasterInfo");
static_assert(sizeof(FRankingMasterInfo) == 0x000030, "Wrong size on FRankingMasterInfo");
static_assert(offsetof(FRankingMasterInfo, RankingId) == 0x000000, "Member 'FRankingMasterInfo::RankingId' has a wrong offset!");
static_assert(offsetof(FRankingMasterInfo, SortType) == 0x000010, "Member 'FRankingMasterInfo::SortType' has a wrong offset!");
static_assert(offsetof(FRankingMasterInfo, ScoreType) == 0x000014, "Member 'FRankingMasterInfo::ScoreType' has a wrong offset!");
static_assert(offsetof(FRankingMasterInfo, SetType) == 0x000018, "Member 'FRankingMasterInfo::SetType' has a wrong offset!");
static_assert(offsetof(FRankingMasterInfo, RankingInfo) == 0x000020, "Member 'FRankingMasterInfo::RankingInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.RankingGetMasterResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FRankingGetMasterResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_143F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRankingMasterInfo>             MasterList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRankingGetMasterResponseParam) == 0x000008, "Wrong alignment on FRankingGetMasterResponseParam");
static_assert(sizeof(FRankingGetMasterResponseParam) == 0x000018, "Wrong size on FRankingGetMasterResponseParam");
static_assert(offsetof(FRankingGetMasterResponseParam, Status) == 0x000000, "Member 'FRankingGetMasterResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRankingGetMasterResponseParam, MasterList) == 0x000008, "Member 'FRankingGetMasterResponseParam::MasterList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildNotificationInfo
// 0x0038 (0x0038 - 0x0000)
struct FGuildNotificationInfo final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NotificationUserId;                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NotfyType;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1440[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Logtime;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildNotificationInfo) == 0x000008, "Wrong alignment on FGuildNotificationInfo");
static_assert(sizeof(FGuildNotificationInfo) == 0x000038, "Wrong size on FGuildNotificationInfo");
static_assert(offsetof(FGuildNotificationInfo, UserId) == 0x000000, "Member 'FGuildNotificationInfo::UserId' has a wrong offset!");
static_assert(offsetof(FGuildNotificationInfo, NotificationUserId) == 0x000010, "Member 'FGuildNotificationInfo::NotificationUserId' has a wrong offset!");
static_assert(offsetof(FGuildNotificationInfo, NotfyType) == 0x000020, "Member 'FGuildNotificationInfo::NotfyType' has a wrong offset!");
static_assert(offsetof(FGuildNotificationInfo, Logtime) == 0x000028, "Member 'FGuildNotificationInfo::Logtime' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildNotificationSelfResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildNotificationSelfResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1441[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuildNotificationInfo>         NotificationSelfList;                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildNotificationSelfResponseParam) == 0x000008, "Wrong alignment on FGuildNotificationSelfResponseParam");
static_assert(sizeof(FGuildNotificationSelfResponseParam) == 0x000018, "Wrong size on FGuildNotificationSelfResponseParam");
static_assert(offsetof(FGuildNotificationSelfResponseParam, Status) == 0x000000, "Member 'FGuildNotificationSelfResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildNotificationSelfResponseParam, NotificationSelfList) == 0x000008, "Member 'FGuildNotificationSelfResponseParam::NotificationSelfList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildNotificationResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildNotificationResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1442[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuildNotificationInfo>         NotificationList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildNotificationResponseParam) == 0x000008, "Wrong alignment on FGuildNotificationResponseParam");
static_assert(sizeof(FGuildNotificationResponseParam) == 0x000018, "Wrong size on FGuildNotificationResponseParam");
static_assert(offsetof(FGuildNotificationResponseParam, Status) == 0x000000, "Member 'FGuildNotificationResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildNotificationResponseParam, NotificationList) == 0x000008, "Member 'FGuildNotificationResponseParam::NotificationList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildInfo
// 0x0020 (0x0020 - 0x0000)
struct FGuildInfo final
{
public:
	class FString                                 GuildId;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GuildData;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildInfo) == 0x000008, "Wrong alignment on FGuildInfo");
static_assert(sizeof(FGuildInfo) == 0x000020, "Wrong size on FGuildInfo");
static_assert(offsetof(FGuildInfo, GuildId) == 0x000000, "Member 'FGuildInfo::GuildId' has a wrong offset!");
static_assert(offsetof(FGuildInfo, GuildData) == 0x000010, "Member 'FGuildInfo::GuildData' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildInvitedListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildInvitedListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1443[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuildInfo>                     AddApplyGuildList;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildInvitedListResponseParam) == 0x000008, "Wrong alignment on FGuildInvitedListResponseParam");
static_assert(sizeof(FGuildInvitedListResponseParam) == 0x000018, "Wrong size on FGuildInvitedListResponseParam");
static_assert(offsetof(FGuildInvitedListResponseParam, Status) == 0x000000, "Member 'FGuildInvitedListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildInvitedListResponseParam, AddApplyGuildList) == 0x000008, "Member 'FGuildInvitedListResponseParam::AddApplyGuildList' has a wrong offset!");

// ScriptStruct CosmosWebApi.AreaInfo
// 0x0040 (0x0040 - 0x0000)
struct FAreaInfo final
{
public:
	class FString                                 RegionId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AreaId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameId;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AreaInfo;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAreaInfo) == 0x000008, "Wrong alignment on FAreaInfo");
static_assert(sizeof(FAreaInfo) == 0x000040, "Wrong size on FAreaInfo");
static_assert(offsetof(FAreaInfo, RegionId) == 0x000000, "Member 'FAreaInfo::RegionId' has a wrong offset!");
static_assert(offsetof(FAreaInfo, AreaId) == 0x000010, "Member 'FAreaInfo::AreaId' has a wrong offset!");
static_assert(offsetof(FAreaInfo, NameId) == 0x000020, "Member 'FAreaInfo::NameId' has a wrong offset!");
static_assert(offsetof(FAreaInfo, AreaInfo) == 0x000030, "Member 'FAreaInfo::AreaInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CatalogGetAreaResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCatalogGetAreaResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1444[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAreaInfo>                      AreaList;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCatalogGetAreaResponseParam) == 0x000008, "Wrong alignment on FCatalogGetAreaResponseParam");
static_assert(sizeof(FCatalogGetAreaResponseParam) == 0x000018, "Wrong size on FCatalogGetAreaResponseParam");
static_assert(offsetof(FCatalogGetAreaResponseParam, Status) == 0x000000, "Member 'FCatalogGetAreaResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCatalogGetAreaResponseParam, AreaList) == 0x000008, "Member 'FCatalogGetAreaResponseParam::AreaList' has a wrong offset!");

// ScriptStruct CosmosWebApi.TmpGuildMemberInfo
// 0x0030 (0x0030 - 0x0000)
struct FTmpGuildMemberInfo final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GuildId;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GuildMemberData;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTmpGuildMemberInfo) == 0x000008, "Wrong alignment on FTmpGuildMemberInfo");
static_assert(sizeof(FTmpGuildMemberInfo) == 0x000030, "Wrong size on FTmpGuildMemberInfo");
static_assert(offsetof(FTmpGuildMemberInfo, UserId) == 0x000000, "Member 'FTmpGuildMemberInfo::UserId' has a wrong offset!");
static_assert(offsetof(FTmpGuildMemberInfo, GuildId) == 0x000010, "Member 'FTmpGuildMemberInfo::GuildId' has a wrong offset!");
static_assert(offsetof(FTmpGuildMemberInfo, GuildMemberData) == 0x000020, "Member 'FTmpGuildMemberInfo::GuildMemberData' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildApprovalListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildApprovalListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1445[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTmpGuildMemberInfo>            AddApplyUserList;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildApprovalListResponseParam) == 0x000008, "Wrong alignment on FGuildApprovalListResponseParam");
static_assert(sizeof(FGuildApprovalListResponseParam) == 0x000018, "Wrong size on FGuildApprovalListResponseParam");
static_assert(offsetof(FGuildApprovalListResponseParam, Status) == 0x000000, "Member 'FGuildApprovalListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildApprovalListResponseParam, AddApplyUserList) == 0x000008, "Member 'FGuildApprovalListResponseParam::AddApplyUserList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RankingInfo
// 0x0030 (0x0030 - 0x0000)
struct FRankingInfo final
{
public:
	int32                                         UniqueRank;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SameRank;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Score;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1446[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserData;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRankingInfo) == 0x000008, "Wrong alignment on FRankingInfo");
static_assert(sizeof(FRankingInfo) == 0x000030, "Wrong size on FRankingInfo");
static_assert(offsetof(FRankingInfo, UniqueRank) == 0x000000, "Member 'FRankingInfo::UniqueRank' has a wrong offset!");
static_assert(offsetof(FRankingInfo, SameRank) == 0x000004, "Member 'FRankingInfo::SameRank' has a wrong offset!");
static_assert(offsetof(FRankingInfo, UserId) == 0x000008, "Member 'FRankingInfo::UserId' has a wrong offset!");
static_assert(offsetof(FRankingInfo, Score) == 0x000018, "Member 'FRankingInfo::Score' has a wrong offset!");
static_assert(offsetof(FRankingInfo, UserData) == 0x000020, "Member 'FRankingInfo::UserData' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildAddApplyListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildAddApplyListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1447[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuildInfo>                     AddApplyGuildList;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildAddApplyListResponseParam) == 0x000008, "Wrong alignment on FGuildAddApplyListResponseParam");
static_assert(sizeof(FGuildAddApplyListResponseParam) == 0x000018, "Wrong size on FGuildAddApplyListResponseParam");
static_assert(offsetof(FGuildAddApplyListResponseParam, Status) == 0x000000, "Member 'FGuildAddApplyListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildAddApplyListResponseParam, AddApplyGuildList) == 0x000008, "Member 'FGuildAddApplyListResponseParam::AddApplyGuildList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildInvitationListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildInvitationListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1448[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTmpGuildMemberInfo>            InvitationUserList;                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildInvitationListResponseParam) == 0x000008, "Wrong alignment on FGuildInvitationListResponseParam");
static_assert(sizeof(FGuildInvitationListResponseParam) == 0x000018, "Wrong size on FGuildInvitationListResponseParam");
static_assert(offsetof(FGuildInvitationListResponseParam, Status) == 0x000000, "Member 'FGuildInvitationListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildInvitationListResponseParam, InvitationUserList) == 0x000008, "Member 'FGuildInvitationListResponseParam::InvitationUserList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildEditResponseParam
// 0x0028 (0x0028 - 0x0000)
struct FGuildEditResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1449[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuildInfo                             GuildInfo;                                         // 0x0008(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildEditResponseParam) == 0x000008, "Wrong alignment on FGuildEditResponseParam");
static_assert(sizeof(FGuildEditResponseParam) == 0x000028, "Wrong size on FGuildEditResponseParam");
static_assert(offsetof(FGuildEditResponseParam, Status) == 0x000000, "Member 'FGuildEditResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildEditResponseParam, GuildInfo) == 0x000008, "Member 'FGuildEditResponseParam::GuildInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildMemberInfo
// 0x0038 (0x0038 - 0x0000)
struct FGuildMemberInfo final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GuildId;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GuildMemberData;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Position;                                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144A[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGuildMemberInfo) == 0x000008, "Wrong alignment on FGuildMemberInfo");
static_assert(sizeof(FGuildMemberInfo) == 0x000038, "Wrong size on FGuildMemberInfo");
static_assert(offsetof(FGuildMemberInfo, UserId) == 0x000000, "Member 'FGuildMemberInfo::UserId' has a wrong offset!");
static_assert(offsetof(FGuildMemberInfo, GuildId) == 0x000010, "Member 'FGuildMemberInfo::GuildId' has a wrong offset!");
static_assert(offsetof(FGuildMemberInfo, GuildMemberData) == 0x000020, "Member 'FGuildMemberInfo::GuildMemberData' has a wrong offset!");
static_assert(offsetof(FGuildMemberInfo, Position) == 0x000030, "Member 'FGuildMemberInfo::Position' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildInfoResponseParam
// 0x0038 (0x0038 - 0x0000)
struct FGuildInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuildInfo                             GuildInfo;                                         // 0x0008(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FGuildMemberInfo>               GuildMebmerList;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildInfoResponseParam) == 0x000008, "Wrong alignment on FGuildInfoResponseParam");
static_assert(sizeof(FGuildInfoResponseParam) == 0x000038, "Wrong size on FGuildInfoResponseParam");
static_assert(offsetof(FGuildInfoResponseParam, Status) == 0x000000, "Member 'FGuildInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildInfoResponseParam, GuildInfo) == 0x000008, "Member 'FGuildInfoResponseParam::GuildInfo' has a wrong offset!");
static_assert(offsetof(FGuildInfoResponseParam, GuildMebmerList) == 0x000028, "Member 'FGuildInfoResponseParam::GuildMebmerList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuildInfo>                     GuildList;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildGetListResponseParam) == 0x000008, "Wrong alignment on FGuildGetListResponseParam");
static_assert(sizeof(FGuildGetListResponseParam) == 0x000018, "Wrong size on FGuildGetListResponseParam");
static_assert(offsetof(FGuildGetListResponseParam, Status) == 0x000000, "Member 'FGuildGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildGetListResponseParam, GuildList) == 0x000008, "Member 'FGuildGetListResponseParam::GuildList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildCreateResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGuildCreateResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GuildId;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildCreateResponseParam) == 0x000008, "Wrong alignment on FGuildCreateResponseParam");
static_assert(sizeof(FGuildCreateResponseParam) == 0x000018, "Wrong size on FGuildCreateResponseParam");
static_assert(offsetof(FGuildCreateResponseParam, Status) == 0x000000, "Member 'FGuildCreateResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGuildCreateResponseParam, GuildId) == 0x000008, "Member 'FGuildCreateResponseParam::GuildId' has a wrong offset!");

// ScriptStruct CosmosWebApi.GetItemInfo
// 0x0030 (0x0030 - 0x0000)
struct FGetItemInfo final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemInfo;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineType;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_144F[0x4];                                     // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGetItemInfo) == 0x000008, "Wrong alignment on FGetItemInfo");
static_assert(sizeof(FGetItemInfo) == 0x000030, "Wrong size on FGetItemInfo");
static_assert(offsetof(FGetItemInfo, ItemId) == 0x000000, "Member 'FGetItemInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FGetItemInfo, ItemNum) == 0x000010, "Member 'FGetItemInfo::ItemNum' has a wrong offset!");
static_assert(offsetof(FGetItemInfo, ItemInfo) == 0x000018, "Member 'FGetItemInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(FGetItemInfo, OnlineType) == 0x000028, "Member 'FGetItemInfo::OnlineType' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesGetRewardResponseParam
// 0x0028 (0x0028 - 0x0000)
struct FFesGetRewardResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1450[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WorkId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGetItemInfo>                   GetItemList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesGetRewardResponseParam) == 0x000008, "Wrong alignment on FFesGetRewardResponseParam");
static_assert(sizeof(FFesGetRewardResponseParam) == 0x000028, "Wrong size on FFesGetRewardResponseParam");
static_assert(offsetof(FFesGetRewardResponseParam, Status) == 0x000000, "Member 'FFesGetRewardResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FFesGetRewardResponseParam, WorkId) == 0x000008, "Member 'FFesGetRewardResponseParam::WorkId' has a wrong offset!");
static_assert(offsetof(FFesGetRewardResponseParam, GetItemList) == 0x000018, "Member 'FFesGetRewardResponseParam::GetItemList' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesAddPointResponseParam
// 0x0008 (0x0008 - 0x0000)
struct FFesAddPointResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalPoint;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesAddPointResponseParam) == 0x000004, "Wrong alignment on FFesAddPointResponseParam");
static_assert(sizeof(FFesAddPointResponseParam) == 0x000008, "Wrong size on FFesAddPointResponseParam");
static_assert(offsetof(FFesAddPointResponseParam, Status) == 0x000000, "Member 'FFesAddPointResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FFesAddPointResponseParam, TotalPoint) == 0x000004, "Member 'FFesAddPointResponseParam::TotalPoint' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesFactionsInfo
// 0x0008 (0x0008 - 0x0000)
struct FFesFactionsInfo final
{
public:
	int32                                         FactionsNo;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FactionsTotalPoint;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesFactionsInfo) == 0x000004, "Wrong alignment on FFesFactionsInfo");
static_assert(sizeof(FFesFactionsInfo) == 0x000008, "Wrong size on FFesFactionsInfo");
static_assert(offsetof(FFesFactionsInfo, FactionsNo) == 0x000000, "Member 'FFesFactionsInfo::FactionsNo' has a wrong offset!");
static_assert(offsetof(FFesFactionsInfo, FactionsTotalPoint) == 0x000004, "Member 'FFesFactionsInfo::FactionsTotalPoint' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesRewardInfo
// 0x0020 (0x0020 - 0x0000)
struct FFesRewardInfo final
{
public:
	int32                                         Rank;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1451[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1452[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FFesRewardInfo) == 0x000008, "Wrong alignment on FFesRewardInfo");
static_assert(sizeof(FFesRewardInfo) == 0x000020, "Wrong size on FFesRewardInfo");
static_assert(offsetof(FFesRewardInfo, Rank) == 0x000000, "Member 'FFesRewardInfo::Rank' has a wrong offset!");
static_assert(offsetof(FFesRewardInfo, ItemId) == 0x000008, "Member 'FFesRewardInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FFesRewardInfo, ItemNum) == 0x000018, "Member 'FFesRewardInfo::ItemNum' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesUserJoinFactionsInfo
// 0x0008 (0x0008 - 0x0000)
struct FFesUserJoinFactionsInfo final
{
public:
	int32                                         FactionsNo;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FactionsPoint;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesUserJoinFactionsInfo) == 0x000004, "Wrong alignment on FFesUserJoinFactionsInfo");
static_assert(sizeof(FFesUserJoinFactionsInfo) == 0x000008, "Wrong size on FFesUserJoinFactionsInfo");
static_assert(offsetof(FFesUserJoinFactionsInfo, FactionsNo) == 0x000000, "Member 'FFesUserJoinFactionsInfo::FactionsNo' has a wrong offset!");
static_assert(offsetof(FFesUserJoinFactionsInfo, FactionsPoint) == 0x000004, "Member 'FFesUserJoinFactionsInfo::FactionsPoint' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesGetInfoResponseParam
// 0x0090 (0x0090 - 0x0000)
struct FFesGetInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1453[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FesInfo;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnnounceStart;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnnounceEnd;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RewardStart;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFesFactionsInfo>               FactionsList;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFesRewardInfo>                 RewardList;                                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFesUserJoinFactionsInfo               UserFactionsInfo;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesGetInfoResponseParam) == 0x000008, "Wrong alignment on FFesGetInfoResponseParam");
static_assert(sizeof(FFesGetInfoResponseParam) == 0x000090, "Wrong size on FFesGetInfoResponseParam");
static_assert(offsetof(FFesGetInfoResponseParam, Status) == 0x000000, "Member 'FFesGetInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, FesInfo) == 0x000008, "Member 'FFesGetInfoResponseParam::FesInfo' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, AnnounceStart) == 0x000018, "Member 'FFesGetInfoResponseParam::AnnounceStart' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, AnnounceEnd) == 0x000028, "Member 'FFesGetInfoResponseParam::AnnounceEnd' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, StartTime) == 0x000038, "Member 'FFesGetInfoResponseParam::StartTime' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, EndTime) == 0x000048, "Member 'FFesGetInfoResponseParam::EndTime' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, RewardStart) == 0x000058, "Member 'FFesGetInfoResponseParam::RewardStart' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, FactionsList) == 0x000068, "Member 'FFesGetInfoResponseParam::FactionsList' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, RewardList) == 0x000078, "Member 'FFesGetInfoResponseParam::RewardList' has a wrong offset!");
static_assert(offsetof(FFesGetInfoResponseParam, UserFactionsInfo) == 0x000088, "Member 'FFesGetInfoResponseParam::UserFactionsInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesInfo
// 0x0070 (0x0070 - 0x0000)
struct FFesInfo final
{
public:
	class FString                                 FesId;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FesInfo;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnnounceStart;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AnnounceEnd;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RewardStart;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesInfo) == 0x000008, "Wrong alignment on FFesInfo");
static_assert(sizeof(FFesInfo) == 0x000070, "Wrong size on FFesInfo");
static_assert(offsetof(FFesInfo, FesId) == 0x000000, "Member 'FFesInfo::FesId' has a wrong offset!");
static_assert(offsetof(FFesInfo, FesInfo) == 0x000010, "Member 'FFesInfo::FesInfo' has a wrong offset!");
static_assert(offsetof(FFesInfo, AnnounceStart) == 0x000020, "Member 'FFesInfo::AnnounceStart' has a wrong offset!");
static_assert(offsetof(FFesInfo, AnnounceEnd) == 0x000030, "Member 'FFesInfo::AnnounceEnd' has a wrong offset!");
static_assert(offsetof(FFesInfo, StartTime) == 0x000040, "Member 'FFesInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FFesInfo, EndTime) == 0x000050, "Member 'FFesInfo::EndTime' has a wrong offset!");
static_assert(offsetof(FFesInfo, RewardStart) == 0x000060, "Member 'FFesInfo::RewardStart' has a wrong offset!");

// ScriptStruct CosmosWebApi.FesGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FFesGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1454[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFesInfo>                       FesList;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFesGetListResponseParam) == 0x000008, "Wrong alignment on FFesGetListResponseParam");
static_assert(sizeof(FFesGetListResponseParam) == 0x000018, "Wrong size on FFesGetListResponseParam");
static_assert(offsetof(FFesGetListResponseParam, Status) == 0x000000, "Member 'FFesGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FFesGetListResponseParam, FesList) == 0x000008, "Member 'FFesGetListResponseParam::FesList' has a wrong offset!");

// ScriptStruct CosmosWebApi.PointCardUserListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FPointCardUserListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1455[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPointInfo>                     PointInfoList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPointCardUserListResponseParam) == 0x000008, "Wrong alignment on FPointCardUserListResponseParam");
static_assert(sizeof(FPointCardUserListResponseParam) == 0x000018, "Wrong size on FPointCardUserListResponseParam");
static_assert(offsetof(FPointCardUserListResponseParam, Status) == 0x000000, "Member 'FPointCardUserListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FPointCardUserListResponseParam, PointInfoList) == 0x000008, "Member 'FPointCardUserListResponseParam::PointInfoList' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupSearchTagInfo
// 0x0050 (0x0050 - 0x0000)
struct FDataupSearchTagInfo final
{
public:
	class FString                                 SearchTag1;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SearchTag2;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SearchTag3;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SearchTag4;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SearchTag5;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupSearchTagInfo) == 0x000008, "Wrong alignment on FDataupSearchTagInfo");
static_assert(sizeof(FDataupSearchTagInfo) == 0x000050, "Wrong size on FDataupSearchTagInfo");
static_assert(offsetof(FDataupSearchTagInfo, SearchTag1) == 0x000000, "Member 'FDataupSearchTagInfo::SearchTag1' has a wrong offset!");
static_assert(offsetof(FDataupSearchTagInfo, SearchTag2) == 0x000010, "Member 'FDataupSearchTagInfo::SearchTag2' has a wrong offset!");
static_assert(offsetof(FDataupSearchTagInfo, SearchTag3) == 0x000020, "Member 'FDataupSearchTagInfo::SearchTag3' has a wrong offset!");
static_assert(offsetof(FDataupSearchTagInfo, SearchTag4) == 0x000030, "Member 'FDataupSearchTagInfo::SearchTag4' has a wrong offset!");
static_assert(offsetof(FDataupSearchTagInfo, SearchTag5) == 0x000040, "Member 'FDataupSearchTagInfo::SearchTag5' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupSearchResultInfo
// 0x0070 (0x0070 - 0x0000)
struct FDataupSearchResultInfo final
{
public:
	class FString                                 RequestID;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppendInfo;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataupSearchTagInfo                   SearchTagInfo;                                     // 0x0020(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupSearchResultInfo) == 0x000008, "Wrong alignment on FDataupSearchResultInfo");
static_assert(sizeof(FDataupSearchResultInfo) == 0x000070, "Wrong size on FDataupSearchResultInfo");
static_assert(offsetof(FDataupSearchResultInfo, RequestID) == 0x000000, "Member 'FDataupSearchResultInfo::RequestID' has a wrong offset!");
static_assert(offsetof(FDataupSearchResultInfo, AppendInfo) == 0x000010, "Member 'FDataupSearchResultInfo::AppendInfo' has a wrong offset!");
static_assert(offsetof(FDataupSearchResultInfo, SearchTagInfo) == 0x000020, "Member 'FDataupSearchResultInfo::SearchTagInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupSearchResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FDataupSearchResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1456[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataupSearchResultInfo>        ResultList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupSearchResponseParam) == 0x000008, "Wrong alignment on FDataupSearchResponseParam");
static_assert(sizeof(FDataupSearchResponseParam) == 0x000018, "Wrong size on FDataupSearchResponseParam");
static_assert(offsetof(FDataupSearchResponseParam, Status) == 0x000000, "Member 'FDataupSearchResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FDataupSearchResponseParam, ResultList) == 0x000008, "Member 'FDataupSearchResponseParam::ResultList' has a wrong offset!");

// ScriptStruct CosmosWebApi.CampaignTitleListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCampaignTitleListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1457[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCampaignInfo>                  CampaignList;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCampaignTitleListResponseParam) == 0x000008, "Wrong alignment on FCampaignTitleListResponseParam");
static_assert(sizeof(FCampaignTitleListResponseParam) == 0x000018, "Wrong size on FCampaignTitleListResponseParam");
static_assert(offsetof(FCampaignTitleListResponseParam, Status) == 0x000000, "Member 'FCampaignTitleListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCampaignTitleListResponseParam, CampaignList) == 0x000008, "Member 'FCampaignTitleListResponseParam::CampaignList' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupWriteResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FDataupWriteResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1458[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RequestID;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupWriteResponseParam) == 0x000008, "Wrong alignment on FDataupWriteResponseParam");
static_assert(sizeof(FDataupWriteResponseParam) == 0x000018, "Wrong size on FDataupWriteResponseParam");
static_assert(offsetof(FDataupWriteResponseParam, Status) == 0x000000, "Member 'FDataupWriteResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FDataupWriteResponseParam, RequestID) == 0x000008, "Member 'FDataupWriteResponseParam::RequestID' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupReadResponseParam
// 0x0078 (0x0078 - 0x0000)
struct FDataupReadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1459[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Data;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AppendInfo;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataupSearchTagInfo                   SearchTagInfo;                                     // 0x0028(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupReadResponseParam) == 0x000008, "Wrong alignment on FDataupReadResponseParam");
static_assert(sizeof(FDataupReadResponseParam) == 0x000078, "Wrong size on FDataupReadResponseParam");
static_assert(offsetof(FDataupReadResponseParam, Status) == 0x000000, "Member 'FDataupReadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FDataupReadResponseParam, Data) == 0x000008, "Member 'FDataupReadResponseParam::Data' has a wrong offset!");
static_assert(offsetof(FDataupReadResponseParam, AppendInfo) == 0x000018, "Member 'FDataupReadResponseParam::AppendInfo' has a wrong offset!");
static_assert(offsetof(FDataupReadResponseParam, SearchTagInfo) == 0x000028, "Member 'FDataupReadResponseParam::SearchTagInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.RewardEarnResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FRewardEarnResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRewardInfo>                    RewardList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRewardEarnResponseParam) == 0x000008, "Wrong alignment on FRewardEarnResponseParam");
static_assert(sizeof(FRewardEarnResponseParam) == 0x000018, "Wrong size on FRewardEarnResponseParam");
static_assert(offsetof(FRewardEarnResponseParam, Status) == 0x000000, "Member 'FRewardEarnResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRewardEarnResponseParam, RewardList) == 0x000008, "Member 'FRewardEarnResponseParam::RewardList' has a wrong offset!");

// ScriptStruct CosmosWebApi.CampaignInfoResponseParam
// 0x0098 (0x0098 - 0x0000)
struct FCampaignInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCampaignInfo                          CampaignInfo;                                      // 0x0008(0x0090)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCampaignInfoResponseParam) == 0x000008, "Wrong alignment on FCampaignInfoResponseParam");
static_assert(sizeof(FCampaignInfoResponseParam) == 0x000098, "Wrong size on FCampaignInfoResponseParam");
static_assert(offsetof(FCampaignInfoResponseParam, Status) == 0x000000, "Member 'FCampaignInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCampaignInfoResponseParam, CampaignInfo) == 0x000008, "Member 'FCampaignInfoResponseParam::CampaignInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CampaignRewardListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCampaignRewardListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRewardInfo>                    RewardList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCampaignRewardListResponseParam) == 0x000008, "Wrong alignment on FCampaignRewardListResponseParam");
static_assert(sizeof(FCampaignRewardListResponseParam) == 0x000018, "Wrong size on FCampaignRewardListResponseParam");
static_assert(offsetof(FCampaignRewardListResponseParam, Status) == 0x000000, "Member 'FCampaignRewardListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCampaignRewardListResponseParam, RewardList) == 0x000008, "Member 'FCampaignRewardListResponseParam::RewardList' has a wrong offset!");

// ScriptStruct CosmosWebApi.MissionInfoResponseParam
// 0x0078 (0x0078 - 0x0000)
struct FMissionInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMissionInfo                           MissionInfo;                                       // 0x0008(0x0070)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMissionInfoResponseParam) == 0x000008, "Wrong alignment on FMissionInfoResponseParam");
static_assert(sizeof(FMissionInfoResponseParam) == 0x000078, "Wrong size on FMissionInfoResponseParam");
static_assert(offsetof(FMissionInfoResponseParam, Status) == 0x000000, "Member 'FMissionInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FMissionInfoResponseParam, MissionInfo) == 0x000008, "Member 'FMissionInfoResponseParam::MissionInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.PointCardInfoResponseParam
// 0x0060 (0x0060 - 0x0000)
struct FPointCardInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointInfo                             PointInfo;                                         // 0x0008(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPointCardInfoResponseParam) == 0x000008, "Wrong alignment on FPointCardInfoResponseParam");
static_assert(sizeof(FPointCardInfoResponseParam) == 0x000060, "Wrong size on FPointCardInfoResponseParam");
static_assert(offsetof(FPointCardInfoResponseParam, Status) == 0x000000, "Member 'FPointCardInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FPointCardInfoResponseParam, PointInfo) == 0x000008, "Member 'FPointCardInfoResponseParam::PointInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.GiftInfo
// 0x0060 (0x0060 - 0x0000)
struct FGiftInfo final
{
public:
	class FString                                 GiftId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemInfo;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineType;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GiftReasonId;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TimeLimit;                                         // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RemainingTime;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_145F[0x4];                                     // 0x005C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGiftInfo) == 0x000008, "Wrong alignment on FGiftInfo");
static_assert(sizeof(FGiftInfo) == 0x000060, "Wrong size on FGiftInfo");
static_assert(offsetof(FGiftInfo, GiftId) == 0x000000, "Member 'FGiftInfo::GiftId' has a wrong offset!");
static_assert(offsetof(FGiftInfo, ItemId) == 0x000010, "Member 'FGiftInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FGiftInfo, ItemInfo) == 0x000020, "Member 'FGiftInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(FGiftInfo, ItemNum) == 0x000030, "Member 'FGiftInfo::ItemNum' has a wrong offset!");
static_assert(offsetof(FGiftInfo, OnlineType) == 0x000034, "Member 'FGiftInfo::OnlineType' has a wrong offset!");
static_assert(offsetof(FGiftInfo, GiftReasonId) == 0x000038, "Member 'FGiftInfo::GiftReasonId' has a wrong offset!");
static_assert(offsetof(FGiftInfo, TimeLimit) == 0x000048, "Member 'FGiftInfo::TimeLimit' has a wrong offset!");
static_assert(offsetof(FGiftInfo, RemainingTime) == 0x000058, "Member 'FGiftInfo::RemainingTime' has a wrong offset!");

// ScriptStruct CosmosWebApi.GiftBoxOpenResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FGiftBoxOpenResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1460[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGiftInfo>                      GiftList;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGiftBoxOpenResponseParam) == 0x000008, "Wrong alignment on FGiftBoxOpenResponseParam");
static_assert(sizeof(FGiftBoxOpenResponseParam) == 0x000018, "Wrong size on FGiftBoxOpenResponseParam");
static_assert(offsetof(FGiftBoxOpenResponseParam, Status) == 0x000000, "Member 'FGiftBoxOpenResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FGiftBoxOpenResponseParam, GiftList) == 0x000008, "Member 'FGiftBoxOpenResponseParam::GiftList' has a wrong offset!");

// ScriptStruct CosmosWebApi.GotLoginBonus
// 0x0020 (0x0020 - 0x0000)
struct FGotLoginBonus final
{
public:
	class FString                                 LoginBonusId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGetItemInfo>                   GetItemList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGotLoginBonus) == 0x000008, "Wrong alignment on FGotLoginBonus");
static_assert(sizeof(FGotLoginBonus) == 0x000020, "Wrong size on FGotLoginBonus");
static_assert(offsetof(FGotLoginBonus, LoginBonusId) == 0x000000, "Member 'FGotLoginBonus::LoginBonusId' has a wrong offset!");
static_assert(offsetof(FGotLoginBonus, GetItemList) == 0x000010, "Member 'FGotLoginBonus::GetItemList' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonusGetBonusResponseParam
// 0x0028 (0x0028 - 0x0000)
struct FLoginBonusGetBonusResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1461[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WorkId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGotLoginBonus>                 LoginBonusList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonusGetBonusResponseParam) == 0x000008, "Wrong alignment on FLoginBonusGetBonusResponseParam");
static_assert(sizeof(FLoginBonusGetBonusResponseParam) == 0x000028, "Wrong size on FLoginBonusGetBonusResponseParam");
static_assert(offsetof(FLoginBonusGetBonusResponseParam, Status) == 0x000000, "Member 'FLoginBonusGetBonusResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FLoginBonusGetBonusResponseParam, WorkId) == 0x000008, "Member 'FLoginBonusGetBonusResponseParam::WorkId' has a wrong offset!");
static_assert(offsetof(FLoginBonusGetBonusResponseParam, LoginBonusList) == 0x000018, "Member 'FLoginBonusGetBonusResponseParam::LoginBonusList' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonusProgressInfo
// 0x0028 (0x0028 - 0x0000)
struct FLoginBonusProgressInfo final
{
public:
	class FString                                 DayNum;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GetFlg;                                            // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonusProgressInfo) == 0x000008, "Wrong alignment on FLoginBonusProgressInfo");
static_assert(sizeof(FLoginBonusProgressInfo) == 0x000028, "Wrong size on FLoginBonusProgressInfo");
static_assert(offsetof(FLoginBonusProgressInfo, DayNum) == 0x000000, "Member 'FLoginBonusProgressInfo::DayNum' has a wrong offset!");
static_assert(offsetof(FLoginBonusProgressInfo, ItemId) == 0x000010, "Member 'FLoginBonusProgressInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FLoginBonusProgressInfo, ItemNum) == 0x000020, "Member 'FLoginBonusProgressInfo::ItemNum' has a wrong offset!");
static_assert(offsetof(FLoginBonusProgressInfo, GetFlg) == 0x000024, "Member 'FLoginBonusProgressInfo::GetFlg' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonusInfo
// 0x0058 (0x0058 - 0x0000)
struct FLoginBonusInfo final
{
public:
	class FString                                 LoginBonusId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoginBonusType;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1462[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginBonusInfo;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLoginBonusProgressInfo>        ProgressList;                                      // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonusInfo) == 0x000008, "Wrong alignment on FLoginBonusInfo");
static_assert(sizeof(FLoginBonusInfo) == 0x000058, "Wrong size on FLoginBonusInfo");
static_assert(offsetof(FLoginBonusInfo, LoginBonusId) == 0x000000, "Member 'FLoginBonusInfo::LoginBonusId' has a wrong offset!");
static_assert(offsetof(FLoginBonusInfo, LoginBonusType) == 0x000010, "Member 'FLoginBonusInfo::LoginBonusType' has a wrong offset!");
static_assert(offsetof(FLoginBonusInfo, LoginBonusInfo) == 0x000018, "Member 'FLoginBonusInfo::LoginBonusInfo' has a wrong offset!");
static_assert(offsetof(FLoginBonusInfo, StartTime) == 0x000028, "Member 'FLoginBonusInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FLoginBonusInfo, EndTime) == 0x000038, "Member 'FLoginBonusInfo::EndTime' has a wrong offset!");
static_assert(offsetof(FLoginBonusInfo, ProgressList) == 0x000048, "Member 'FLoginBonusInfo::ProgressList' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonusGetInfoResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FLoginBonusGetInfoResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1463[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLoginBonusInfo>                LoginBonusInfoList;                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonusGetInfoResponseParam) == 0x000008, "Wrong alignment on FLoginBonusGetInfoResponseParam");
static_assert(sizeof(FLoginBonusGetInfoResponseParam) == 0x000018, "Wrong size on FLoginBonusGetInfoResponseParam");
static_assert(offsetof(FLoginBonusGetInfoResponseParam, Status) == 0x000000, "Member 'FLoginBonusGetInfoResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FLoginBonusGetInfoResponseParam, LoginBonusInfoList) == 0x000008, "Member 'FLoginBonusGetInfoResponseParam::LoginBonusInfoList' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonus
// 0x0048 (0x0048 - 0x0000)
struct FLoginBonus final
{
public:
	class FString                                 LoginBonusId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LoginBonusType;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1464[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LoginBonusInfo;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonus) == 0x000008, "Wrong alignment on FLoginBonus");
static_assert(sizeof(FLoginBonus) == 0x000048, "Wrong size on FLoginBonus");
static_assert(offsetof(FLoginBonus, LoginBonusId) == 0x000000, "Member 'FLoginBonus::LoginBonusId' has a wrong offset!");
static_assert(offsetof(FLoginBonus, LoginBonusType) == 0x000010, "Member 'FLoginBonus::LoginBonusType' has a wrong offset!");
static_assert(offsetof(FLoginBonus, LoginBonusInfo) == 0x000018, "Member 'FLoginBonus::LoginBonusInfo' has a wrong offset!");
static_assert(offsetof(FLoginBonus, StartTime) == 0x000028, "Member 'FLoginBonus::StartTime' has a wrong offset!");
static_assert(offsetof(FLoginBonus, EndTime) == 0x000038, "Member 'FLoginBonus::EndTime' has a wrong offset!");

// ScriptStruct CosmosWebApi.LoginBonusGetListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FLoginBonusGetListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1465[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLoginBonus>                    LoginBonusList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLoginBonusGetListResponseParam) == 0x000008, "Wrong alignment on FLoginBonusGetListResponseParam");
static_assert(sizeof(FLoginBonusGetListResponseParam) == 0x000018, "Wrong size on FLoginBonusGetListResponseParam");
static_assert(offsetof(FLoginBonusGetListResponseParam, Status) == 0x000000, "Member 'FLoginBonusGetListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FLoginBonusGetListResponseParam, LoginBonusList) == 0x000008, "Member 'FLoginBonusGetListResponseParam::LoginBonusList' has a wrong offset!");

// ScriptStruct CosmosWebApi.OwnedItemInfo
// 0x0028 (0x0028 - 0x0000)
struct FOwnedItemInfo final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemInfo;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1466[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOwnedItemInfo) == 0x000008, "Wrong alignment on FOwnedItemInfo");
static_assert(sizeof(FOwnedItemInfo) == 0x000028, "Wrong size on FOwnedItemInfo");
static_assert(offsetof(FOwnedItemInfo, ItemId) == 0x000000, "Member 'FOwnedItemInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FOwnedItemInfo, ItemInfo) == 0x000010, "Member 'FOwnedItemInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(FOwnedItemInfo, ItemNum) == 0x000020, "Member 'FOwnedItemInfo::ItemNum' has a wrong offset!");

// ScriptStruct CosmosWebApi.ItemGetOwnedResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FItemGetOwnedResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1467[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOwnedItemInfo>                 ItemList;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FItemGetOwnedResponseParam) == 0x000008, "Wrong alignment on FItemGetOwnedResponseParam");
static_assert(sizeof(FItemGetOwnedResponseParam) == 0x000018, "Wrong size on FItemGetOwnedResponseParam");
static_assert(offsetof(FItemGetOwnedResponseParam, Status) == 0x000000, "Member 'FItemGetOwnedResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FItemGetOwnedResponseParam, ItemList) == 0x000008, "Member 'FItemGetOwnedResponseParam::ItemList' has a wrong offset!");

// ScriptStruct CosmosWebApi.ItemMasterInfo
// 0x0028 (0x0028 - 0x0000)
struct FItemMasterInfo final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemInfo;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemType;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OnlineType;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FItemMasterInfo) == 0x000008, "Wrong alignment on FItemMasterInfo");
static_assert(sizeof(FItemMasterInfo) == 0x000028, "Wrong size on FItemMasterInfo");
static_assert(offsetof(FItemMasterInfo, ItemId) == 0x000000, "Member 'FItemMasterInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FItemMasterInfo, ItemInfo) == 0x000010, "Member 'FItemMasterInfo::ItemInfo' has a wrong offset!");
static_assert(offsetof(FItemMasterInfo, ItemType) == 0x000020, "Member 'FItemMasterInfo::ItemType' has a wrong offset!");
static_assert(offsetof(FItemMasterInfo, OnlineType) == 0x000024, "Member 'FItemMasterInfo::OnlineType' has a wrong offset!");

// ScriptStruct CosmosWebApi.ItemGetMasterResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FItemGetMasterResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1468[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemMasterInfo>                MasterList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FItemGetMasterResponseParam) == 0x000008, "Wrong alignment on FItemGetMasterResponseParam");
static_assert(sizeof(FItemGetMasterResponseParam) == 0x000018, "Wrong size on FItemGetMasterResponseParam");
static_assert(offsetof(FItemGetMasterResponseParam, Status) == 0x000000, "Member 'FItemGetMasterResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FItemGetMasterResponseParam, MasterList) == 0x000008, "Member 'FItemGetMasterResponseParam::MasterList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RankingGetByUserResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FRankingGetByUserResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ListNum;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRankingInfo>                   RankingList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRankingGetByUserResponseParam) == 0x000008, "Wrong alignment on FRankingGetByUserResponseParam");
static_assert(sizeof(FRankingGetByUserResponseParam) == 0x000018, "Wrong size on FRankingGetByUserResponseParam");
static_assert(offsetof(FRankingGetByUserResponseParam, Status) == 0x000000, "Member 'FRankingGetByUserResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRankingGetByUserResponseParam, ListNum) == 0x000004, "Member 'FRankingGetByUserResponseParam::ListNum' has a wrong offset!");
static_assert(offsetof(FRankingGetByUserResponseParam, RankingList) == 0x000008, "Member 'FRankingGetByUserResponseParam::RankingList' has a wrong offset!");

// ScriptStruct CosmosWebApi.RankingGetByRangeResponseParam
// 0x0020 (0x0020 - 0x0000)
struct FRankingGetByRangeResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SumNum;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ListNum;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1469[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRankingInfo>                   RankingList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRankingGetByRangeResponseParam) == 0x000008, "Wrong alignment on FRankingGetByRangeResponseParam");
static_assert(sizeof(FRankingGetByRangeResponseParam) == 0x000020, "Wrong size on FRankingGetByRangeResponseParam");
static_assert(offsetof(FRankingGetByRangeResponseParam, Status) == 0x000000, "Member 'FRankingGetByRangeResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FRankingGetByRangeResponseParam, SumNum) == 0x000004, "Member 'FRankingGetByRangeResponseParam::SumNum' has a wrong offset!");
static_assert(offsetof(FRankingGetByRangeResponseParam, ListNum) == 0x000008, "Member 'FRankingGetByRangeResponseParam::ListNum' has a wrong offset!");
static_assert(offsetof(FRankingGetByRangeResponseParam, RankingList) == 0x000010, "Member 'FRankingGetByRangeResponseParam::RankingList' has a wrong offset!");

// ScriptStruct CosmosWebApi.LobbyInfo
// 0x0070 (0x0070 - 0x0000)
struct FLobbyInfo final
{
public:
	class FString                                 RegionId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AreaId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LobbyId;                                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameId;                                            // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnterNum;                                          // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EnterMax;                                          // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Ip;                                                // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Port;                                              // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyInfo;                                         // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLobbyInfo) == 0x000008, "Wrong alignment on FLobbyInfo");
static_assert(sizeof(FLobbyInfo) == 0x000070, "Wrong size on FLobbyInfo");
static_assert(offsetof(FLobbyInfo, RegionId) == 0x000000, "Member 'FLobbyInfo::RegionId' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, AreaId) == 0x000010, "Member 'FLobbyInfo::AreaId' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, LobbyId) == 0x000020, "Member 'FLobbyInfo::LobbyId' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, NameId) == 0x000030, "Member 'FLobbyInfo::NameId' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, EnterNum) == 0x000040, "Member 'FLobbyInfo::EnterNum' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, EnterMax) == 0x000044, "Member 'FLobbyInfo::EnterMax' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, Ip) == 0x000048, "Member 'FLobbyInfo::Ip' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, Port) == 0x000058, "Member 'FLobbyInfo::Port' has a wrong offset!");
static_assert(offsetof(FLobbyInfo, LobbyInfo) == 0x000060, "Member 'FLobbyInfo::LobbyInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CatalogGetLobbyResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCatalogGetLobbyResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLobbyInfo>                     LobbyList;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCatalogGetLobbyResponseParam) == 0x000008, "Wrong alignment on FCatalogGetLobbyResponseParam");
static_assert(sizeof(FCatalogGetLobbyResponseParam) == 0x000018, "Wrong size on FCatalogGetLobbyResponseParam");
static_assert(offsetof(FCatalogGetLobbyResponseParam, Status) == 0x000000, "Member 'FCatalogGetLobbyResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCatalogGetLobbyResponseParam, LobbyList) == 0x000008, "Member 'FCatalogGetLobbyResponseParam::LobbyList' has a wrong offset!");

// ScriptStruct CosmosWebApi.CosmosRegionInfo
// 0x0030 (0x0030 - 0x0000)
struct FCosmosRegionInfo final
{
public:
	class FString                                 RegionId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NameId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RegionInfo;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCosmosRegionInfo) == 0x000008, "Wrong alignment on FCosmosRegionInfo");
static_assert(sizeof(FCosmosRegionInfo) == 0x000030, "Wrong size on FCosmosRegionInfo");
static_assert(offsetof(FCosmosRegionInfo, RegionId) == 0x000000, "Member 'FCosmosRegionInfo::RegionId' has a wrong offset!");
static_assert(offsetof(FCosmosRegionInfo, NameId) == 0x000010, "Member 'FCosmosRegionInfo::NameId' has a wrong offset!");
static_assert(offsetof(FCosmosRegionInfo, RegionInfo) == 0x000020, "Member 'FCosmosRegionInfo::RegionInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CatalogGetRegionResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FCatalogGetRegionResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCosmosRegionInfo>              RegionList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCatalogGetRegionResponseParam) == 0x000008, "Wrong alignment on FCatalogGetRegionResponseParam");
static_assert(sizeof(FCatalogGetRegionResponseParam) == 0x000018, "Wrong size on FCatalogGetRegionResponseParam");
static_assert(offsetof(FCatalogGetRegionResponseParam, Status) == 0x000000, "Member 'FCatalogGetRegionResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FCatalogGetRegionResponseParam, RegionList) == 0x000008, "Member 'FCatalogGetRegionResponseParam::RegionList' has a wrong offset!");

// ScriptStruct CosmosWebApi.HugeTssInfo
// 0x0018 (0x0018 - 0x0000)
struct FHugeTssInfo final
{
public:
	int32                                         SlotNo;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TssUrl;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHugeTssInfo) == 0x000008, "Wrong alignment on FHugeTssInfo");
static_assert(sizeof(FHugeTssInfo) == 0x000018, "Wrong size on FHugeTssInfo");
static_assert(offsetof(FHugeTssInfo, SlotNo) == 0x000000, "Member 'FHugeTssInfo::SlotNo' has a wrong offset!");
static_assert(offsetof(FHugeTssInfo, TssUrl) == 0x000008, "Member 'FHugeTssInfo::TssUrl' has a wrong offset!");

// ScriptStruct CosmosWebApi.HugeTssMultiReadListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FHugeTssMultiReadListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHugeTssInfo>                   TssDataList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHugeTssMultiReadListResponseParam) == 0x000008, "Wrong alignment on FHugeTssMultiReadListResponseParam");
static_assert(sizeof(FHugeTssMultiReadListResponseParam) == 0x000018, "Wrong size on FHugeTssMultiReadListResponseParam");
static_assert(offsetof(FHugeTssMultiReadListResponseParam, Status) == 0x000000, "Member 'FHugeTssMultiReadListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FHugeTssMultiReadListResponseParam, TssDataList) == 0x000008, "Member 'FHugeTssMultiReadListResponseParam::TssDataList' has a wrong offset!");

// ScriptStruct CosmosWebApi.HugeTssMultiReadResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FHugeTssMultiReadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_146F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TssUrl;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHugeTssMultiReadResponseParam) == 0x000008, "Wrong alignment on FHugeTssMultiReadResponseParam");
static_assert(sizeof(FHugeTssMultiReadResponseParam) == 0x000018, "Wrong size on FHugeTssMultiReadResponseParam");
static_assert(offsetof(FHugeTssMultiReadResponseParam, Status) == 0x000000, "Member 'FHugeTssMultiReadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FHugeTssMultiReadResponseParam, TssUrl) == 0x000008, "Member 'FHugeTssMultiReadResponseParam::TssUrl' has a wrong offset!");

// ScriptStruct CosmosWebApi.HugeTssReadListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FHugeTssReadListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1470[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHugeTssInfo>                   TssUrlList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHugeTssReadListResponseParam) == 0x000008, "Wrong alignment on FHugeTssReadListResponseParam");
static_assert(sizeof(FHugeTssReadListResponseParam) == 0x000018, "Wrong size on FHugeTssReadListResponseParam");
static_assert(offsetof(FHugeTssReadListResponseParam, Status) == 0x000000, "Member 'FHugeTssReadListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FHugeTssReadListResponseParam, TssUrlList) == 0x000008, "Member 'FHugeTssReadListResponseParam::TssUrlList' has a wrong offset!");

// ScriptStruct CosmosWebApi.HugeTssReadResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FHugeTssReadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1471[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TssUrl;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FHugeTssReadResponseParam) == 0x000008, "Wrong alignment on FHugeTssReadResponseParam");
static_assert(sizeof(FHugeTssReadResponseParam) == 0x000018, "Wrong size on FHugeTssReadResponseParam");
static_assert(offsetof(FHugeTssReadResponseParam, Status) == 0x000000, "Member 'FHugeTssReadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FHugeTssReadResponseParam, TssUrl) == 0x000008, "Member 'FHugeTssReadResponseParam::TssUrl' has a wrong offset!");

// ScriptStruct CosmosWebApi.TssInfo
// 0x0018 (0x0018 - 0x0000)
struct FTssInfo final
{
public:
	int32                                         SlotNo;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1472[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TssData;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTssInfo) == 0x000008, "Wrong alignment on FTssInfo");
static_assert(sizeof(FTssInfo) == 0x000018, "Wrong size on FTssInfo");
static_assert(offsetof(FTssInfo, SlotNo) == 0x000000, "Member 'FTssInfo::SlotNo' has a wrong offset!");
static_assert(offsetof(FTssInfo, TssData) == 0x000008, "Member 'FTssInfo::TssData' has a wrong offset!");

// ScriptStruct CosmosWebApi.TssReadListResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FTssReadListResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1473[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTssInfo>                       TssDataList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTssReadListResponseParam) == 0x000008, "Wrong alignment on FTssReadListResponseParam");
static_assert(sizeof(FTssReadListResponseParam) == 0x000018, "Wrong size on FTssReadListResponseParam");
static_assert(offsetof(FTssReadListResponseParam, Status) == 0x000000, "Member 'FTssReadListResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FTssReadListResponseParam, TssDataList) == 0x000008, "Member 'FTssReadListResponseParam::TssDataList' has a wrong offset!");

// ScriptStruct CosmosWebApi.TssReadResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FTssReadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1474[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TssData;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTssReadResponseParam) == 0x000008, "Wrong alignment on FTssReadResponseParam");
static_assert(sizeof(FTssReadResponseParam) == 0x000018, "Wrong size on FTssReadResponseParam");
static_assert(offsetof(FTssReadResponseParam, Status) == 0x000000, "Member 'FTssReadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FTssReadResponseParam, TssData) == 0x000008, "Member 'FTssReadResponseParam::TssData' has a wrong offset!");

// ScriptStruct CosmosWebApi.TusReadResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FTusReadResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1475[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TusData;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FTusReadResponseParam) == 0x000008, "Wrong alignment on FTusReadResponseParam");
static_assert(sizeof(FTusReadResponseParam) == 0x000018, "Wrong size on FTusReadResponseParam");
static_assert(offsetof(FTusReadResponseParam, Status) == 0x000000, "Member 'FTusReadResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FTusReadResponseParam, TusData) == 0x000008, "Member 'FTusReadResponseParam::TusData' has a wrong offset!");

// ScriptStruct CosmosWebApi.SysGetEnvV2ResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FSysGetEnvV2ResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1476[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSysGetEnvV2ResponseParam) == 0x000008, "Wrong alignment on FSysGetEnvV2ResponseParam");
static_assert(sizeof(FSysGetEnvV2ResponseParam) == 0x000018, "Wrong size on FSysGetEnvV2ResponseParam");
static_assert(offsetof(FSysGetEnvV2ResponseParam, Status) == 0x000000, "Member 'FSysGetEnvV2ResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FSysGetEnvV2ResponseParam, URL) == 0x000008, "Member 'FSysGetEnvV2ResponseParam::URL' has a wrong offset!");

// ScriptStruct CosmosWebApi.SysGetEnvResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FSysGetEnvResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1477[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSysGetEnvResponseParam) == 0x000008, "Wrong alignment on FSysGetEnvResponseParam");
static_assert(sizeof(FSysGetEnvResponseParam) == 0x000018, "Wrong size on FSysGetEnvResponseParam");
static_assert(offsetof(FSysGetEnvResponseParam, Status) == 0x000000, "Member 'FSysGetEnvResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FSysGetEnvResponseParam, URL) == 0x000008, "Member 'FSysGetEnvResponseParam::URL' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserGetTrackingNumResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FUserGetTrackingNumResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1478[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Tracking_num;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserGetTrackingNumResponseParam) == 0x000008, "Wrong alignment on FUserGetTrackingNumResponseParam");
static_assert(sizeof(FUserGetTrackingNumResponseParam) == 0x000018, "Wrong size on FUserGetTrackingNumResponseParam");
static_assert(offsetof(FUserGetTrackingNumResponseParam, Status) == 0x000000, "Member 'FUserGetTrackingNumResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserGetTrackingNumResponseParam, Tracking_num) == 0x000008, "Member 'FUserGetTrackingNumResponseParam::Tracking_num' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserRedirectUrl
// 0x0030 (0x0030 - 0x0000)
struct FUserRedirectUrl final
{
public:
	class FString                                 RedirectUrl;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 basicId;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 basicPass;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserRedirectUrl) == 0x000008, "Wrong alignment on FUserRedirectUrl");
static_assert(sizeof(FUserRedirectUrl) == 0x000030, "Wrong size on FUserRedirectUrl");
static_assert(offsetof(FUserRedirectUrl, RedirectUrl) == 0x000000, "Member 'FUserRedirectUrl::RedirectUrl' has a wrong offset!");
static_assert(offsetof(FUserRedirectUrl, basicId) == 0x000010, "Member 'FUserRedirectUrl::basicId' has a wrong offset!");
static_assert(offsetof(FUserRedirectUrl, basicPass) == 0x000020, "Member 'FUserRedirectUrl::basicPass' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserLinkBnidResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FUserLinkBnidResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1479[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUserRedirectUrl>               RedirectUrl;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserLinkBnidResponseParam) == 0x000008, "Wrong alignment on FUserLinkBnidResponseParam");
static_assert(sizeof(FUserLinkBnidResponseParam) == 0x000018, "Wrong size on FUserLinkBnidResponseParam");
static_assert(offsetof(FUserLinkBnidResponseParam, Status) == 0x000000, "Member 'FUserLinkBnidResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserLinkBnidResponseParam, RedirectUrl) == 0x000008, "Member 'FUserLinkBnidResponseParam::RedirectUrl' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserConvertInfo
// 0x0020 (0x0020 - 0x0000)
struct FUserConvertInfo final
{
public:
	class FString                                 PUserId;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserConvertInfo) == 0x000008, "Wrong alignment on FUserConvertInfo");
static_assert(sizeof(FUserConvertInfo) == 0x000020, "Wrong size on FUserConvertInfo");
static_assert(offsetof(FUserConvertInfo, PUserId) == 0x000000, "Member 'FUserConvertInfo::PUserId' has a wrong offset!");
static_assert(offsetof(FUserConvertInfo, UserId) == 0x000010, "Member 'FUserConvertInfo::UserId' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserConvertUserIdResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FUserConvertUserIdResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUserConvertInfo>               UserConvertInfo;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserConvertUserIdResponseParam) == 0x000008, "Wrong alignment on FUserConvertUserIdResponseParam");
static_assert(sizeof(FUserConvertUserIdResponseParam) == 0x000018, "Wrong size on FUserConvertUserIdResponseParam");
static_assert(offsetof(FUserConvertUserIdResponseParam, Status) == 0x000000, "Member 'FUserConvertUserIdResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserConvertUserIdResponseParam, UserConvertInfo) == 0x000008, "Member 'FUserConvertUserIdResponseParam::UserConvertInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CosmosUserData
// 0x0018 (0x0018 - 0x0000)
struct FCosmosUserData final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RegisterStatus;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147B[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCosmosUserData) == 0x000008, "Wrong alignment on FCosmosUserData");
static_assert(sizeof(FCosmosUserData) == 0x000018, "Wrong size on FCosmosUserData");
static_assert(offsetof(FCosmosUserData, UserId) == 0x000000, "Member 'FCosmosUserData::UserId' has a wrong offset!");
static_assert(offsetof(FCosmosUserData, RegisterStatus) == 0x000010, "Member 'FCosmosUserData::RegisterStatus' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserAuthResponseParam
// 0x0020 (0x0020 - 0x0000)
struct FUserAuthResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCosmosUserData                        UserInfo;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserAuthResponseParam) == 0x000008, "Wrong alignment on FUserAuthResponseParam");
static_assert(sizeof(FUserAuthResponseParam) == 0x000020, "Wrong size on FUserAuthResponseParam");
static_assert(offsetof(FUserAuthResponseParam, Status) == 0x000000, "Member 'FUserAuthResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserAuthResponseParam, UserInfo) == 0x000008, "Member 'FUserAuthResponseParam::UserInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserLoginV2ResponseParam
// 0x0020 (0x0020 - 0x0000)
struct FUserLoginV2ResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCosmosUserData                        UserInfo;                                          // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserLoginV2ResponseParam) == 0x000008, "Wrong alignment on FUserLoginV2ResponseParam");
static_assert(sizeof(FUserLoginV2ResponseParam) == 0x000020, "Wrong size on FUserLoginV2ResponseParam");
static_assert(offsetof(FUserLoginV2ResponseParam, Status) == 0x000000, "Member 'FUserLoginV2ResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserLoginV2ResponseParam, UserInfo) == 0x000008, "Member 'FUserLoginV2ResponseParam::UserInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserInfo
// 0x0010 (0x0010 - 0x0000)
struct FUserInfo final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserInfo) == 0x000008, "Wrong alignment on FUserInfo");
static_assert(sizeof(FUserInfo) == 0x000010, "Wrong size on FUserInfo");
static_assert(offsetof(FUserInfo, UserId) == 0x000000, "Member 'FUserInfo::UserId' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserLoginResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FUserLoginResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserInfo                              UserInfo;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserLoginResponseParam) == 0x000008, "Wrong alignment on FUserLoginResponseParam");
static_assert(sizeof(FUserLoginResponseParam) == 0x000018, "Wrong size on FUserLoginResponseParam");
static_assert(offsetof(FUserLoginResponseParam, Status) == 0x000000, "Member 'FUserLoginResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserLoginResponseParam, UserInfo) == 0x000008, "Member 'FUserLoginResponseParam::UserInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.UserCreateResponseParam
// 0x0018 (0x0018 - 0x0000)
struct FUserCreateResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_147F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUserInfo                              UserInfo;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FUserCreateResponseParam) == 0x000008, "Wrong alignment on FUserCreateResponseParam");
static_assert(sizeof(FUserCreateResponseParam) == 0x000018, "Wrong size on FUserCreateResponseParam");
static_assert(offsetof(FUserCreateResponseParam, Status) == 0x000000, "Member 'FUserCreateResponseParam::Status' has a wrong offset!");
static_assert(offsetof(FUserCreateResponseParam, UserInfo) == 0x000008, "Member 'FUserCreateResponseParam::UserInfo' has a wrong offset!");

// ScriptStruct CosmosWebApi.CommonResponseParam
// 0x0004 (0x0004 - 0x0000)
struct FCommonResponseParam final
{
public:
	int32                                         Status;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCommonResponseParam) == 0x000004, "Wrong alignment on FCommonResponseParam");
static_assert(sizeof(FCommonResponseParam) == 0x000004, "Wrong size on FCommonResponseParam");
static_assert(offsetof(FCommonResponseParam, Status) == 0x000000, "Member 'FCommonResponseParam::Status' has a wrong offset!");

// ScriptStruct CosmosWebApi.ResponseHeader
// 0x0028 (0x0028 - 0x0000)
struct FResponseHeader final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1480[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Session;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Date;                                              // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FResponseHeader) == 0x000008, "Wrong alignment on FResponseHeader");
static_assert(sizeof(FResponseHeader) == 0x000028, "Wrong size on FResponseHeader");
static_assert(offsetof(FResponseHeader, Result) == 0x000000, "Member 'FResponseHeader::Result' has a wrong offset!");
static_assert(offsetof(FResponseHeader, Session) == 0x000008, "Member 'FResponseHeader::Session' has a wrong offset!");
static_assert(offsetof(FResponseHeader, Date) == 0x000018, "Member 'FResponseHeader::Date' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildPermissionInfo
// 0x0008 (0x0008 - 0x0000)
struct FGuildPermissionInfo final
{
public:
	int32                                         ApiNo;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Permission;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildPermissionInfo) == 0x000004, "Wrong alignment on FGuildPermissionInfo");
static_assert(sizeof(FGuildPermissionInfo) == 0x000008, "Wrong size on FGuildPermissionInfo");
static_assert(offsetof(FGuildPermissionInfo, ApiNo) == 0x000000, "Member 'FGuildPermissionInfo::ApiNo' has a wrong offset!");
static_assert(offsetof(FGuildPermissionInfo, Permission) == 0x000004, "Member 'FGuildPermissionInfo::Permission' has a wrong offset!");

// ScriptStruct CosmosWebApi.GuildAuthorityInfo
// 0x0020 (0x0020 - 0x0000)
struct FGuildAuthorityInfo final
{
public:
	int32                                         ProfileSetFlg;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EditFlg;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InvitationFlg;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpulsionFlg;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PositionFlg;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UsePointFlg;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         LeaderReleaseFlg;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisbandmentFlg;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGuildAuthorityInfo) == 0x000004, "Wrong alignment on FGuildAuthorityInfo");
static_assert(sizeof(FGuildAuthorityInfo) == 0x000020, "Wrong size on FGuildAuthorityInfo");
static_assert(offsetof(FGuildAuthorityInfo, ProfileSetFlg) == 0x000000, "Member 'FGuildAuthorityInfo::ProfileSetFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, EditFlg) == 0x000004, "Member 'FGuildAuthorityInfo::EditFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, InvitationFlg) == 0x000008, "Member 'FGuildAuthorityInfo::InvitationFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, ExpulsionFlg) == 0x00000C, "Member 'FGuildAuthorityInfo::ExpulsionFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, PositionFlg) == 0x000010, "Member 'FGuildAuthorityInfo::PositionFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, UsePointFlg) == 0x000014, "Member 'FGuildAuthorityInfo::UsePointFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, LeaderReleaseFlg) == 0x000018, "Member 'FGuildAuthorityInfo::LeaderReleaseFlg' has a wrong offset!");
static_assert(offsetof(FGuildAuthorityInfo, DisbandmentFlg) == 0x00001C, "Member 'FGuildAuthorityInfo::DisbandmentFlg' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupUpdateSearchTagInfo
// 0x0018 (0x0018 - 0x0000)
struct FDataupUpdateSearchTagInfo final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1481[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDataupUpdateSearchTagInfo) == 0x000008, "Wrong alignment on FDataupUpdateSearchTagInfo");
static_assert(sizeof(FDataupUpdateSearchTagInfo) == 0x000018, "Wrong size on FDataupUpdateSearchTagInfo");
static_assert(offsetof(FDataupUpdateSearchTagInfo, Key) == 0x000000, "Member 'FDataupUpdateSearchTagInfo::Key' has a wrong offset!");
static_assert(offsetof(FDataupUpdateSearchTagInfo, Value) == 0x000008, "Member 'FDataupUpdateSearchTagInfo::Value' has a wrong offset!");

// ScriptStruct CosmosWebApi.DataupSearchConditionInfo
// 0x0020 (0x0020 - 0x0000)
struct FDataupSearchConditionInfo final
{
public:
	int32                                         Key;                                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1482[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ComparisonType;                                    // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1483[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDataupSearchConditionInfo) == 0x000008, "Wrong alignment on FDataupSearchConditionInfo");
static_assert(sizeof(FDataupSearchConditionInfo) == 0x000020, "Wrong size on FDataupSearchConditionInfo");
static_assert(offsetof(FDataupSearchConditionInfo, Key) == 0x000000, "Member 'FDataupSearchConditionInfo::Key' has a wrong offset!");
static_assert(offsetof(FDataupSearchConditionInfo, Value) == 0x000008, "Member 'FDataupSearchConditionInfo::Value' has a wrong offset!");
static_assert(offsetof(FDataupSearchConditionInfo, ComparisonType) == 0x000018, "Member 'FDataupSearchConditionInfo::ComparisonType' has a wrong offset!");

// ScriptStruct CosmosWebApi.CosmosItemInfo
// 0x0018 (0x0018 - 0x0000)
struct FCosmosItemInfo final
{
public:
	class FString                                 ItemId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemNum;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1484[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCosmosItemInfo) == 0x000008, "Wrong alignment on FCosmosItemInfo");
static_assert(sizeof(FCosmosItemInfo) == 0x000018, "Wrong size on FCosmosItemInfo");
static_assert(offsetof(FCosmosItemInfo, ItemId) == 0x000000, "Member 'FCosmosItemInfo::ItemId' has a wrong offset!");
static_assert(offsetof(FCosmosItemInfo, ItemNum) == 0x000010, "Member 'FCosmosItemInfo::ItemNum' has a wrong offset!");

// ScriptStruct CosmosWebApi.KpiColumn
// 0x0018 (0x0018 - 0x0000)
struct FKpiColumn final
{
public:
	class FString                                 Column;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Type;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1485[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FKpiColumn) == 0x000008, "Wrong alignment on FKpiColumn");
static_assert(sizeof(FKpiColumn) == 0x000018, "Wrong size on FKpiColumn");
static_assert(offsetof(FKpiColumn, Column) == 0x000000, "Member 'FKpiColumn::Column' has a wrong offset!");
static_assert(offsetof(FKpiColumn, Type) == 0x000010, "Member 'FKpiColumn::Type' has a wrong offset!");

// ScriptStruct CosmosWebApi.KpiNoColumnData
// 0x0028 (0x0028 - 0x0000)
struct FKpiNoColumnData final
{
public:
	int32                                         No;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1486[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKpiColumn>                     KpiColumnList;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FKpiData>                       KpiDataList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FKpiNoColumnData) == 0x000008, "Wrong alignment on FKpiNoColumnData");
static_assert(sizeof(FKpiNoColumnData) == 0x000028, "Wrong size on FKpiNoColumnData");
static_assert(offsetof(FKpiNoColumnData, No) == 0x000000, "Member 'FKpiNoColumnData::No' has a wrong offset!");
static_assert(offsetof(FKpiNoColumnData, KpiColumnList) == 0x000008, "Member 'FKpiNoColumnData::KpiColumnList' has a wrong offset!");
static_assert(offsetof(FKpiNoColumnData, KpiDataList) == 0x000018, "Member 'FKpiNoColumnData::KpiDataList' has a wrong offset!");

}

