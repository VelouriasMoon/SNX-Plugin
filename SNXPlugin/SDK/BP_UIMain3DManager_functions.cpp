#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIMain3DManager

#include "Basic.hpp"

#include "BP_UIMain3DManager_classes.hpp"
#include "BP_UIMain3DManager_parameters.hpp"


namespace SDK
{

// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ED_OpenMenu__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::ED_OpenMenu__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ED_OpenMenu__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ExecuteUbergraph_BP_UIMain3DManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::ExecuteUbergraph_BP_UIMain3DManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ExecuteUbergraph_BP_UIMain3DManager");

	Params::BP_UIMain3DManager_C_ExecuteUbergraph_BP_UIMain3DManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ReceiveTick");

	Params::BP_UIMain3DManager_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ReceiveEndPlay");

	Params::BP_UIMain3DManager_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_UIMain3DManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.LoadAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::LoadAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "LoadAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.GetMenuPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerUniqueID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_MenuPlayerBase_C*             Param_MenuPlayer                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFind                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::GetMenuPlayer(int32 PlayerUniqueID, class ABP_MenuPlayerBase_C** Param_MenuPlayer, bool* IsFind, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "GetMenuPlayer");

	Params::BP_UIMain3DManager_C_GetMenuPlayer Parms{};

	Parms.PlayerUniqueID = PlayerUniqueID;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MenuPlayer != nullptr)
		*Param_MenuPlayer = Parms.Param_MenuPlayer;

	if (IsFind != nullptr)
		*IsFind = Parms.IsFind;

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateSetPlayer
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerUniqueID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_UIMain3DPlayerCapture_C*      TargetCapture                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateSetPlayer(int32 PlayerUniqueID, class ABP_UIMain3DPlayerCapture_C* TargetCapture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateSetPlayer");

	Params::BP_UIMain3DManager_C_PrivateSetPlayer Parms{};

	Parms.PlayerUniqueID = PlayerUniqueID;
	Parms.TargetCapture = TargetCapture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateGetSelectCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UIMain3DPlayerCapture_C*      Capture                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateGetSelectCapture(class ABP_UIMain3DPlayerCapture_C** Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateGetSelectCapture");

	Params::BP_UIMain3DManager_C_PrivateGetSelectCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Capture != nullptr)
		*Capture = Parms.Capture;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateGetChangeTargetCapture
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UIMain3DPlayerCapture_C*      Capture                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateGetChangeTargetCapture(class ABP_UIMain3DPlayerCapture_C** Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateGetChangeTargetCapture");

	Params::BP_UIMain3DManager_C_PrivateGetChangeTargetCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Capture != nullptr)
		*Capture = Parms.Capture;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.Initialize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetScene
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DCharacterSceneID               SceneID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetScene(EUIMain3DCharacterSceneID SceneID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetScene");

	Params::BP_UIMain3DManager_C_SetScene Parms{};

	Parms.SceneID = SceneID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.GetSelectTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTargetAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::GetSelectTexture(class UTextureRenderTarget2D** RenderTarget, class UTextureRenderTarget2D** RenderTargetAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "GetSelectTexture");

	Params::BP_UIMain3DManager_C_GetSelectTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;

	if (RenderTargetAlpha != nullptr)
		*RenderTargetAlpha = Parms.RenderTargetAlpha;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.GetChangeTargetTexture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           RenderTargetAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::GetChangeTargetTexture(class UTextureRenderTarget2D** RenderTarget, class UTextureRenderTarget2D** RenderTargetAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "GetChangeTargetTexture");

	Params::BP_UIMain3DManager_C_GetChangeTargetTexture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RenderTarget != nullptr)
		*RenderTarget = Parms.RenderTarget;

	if (RenderTargetAlpha != nullptr)
		*RenderTargetAlpha = Parms.RenderTargetAlpha;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.Start
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "Start");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetSelectPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerUniqueID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetSelectPlayer(int32 PlayerUniqueID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetSelectPlayer");

	Params::BP_UIMain3DManager_C_SetSelectPlayer Parms{};

	Parms.PlayerUniqueID = PlayerUniqueID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetChangeTargetPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerUniqueID                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetChangeTargetPlayer(int32 PlayerUniqueID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetChangeTargetPlayer");

	Params::BP_UIMain3DManager_C_SetChangeTargetPlayer Parms{};

	Parms.PlayerUniqueID = PlayerUniqueID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.InitializePlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::InitializePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "InitializePlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.InitializeBG
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::InitializeBG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "InitializeBG");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ResetBGCameraParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::ResetBGCameraParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ResetBGCameraParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.GetSelectNoiseRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NoiseRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::GetSelectNoiseRate(float* NoiseRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "GetSelectNoiseRate");

	Params::BP_UIMain3DManager_C_GetSelectNoiseRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseRate != nullptr)
		*NoiseRate = Parms.NoiseRate;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.GetChangeTargetNoiseRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NoiseRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::GetChangeTargetNoiseRate(float* NoiseRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "GetChangeTargetNoiseRate");

	Params::BP_UIMain3DManager_C_GetChangeTargetNoiseRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NoiseRate != nullptr)
		*NoiseRate = Parms.NoiseRate;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateSetupMenuPP
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::PrivateSetupMenuPP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateSetupMenuPP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateRestoreScenePP
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::PrivateRestoreScenePP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateRestoreScenePP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.StartSelectPlayerNoise
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reverse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::StartSelectPlayerNoise(bool Reverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "StartSelectPlayerNoise");

	Params::BP_UIMain3DManager_C_StartSelectPlayerNoise Parms{};

	Parms.Reverse = Reverse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.StartChangeTargetPlayerNoise
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::StartChangeTargetPlayerNoise()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "StartChangeTargetPlayerNoise");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ReloadGeneralSetting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::ReloadGeneralSetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ReloadGeneralSetting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipWeapon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemDataCell                    ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_UIMain3DManager_C::SetEquipWeapon(const struct FItemDataCell& ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipWeapon");

	Params::BP_UIMain3DManager_C_SetEquipWeapon Parms{};

	Parms.ItemData = std::move(ItemData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipCostume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FItemDataCell                    ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_UIMain3DManager_C::SetEquipCostume(const struct FItemDataCell& ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipCostume");

	Params::BP_UIMain3DManager_C_SetEquipCostume Parms{};

	Parms.ItemData = std::move(ItemData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FItemDataCell                    ItemData                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_UIMain3DManager_C::SetEquipAttachment(int32 AttachmentIndex, const struct FItemDataCell& ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipAttachment");

	Params::BP_UIMain3DManager_C_SetEquipAttachment Parms{};

	Parms.AttachmentIndex = AttachmentIndex;
	Parms.ItemData = std::move(ItemData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DEquipSelectID                  InSelect                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetEquipSelected(EUIMain3DEquipSelectID InSelect, int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipSelected");

	Params::BP_UIMain3DManager_C_SetEquipSelected Parms{};

	Parms.InSelect = InSelect;
	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.StartViewMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::StartViewMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "StartViewMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.EndViewMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::EndViewMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "EndViewMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateGetEquipMenuPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             Param_MenuPlayer                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFind                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateGetEquipMenuPlayer(class ABP_MenuPlayerBase_C** Param_MenuPlayer, bool* IsFind, int32* Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateGetEquipMenuPlayer");

	Params::BP_UIMain3DManager_C_PrivateGetEquipMenuPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MenuPlayer != nullptr)
		*Param_MenuPlayer = Parms.Param_MenuPlayer;

	if (IsFind != nullptr)
		*IsFind = Parms.IsFind;

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateSetEquipCameraID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DEquipCameraID                  CameraID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResetRotation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::PrivateSetEquipCameraID(EUIMain3DEquipCameraID CameraID, bool ResetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateSetEquipCameraID");

	Params::BP_UIMain3DManager_C_PrivateSetEquipCameraID Parms{};

	Parms.CameraID = CameraID;
	Parms.ResetRotation = ResetRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.DebugSetEquipCameraID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DEquipCameraID                  CameraID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::DebugSetEquipCameraID(EUIMain3DEquipCameraID CameraID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "DebugSetEquipCameraID");

	Params::BP_UIMain3DManager_C_DebugSetEquipCameraID Parms{};

	Parms.CameraID = CameraID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateSetupEquipData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPosition                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::PrivateSetupEquipData(bool IsPosition, bool IsRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateSetupEquipData");

	Params::BP_UIMain3DManager_C_PrivateSetupEquipData Parms{};

	Parms.IsPosition = IsPosition;
	Parms.IsRotation = IsRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdatePlayerLightRotation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::PrivateUpdatePlayerLightRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdatePlayerLightRotation");

	Params::BP_UIMain3DManager_C_PrivateUpdatePlayerLightRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivatePlayAnimation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             InMenuPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivatePlayAnimation(class ABP_MenuPlayerBase_C* InMenuPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivatePlayAnimation");

	Params::BP_UIMain3DManager_C_PrivatePlayAnimation Parms{};

	Parms.InMenuPlayer = InMenuPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateGetAnimationNo
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DCharacterSceneID               InSceneID                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DEquipSelectID                  InEquipSelectID                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DPlayerAnimationType            AnimType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateGetAnimationNo(EUIMain3DCharacterSceneID InSceneID, EUIMain3DEquipSelectID InEquipSelectID, EUIMain3DPlayerAnimationType* AnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateGetAnimationNo");

	Params::BP_UIMain3DManager_C_PrivateGetAnimationNo Parms{};

	Parms.InSceneID = InSceneID;
	Parms.InEquipSelectID = InEquipSelectID;

	UObject::ProcessEvent(Func, &Parms);

	if (AnimType != nullptr)
		*AnimType = Parms.AnimType;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivatePlayAnimationFromNo
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             InMenuPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DPlayerAnimationType            AnimType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivatePlayAnimationFromNo(class ABP_MenuPlayerBase_C* InMenuPlayer, EUIMain3DPlayerAnimationType AnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivatePlayAnimationFromNo");

	Params::BP_UIMain3DManager_C_PrivatePlayAnimationFromNo Parms{};

	Parms.InMenuPlayer = InMenuPlayer;
	Parms.AnimType = AnimType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivatePlayAnimationCheckChange
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             InMenuPlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DCharacterSceneID               LastSceneID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DCharacterSceneID               NowSceneID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DEquipSelectID                  LastEquipSelectID                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUIMain3DEquipSelectID                  NowEquipSelectID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivatePlayAnimationCheckChange(class ABP_MenuPlayerBase_C* InMenuPlayer, EUIMain3DCharacterSceneID LastSceneID, EUIMain3DCharacterSceneID NowSceneID, EUIMain3DEquipSelectID LastEquipSelectID, EUIMain3DEquipSelectID NowEquipSelectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivatePlayAnimationCheckChange");

	Params::BP_UIMain3DManager_C_PrivatePlayAnimationCheckChange Parms{};

	Parms.InMenuPlayer = InMenuPlayer;
	Parms.LastSceneID = LastSceneID;
	Parms.NowSceneID = NowSceneID;
	Parms.LastEquipSelectID = LastEquipSelectID;
	Parms.NowEquipSelectID = NowEquipSelectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateViewMode
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateViewMode(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateViewMode");

	Params::BP_UIMain3DManager_C_PrivateUpdateViewMode Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateViewModeRotation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputX                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputY                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateViewModeRotation(float DeltaSeconds, float InputX, float InputY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateViewModeRotation");

	Params::BP_UIMain3DManager_C_PrivateUpdateViewModeRotation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.InputX = InputX;
	Parms.InputY = InputY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateViewModeLocation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputX                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputY                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateViewModeLocation(float DeltaSeconds, float InputX, float InputY)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateViewModeLocation");

	Params::BP_UIMain3DManager_C_PrivateUpdateViewModeLocation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.InputX = InputX;
	Parms.InputY = InputY;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateViewModeZoom
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InputOut                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateViewModeZoom(float DeltaSeconds, float InputIn, float InputOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateViewModeZoom");

	Params::BP_UIMain3DManager_C_PrivateUpdateViewModeZoom Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.InputIn = InputIn;
	Parms.InputOut = InputOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateResetViewModeCamera
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCamera                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCharaPosition                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCharaRotation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::PrivateResetViewModeCamera(bool IsCamera, bool IsCharaPosition, bool IsCharaRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateResetViewModeCamera");

	Params::BP_UIMain3DManager_C_PrivateResetViewModeCamera Parms{};

	Parms.IsCamera = IsCamera;
	Parms.IsCharaPosition = IsCharaPosition;
	Parms.IsCharaRotation = IsCharaRotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateResetViewModeDataTable
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::PrivateResetViewModeDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateResetViewModeDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.HideScene
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::HideScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "HideScene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.EventOpenMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::EventOpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "EventOpenMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetPlayerLocationAndRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OuterOffsetLocation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OuterOffsetRotation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::SetPlayerLocationAndRotation(const struct FVector& OuterOffsetLocation, const struct FRotator& OuterOffsetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetPlayerLocationAndRotation");

	Params::BP_UIMain3DManager_C_SetPlayerLocationAndRotation Parms{};

	Parms.OuterOffsetLocation = std::move(OuterOffsetLocation);
	Parms.OuterOffsetRotation = std::move(OuterOffsetRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateInputRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateInputRotation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateInputRotation");

	Params::BP_UIMain3DManager_C_PrivateUpdateInputRotation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetCharaMoveMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CharaMoveFlag                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::SetCharaMoveMode(bool CharaMoveFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetCharaMoveMode");

	Params::BP_UIMain3DManager_C_SetCharaMoveMode Parms{};

	Parms.CharaMoveFlag = CharaMoveFlag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ResetDTOffset
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::ResetDTOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ResetDTOffset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetPlayerLocationAndRotationFromDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::SetPlayerLocationAndRotationFromDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetPlayerLocationAndRotationFromDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetRect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBox2D                           Param_RectAngle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor)

void ABP_UIMain3DManager_C::SetRect(const struct FBox2D& Param_RectAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetRect");

	Params::BP_UIMain3DManager_C_SetRect Parms{};

	Parms.Param_RectAngle = std::move(Param_RectAngle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateMouseInputRotation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateMouseInputRotation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateMouseInputRotation");

	Params::BP_UIMain3DManager_C_PrivateUpdateMouseInputRotation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateMouseInputLocation
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateMouseInputLocation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateMouseInputLocation");

	Params::BP_UIMain3DManager_C_PrivateUpdateMouseInputLocation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateMouseInputZoom
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateUpdateMouseInputZoom(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateMouseInputZoom");

	Params::BP_UIMain3DManager_C_PrivateUpdateMouseInputZoom Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.OptionParamUpdate
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::OptionParamUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "OptionParamUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipWeaponFromID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetEquipWeaponFromID(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipWeaponFromID");

	Params::BP_UIMain3DManager_C_SetEquipWeaponFromID Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipCostumeFromID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetEquipCostumeFromID(int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipCostumeFromID");

	Params::BP_UIMain3DManager_C_SetEquipCostumeFromID Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetEquipAttachmentFromID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetEquipAttachmentFromID(int32 AttachmentIndex, int32 ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetEquipAttachmentFromID");

	Params::BP_UIMain3DManager_C_SetEquipAttachmentFromID Parms{};

	Parms.AttachmentIndex = AttachmentIndex;
	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetupEquipALL
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::SetupEquipALL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetupEquipALL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateGetCurrentPlayerID
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerID                               Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateGetCurrentPlayerID(EPlayerID* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateGetCurrentPlayerID");

	Params::BP_UIMain3DManager_C_PrivateGetCurrentPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateUpdateDispEquipAll
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayerInfo                      PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_UIMain3DManager_C::PrivateUpdateDispEquipAll(const struct FPlayerInfo& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateUpdateDispEquipAll");

	Params::BP_UIMain3DManager_C_PrivateUpdateDispEquipAll Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetupEquipALL_SelectItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetupEquipALL_SelectItem(int32 CursorCategory, int32 SelectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetupEquipALL_SelectItem");

	Params::BP_UIMain3DManager_C_SetupEquipALL_SelectItem Parms{};

	Parms.CursorCategory = CursorCategory;
	Parms.SelectID = SelectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateSetupCamera
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUIMain3DEquipSelectID                  InSelectID                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   AttachmentIndex                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateSetupCamera(EUIMain3DEquipSelectID InSelectID, int32 AttachmentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateSetupCamera");

	Params::BP_UIMain3DManager_C_PrivateSetupCamera Parms{};

	Parms.InSelectID = InSelectID;
	Parms.AttachmentIndex = AttachmentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetupEquipALL_SelectWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CursorCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetupEquipALL_SelectWeapon(int32 CursorCategory, int32 SelectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetupEquipALL_SelectWeapon");

	Params::BP_UIMain3DManager_C_SetupEquipALL_SelectWeapon Parms{};

	Parms.CursorCategory = CursorCategory;
	Parms.SelectID = SelectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.DebugGetSelectPlayerCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_UIMain3DPlayerCapture_C*      Capture                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::DebugGetSelectPlayerCapture(class ABP_UIMain3DPlayerCapture_C** Capture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "DebugGetSelectPlayerCapture");

	Params::BP_UIMain3DManager_C_DebugGetSelectPlayerCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Capture != nullptr)
		*Capture = Parms.Capture;
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.PrivateResetRenderTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERenderTargetType                       RenderTargetType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextureRenderTarget2D*           NewTarget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::PrivateResetRenderTarget(ERenderTargetType RenderTargetType, class UTextureRenderTarget2D* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "PrivateResetRenderTarget");

	Params::BP_UIMain3DManager_C_PrivateResetRenderTarget Parms{};

	Parms.RenderTargetType = RenderTargetType;
	Parms.NewTarget = NewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.SetupEquipALL_SelectItemAttachmentAll
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SelectAttachment0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectAttachment1                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectAttachment2                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CameraTargetAttachmentNo                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::SetupEquipALL_SelectItemAttachmentAll(int32 SelectAttachment0, int32 SelectAttachment1, int32 SelectAttachment2, int32 CameraTargetAttachmentNo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "SetupEquipALL_SelectItemAttachmentAll");

	Params::BP_UIMain3DManager_C_SetupEquipALL_SelectItemAttachmentAll Parms{};

	Parms.SelectAttachment0 = SelectAttachment0;
	Parms.SelectAttachment1 = SelectAttachment1;
	Parms.SelectAttachment2 = SelectAttachment2;
	Parms.CameraTargetAttachmentNo = CameraTargetAttachmentNo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ControlVisibilityAtTextureMip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_UIMain3DManager_C::ControlVisibilityAtTextureMip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ControlVisibilityAtTextureMip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.ControlGenmaWeponVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MenuPlayerBase_C*             Param_MenuPlayer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_UIMain3DManager_C::ControlGenmaWeponVisibility(class ABP_MenuPlayerBase_C* Param_MenuPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "ControlGenmaWeponVisibility");

	Params::BP_UIMain3DManager_C_ControlGenmaWeponVisibility Parms{};

	Parms.Param_MenuPlayer = Param_MenuPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UIMain3DManager.BP_UIMain3DManager_C.IsInViewMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsViewMode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_UIMain3DManager_C::IsInViewMode(bool* IsViewMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UIMain3DManager_C", "IsInViewMode");

	Params::BP_UIMain3DManager_C_IsInViewMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsViewMode != nullptr)
		*IsViewMode = Parms.IsViewMode;
}

}

