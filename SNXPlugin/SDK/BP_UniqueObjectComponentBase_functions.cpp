#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueObjectComponentBase

#include "Basic.hpp"

#include "BP_UniqueObjectComponentBase_classes.hpp"
#include "BP_UniqueObjectComponentBase_parameters.hpp"


namespace SDK
{

// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitializeUniqueObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PsychicObjectComponent_C*     Psy_obj_comp_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_PsychicComponentMain_C*       Psy_comp_main_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::InitializeUniqueObject(class UBP_PsychicObjectComponent_C* Psy_obj_comp_in, class UBP_PsychicComponentMain_C* Psy_comp_main_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitializeUniqueObject");

	Params::BP_UniqueObjectComponentBase_C_InitializeUniqueObject Parms{};

	Parms.Psy_obj_comp_in = Psy_obj_comp_in;
	Parms.Psy_comp_main_in = Psy_comp_main_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.FinalizeUniqueObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::FinalizeUniqueObject(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "FinalizeUniqueObject");

	Params::BP_UniqueObjectComponentBase_C_FinalizeUniqueObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::InitialComponent(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitialComponent");

	Params::BP_UniqueObjectComponentBase_C_InitialComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    First_time_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::InitialParameter(bool Flag_in, bool First_time_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitialParameter");

	Params::BP_UniqueObjectComponentBase_C_InitialParameter Parms{};

	Parms.Flag_in = Flag_in;
	Parms.First_time_in = First_time_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAsyncCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Capture_success_in                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAsyncCapture(bool Flag_in, bool Capture_success_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAsyncCapture");

	Params::BP_UniqueObjectComponentBase_C_SetAsyncCapture Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Capture_success_in = Capture_success_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::PrevAsyncCapture(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncCapture");

	Params::BP_UniqueObjectComponentBase_C_PrevAsyncCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateAsyncCapture(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAsyncCapture");

	Params::BP_UniqueObjectComponentBase_C_UpdateAsyncCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::PostAsyncCapture(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncCapture");

	Params::BP_UniqueObjectComponentBase_C_PostAsyncCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetCaptureLevel(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCaptureLevel");

	Params::BP_UniqueObjectComponentBase_C_SetCaptureLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncCommon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::PrevAsyncCommon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncCommon");

	Params::BP_UniqueObjectComponentBase_C_PrevAsyncCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncCommon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateAsyncCommon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAsyncCommon");

	Params::BP_UniqueObjectComponentBase_C_UpdateAsyncCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncCommon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::PostAsyncCommon(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncCommon");

	Params::BP_UniqueObjectComponentBase_C_PostAsyncCommon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetHitUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitResult                     Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FHitResult                       Hit_result_bg_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetHitUnqObj(bool Hit_enemy_in, bool Hit_background_in, const struct FHCHitResult& Hit_result_in, const struct FHitResult& Hit_result_bg_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetHitUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetHitUnqObj Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Hit_result_in = std::move(Hit_result_in);
	Parms.Hit_result_bg_in = std::move(Hit_result_bg_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackUnique
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackUnique(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackUnique");

	Params::BP_UniqueObjectComponentBase_C_SetAttackUnique Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PrevAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncAttackUnique
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PostAsyncAttackUnique()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncAttackUnique");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputDelay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputDelay(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputDelay");

	Params::BP_UniqueObjectComponentBase_C_SetInputDelay Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncInputDelayOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PrevAsyncInputDelayOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncInputDelayOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncInputDelay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateAsyncInputDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAsyncInputDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncInputDelayOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PostAsyncInputDelayOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncInputDelayOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputWait(bool Flag_in, bool Success_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputWait");

	Params::BP_UniqueObjectComponentBase_C_SetInputWait Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Success_in = Success_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncInputWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PrevAsyncInputWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncInputWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAsyncInputWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateAsyncInputWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAsyncInputWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncInputWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PostAsyncInputWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncInputWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckInput(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckInput");

	Params::BP_UniqueObjectComponentBase_C_CheckInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAnimationIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Anim_index                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetAnimationIndex(int32* Anim_index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetAnimationIndex");

	Params::BP_UniqueObjectComponentBase_C_GetAnimationIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Anim_index != nullptr)
		*Anim_index = Parms.Anim_index;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttractUnique
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttractUnique(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttractUnique");

	Params::BP_UniqueObjectComponentBase_C_SetAttractUnique Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputSuccess(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputSuccess");

	Params::BP_UniqueObjectComponentBase_C_SetInputSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackThrow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackThrow(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackThrow");

	Params::BP_UniqueObjectComponentBase_C_SetAttackThrow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateDelayDeathOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateDelayDeathOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateDelayDeathOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttack(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttack");

	Params::BP_UniqueObjectComponentBase_C_SetAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CancelInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Skip                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CancelInput(bool* Skip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CancelInput");

	Params::BP_UniqueObjectComponentBase_C_CancelInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Skip != nullptr)
		*Skip = Parms.Skip;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialInstanceParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::InitialInstanceParameter(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitialInstanceParameter");

	Params::BP_UniqueObjectComponentBase_C_InitialInstanceParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitNotify
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputWaitNotify(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputWaitNotify");

	Params::BP_UniqueObjectComponentBase_C_SetInputWaitNotify Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputRotate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CheckInputRotate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckInputRotate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackSpline
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackSpline(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackSpline");

	Params::BP_UniqueObjectComponentBase_C_SetAttackSpline Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackPursue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackPursue(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackPursue");

	Params::BP_UniqueObjectComponentBase_C_SetAttackPursue Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackPursueChild
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackPursueChild(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackPursueChild");

	Params::BP_UniqueObjectComponentBase_C_SetAttackPursueChild Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDelayDeathOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetDelayDeathOld(bool Flag_in, bool Force_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDelayDeathOld");

	Params::BP_UniqueObjectComponentBase_C_SetDelayDeathOld Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetBulletAppear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetBulletAppear(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetBulletAppear");

	Params::BP_UniqueObjectComponentBase_C_SetBulletAppear Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.BulletDestroyReport
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         bullet_obj_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::BulletDestroyReport(class ABP_PsychicObjectBasic_C* bullet_obj_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "BulletDestroyReport");

	Params::BP_UniqueObjectComponentBase_C_BulletDestroyReport Parms{};

	Parms.bullet_obj_in = bullet_obj_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputFailure
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputFailure(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputFailure");

	Params::BP_UniqueObjectComponentBase_C_SetInputFailure Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputEnableTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputEnableTime(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputEnableTime");

	Params::BP_UniqueObjectComponentBase_C_SetInputEnableTime Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateInputEnableTime
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateInputEnableTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateInputEnableTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDestroyUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetDestroyUnqObj(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDestroyUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetDestroyUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ResetCommonFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Length_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::ResetCommonFlag(int32 Length_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ResetCommonFlag");

	Params::BP_UniqueObjectComponentBase_C_ResetCommonFlag Parms{};

	Parms.Length_in = Length_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCommonFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetCommonFlag(int32 Index_in, bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCommonFlag");

	Params::BP_UniqueObjectComponentBase_C_SetCommonFlag Parms{};

	Parms.Index_in = Index_in;
	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckCommonFlag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckCommonFlag(int32 Index_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckCommonFlag");

	Params::BP_UniqueObjectComponentBase_C_CheckCommonFlag Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEffectHitUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit_enemy_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Hit_background_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHCHitResult                     Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FHitResult                       Hit_result_bg_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetEffectHitUnqObj(bool Hit_enemy_in, bool Hit_background_in, const struct FHCHitResult& Hit_result_in, const struct FHitResult& Hit_result_bg_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetEffectHitUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetEffectHitUnqObj Parms{};

	Parms.Hit_enemy_in = Hit_enemy_in;
	Parms.Hit_background_in = Hit_background_in;
	Parms.Hit_result_in = std::move(Hit_result_in);
	Parms.Hit_result_bg_in = std::move(Hit_result_bg_in);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCheckDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateCheckDestroy(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateCheckDestroy");

	Params::BP_UniqueObjectComponentBase_C_UpdateCheckDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputGuideOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Target_actor_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Target_pos_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Reverse_lerp_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Direct_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Auto_off_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    To_wait_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputGuideOld(bool Flag_in, class AActor* Target_actor_in, const struct FVector& Target_pos_in, bool Reverse_lerp_in, bool Direct_in, bool Auto_off_in, bool To_wait_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputGuideOld");

	Params::BP_UniqueObjectComponentBase_C_SetInputGuideOld Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Target_actor_in = Target_actor_in;
	Parms.Target_pos_in = std::move(Target_pos_in);
	Parms.Reverse_lerp_in = Reverse_lerp_in;
	Parms.Direct_in = Direct_in;
	Parms.Auto_off_in = Auto_off_in;
	Parms.To_wait_in = To_wait_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateInputGuideOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateInputGuideOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateInputGuideOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetGuidePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Input_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Pos_rate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Guide_pos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetGuidePos(bool Input_in, float Pos_rate_in, struct FVector* Guide_pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetGuidePos");

	Params::BP_UniqueObjectComponentBase_C_GetGuidePos Parms{};

	Parms.Input_in = Input_in;
	Parms.Pos_rate_in = Pos_rate_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Guide_pos != nullptr)
		*Guide_pos = std::move(Parms.Guide_pos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputExtraSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputExtraSuccess(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputExtraSuccess");

	Params::BP_UniqueObjectComponentBase_C_SetInputExtraSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPhaseDestroyUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dunmy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetPhaseDestroyUnqObj(bool* Dunmy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPhaseDestroyUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetPhaseDestroyUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dunmy != nullptr)
		*Dunmy = Parms.Dunmy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCheckDestroyUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetCheckDestroyUnqObj(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCheckDestroyUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetCheckDestroyUnqObj Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetTopParent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Top_parent                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetTopParent(class ABP_PsychicObjectBasic_C** Top_parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetTopParent");

	Params::BP_UniqueObjectComponentBase_C_GetTopParent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Top_parent != nullptr)
		*Top_parent = Parms.Top_parent;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetCameraLookAtPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetCameraLookAtPos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetCameraLookAtPos");

	Params::BP_UniqueObjectComponentBase_C_GetCameraLookAtPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetSeInputStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetSeInputSuccess(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputSuccess");

	Params::BP_UniqueObjectComponentBase_C_SetSeInputSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRebound
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Set_rot_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Target_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Target_top_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRebound(bool Flag_in, const struct FVector& Pos_in, bool Set_rot_in, const struct FRotator& Rot_in, bool Target_in, bool Target_top_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRebound");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRebound Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Pos_in = std::move(Pos_in);
	Parms.Set_rot_in = Set_rot_in;
	Parms.Rot_in = std::move(Rot_in);
	Parms.Target_in = Target_in;
	Parms.Target_top_in = Target_top_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRebound
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRebound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRebound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueReboundPos
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueReboundPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueReboundPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputDelayCancel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputDelayCancel(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputDelayCancel");

	Params::BP_UniqueObjectComponentBase_C_SetInputDelayCancel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDelayDeathHitCheckOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetDelayDeathHitCheckOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDelayDeathHitCheckOld");

	Params::BP_UniqueObjectComponentBase_C_SetDelayDeathHitCheckOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetGuideHitCheckOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetGuideHitCheckOld(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetGuideHitCheckOld");

	Params::BP_UniqueObjectComponentBase_C_SetGuideHitCheckOld Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateGuideHitCheckOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateGuideHitCheckOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateGuideHitCheckOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetHitGuideOld
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetHitGuideOld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetHitGuideOld");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackCheck
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackCheck(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackCheck");

	Params::BP_UniqueObjectComponentBase_C_SetAttackCheck Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateAttackCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateAttackCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateAttackCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPsyObjLinearDamp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Value_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetPsyObjLinearDamp(bool Flag_in, float Value_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPsyObjLinearDamp");

	Params::BP_UniqueObjectComponentBase_C_SetPsyObjLinearDamp Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Value_in = Value_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdatePsyObjLinearDamp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdatePsyObjLinearDamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdatePsyObjLinearDamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetExtraTypeUnqObj
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EHCSkillExtraType>               Extra_type                                             (Parm, OutParm, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetExtraTypeUnqObj(TArray<EHCSkillExtraType>* Extra_type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetExtraTypeUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetExtraTypeUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Extra_type != nullptr)
		*Extra_type = std::move(Parms.Extra_type);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHCCollisionCommonInfo           CommonInfo                                             (Parm, OutParm)
// struct FHCSkillCommonInfo               SkillInfo                                              (Parm, OutParm)

void UBP_UniqueObjectComponentBase_C::GetAttackParameter(struct FHCCollisionCommonInfo* CommonInfo, struct FHCSkillCommonInfo* SkillInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetAttackParameter");

	Params::BP_UniqueObjectComponentBase_C_GetAttackParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CommonInfo != nullptr)
		*CommonInfo = std::move(Parms.CommonInfo);

	if (SkillInfo != nullptr)
		*SkillInfo = std::move(Parms.SkillInfo);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAnimationDirect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    AnimSequence                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetAnimationDirect(class UAnimSequence** AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetAnimationDirect");

	Params::BP_UniqueObjectComponentBase_C_GetAnimationDirect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimSequence != nullptr)
		*AnimSequence = Parms.AnimSequence;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPhasePullOutUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetPhasePullOutUnqObj(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPhasePullOutUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetPhasePullOutUnqObj Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdatePullOutUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdatePullOutUnqObj(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdatePullOutUnqObj");

	Params::BP_UniqueObjectComponentBase_C_UpdatePullOutUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSetting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputSetting(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputSetting");

	Params::BP_UniqueObjectComponentBase_C_SetInputSetting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadAttackParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::LoadAttackParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "LoadAttackParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitializeDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::InitializeDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitializeDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSplineUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dunnmy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetSplineUnqObj(bool Flag_in, bool* Dunnmy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSplineUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetSplineUnqObj Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dunnmy != nullptr)
		*Dunnmy = Parms.Dunnmy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateSplineUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   In_rate                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateSplineUnqObj(float In_rate, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateSplineUnqObj");

	Params::BP_UniqueObjectComponentBase_C_UpdateSplineUnqObj Parms{};

	Parms.In_rate = In_rate;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePress
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Offset_height_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      Pos_curve_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Rot_lerp_time_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Target_enemy_weak_point_in                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePress(bool Flag_in, float Offset_height_in, class UCurveFloat* Pos_curve_in, float Rot_lerp_time_in, bool Target_enemy_weak_point_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePress");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePress Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Offset_height_in = Offset_height_in;
	Parms.Pos_curve_in = Pos_curve_in;
	Parms.Rot_lerp_time_in = Rot_lerp_time_in;
	Parms.Target_enemy_weak_point_in = Target_enemy_weak_point_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniquePress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateUniquePress(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniquePress");

	Params::BP_UniqueObjectComponentBase_C_UpdateUniquePress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueExplosion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Explode_time_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Explode_radius_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueExplosion(bool Flag_in, float Explode_time_in, float Explode_radius_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueExplosion");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueExplosion Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Explode_time_in = Explode_time_in;
	Parms.Explode_radius_in = Explode_radius_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueExplosion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueExplosion(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueExplosion");

	Params::BP_UniqueObjectComponentBase_C_UpdateUniqueExplosion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetInputMoveValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value_x                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value_y                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetInputMoveValue(float* Value_x, float* Value_y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetInputMoveValue");

	Params::BP_UniqueObjectComponentBase_C_GetInputMoveValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value_x != nullptr)
		*Value_x = Parms.Value_x;

	if (Value_y != nullptr)
		*Value_y = Parms.Value_y;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitInputStickTrigger
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::InitInputStickTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitInputStickTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputStickTrigger
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Left_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Right_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Tolerance_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckInputStickTrigger(bool Left_in, bool Right_in, float Tolerance_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckInputStickTrigger");

	Params::BP_UniqueObjectComponentBase_C_CheckInputStickTrigger Parms{};

	Parms.Left_in = Left_in;
	Parms.Right_in = Right_in;
	Parms.Tolerance_in = Tolerance_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitPause
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputWaitPause(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputWaitPause");

	Params::BP_UniqueObjectComponentBase_C_SetInputWaitPause Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputGuideCancelOld
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputGuideCancelOld(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputGuideCancelOld");

	Params::BP_UniqueObjectComponentBase_C_SetInputGuideCancelOld Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePressHit(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressHit");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePressVibrate(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressVibrate");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressVibrate Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateParam
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetUniquePressVibrateParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressVibrateParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueReboundImpulse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Impulse_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniqueReboundImpulse(float Impulse_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueReboundImpulse");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueReboundImpulse Parms{};

	Parms.Impulse_in = Impulse_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressOffsetHeight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Offset_height_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniquePressOffsetHeight(float Offset_height_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressOffsetHeight");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressOffsetHeight Parms{};

	Parms.Offset_height_in = Offset_height_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBend
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueBend(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueBend");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueBend Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueBend
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueBend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueBend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBendSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Angle_curve_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle_rate_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Time_rate_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniqueBendSetting(class UCurveFloat* Angle_curve_in, float Angle_rate_in, float Time_rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueBendSetting");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueBendSetting Parms{};

	Parms.Angle_curve_in = Angle_curve_in;
	Parms.Angle_rate_in = Angle_rate_in;
	Parms.Time_rate_in = Time_rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueBendCapture
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetUniqueBendCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueBendCapture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEffectUniqueBend
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetEffectUniqueBend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetEffectUniqueBend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.RequestEndUniqueObjectState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::RequestEndUniqueObjectState(class AActor* Actor_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "RequestEndUniqueObjectState");

	Params::BP_UniqueObjectComponentBase_C_RequestEndUniqueObjectState Parms{};

	Parms.Actor_in = Actor_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallEndUniqueObjectState
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CallEndUniqueObjectState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CallEndUniqueObjectState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadAttackInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::LoadAttackInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "LoadAttackInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetEffectHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class UParticleSystem>>UniqueEffectList                                       (Parm, OutParm, HasGetValueTypeHash)
// TArray<class FName>                     UniqueEffectSocketList                                 (Parm, OutParm, HasGetValueTypeHash)
// TArray<struct FVector>                  UniqueEffectScaleList                                  (Parm, OutParm, HasGetValueTypeHash)
// TArray<bool>                            UniqueEffectApplyThrowRotList                          (Parm, OutParm, HasGetValueTypeHash)
// bool                                    SkipNormalEffect                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetEffectHit(TArray<TSoftObjectPtr<class UParticleSystem>>* UniqueEffectList, TArray<class FName>* UniqueEffectSocketList, TArray<struct FVector>* UniqueEffectScaleList, TArray<bool>* UniqueEffectApplyThrowRotList, bool* SkipNormalEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetEffectHit");

	Params::BP_UniqueObjectComponentBase_C_GetEffectHit Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueEffectList != nullptr)
		*UniqueEffectList = std::move(Parms.UniqueEffectList);

	if (UniqueEffectSocketList != nullptr)
		*UniqueEffectSocketList = std::move(Parms.UniqueEffectSocketList);

	if (UniqueEffectScaleList != nullptr)
		*UniqueEffectScaleList = std::move(Parms.UniqueEffectScaleList);

	if (UniqueEffectApplyThrowRotList != nullptr)
		*UniqueEffectApplyThrowRotList = std::move(Parms.UniqueEffectApplyThrowRotList);

	if (SkipNormalEffect != nullptr)
		*SkipNormalEffect = Parms.SkipNormalEffect;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetCameraShakeUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Camera_shake                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Camera_shake_scale                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetCameraShakeUnqObj(class UClass** Camera_shake, float* Camera_shake_scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetCameraShakeUnqObj");

	Params::BP_UniqueObjectComponentBase_C_GetCameraShakeUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Camera_shake != nullptr)
		*Camera_shake = Parms.Camera_shake;

	if (Camera_shake_scale != nullptr)
		*Camera_shake_scale = Parms.Camera_shake_scale;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetObjectShakeUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveVector*                     Shake_curve                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Shake_loop_scale                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Shake_loop_time_rate                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Shake_scale                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Shake_time_rate                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Shake_time                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetObjectShakeUnqObj(class UCurveVector** Shake_curve, struct FVector* Shake_loop_scale, float* Shake_loop_time_rate, struct FVector* Shake_scale, float* Shake_time_rate, float* Shake_time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetObjectShakeUnqObj");

	Params::BP_UniqueObjectComponentBase_C_GetObjectShakeUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Shake_curve != nullptr)
		*Shake_curve = Parms.Shake_curve;

	if (Shake_loop_scale != nullptr)
		*Shake_loop_scale = std::move(Parms.Shake_loop_scale);

	if (Shake_loop_time_rate != nullptr)
		*Shake_loop_time_rate = Parms.Shake_loop_time_rate;

	if (Shake_scale != nullptr)
		*Shake_scale = std::move(Parms.Shake_scale);

	if (Shake_time_rate != nullptr)
		*Shake_time_rate = Parms.Shake_time_rate;

	if (Shake_time != nullptr)
		*Shake_time = Parms.Shake_time;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEffectUniqueHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Eft_pos_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetEffectUniqueHit(const struct FVector& Eft_pos_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetEffectUniqueHit");

	Params::BP_UniqueObjectComponentBase_C_SetEffectUniqueHit Parms{};

	Parms.Eft_pos_in = std::move(Eft_pos_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackInfoIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetAttackInfoIndex(int32 Index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackInfoIndex");

	Params::BP_UniqueObjectComponentBase_C_SetAttackInfoIndex Parms{};

	Parms.Index_in = Index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoopParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Attack_info_index_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniquePressVibrateLoopParam(int32 Attack_info_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressVibrateLoopParam");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopParam Parms{};

	Parms.Attack_info_index_in = Attack_info_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePressVibrateLoop(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressVibrateLoop");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoop Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressVibrateLoopHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePressVibrateLoopHit(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressVibrateLoopHit");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressVibrateLoopHit Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDamageMaterialValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<float>                           Value_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetDamageMaterialValue(TArray<float>& Value_list_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDamageMaterialValue");

	Params::BP_UniqueObjectComponentBase_C_SetDamageMaterialValue Parms{};

	Parms.Value_list_in = std::move(Value_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Value_list_in = std::move(Parms.Value_list_in);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDamageMaterial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Damage_level_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetDamageMaterial(bool Reset_in, int32 Damage_level_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDamageMaterial");

	Params::BP_UniqueObjectComponentBase_C_SetDamageMaterial Parms{};

	Parms.Reset_in = Reset_in;
	Parms.Damage_level_in = Damage_level_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUnqObjCamTargetPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUnqObjCamTargetPos(struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUnqObjCamTargetPos");

	Params::BP_UniqueObjectComponentBase_C_GetUnqObjCamTargetPos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraOld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Side_index_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniqueObjectCameraOld(bool Flag_in, int32 Side_index_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueObjectCameraOld");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraOld Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Side_index_in = Side_index_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadUniqueObjectCameraParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::LoadUniqueObjectCameraParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "LoadUniqueObjectCameraParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputDuel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckInputDuel(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckInputDuel");

	Params::BP_UniqueObjectComponentBase_C_CheckInputDuel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckDelayDeath
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CheckDelayDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckDelayDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearDelayDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::ClearDelayDeath(bool ForceIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ClearDelayDeath");

	Params::BP_UniqueObjectComponentBase_C_ClearDelayDeath Parms{};

	Parms.ForceIn = ForceIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetWeightGaugePosUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetWeightGaugePosUnqObj(bool* Return, struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetWeightGaugePosUnqObj");

	Params::BP_UniqueObjectComponentBase_C_GetWeightGaugePosUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMeshCompUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UStaticMesh*                      Mesh_comp                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetMeshCompUnqObj(bool* Return, class UStaticMesh** Mesh_comp, struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetMeshCompUnqObj");

	Params::BP_UniqueObjectComponentBase_C_GetMeshCompUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Mesh_comp != nullptr)
		*Mesh_comp = Parms.Mesh_comp;

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureUnqObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetCaptureUnqObj(bool Flag_in, bool Success_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCaptureUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetCaptureUnqObj Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Success_in = Success_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCaptureUnqObj
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateCaptureUnqObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateCaptureUnqObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCapturePos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveVector*                     Curve_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetCapturePos(bool Flag_in, class UCurveVector* Curve_in, const struct FVector& Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCapturePos");

	Params::BP_UniqueObjectComponentBase_C_SetCapturePos Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Curve_in = Curve_in;
	Parms.Rate_in = std::move(Rate_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureVibratePos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveVector*                     Curve_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetCaptureVibratePos(bool Flag_in, class UCurveVector* Curve_in, const struct FVector& Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCaptureVibratePos");

	Params::BP_UniqueObjectComponentBase_C_SetCaptureVibratePos Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Curve_in = Curve_in;
	Parms.Rate_in = std::move(Rate_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCaptureVibrateRot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveVector*                     Curve_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetCaptureVibrateRot(bool Flag_in, class UCurveVector* Curve_in, const struct FVector& Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCaptureVibrateRot");

	Params::BP_UniqueObjectComponentBase_C_SetCaptureVibrateRot Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Curve_in = Curve_in;
	Parms.Rate_in = std::move(Rate_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckInputControl
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckInputControl(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckInputControl");

	Params::BP_UniqueObjectComponentBase_C_CheckInputControl Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetGroundSlope
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetGroundSlope(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetGroundSlope");

	Params::BP_UniqueObjectComponentBase_C_SetGroundSlope Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateGroundSlope
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateGroundSlope(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateGroundSlope");

	Params::BP_UniqueObjectComponentBase_C_UpdateGroundSlope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRide
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Update                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRide(bool Flag_in, bool* Update)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRide");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRide Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Update != nullptr)
		*Update = Parms.Update;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRidePrev
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRidePrev(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRidePrev");

	Params::BP_UniqueObjectComponentBase_C_UpdateUniqueRidePrev Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRide
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRide(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRide");

	Params::BP_UniqueObjectComponentBase_C_UpdateUniqueRide Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideCheckBg
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRideCheckBg(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRideCheckBg");

	Params::BP_UniqueObjectComponentBase_C_UpdateUniqueRideCheckBg Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckTimeDilation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckTimeDilation(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckTimeDilation");

	Params::BP_UniqueObjectComponentBase_C_CheckTimeDilation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetTimeDilationAttackUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetTimeDilationAttackUnqObj(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetTimeDilationAttackUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetTimeDilationAttackUnqObj Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallAttackThrowCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CallAttackThrowCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CallAttackThrowCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetThrowMontageCancel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Cancel_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetThrowMontageCancel(bool Flag_in, float Time_in, bool Cancel_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetThrowMontageCancel");

	Params::BP_UniqueObjectComponentBase_C_SetThrowMontageCancel Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Time_in = Time_in;
	Parms.Cancel_in = Cancel_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateThrowMontageCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateThrowMontageCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateThrowMontageCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueCameraHitCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetUniqueCameraHitCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueCameraHitCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UniqueCameraHitCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UniqueCameraHitCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UniqueCameraHitCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueCameraHitLerp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueCameraHitLerp(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueCameraHitLerp");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueCameraHitLerp Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueCameraHitLerp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueCameraHitLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueCameraHitLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputFailure
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetSeInputFailure(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputFailure");

	Params::BP_UniqueObjectComponentBase_C_SetSeInputFailure Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetSeInputGauge(bool Flag_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputGauge");

	Params::BP_UniqueObjectComponentBase_C_SetSeInputGauge Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickRollSuccess
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconStickRollSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconStickRollSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetHitDamageMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Reset_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetHitDamageMesh(bool Reset_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetHitDamageMesh");

	Params::BP_UniqueObjectComponentBase_C_SetHitDamageMesh Parms{};

	Parms.Reset_in = Reset_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPlayerMontageFirstAttack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetPlayerMontageFirstAttack(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPlayerMontageFirstAttack");

	Params::BP_UniqueObjectComponentBase_C_SetPlayerMontageFirstAttack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAttackInterpolate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Interpolate_time_in                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAttackInterpolate(float Interpolate_time_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAttackInterpolate");

	Params::BP_UniqueObjectComponentBase_C_SetAttackInterpolate Parms{};

	Parms.Interpolate_time_in = Interpolate_time_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueInputStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CallUniqueInputStart(bool Force_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CallUniqueInputStart");

	Params::BP_UniqueObjectComponentBase_C_CallUniqueInputStart Parms{};

	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueObjectEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CallUniqueObjectEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CallUniqueObjectEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputRepeat
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetSeInputRepeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputRepeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSeInputRotate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetSeInputRotate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSeInputRotate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickHold
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconStickHold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconStickHold");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickHoldPercent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconStickHoldPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconStickHoldPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconRushPercent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconRushPercent(float Rate_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconRushPercent");

	Params::BP_UniqueObjectComponentBase_C_SetPursuitIconRushPercent Parms{};

	Parms.Rate_in = Rate_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickRollStart
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconStickRollStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconStickRollStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CallUniqueAddGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CallUniqueAddGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CallUniqueAddGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.LoadEffectParameter
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::LoadEffectParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "LoadEffectParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraLookAtPos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Look_rate_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Pos                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUniqueObjectCameraLookAtPos(float Look_rate_in, struct FVector* Pos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueObjectCameraLookAtPos");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraLookAtPos Parms{};

	Parms.Look_rate_in = Look_rate_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Pos != nullptr)
		*Pos = std::move(Parms.Pos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMoveVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          VelocityOut                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetMoveVelocity(struct FVector* VelocityOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetMoveVelocity");

	Params::BP_UniqueObjectComponentBase_C_GetMoveVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VelocityOut != nullptr)
		*VelocityOut = std::move(Parms.VelocityOut);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.Get Unique Move Look at Target Pos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TargetPos                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::Get_Unique_Move_Look_at_Target_Pos(struct FVector* TargetPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "Get Unique Move Look at Target Pos");

	Params::BP_UniqueObjectComponentBase_C_Get_Unique_Move_Look_at_Target_Pos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetPos != nullptr)
		*TargetPos = std::move(Parms.TargetPos);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraOwnerRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetUniqueObjectCameraOwnerRotation(struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueObjectCameraOwnerRotation");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraOwnerRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueAttackCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueAttackCollision(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueAttackCollision");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueAttackCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetInputWaitEnemy(bool Flag_in, bool Success_in, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputWaitEnemy");

	Params::BP_UniqueObjectComponentBase_C_SetInputWaitEnemy Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Success_in = Success_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevAsyncInputWaitEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PrevAsyncInputWaitEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevAsyncInputWaitEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostAsyncInputWaitEnemy
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PostAsyncInputWaitEnemy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostAsyncInputWaitEnemy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ApplyUniqueRideLocationRotation
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ApplyUniqueRideLocationRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ApplyUniqueRideLocationRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideFrontDir
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Front_dir                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUniqueRideFrontDir(struct FVector* Front_dir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueRideFrontDir");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueRideFrontDir Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Front_dir != nullptr)
		*Front_dir = std::move(Parms.Front_dir);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Location                                               (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetUniqueRideTransform(struct FTransform* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueRideTransform");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueRideTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRidePos
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUniqueRidePos(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueRidePos");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueRidePos Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueRideRot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetUniqueRideRot(struct FRotator* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueRideRot");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueRideRot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPursuitIconStickButtonPercent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetPursuitIconStickButtonPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPursuitIconStickButtonPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideTimer(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideTimer");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideTimer Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRideTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRideTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.IsUniqueRideTimerOver
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::IsUniqueRideTimerOver(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "IsUniqueRideTimerOver");

	Params::BP_UniqueObjectComponentBase_C_IsUniqueRideTimerOver Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.StartUniqueObjectCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Socket_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Control_type_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Remote_type_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::StartUniqueObjectCamera(bool Socket_type_in, bool Control_type_in, bool Remote_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "StartUniqueObjectCamera");

	Params::BP_UniqueObjectComponentBase_C_StartUniqueObjectCamera Parms{};

	Parms.Socket_type_in = Socket_type_in;
	Parms.Control_type_in = Control_type_in;
	Parms.Remote_type_in = Remote_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.EndUniqueObjectCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::EndUniqueObjectCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "EndUniqueObjectCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraTriggerInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FCameraTriggerInfo               Trigger_info_in                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_UniqueObjectComponentBase_C::SetUniqueObjectCameraTriggerInfo(bool Flag_in, const struct FCameraTriggerInfo& Trigger_info_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueObjectCameraTriggerInfo");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraTriggerInfo Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Trigger_info_in = std::move(Trigger_info_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueObjectCameraRemoteOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueObjectCameraRemoteOption(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueObjectCameraRemoteOption");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueObjectCameraRemoteOption Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ResetUniqueObjectCamera
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ResetUniqueObjectCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ResetUniqueObjectCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueScaleChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCurveFloat*                      CurveIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniqueScaleChange(bool FlagIn, class UCurveFloat* CurveIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueScaleChange");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueScaleChange Parms{};

	Parms.FlagIn = FlagIn;
	Parms.CurveIn = CurveIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueScaleChange
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueScaleChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueScaleChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ResetUniqueScaleChange
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ResetUniqueScaleChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ResetUniqueScaleChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckUniqueReboundHeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CheckUniqueReboundHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckUniqueReboundHeight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SearchEnemyTargetActorFix
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SearchEnemyTargetActorFix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SearchEnemyTargetActorFix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.TraceMultiCapsule
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Pos_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset_up_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset_dn_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Hit_height                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::TraceMultiCapsule(const struct FVector& Pos_in, float Offset_up_in, float Offset_dn_in, float Radius_in, bool* Return, float* Hit_height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "TraceMultiCapsule");

	Params::BP_UniqueObjectComponentBase_C_TraceMultiCapsule Parms{};

	Parms.Pos_in = std::move(Pos_in);
	Parms.Offset_up_in = Offset_up_in;
	Parms.Offset_dn_in = Offset_dn_in;
	Parms.Radius_in = Radius_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Hit_height != nullptr)
		*Hit_height = Parms.Hit_height;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetSocketPlayerTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetSocketPlayerTransform(struct FTransform* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetSocketPlayerTransform");

	Params::BP_UniqueObjectComponentBase_C_GetSocketPlayerTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitUniqueRideCapsule
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCapsuleComponent*                Capsule_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Half_height_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rot_in                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::InitUniqueRideCapsule(class UCapsuleComponent* Capsule_in, float Radius_in, float Half_height_in, const struct FRotator& Rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitUniqueRideCapsule");

	Params::BP_UniqueObjectComponentBase_C_InitUniqueRideCapsule Parms{};

	Parms.Capsule_in = Capsule_in;
	Parms.Radius_in = Radius_in;
	Parms.Half_height_in = Half_height_in;
	Parms.Rot_in = std::move(Rot_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsule
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideCapsule(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideCapsule");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideCapsule Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateUniqueRideCapsule
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateUniqueRideCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateUniqueRideCapsule");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       Collision_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Simulate_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Gravity_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideCapsuleCollision(ECollisionEnabled Collision_in, bool Simulate_in, bool Gravity_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideCapsuleCollision");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleCollision Parms{};

	Parms.Collision_in = Collision_in;
	Parms.Simulate_in = Simulate_in;
	Parms.Gravity_in = Gravity_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleLocationRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Teleport_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideCapsuleLocationRotation(const struct FVector& Location_in, const struct FRotator& Rotation_in, bool Teleport_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideCapsuleLocationRotation");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleLocationRotation Parms{};

	Parms.Location_in = std::move(Location_in);
	Parms.Rotation_in = std::move(Rotation_in);
	Parms.Teleport_in = Teleport_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleShape
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideCapsuleShape(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideCapsuleShape");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleShape Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetSocketCapsuleTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Return                                                 (Parm, OutParm, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::GetSocketCapsuleTransform(struct FTransform* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetSocketCapsuleTransform");

	Params::BP_UniqueObjectComponentBase_C_GetSocketCapsuleTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = std::move(Parms.Return);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetPlayerFlying
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetPlayerFlying(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetPlayerFlying");

	Params::BP_UniqueObjectComponentBase_C_SetPlayerFlying Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectCameraParameter
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FCameraUniqueObjectParameter     Return_                                                (Parm, OutParm)

void UBP_UniqueObjectComponentBase_C::GetUniqueObjectCameraParameter(struct FCameraUniqueObjectParameter* Return_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueObjectCameraParameter");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueObjectCameraParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_ != nullptr)
		*Return_ = std::move(Parms.Return_);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetMeshCompHitUnqObj
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Prim_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal_in                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_UniqueObjectComponentBase_C::SetMeshCompHitUnqObj(class UPrimitiveComponent* Prim_comp_in, const struct FVector& Normal_in, const struct FHitResult& Hit_result_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetMeshCompHitUnqObj");

	Params::BP_UniqueObjectComponentBase_C_SetMeshCompHitUnqObj Parms{};

	Parms.Prim_comp_in = Prim_comp_in;
	Parms.Normal_in = std::move(Normal_in);
	Parms.Hit_result_in = std::move(Hit_result_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetClearDelayDeathWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   WaitTimeIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetClearDelayDeathWait(bool FlagIn, float WaitTimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetClearDelayDeathWait");

	Params::BP_UniqueObjectComponentBase_C_SetClearDelayDeathWait Parms{};

	Parms.FlagIn = FlagIn;
	Parms.WaitTimeIn = WaitTimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateClearDelayDeathWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateClearDelayDeathWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateClearDelayDeathWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetOwnerLocationRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Sweep_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Add_capsule_height_in                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetOwnerLocationRotation(const struct FVector& Location_in, const struct FRotator& Rotation_in, bool Sweep_in, bool Add_capsule_height_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetOwnerLocationRotation");

	Params::BP_UniqueObjectComponentBase_C_SetOwnerLocationRotation Parms{};

	Parms.Location_in = std::move(Location_in);
	Parms.Rotation_in = std::move(Rotation_in);
	Parms.Sweep_in = Sweep_in;
	Parms.Add_capsule_height_in = Add_capsule_height_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniqueRideCapsuleHit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Prim_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Hit_normal_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit_result_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_UniqueObjectComponentBase_C::SetUniqueRideCapsuleHit(class UPrimitiveComponent* Prim_comp_in, const struct FVector& Hit_normal_in, const struct FHitResult& Hit_result_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniqueRideCapsuleHit");

	Params::BP_UniqueObjectComponentBase_C_SetUniqueRideCapsuleHit Parms{};

	Parms.Prim_comp_in = Prim_comp_in;
	Parms.Hit_normal_in = std::move(Hit_normal_in);
	Parms.Hit_result_in = std::move(Hit_result_in);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckAchievementThrowObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckAchievementThrowObject(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckAchievementThrowObject");

	Params::BP_UniqueObjectComponentBase_C_CheckAchievementThrowObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetAchievementUniqueInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Force_in                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetAchievementUniqueInput(bool Force_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetAchievementUniqueInput");

	Params::BP_UniqueObjectComponentBase_C_SetAchievementUniqueInput Parms{};

	Parms.Force_in = Force_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CheckAchievementUniqueInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::CheckAchievementUniqueInput(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CheckAchievementUniqueInput");

	Params::BP_UniqueObjectComponentBase_C_CheckAchievementUniqueInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressLiftUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetUniquePressLiftUp(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressLiftUp");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressLiftUp Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressLiftUpParameter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Lift_up_curve_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetUniquePressLiftUpParameter(class UCurveFloat* Lift_up_curve_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressLiftUpParameter");

	Params::BP_UniqueObjectComponentBase_C_SetUniquePressLiftUpParameter Parms{};

	Parms.Lift_up_curve_in = Lift_up_curve_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackDirectionUnqObj
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetAttackDirectionUnqObj(bool* Return, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetAttackDirectionUnqObj");

	Params::BP_UniqueObjectComponentBase_C_GetAttackDirectionUnqObj Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetDuelType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Duel_type_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetDuelType(bool Duel_type_in, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetDuelType");

	Params::BP_UniqueObjectComponentBase_C_SetDuelType Parms{};

	Parms.Duel_type_in = Duel_type_in;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetCallEndUniqueObjectStateWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FlagIn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   WaitTimeIn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetCallEndUniqueObjectStateWait(bool FlagIn, float WaitTimeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetCallEndUniqueObjectStateWait");

	Params::BP_UniqueObjectComponentBase_C_SetCallEndUniqueObjectStateWait Parms{};

	Parms.FlagIn = FlagIn;
	Parms.WaitTimeIn = WaitTimeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateCallEndUniqueObjectStateWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateCallEndUniqueObjectStateWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateCallEndUniqueObjectStateWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PrevEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PrevEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PrevEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.PostEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::PostEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "PostEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.StartEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::StartEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "StartEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.EndEventCancel
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::EndEventCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "EndEventCancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputReserve
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Reserve_wait_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Skip_auto_off_in                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Use_reserve_button                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EPsychicObjectUniqueInputButton         Reserve_button_in                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPsychicObjectUniqueInputType           Reserve_type_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetInputReserve(bool Flag_in, bool Reserve_wait_in, bool Skip_auto_off_in, bool Use_reserve_button, EPsychicObjectUniqueInputButton Reserve_button_in, EPsychicObjectUniqueInputType Reserve_type_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputReserve");

	Params::BP_UniqueObjectComponentBase_C_SetInputReserve Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Reserve_wait_in = Reserve_wait_in;
	Parms.Skip_auto_off_in = Skip_auto_off_in;
	Parms.Use_reserve_button = Use_reserve_button;
	Parms.Reserve_button_in = Reserve_button_in;
	Parms.Reserve_type_in = Reserve_type_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.UpdateInputReserve
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::UpdateInputReserve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "UpdateInputReserve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearInputReserveWait
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ClearInputReserveWait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ClearInputReserveWait");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputSuccessDelay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Time_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetInputSuccessDelay(bool Flag_in, float Time_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputSuccessDelay");

	Params::BP_UniqueObjectComponentBase_C_SetInputSuccessDelay Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Time_in = Time_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEventCancelInputDelay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetEventCancelInputDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetEventCancelInputDelay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetLockInputMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetLockInputMode(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetLockInputMode");

	Params::BP_UniqueObjectComponentBase_C_SetLockInputMode Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.InitialSkeletalMeshParam
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::InitialSkeletalMeshParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "InitialSkeletalMeshParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSkeletalMeshParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Ref_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetSkeletalMeshParam(bool Flag_in, class FName Ref_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSkeletalMeshParam");

	Params::BP_UniqueObjectComponentBase_C_SetSkeletalMeshParam Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Ref_name_in = Ref_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetSimulateControlAwakeUnqObj
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetSimulateControlAwakeUnqObj()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetSimulateControlAwakeUnqObj");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ClearInputReserveSkipAutoOff
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ClearInputReserveSkipAutoOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ClearInputReserveSkipAutoOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetInputWaitTime
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::SetInputWaitTime(int32 IndexIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetInputWaitTime");

	Params::BP_UniqueObjectComponentBase_C_SetInputWaitTime Parms{};

	Parms.IndexIn = IndexIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetMaterialParameterMeshList
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PsychicObjectBasic_C*> Child_list_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TArray<class UMeshComponent*>           Mesh_list                                              (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetMaterialParameterMeshList(TArray<class ABP_PsychicObjectBasic_C*>& Child_list_in, TArray<class UMeshComponent*>* Mesh_list)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetMaterialParameterMeshList");

	Params::BP_UniqueObjectComponentBase_C_GetMaterialParameterMeshList Parms{};

	Parms.Child_list_in = std::move(Child_list_in);

	UObject::ProcessEvent(Func, &Parms);

	Child_list_in = std::move(Parms.Child_list_in);

	if (Mesh_list != nullptr)
		*Mesh_list = std::move(Parms.Mesh_list);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetEventSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Event_start_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::SetEventSetting(bool Event_start_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetEventSetting");

	Params::BP_UniqueObjectComponentBase_C_SetEventSetting Parms{};

	Parms.Event_start_in = Event_start_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.SetUniquePressFailure
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::SetUniquePressFailure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "SetUniquePressFailure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.CancelSAS
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::CancelSAS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "CancelSAS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.NeedsEndSASCutin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNeedsEndCutin                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_UniqueObjectComponentBase_C::NeedsEndSASCutin(bool* bNeedsEndCutin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "NeedsEndSASCutin");

	Params::BP_UniqueObjectComponentBase_C_NeedsEndSASCutin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNeedsEndCutin != nullptr)
		*bNeedsEndCutin = Parms.bNeedsEndCutin;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.ForceWarpPartyMember
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_UniqueObjectComponentBase_C::ForceWarpPartyMember()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "ForceWarpPartyMember");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueObjectPlayerMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// EPsychicObjectUniqueMontageIndex        MontageIndexIn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bLeft                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bMaleHero                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUniqueObjectPlayerMontage(EPsychicObjectUniqueMontageIndex MontageIndexIn, bool bLeft, bool bMaleHero, class UAnimMontage** Montage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueObjectPlayerMontage");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueObjectPlayerMontage Parms{};

	Parms.MontageIndexIn = MontageIndexIn;
	Parms.bLeft = bLeft;
	Parms.bMaleHero = bMaleHero;

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetUniqueCaptureTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// TArray<float>                           CaptureTimeList                                        (Parm, OutParm, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetUniqueCaptureTime(TArray<float>* CaptureTimeList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetUniqueCaptureTime");

	Params::BP_UniqueObjectComponentBase_C_GetUniqueCaptureTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CaptureTimeList != nullptr)
		*CaptureTimeList = std::move(Parms.CaptureTimeList);
}


// Function BP_UniqueObjectComponentBase.BP_UniqueObjectComponentBase_C.GetAttackCountMontageIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EPsychicObjectUniqueMontageIndex        Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_UniqueObjectComponentBase_C::GetAttackCountMontageIndex(EPsychicObjectUniqueMontageIndex* Montage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_UniqueObjectComponentBase_C", "GetAttackCountMontageIndex");

	Params::BP_UniqueObjectComponentBase_C_GetAttackCountMontageIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}

}

