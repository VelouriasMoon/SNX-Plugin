#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InterceptComponent

#include "Basic.hpp"

#include "BP_InterceptComponent_classes.hpp"
#include "BP_InterceptComponent_parameters.hpp"


namespace SDK
{

// Function BP_InterceptComponent.BP_InterceptComponent_C.ExecuteUbergraph_BP_InterceptComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InterceptComponent_C::ExecuteUbergraph_BP_InterceptComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ExecuteUbergraph_BP_InterceptComponent");

	Params::BP_InterceptComponent_C_ExecuteUbergraph_BP_InterceptComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InterceptComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ReceiveTick");

	Params::BP_InterceptComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_InterceptComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.CheckIntercept
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExistObject                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InterceptComponent_C::CheckIntercept(bool* bExistObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "CheckIntercept");

	Params::BP_InterceptComponent_C_CheckIntercept Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExistObject != nullptr)
		*bExistObject = Parms.bExistObject;
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.ExecIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InterceptComponent_C::ExecIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ExecIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.ResetIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InterceptComponent_C::ResetIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ResetIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.CancelIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InterceptComponent_C::CancelIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "CancelIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.ReserveIntercept
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InterceptComponent_C::ReserveIntercept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "ReserveIntercept");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.CatchInterceptObject
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InterceptComponent_C::CatchInterceptObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "CatchInterceptObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.IsInterceptAble
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bAble                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InterceptComponent_C::IsInterceptAble(bool* bAble) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "IsInterceptAble");

	Params::BP_InterceptComponent_C_IsInterceptAble Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAble != nullptr)
		*bAble = Parms.bAble;
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.IsExistInterceptObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bExist                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InterceptComponent_C::IsExistInterceptObject(bool* bExist) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "IsExistInterceptObject");

	Params::BP_InterceptComponent_C_IsExistInterceptObject Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bExist != nullptr)
		*bExist = Parms.bExist;
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.IsNoEnemyAttackIntercept
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bNoEnemyAttack                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InterceptComponent_C::IsNoEnemyAttackIntercept(bool* bNoEnemyAttack) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "IsNoEnemyAttackIntercept");

	Params::BP_InterceptComponent_C_IsNoEnemyAttackIntercept Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoEnemyAttack != nullptr)
		*bNoEnemyAttack = Parms.bNoEnemyAttack;
}


// Function BP_InterceptComponent.BP_InterceptComponent_C.IsReserveIntercept
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bReserve                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_InterceptComponent_C::IsReserveIntercept(bool* bReserve) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InterceptComponent_C", "IsReserveIntercept");

	Params::BP_InterceptComponent_C_IsReserveIntercept Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bReserve != nullptr)
		*bReserve = Parms.bReserve;
}

}

