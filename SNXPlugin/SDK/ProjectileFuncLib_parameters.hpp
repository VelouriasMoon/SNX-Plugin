#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProjectileFuncLib

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ProjectileFuncLib.ProjectileFuncLib_C.SetupProjectileComponents
// 0x0028 (0x0028 - 0x0000)
struct ProjectileFuncLib_C_SetupProjectileComponents final
{
public:
	class AActor*                                 ProjectileActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OwnerActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_l;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Projectile_l;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileFuncLib_C_SetupProjectileComponents) == 0x000008, "Wrong alignment on ProjectileFuncLib_C_SetupProjectileComponents");
static_assert(sizeof(ProjectileFuncLib_C_SetupProjectileComponents) == 0x000028, "Wrong size on ProjectileFuncLib_C_SetupProjectileComponents");
static_assert(offsetof(ProjectileFuncLib_C_SetupProjectileComponents, ProjectileActor) == 0x000000, "Member 'ProjectileFuncLib_C_SetupProjectileComponents::ProjectileActor' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_SetupProjectileComponents, OwnerActor) == 0x000008, "Member 'ProjectileFuncLib_C_SetupProjectileComponents::OwnerActor' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_SetupProjectileComponents, __WorldContext) == 0x000010, "Member 'ProjectileFuncLib_C_SetupProjectileComponents::__WorldContext' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_SetupProjectileComponents, Owner_l) == 0x000018, "Member 'ProjectileFuncLib_C_SetupProjectileComponents::Owner_l' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_SetupProjectileComponents, Projectile_l) == 0x000020, "Member 'ProjectileFuncLib_C_SetupProjectileComponents::Projectile_l' has a wrong offset!");

// Function ProjectileFuncLib.ProjectileFuncLib_C.TraceGroundLocation
// 0x0198 (0x0198 - 0x0000)
struct ProjectileFuncLib_C_TraceGroundLocation final
{
public:
	struct FVector                                baseLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartHeightOffset;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceLength;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EC[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation;                                    // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation_l;                                  // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42ED[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42EE[0x1];                                     // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EF[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileFuncLib_C_TraceGroundLocation) == 0x000008, "Wrong alignment on ProjectileFuncLib_C_TraceGroundLocation");
static_assert(sizeof(ProjectileFuncLib_C_TraceGroundLocation) == 0x000198, "Wrong size on ProjectileFuncLib_C_TraceGroundLocation");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, baseLocation) == 0x000000, "Member 'ProjectileFuncLib_C_TraceGroundLocation::baseLocation' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, StartHeightOffset) == 0x00000C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::StartHeightOffset' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, TraceLength) == 0x000010, "Member 'ProjectileFuncLib_C_TraceGroundLocation::TraceLength' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, __WorldContext) == 0x000018, "Member 'ProjectileFuncLib_C_TraceGroundLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, GroundLocation) == 0x000020, "Member 'ProjectileFuncLib_C_TraceGroundLocation::GroundLocation' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, GroundLocation_l) == 0x00002C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::GroundLocation_l' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, K2Node_MakeArray_Array) == 0x000038, "Member 'ProjectileFuncLib_C_TraceGroundLocation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000058, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000070, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, Temp_object_Variable) == 0x000080, "Member 'ProjectileFuncLib_C_TraceGroundLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000090, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000118, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_FaceIndex) == 0x00017C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_TraceStart) == 0x000180, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_TraceGroundLocation, CallFunc_BreakHitResult_TraceEnd) == 0x00018C, "Member 'ProjectileFuncLib_C_TraceGroundLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function ProjectileFuncLib.ProjectileFuncLib_C.CalcActorForwardGroundLocation
// 0x0060 (0x0060 - 0x0000)
struct ProjectileFuncLib_C_CalcActorForwardGroundLocation final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation;                                    // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceGroundLocation_groundLocation;       // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ProjectileFuncLib_C_CalcActorForwardGroundLocation) == 0x000008, "Wrong alignment on ProjectileFuncLib_C_CalcActorForwardGroundLocation");
static_assert(sizeof(ProjectileFuncLib_C_CalcActorForwardGroundLocation) == 0x000060, "Wrong size on ProjectileFuncLib_C_CalcActorForwardGroundLocation");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, Actor) == 0x000000, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::Actor' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, Distance) == 0x000008, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::Distance' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, __WorldContext) == 0x000010, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, GroundLocation) == 0x000018, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::GroundLocation' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000030, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ProjectileFuncLib_C_CalcActorForwardGroundLocation, CallFunc_TraceGroundLocation_groundLocation) == 0x000054, "Member 'ProjectileFuncLib_C_CalcActorForwardGroundLocation::CallFunc_TraceGroundLocation_groundLocation' has a wrong offset!");

}

