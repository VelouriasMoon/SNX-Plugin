#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_SasLink_slot_parts_1

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BattlePrototype_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_SasLink_slot_parts_1.WB_ui_SasLink_slot_parts_1_C
// 0x0270 (0x05F8 - 0x0388)
class UWB_ui_SasLink_slot_parts_1_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       M_select_2_L;                                      // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_decision_2_R;                                    // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_decision_2_L;                                    // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_decision_1;                                      // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_change_2_RL;                                     // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_change_2_LR;                                     // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_select_2_R;                                      // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_select_2_L;                                      // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       F_select_1;                                        // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_decision_2_R;                                    // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_decision_2_L;                                    // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_decision_1;                                      // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_change_2_RL;                                     // 0x03F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_change_2_LR;                                     // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_select_2_R;                                      // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       M_select_1;                                        // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               All;                                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chara;                                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chara_base;                                        // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Chara_base2;                                       // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconSet_1;                                         // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconSet_2;                                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ID;                                                // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ID_base;                                           // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_1;                                            // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_2;                                            // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_5;                                            // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_1_add;                                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_2_add;                                        // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3a;                                           // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3a_add;                                       // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3b;                                           // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3b_add;                                       // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3c;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3c_add;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3d;                                           // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3d_add;                                       // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3e;                                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_3e_add;                                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4a;                                           // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4a_add;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4b;                                           // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4b_add;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4d;                                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4d_add;                                       // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4e;                                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_4e_add;                                       // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Neon_5_add;                                        // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Base_1;                                  // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Base_2;                                  // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Base_1a;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Base_2a;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Select_L;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Sas_Frame_Select_R;                                // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_saslink_charaname_2;                          // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UREDTextBlock*                          Text_saslink_slot_id_1;                            // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_0;                      // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_1;                      // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_2;                      // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_3;                      // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_4;                      // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_5;                      // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_6;                      // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ui_SasLink_slot_parts_2_C*          WB_ui_SasLink_slot_parts_2_7;                      // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UWB_ui_SasLink_slot_parts_2_C*>  IconList;                                          // 0x0598(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         ImageNeonList;                                     // 0x05A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         ImageNeonAddList;                                  // 0x05B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         AnimIndex;                                         // 0x05C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorDir;                                         // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CursorPage;                                        // 0x05D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DualFlag;                                          // 0x05D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DecideFlag;                                        // 0x05D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LockFlag;                                          // 0x05D6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MoveCursorFlag;                                    // 0x05D7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableInputFlag;                                   // 0x05D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4587[0x7];                                     // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_SASButton>                           SasButtonList;                                     // 0x05E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          MouseDecideFlag;                                   // 0x05F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EnableFlag;                                        // 0x05F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MoveMouseCursorFlag;                               // 0x05F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WB_ui_SasLink_slot_parts_1(int32 EntryPoint);
	void _____SlotSelectPage2MouseDown(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget);
	void _____SlotSelectPage1MouseDown(const struct FRedMouseArgument& Argument, class UUserWidget* PWidget);
	void OnInitialized();
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void Construct();
	void SetupIconList();
	void StateNone(int32 SubState);
	void StateLoop(int32 SubState);
	void InputCheck(bool IsDual, bool* IsSwitch);
	void Decide(bool IsLock, EPlayerID CharaID);
	void Unlock();
	void IsMoveCursor(bool* IsMove);
	void GetCurrentSkill(E_SASKindNative* SkillID);
	void SetEnableInput(bool IsEnableInput);
	void GetCurrentSlot(E_SASButton* Param_Slot);
	void SetSasIcon(int32 Param_Index);
	void UpdateCurrentSasIcon();
	void PCSlotSelectEnable(bool Enable);
	void PCGetMouseDecide(bool* Param_DecideFlag);
	void SetNeon(EPlayerID CharaID);
	void ResetCursorPos();
	void SetupDefaultMessage();
	void SetEnable(bool IsEnable);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_SasLink_slot_parts_1_C">();
	}
	static class UWB_ui_SasLink_slot_parts_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_SasLink_slot_parts_1_C>();
	}
};
static_assert(alignof(UWB_ui_SasLink_slot_parts_1_C) == 0x000008, "Wrong alignment on UWB_ui_SasLink_slot_parts_1_C");
static_assert(sizeof(UWB_ui_SasLink_slot_parts_1_C) == 0x0005F8, "Wrong size on UWB_ui_SasLink_slot_parts_1_C");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_SasLink_slot_parts_1_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_select_2_L) == 0x000390, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_select_2_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_decision_2_R) == 0x000398, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_decision_2_R' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_decision_2_L) == 0x0003A0, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_decision_2_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_decision_1) == 0x0003A8, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_decision_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_change_2_RL) == 0x0003B0, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_change_2_RL' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_change_2_LR) == 0x0003B8, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_change_2_LR' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_select_2_R) == 0x0003C0, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_select_2_R' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_select_2_L) == 0x0003C8, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_select_2_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, F_select_1) == 0x0003D0, "Member 'UWB_ui_SasLink_slot_parts_1_C::F_select_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_decision_2_R) == 0x0003D8, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_decision_2_R' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_decision_2_L) == 0x0003E0, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_decision_2_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_decision_1) == 0x0003E8, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_decision_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_change_2_RL) == 0x0003F0, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_change_2_RL' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_change_2_LR) == 0x0003F8, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_change_2_LR' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_select_2_R) == 0x000400, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_select_2_R' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, M_select_1) == 0x000408, "Member 'UWB_ui_SasLink_slot_parts_1_C::M_select_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, All) == 0x000410, "Member 'UWB_ui_SasLink_slot_parts_1_C::All' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Chara) == 0x000418, "Member 'UWB_ui_SasLink_slot_parts_1_C::Chara' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Chara_base) == 0x000420, "Member 'UWB_ui_SasLink_slot_parts_1_C::Chara_base' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Chara_base2) == 0x000428, "Member 'UWB_ui_SasLink_slot_parts_1_C::Chara_base2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, IconSet_1) == 0x000430, "Member 'UWB_ui_SasLink_slot_parts_1_C::IconSet_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, IconSet_2) == 0x000438, "Member 'UWB_ui_SasLink_slot_parts_1_C::IconSet_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, ID) == 0x000440, "Member 'UWB_ui_SasLink_slot_parts_1_C::ID' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, ID_base) == 0x000448, "Member 'UWB_ui_SasLink_slot_parts_1_C::ID_base' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_1) == 0x000450, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_2) == 0x000458, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_5) == 0x000460, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_1_add) == 0x000468, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_1_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_2_add) == 0x000470, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_2_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3a) == 0x000478, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3a' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3a_add) == 0x000480, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3a_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3b) == 0x000488, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3b' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3b_add) == 0x000490, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3b_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3c) == 0x000498, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3c' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3c_add) == 0x0004A0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3c_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3d) == 0x0004A8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3d' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3d_add) == 0x0004B0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3d_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3e) == 0x0004B8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3e' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_3e_add) == 0x0004C0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_3e_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4a) == 0x0004C8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4a' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4a_add) == 0x0004D0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4a_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4b) == 0x0004D8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4b' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4b_add) == 0x0004E0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4b_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4d) == 0x0004E8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4d' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4d_add) == 0x0004F0, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4d_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4e) == 0x0004F8, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4e' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_4e_add) == 0x000500, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_4e_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Neon_5_add) == 0x000508, "Member 'UWB_ui_SasLink_slot_parts_1_C::Neon_5_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Overlay_0) == 0x000510, "Member 'UWB_ui_SasLink_slot_parts_1_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Base_1) == 0x000518, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Base_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Base_2) == 0x000520, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Base_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Base_1a) == 0x000528, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Base_1a' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Base_2a) == 0x000530, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Base_2a' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Select_L) == 0x000538, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Select_L' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Sas_Frame_Select_R) == 0x000540, "Member 'UWB_ui_SasLink_slot_parts_1_C::Sas_Frame_Select_R' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Text_saslink_charaname_2) == 0x000548, "Member 'UWB_ui_SasLink_slot_parts_1_C::Text_saslink_charaname_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, Text_saslink_slot_id_1) == 0x000550, "Member 'UWB_ui_SasLink_slot_parts_1_C::Text_saslink_slot_id_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_0) == 0x000558, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_0' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_1) == 0x000560, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_2) == 0x000568, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_2' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_3) == 0x000570, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_3' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_4) == 0x000578, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_4' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_5) == 0x000580, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_5' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_6) == 0x000588, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_6' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, WB_ui_SasLink_slot_parts_2_7) == 0x000590, "Member 'UWB_ui_SasLink_slot_parts_1_C::WB_ui_SasLink_slot_parts_2_7' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, IconList) == 0x000598, "Member 'UWB_ui_SasLink_slot_parts_1_C::IconList' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, ImageNeonList) == 0x0005A8, "Member 'UWB_ui_SasLink_slot_parts_1_C::ImageNeonList' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, ImageNeonAddList) == 0x0005B8, "Member 'UWB_ui_SasLink_slot_parts_1_C::ImageNeonAddList' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, AnimIndex) == 0x0005C8, "Member 'UWB_ui_SasLink_slot_parts_1_C::AnimIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, CursorDir) == 0x0005CC, "Member 'UWB_ui_SasLink_slot_parts_1_C::CursorDir' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, CursorPage) == 0x0005D0, "Member 'UWB_ui_SasLink_slot_parts_1_C::CursorPage' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, DualFlag) == 0x0005D4, "Member 'UWB_ui_SasLink_slot_parts_1_C::DualFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, DecideFlag) == 0x0005D5, "Member 'UWB_ui_SasLink_slot_parts_1_C::DecideFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, LockFlag) == 0x0005D6, "Member 'UWB_ui_SasLink_slot_parts_1_C::LockFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, MoveCursorFlag) == 0x0005D7, "Member 'UWB_ui_SasLink_slot_parts_1_C::MoveCursorFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, EnableInputFlag) == 0x0005D8, "Member 'UWB_ui_SasLink_slot_parts_1_C::EnableInputFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, SasButtonList) == 0x0005E0, "Member 'UWB_ui_SasLink_slot_parts_1_C::SasButtonList' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, MouseDecideFlag) == 0x0005F0, "Member 'UWB_ui_SasLink_slot_parts_1_C::MouseDecideFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, EnableFlag) == 0x0005F1, "Member 'UWB_ui_SasLink_slot_parts_1_C::EnableFlag' has a wrong offset!");
static_assert(offsetof(UWB_ui_SasLink_slot_parts_1_C, MoveMouseCursorFlag) == 0x0005F2, "Member 'UWB_ui_SasLink_slot_parts_1_C::MoveMouseCursorFlag' has a wrong offset!");

}

