#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateCaptureMapGimmick

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateCaptureMapGimmick.BP_PlayerActionStateCaptureMapGimmick_C
// 0x0040 (0x0128 - 0x00E8)
class UBP_PlayerActionStateCaptureMapGimmick_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerActionStateCaptureMapGimmick_C; // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ARsBattleHero_C*                        OwnerHero;                                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Step;                                              // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCaptureAnimPattern                     AnimPattern;                                       // 0x00FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45CC[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LoopMontage;                                       // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ExecMontage;                                       // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapGimmickObject*                      MapGimmick;                                        // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ClaimantName;                                      // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExecutedMapGimmick;                              // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsCaptureCancel;                                   // 0x0121(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECharacterHitPriority                         StoreCharacterHitPriority;                         // 0x0122(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayVibrationFlag;                                // 0x0123(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_PlayerActionStateCaptureMapGimmick(int32 EntryPoint);
	void UnbindExecMapGimmickEvent();
	void BindExecMapGimmickEvent();
	void ReceiveBeginPlay();
	int32 Enter(int32 Param);
	int32 Exit(int32 NextStateIndex);
	int32 Update();
	bool Transition();
	void OnExecMapGimmickEvent(class AMapGimmickObject* Param_MapGimmick);
	void PlayVibration();
	void StopVibration();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateCaptureMapGimmick_C">();
	}
	static class UBP_PlayerActionStateCaptureMapGimmick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateCaptureMapGimmick_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateCaptureMapGimmick_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateCaptureMapGimmick_C");
static_assert(sizeof(UBP_PlayerActionStateCaptureMapGimmick_C) == 0x000128, "Wrong size on UBP_PlayerActionStateCaptureMapGimmick_C");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, UberGraphFrame_BP_PlayerActionStateCaptureMapGimmick_C) == 0x0000E8, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::UberGraphFrame_BP_PlayerActionStateCaptureMapGimmick_C' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, OwnerHero) == 0x0000F0, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::OwnerHero' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, Step) == 0x0000F8, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::Step' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, AnimPattern) == 0x0000FC, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::AnimPattern' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, LoopMontage) == 0x000100, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::LoopMontage' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, ExecMontage) == 0x000108, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::ExecMontage' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, MapGimmick) == 0x000110, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::MapGimmick' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, ClaimantName) == 0x000118, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::ClaimantName' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, IsExecutedMapGimmick) == 0x000120, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::IsExecutedMapGimmick' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, IsCaptureCancel) == 0x000121, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::IsCaptureCancel' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, StoreCharacterHitPriority) == 0x000122, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::StoreCharacterHitPriority' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateCaptureMapGimmick_C, bPlayVibrationFlag) == 0x000123, "Member 'UBP_PlayerActionStateCaptureMapGimmick_C::bPlayVibrationFlag' has a wrong offset!");

}

