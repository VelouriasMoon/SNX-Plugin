#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EventUtility

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "MovieScene_structs.hpp"
#include "Engine_structs.hpp"
#include "FScenarioFlagCheckData_structs.hpp"


namespace SDK::Params
{

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckProgressID
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EventUtility_C_CheckProgressID final
{
public:
	int32                                         MinProgressID;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxProgressID;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnEnable1;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnEnable;                                      // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61DC[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61DD[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput_1;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckProgressID) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckProgressID");
static_assert(sizeof(BPFL_EventUtility_C_CheckProgressID) == 0x000060, "Wrong size on BPFL_EventUtility_C_CheckProgressID");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, MinProgressID) == 0x000000, "Member 'BPFL_EventUtility_C_CheckProgressID::MinProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, MaxProgressID) == 0x000004, "Member 'BPFL_EventUtility_C_CheckProgressID::MaxProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_CheckProgressID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, ReturnEnable1) == 0x000010, "Member 'BPFL_EventUtility_C_CheckProgressID::ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, ReturnEnable) == 0x000011, "Member 'BPFL_EventUtility_C_CheckProgressID::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetEventManager_EventManager_1) == 0x000020, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetProgressID_self_CastInput) == 0x000028, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetProgressID_ProgressID) == 0x000038, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetProgressID_self_CastInput_1) == 0x000040, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetProgressID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GetProgressID_ProgressID_1) == 0x000050, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GetProgressID_ProgressID_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000054, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_IsValid_ReturnValue) == 0x000055, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_IsValid_ReturnValue_1) == 0x000056, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000057, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckProgressID, CallFunc_InRange_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_CheckProgressID::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckScenarioFlagList
// 0x0058 (0x0058 - 0x0000)
struct BPFL_EventUtility_C_CheckScenarioFlagList final
{
public:
	TArray<struct FFScenarioFlagCheckData>        ScenarioFlagList;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnBool;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnEnable;                                      // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61DE[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61DF[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFScenarioFlagCheckData                CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E0[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E1[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckScenarioFlagList) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckScenarioFlagList");
static_assert(sizeof(BPFL_EventUtility_C_CheckScenarioFlagList) == 0x000058, "Wrong size on BPFL_EventUtility_C_CheckScenarioFlagList");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, ScenarioFlagList) == 0x000000, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::ScenarioFlagList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, __WorldContext) == 0x000010, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, ReturnBool) == 0x000018, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::ReturnBool' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, ReturnEnable) == 0x000019, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000044, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000045, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, K2Node_SwitchEnum_CmpSuccess) == 0x000046, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagList, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BPFL_EventUtility_C_CheckScenarioFlagList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetCharaAnimInstance
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EventUtility_C_GetCharaAnimInstance final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ChataAnimInstancePath;                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetAnimBPGeneratedClassFromPath_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetCharaAnimInstance) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetCharaAnimInstance");
static_assert(sizeof(BPFL_EventUtility_C_GetCharaAnimInstance) == 0x000060, "Wrong size on BPFL_EventUtility_C_GetCharaAnimInstance");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, Object) == 0x000000, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::Object' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, ReturnValue) == 0x000010, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, ChataAnimInstancePath) == 0x000018, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::ChataAnimInstancePath' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, CallFunc_RightChop_ReturnValue) == 0x000038, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, CallFunc_Replace_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaAnimInstance, CallFunc_GetAnimBPGeneratedClassFromPath_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_GetCharaAnimInstance::CallFunc_GetAnimBPGeneratedClassFromPath_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetCharaFaceAnimMontage
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EventUtility_C_GetCharaFaceAnimMontage final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CharaFaceAnimPath;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimationAsset*                        CallFunc_GetAnimSequenceFromPath_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetCharaFaceAnimMontage) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetCharaFaceAnimMontage");
static_assert(sizeof(BPFL_EventUtility_C_GetCharaFaceAnimMontage) == 0x000060, "Wrong size on BPFL_EventUtility_C_GetCharaFaceAnimMontage");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, Object) == 0x000000, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::Object' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, ReturnValue) == 0x000010, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, CharaFaceAnimPath) == 0x000018, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::CharaFaceAnimPath' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, CallFunc_RightChop_ReturnValue) == 0x000038, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, CallFunc_Replace_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaFaceAnimMontage, CallFunc_GetAnimSequenceFromPath_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_GetCharaFaceAnimMontage::CallFunc_GetAnimSequenceFromPath_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetCharaBodyAnimMontage
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EventUtility_C_GetCharaBodyAnimMontage final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CharaBodyAnimPath;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_RightChop_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UAnimationAsset*                        CallFunc_GetAnimSequenceFromPath_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetCharaBodyAnimMontage) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetCharaBodyAnimMontage");
static_assert(sizeof(BPFL_EventUtility_C_GetCharaBodyAnimMontage) == 0x000060, "Wrong size on BPFL_EventUtility_C_GetCharaBodyAnimMontage");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, Object) == 0x000000, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::Object' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, ReturnValue) == 0x000010, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, CharaBodyAnimPath) == 0x000018, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::CharaBodyAnimPath' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, CallFunc_GetObjectName_ReturnValue) == 0x000028, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, CallFunc_RightChop_ReturnValue) == 0x000038, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::CallFunc_RightChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, CallFunc_Replace_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetCharaBodyAnimMontage, CallFunc_GetAnimSequenceFromPath_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_GetCharaBodyAnimMontage::CallFunc_GetAnimSequenceFromPath_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckScenarioFlag
// 0x0028 (0x0028 - 0x0000)
struct BPFL_EventUtility_C_CheckScenarioFlag final
{
public:
	class FName                                   ScenarioFlag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlagValue;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnEnable;                                      // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E2[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckScenarioFlag) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckScenarioFlag");
static_assert(sizeof(BPFL_EventUtility_C_CheckScenarioFlag) == 0x000028, "Wrong size on BPFL_EventUtility_C_CheckScenarioFlag");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, ScenarioFlag) == 0x000000, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::ScenarioFlag' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, FlagValue) == 0x000010, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::FlagValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, ReturnEnable) == 0x000011, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, CallFunc_GetSceneManager_SceneManager) == 0x000018, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlag, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000020, "Member 'BPFL_EventUtility_C_CheckScenarioFlag::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetScenarioFlag
// 0x0028 (0x0028 - 0x0000)
struct BPFL_EventUtility_C_SetScenarioFlag final
{
public:
	class FName                                   ScenarioFlag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnEnable;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_SetScenarioFlag) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetScenarioFlag");
static_assert(sizeof(BPFL_EventUtility_C_SetScenarioFlag) == 0x000028, "Wrong size on BPFL_EventUtility_C_SetScenarioFlag");
static_assert(offsetof(BPFL_EventUtility_C_SetScenarioFlag, ScenarioFlag) == 0x000000, "Member 'BPFL_EventUtility_C_SetScenarioFlag::ScenarioFlag' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetScenarioFlag, Value) == 0x000008, "Member 'BPFL_EventUtility_C_SetScenarioFlag::Value' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetScenarioFlag, __WorldContext) == 0x000010, "Member 'BPFL_EventUtility_C_SetScenarioFlag::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetScenarioFlag, ReturnEnable) == 0x000018, "Member 'BPFL_EventUtility_C_SetScenarioFlag::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetScenarioFlag, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BPFL_EventUtility_C_SetScenarioFlag::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckScenarioFlagListC
// 0x0058 (0x0058 - 0x0000)
struct BPFL_EventUtility_C_CheckScenarioFlagListC final
{
public:
	TArray<struct FShowDestinationFlgCheck>       ScenarioFlagList;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnBool;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnEnable;                                      // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E5[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E6[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FShowDestinationFlgCheck               CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E7[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E8[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckScenarioFlagListC) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckScenarioFlagListC");
static_assert(sizeof(BPFL_EventUtility_C_CheckScenarioFlagListC) == 0x000058, "Wrong size on BPFL_EventUtility_C_CheckScenarioFlagListC");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, ScenarioFlagList) == 0x000000, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::ScenarioFlagList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, __WorldContext) == 0x000010, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, ReturnBool) == 0x000018, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::ReturnBool' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, ReturnEnable) == 0x000019, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Array_Get_Item) == 0x000030, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000044, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000045, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, K2Node_SwitchEnum_CmpSuccess) == 0x000046, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckScenarioFlagListC, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'BPFL_EventUtility_C_CheckScenarioFlagListC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetEventAttachedMesh
// 0x0060 (0x0060 - 0x0000)
struct BPFL_EventUtility_C_GetEventAttachedMesh final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComp;                                  // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComp;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ParentActor;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetEventMesh_Player;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventMesh_MenuPlayer;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventMesh_SkeletalMeshComp;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventMesh_PrimitiveComp;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetEventAttachedMesh) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetEventAttachedMesh");
static_assert(sizeof(BPFL_EventUtility_C_GetEventAttachedMesh) == 0x000060, "Wrong size on BPFL_EventUtility_C_GetEventAttachedMesh");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, Actor) == 0x000000, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, Player) == 0x000010, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, MenuPlayer) == 0x000018, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, SkeletalMeshComp) == 0x000020, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, PrimitiveComp) == 0x000028, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, ParentActor) == 0x000030, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::ParentActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, CallFunc_GetEventMesh_Player) == 0x000038, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::CallFunc_GetEventMesh_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, CallFunc_GetEventMesh_MenuPlayer) == 0x000040, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::CallFunc_GetEventMesh_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, CallFunc_GetEventMesh_SkeletalMeshComp) == 0x000048, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::CallFunc_GetEventMesh_SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, CallFunc_GetEventMesh_PrimitiveComp) == 0x000050, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::CallFunc_GetEventMesh_PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMesh, CallFunc_GetAttachParentActor_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_GetEventAttachedMesh::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetSequenceObjectBindingIDPlayer
// 0x0200 (0x0200 - 0x0000)
struct BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   PlayerId;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FName>                           ObjTags;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          AllowSuffixNo;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61E9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     BindingIds;                                        // 0x0040(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61EA[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61EB[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           K2Node_Select_Default;                             // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0178(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0188(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0198(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B0(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array_5;                          // 0x01C8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs; // 0x01D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDInternal_IsFind; // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61EC[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDInternal_BindingNames; // 0x01F0(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer");
static_assert(sizeof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer) == 0x000200, "Wrong size on BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, Sequencer) == 0x000000, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::Sequencer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, PlayerId) == 0x000008, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::PlayerId' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, ObjTags) == 0x000020, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::ObjTags' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, AllowSuffixNo) == 0x000030, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::AllowSuffixNo' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, __WorldContext) == 0x000038, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, BindingIds) == 0x000040, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::BindingIds' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, IsFind) == 0x000050, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::IsFind' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array) == 0x000058, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array_1) == 0x000068, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, Temp_bool_Variable) == 0x000078, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array_2) == 0x0000C0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_Select_Default) == 0x0000D0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array_3) == 0x000178, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array_4) == 0x000188, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_Format_ReturnValue_1) == 0x000198, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_Format_ReturnValue_2) == 0x0001B0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, K2Node_MakeArray_Array_5) == 0x0001C8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs) == 0x0001D8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_GetSequenceObjectBindingIDInternal_IsFind) == 0x0001E8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_GetSequenceObjectBindingIDInternal_IsFind' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer, CallFunc_GetSequenceObjectBindingIDInternal_BindingNames) == 0x0001F0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDPlayer::CallFunc_GetSequenceObjectBindingIDInternal_BindingNames' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetSequenceObjectBindingIDWeapon
// 0x0208 (0x0208 - 0x0000)
struct BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   WeaponId;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<class FName>                           ObjTags;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          AllowSuffixNo;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61ED[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     BindingIds;                                        // 0x0040(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61EE[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BindingNames;                                      // 0x0058(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	class FString                                 MatchText;                                         // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     RetBindingList;                                    // 0x0078(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSequencerWeaponSuffixNoList_List;      // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0138(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01B8(0x0018)()
	TArray<class FText>                           K2Node_MakeArray_Array_3;                          // 0x01D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs; // 0x01E0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDInternal_IsFind; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61EF[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDInternal_BindingNames; // 0x01F8(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon");
static_assert(sizeof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon) == 0x000208, "Wrong size on BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, Sequencer) == 0x000000, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::Sequencer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, WeaponId) == 0x000008, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::WeaponId' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, ObjTags) == 0x000020, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::ObjTags' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, AllowSuffixNo) == 0x000030, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::AllowSuffixNo' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, __WorldContext) == 0x000038, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, BindingIds) == 0x000040, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::BindingIds' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, IsFind) == 0x000050, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::IsFind' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, BindingNames) == 0x000058, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::BindingNames' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, MatchText) == 0x000068, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::MatchText' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, RetBindingList) == 0x000078, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::RetBindingList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_GetSequencerWeaponSuffixNoList_List) == 0x000088, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_GetSequencerWeaponSuffixNoList_List' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeArray_Array) == 0x000118, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_Format_ReturnValue) == 0x000138, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_Format_ReturnValue_1) == 0x000150, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeArray_Array_2) == 0x0001A8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_Format_ReturnValue_2) == 0x0001B8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, K2Node_MakeArray_Array_3) == 0x0001D0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs) == 0x0001E0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_GetSequenceObjectBindingIDInternal_BindingIDs' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_GetSequenceObjectBindingIDInternal_IsFind) == 0x0001F0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_GetSequenceObjectBindingIDInternal_IsFind' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon, CallFunc_GetSequenceObjectBindingIDInternal_BindingNames) == 0x0001F8, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDWeapon::CallFunc_GetSequenceObjectBindingIDInternal_BindingNames' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetSequenceObjectBindingIDInternal
// 0x00E8 (0x00E8 - 0x0000)
struct BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal final
{
public:
	class ARSLevelSequenceActor*                  Sequencer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           PerfectMatch;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FName>                           ObjTags;                                           // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class FText>                           SuffixList;                                        // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     BindingIds;                                        // 0x0040(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsFind;                                            // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F0[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BindingNames;                                      // 0x0058(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class FString>                         RetBindingMatchName;                               // 0x0068(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FString                                 ObjectText;                                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   MatchTextText;                                     // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FString                                 MatchText;                                         // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     RetBindingList;                                    // 0x00B0(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FMovieSceneObjectBindingID>     CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchBindingIDList; // 0x00C0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchNameList; // 0x00D0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_IsFind; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal");
static_assert(sizeof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal) == 0x0000E8, "Wrong size on BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, Sequencer) == 0x000000, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::Sequencer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, PerfectMatch) == 0x000008, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::PerfectMatch' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, ObjTags) == 0x000018, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::ObjTags' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, SuffixList) == 0x000028, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::SuffixList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, __WorldContext) == 0x000038, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, BindingIds) == 0x000040, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::BindingIds' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, IsFind) == 0x000050, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::IsFind' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, BindingNames) == 0x000058, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::BindingNames' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, RetBindingMatchName) == 0x000068, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::RetBindingMatchName' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, ObjectText) == 0x000078, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::ObjectText' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, MatchTextText) == 0x000088, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::MatchTextText' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, MatchText) == 0x0000A0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::MatchText' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, RetBindingList) == 0x0000B0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::RetBindingList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchBindingIDList) == 0x0000C0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchBindingIDList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchNameList) == 0x0000D0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_OutMatchNameList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal, CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_IsFind) == 0x0000E0, "Member 'BPFL_EventUtility_C_GetSequenceObjectBindingIDInternal::CallFunc_GetSequenceObjectBindingIDListFromClassAndMatchTexts_IsFind' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckBondsProgressID
// 0x0040 (0x0040 - 0x0000)
struct BPFL_EventUtility_C_CheckBondsProgressID final
{
public:
	int32                                         MinBondsProgressID;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBondsProgressID;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     HeroID;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     PartnerId;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61F1[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnEnable1;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LocalBondsProgress;                                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnEnable;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F4[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBondsProgress_ReturnValue;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckBondsProgressID) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckBondsProgressID");
static_assert(sizeof(BPFL_EventUtility_C_CheckBondsProgressID) == 0x000040, "Wrong size on BPFL_EventUtility_C_CheckBondsProgressID");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, MinBondsProgressID) == 0x000000, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::MinBondsProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, MaxBondsProgressID) == 0x000004, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::MaxBondsProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, HeroID) == 0x000008, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::HeroID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, PartnerId) == 0x000009, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::PartnerId' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, __WorldContext) == 0x000010, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, ReturnEnable1) == 0x000018, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, LocalBondsProgress) == 0x00001C, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::LocalBondsProgress' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, ReturnEnable) == 0x000020, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::ReturnEnable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_GetUserParamManager_UserParamManager) == 0x000028, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_GetBondsProgress_ReturnValue) == 0x000034, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_GetBondsProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckBondsProgressID, CallFunc_InRange_IntInt_ReturnValue) == 0x000039, "Member 'BPFL_EventUtility_C_CheckBondsProgressID::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetFrameParticleMIDArray
// 0x0080 (0x0080 - 0x0000)
struct BPFL_EventUtility_C_SetFrameParticleMIDArray final
{
public:
	class URSParticleSystemComponentBase*         ParticleComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       MIDArray;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetNamedMaterial_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetNamedMaterial_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_1; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F5[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetNamedMaterial_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetNamedMaterial_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_2; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_3; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_SetFrameParticleMIDArray) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetFrameParticleMIDArray");
static_assert(sizeof(BPFL_EventUtility_C_SetFrameParticleMIDArray) == 0x000080, "Wrong size on BPFL_EventUtility_C_SetFrameParticleMIDArray");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, ParticleComponent) == 0x000000, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::ParticleComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, MIDArray) == 0x000008, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::MIDArray' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, __WorldContext) == 0x000018, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_GetNamedMaterial_ReturnValue) == 0x000020, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_GetNamedMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_GetNamedMaterial_ReturnValue_1) == 0x000028, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_GetNamedMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_1) == 0x000038, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_Array_Add_ReturnValue_1) == 0x000044, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_GetNamedMaterial_ReturnValue_2) == 0x000050, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_GetNamedMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_GetNamedMaterial_ReturnValue_3) == 0x000058, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_GetNamedMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_2) == 0x000060, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_3) == 0x000068, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_CreateNamedDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_Array_Add_ReturnValue_2) == 0x000070, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_Array_Add_ReturnValue_3) == 0x000074, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_IsValid_ReturnValue_3) == 0x000079, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetFrameParticleMIDArray, CallFunc_IsValid_ReturnValue_4) == 0x00007A, "Member 'BPFL_EventUtility_C_SetFrameParticleMIDArray::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetupCutSceneActorHideDither
// 0x01E8 (0x01E8 - 0x0000)
struct BPFL_EventUtility_C_SetupCutSceneActorHideDither final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DitherStart;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NowTime;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTime;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          TargetPlayer;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetEnemy;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetPsychicObject;                               // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetDeadEnpc;                                    // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TargetSavePoint;                                   // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdatedTime;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61F8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANpcShopBase*                           Shop;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASavePointBase*                         SavePoint;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       Character;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               EnemyList;                                         // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallEvent;                                         // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61F9[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PreviousHideDitherTime;                            // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HideDitherTime;                                    // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Update;                                            // 0x007C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61FA[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideDitherStart;                                   // 0x0084(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61FB[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61FC[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61FD[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61FE[0x3];                                     // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61FF[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyPlayer_bEnemyPlayer;               // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6200[0x5];                                     // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6201[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleEnemy_C*                       K2Node_DynamicCast_AsRSBattle_Enemy;               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6202[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnemyInterface_C> CallFunc_GetEnemySpawn_self_CastInput;             // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetEnemySpawn_return;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6203[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6204[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEnemyManager*                          CallFunc_GetEnemyManager_EnemyManager;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6205[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0150(0x0010)(ReferenceParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0160(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterDead_ReturnValue;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6206[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6207[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventManagerInterface> K2Node_DynamicCast_AsEvent_Manager_Interface;      // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6208[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventManagerInterface> K2Node_DynamicCast_AsEvent_Manager_Interface_1;    // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventManagerEnd_ReturnValue;              // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventManagerStart_ReturnValue;            // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6209[0x1];                                     // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620A[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620B[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620C[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x01E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_SetupCutSceneActorHideDither) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetupCutSceneActorHideDither");
static_assert(sizeof(BPFL_EventUtility_C_SetupCutSceneActorHideDither) == 0x0001E8, "Wrong size on BPFL_EventUtility_C_SetupCutSceneActorHideDither");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, DeltaSeconds) == 0x000000, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, DitherStart) == 0x000004, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::DitherStart' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, NowTime) == 0x000008, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::NowTime' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, MaxTime) == 0x00000C, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::MaxTime' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, IgnoreActors) == 0x000010, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::IgnoreActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, TargetPlayer) == 0x000020, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, TargetEnemy) == 0x000021, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::TargetEnemy' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, TargetPsychicObject) == 0x000022, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::TargetPsychicObject' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, TargetDeadEnpc) == 0x000023, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::TargetDeadEnpc' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, TargetSavePoint) == 0x000024, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::TargetSavePoint' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, __WorldContext) == 0x000028, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, UpdatedTime) == 0x000030, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::UpdatedTime' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Shop) == 0x000038, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Shop' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, SavePoint) == 0x000040, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::SavePoint' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Character) == 0x000048, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Character' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, PlayerList) == 0x000050, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::PlayerList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, EnemyList) == 0x000060, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::EnemyList' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallEvent) == 0x000070, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallEvent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, PreviousHideDitherTime) == 0x000074, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::PreviousHideDitherTime' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, HideDitherTime) == 0x000078, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::HideDitherTime' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Update) == 0x00007C, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Update' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Rate) == 0x000080, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Rate' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, HideDitherStart) == 0x000084, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::HideDitherStart' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Num_Variable) == 0x000088, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetAllActorsOfClass_OutActors) == 0x000090, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Num_Variable_1) == 0x0000B0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Num_Variable_2) == 0x0000C8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Array_Index_Variable_2) == 0x0000CC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Not_PreBool_ReturnValue) == 0x0000D0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x0000D8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsEnemyPlayer_bEnemyPlayer) == 0x0000EA, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsEnemyPlayer_bEnemyPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000F0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_AsRSBattle_Enemy) == 0x000100, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_AsRSBattle_Enemy' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetEnemySpawn_self_CastInput) == 0x000110, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetEnemySpawn_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetEnemySpawn_return) == 0x000120, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetEnemySpawn_return' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Array_Contains_ReturnValue) == 0x000121, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000128, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetPlayerManager_PlayerManager) == 0x000138, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetEnemyManager_EnemyManager) == 0x000140, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetEnemyManager_EnemyManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue_2) == 0x000148, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue_3) == 0x000149, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetEnemyList_ReturnValue) == 0x000150, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GetPlayerList_ReturnValue) == 0x000160, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue_4) == 0x000170, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsCharacterDead_ReturnValue) == 0x000171, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsCharacterDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Array_Length_ReturnValue_1) == 0x000174, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Array_Length_ReturnValue_2) == 0x000178, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_AsEvent_Manager_Interface) == 0x000180, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_AsEvent_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_AsEvent_Manager_Interface_1) == 0x000198, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_AsEvent_Manager_Interface_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_EventManagerEnd_ReturnValue) == 0x0001A9, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_EventManagerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_EventManagerStart_ReturnValue) == 0x0001AA, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_EventManagerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, Temp_int_Loop_Counter_Variable_2) == 0x0001AC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_FMax_ReturnValue) == 0x0001B8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001BC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001C0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001C4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_FClamp_ReturnValue) == 0x0001C8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0001CC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0001D0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001D4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_FMax_ReturnValue_1) == 0x0001D8, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_FMin_ReturnValue) == 0x0001DC, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001E0, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001E1, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0001E2, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0001E3, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_BooleanAND_ReturnValue) == 0x0001E4, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_BooleanAND_ReturnValue_1) == 0x0001E5, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupCutSceneActorHideDither, CallFunc_IsValid_ReturnValue_5) == 0x0001E6, "Member 'BPFL_EventUtility_C_SetupCutSceneActorHideDither::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetupSequencerTimeDilationCounter
// 0x0018 (0x0018 - 0x0000)
struct BPFL_EventUtility_C_SetupSequencerTimeDilationCounter final
{
public:
	class ALevelSequenceActor*                    LevelSequenceActor;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetupSequencerTimeDilationCounter");
static_assert(sizeof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter) == 0x000018, "Wrong size on BPFL_EventUtility_C_SetupSequencerTimeDilationCounter");
static_assert(offsetof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter, LevelSequenceActor) == 0x000000, "Member 'BPFL_EventUtility_C_SetupSequencerTimeDilationCounter::LevelSequenceActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_SetupSequencerTimeDilationCounter::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000010, "Member 'BPFL_EventUtility_C_SetupSequencerTimeDilationCounter::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupSequencerTimeDilationCounter, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'BPFL_EventUtility_C_SetupSequencerTimeDilationCounter::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetEventMesh
// 0x0098 (0x0098 - 0x0000)
struct BPFL_EventUtility_C_GetEventMesh final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComp;                                  // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComp;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   MenuPlayerActor;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      BattlePlayer;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ParentActor;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     K2Node_DynamicCast_AsSkeletal_Mesh_Actor;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620D[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620E[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_GetEventMesh) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetEventMesh");
static_assert(sizeof(BPFL_EventUtility_C_GetEventMesh) == 0x000098, "Wrong size on BPFL_EventUtility_C_GetEventMesh");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, Actor) == 0x000000, "Member 'BPFL_EventUtility_C_GetEventMesh::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_GetEventMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, Player) == 0x000010, "Member 'BPFL_EventUtility_C_GetEventMesh::Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, MenuPlayer) == 0x000018, "Member 'BPFL_EventUtility_C_GetEventMesh::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, SkeletalMeshComp) == 0x000020, "Member 'BPFL_EventUtility_C_GetEventMesh::SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, PrimitiveComp) == 0x000028, "Member 'BPFL_EventUtility_C_GetEventMesh::PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, MenuPlayerActor) == 0x000030, "Member 'BPFL_EventUtility_C_GetEventMesh::MenuPlayerActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, PrimitiveComponent) == 0x000038, "Member 'BPFL_EventUtility_C_GetEventMesh::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, BattlePlayer) == 0x000040, "Member 'BPFL_EventUtility_C_GetEventMesh::BattlePlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, SkeletalMeshComponent) == 0x000048, "Member 'BPFL_EventUtility_C_GetEventMesh::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, ParentActor) == 0x000050, "Member 'BPFL_EventUtility_C_GetEventMesh::ParentActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_GetEventMesh::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000060, "Member 'BPFL_EventUtility_C_GetEventMesh::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_AsSkeletal_Mesh_Actor) == 0x000068, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_AsSkeletal_Mesh_Actor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_AsBP_Menu_Player_Base) == 0x000078, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_AsRSBattle_Player) == 0x000088, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BPFL_EventUtility_C_GetEventMesh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BPFL_EventUtility_C_GetEventMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventMesh, CallFunc_IsValid_ReturnValue_1) == 0x000092, "Member 'BPFL_EventUtility_C_GetEventMesh::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.GetEventAttachedMeshWithSub
// 0x00D0 (0x00D0 - 0x0000)
struct BPFL_EventUtility_C_GetEventAttachedMeshWithSub final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SubAttachParentActors;                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   MenuPlayer;                                        // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMeshComp;                                  // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComp;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   RetMenuPlayer;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    RetPrimitiveComp;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 RetSkeletalMeshComp;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      RetPlayer;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_620F[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6210[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6211[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetEventMesh_Player;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventMesh_MenuPlayer;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventMesh_SkeletalMeshComp;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventMesh_PrimitiveComp;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6212[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetEventAttachedMesh_Player;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   CallFunc_GetEventAttachedMesh_MenuPlayer;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetEventAttachedMesh_SkeletalMeshComp;    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetEventAttachedMesh_PrimitiveComp;       // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_GetEventAttachedMeshWithSub");
static_assert(sizeof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub) == 0x0000D0, "Wrong size on BPFL_EventUtility_C_GetEventAttachedMeshWithSub");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, SelfActor) == 0x000000, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::SelfActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, SubAttachParentActors) == 0x000008, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::SubAttachParentActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, __WorldContext) == 0x000018, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, Player) == 0x000020, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, MenuPlayer) == 0x000028, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, SkeletalMeshComp) == 0x000030, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, PrimitiveComp) == 0x000038, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, RetMenuPlayer) == 0x000040, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::RetMenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, RetPrimitiveComp) == 0x000048, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::RetPrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, RetSkeletalMeshComp) == 0x000050, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::RetSkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, RetPlayer) == 0x000058, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::RetPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_2) == 0x000062, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_3) == 0x000063, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_4) == 0x000068, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, Temp_bool_True_if_break_was_hit_Variable) == 0x000070, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, Temp_int_Loop_Num_Variable) == 0x00007C, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_5) == 0x000082, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_6) == 0x000083, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventMesh_Player) == 0x000088, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventMesh_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventMesh_MenuPlayer) == 0x000090, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventMesh_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventMesh_SkeletalMeshComp) == 0x000098, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventMesh_SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventMesh_PrimitiveComp) == 0x0000A0, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventMesh_PrimitiveComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_IsValid_ReturnValue_7) == 0x0000A8, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventAttachedMesh_Player) == 0x0000B0, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventAttachedMesh_Player' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventAttachedMesh_MenuPlayer) == 0x0000B8, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventAttachedMesh_MenuPlayer' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventAttachedMesh_SkeletalMeshComp) == 0x0000C0, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventAttachedMesh_SkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_GetEventAttachedMeshWithSub, CallFunc_GetEventAttachedMesh_PrimitiveComp) == 0x0000C8, "Member 'BPFL_EventUtility_C_GetEventAttachedMeshWithSub::CallFunc_GetEventAttachedMesh_PrimitiveComp' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetupAttachParentWithSub
// 0x00A0 (0x00A0 - 0x0000)
struct BPFL_EventUtility_C_SetupAttachParentWithSub final
{
public:
	class AActor*                                 SelfActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SubAttachParentActors;                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Parent;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 RetParent;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6213[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6214[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6215[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6216[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetSkeletalMeshFromActor_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuPlayerBase_C*                   K2Node_DynamicCast_AsBP_Menu_Player_Base;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6217[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6218[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6219[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_SetupAttachParentWithSub) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetupAttachParentWithSub");
static_assert(sizeof(BPFL_EventUtility_C_SetupAttachParentWithSub) == 0x0000A0, "Wrong size on BPFL_EventUtility_C_SetupAttachParentWithSub");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, SelfActor) == 0x000000, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::SelfActor' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, SubAttachParentActors) == 0x000008, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::SubAttachParentActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, SocketName) == 0x000018, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::SocketName' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, __WorldContext) == 0x000020, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, Parent) == 0x000028, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::Parent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, SkelMeshComp) == 0x000030, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::SkelMeshComp' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, RetParent) == 0x000038, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::RetParent' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, Temp_bool_True_if_break_was_hit_Variable) == 0x000040, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, Temp_int_Loop_Num_Variable) == 0x00004C, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_GetSkeletalMeshFromActor_ReturnValue) == 0x000060, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_GetSkeletalMeshFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, K2Node_DynamicCast_AsBP_Menu_Player_Base) == 0x000068, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::K2Node_DynamicCast_AsBP_Menu_Player_Base' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, K2Node_DynamicCast_AsRSBattle_Character) == 0x000078, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_GetAttachParentActor_ReturnValue) == 0x000090, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupAttachParentWithSub, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'BPFL_EventUtility_C_SetupAttachParentWithSub::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.Check Mesh Wire Visible
// 0x0078 (0x0078 - 0x0000)
struct BPFL_EventUtility_C_Check_Mesh_Wire_Visible final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWireVisible;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621B[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Mid_ReturnValue_1;                        // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_Check_Mesh_Wire_Visible");
static_assert(sizeof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible) == 0x000078, "Wrong size on BPFL_EventUtility_C_Check_Mesh_Wire_Visible");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, SkeletalMesh) == 0x000000, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, IsWireVisible) == 0x000010, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::IsWireVisible' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_GetObjectName_ReturnValue) == 0x000020, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Contains_ReturnValue) == 0x000031, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Mid_ReturnValue) == 0x000048, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Mid_ReturnValue_1) == 0x000058, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Mid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Conv_StringToInt_ReturnValue) == 0x000068, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00006C, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_BooleanAND_ReturnValue_1) == 0x00006F, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_Check_Mesh_Wire_Visible, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BPFL_EventUtility_C_Check_Mesh_Wire_Visible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.SetupPPMaskParticle
// 0x0090 (0x0090 - 0x0000)
struct BPFL_EventUtility_C_SetupPPMaskParticle final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_SequencerParticle_C*>        CustomSteniclActors;                               // 0x0010(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<int32>                                 RestoreCustomStencil;                              // 0x0020(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	class URSParticleSystemComponentBase*         Particle;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 RetRestoreCustomStencil;                           // 0x0038(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class ABP_SequencerParticle_C*>        RetCustomSteniclActors;                            // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621D[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SequencerParticle_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTranslucencyOrAdditiveMaterial_ReturnValue; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_621E[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_SetupPPMaskParticle) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_SetupPPMaskParticle");
static_assert(sizeof(BPFL_EventUtility_C_SetupPPMaskParticle) == 0x000090, "Wrong size on BPFL_EventUtility_C_SetupPPMaskParticle");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, Enable) == 0x000000, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::Enable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CustomSteniclActors) == 0x000010, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CustomSteniclActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, RestoreCustomStencil) == 0x000020, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::RestoreCustomStencil' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, Particle) == 0x000030, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::Particle' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, RetRestoreCustomStencil) == 0x000038, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::RetRestoreCustomStencil' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, RetCustomSteniclActors) == 0x000048, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::RetCustomSteniclActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, Temp_int_Loop_Num_Variable) == 0x000070, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_HasTranslucencyOrAdditiveMaterial_ReturnValue) == 0x000078, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_HasTranslucencyOrAdditiveMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_SelectInt_ReturnValue) == 0x000080, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_SetupPPMaskParticle, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BPFL_EventUtility_C_SetupPPMaskParticle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.RestorePPMaskParticle
// 0x0038 (0x0038 - 0x0000)
struct BPFL_EventUtility_C_RestorePPMaskParticle final
{
public:
	TArray<class ABP_SequencerParticle_C*>        CustomSteniclActors;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	TArray<int32>                                 RestoreCustomStencil;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CustomStencil;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621F[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         Particle;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_EventUtility_C_RestorePPMaskParticle) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_RestorePPMaskParticle");
static_assert(sizeof(BPFL_EventUtility_C_RestorePPMaskParticle) == 0x000038, "Wrong size on BPFL_EventUtility_C_RestorePPMaskParticle");
static_assert(offsetof(BPFL_EventUtility_C_RestorePPMaskParticle, CustomSteniclActors) == 0x000000, "Member 'BPFL_EventUtility_C_RestorePPMaskParticle::CustomSteniclActors' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_RestorePPMaskParticle, RestoreCustomStencil) == 0x000010, "Member 'BPFL_EventUtility_C_RestorePPMaskParticle::RestoreCustomStencil' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_RestorePPMaskParticle, __WorldContext) == 0x000020, "Member 'BPFL_EventUtility_C_RestorePPMaskParticle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_RestorePPMaskParticle, CustomStencil) == 0x000028, "Member 'BPFL_EventUtility_C_RestorePPMaskParticle::CustomStencil' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_RestorePPMaskParticle, Particle) == 0x000030, "Member 'BPFL_EventUtility_C_RestorePPMaskParticle::Particle' has a wrong offset!");

// Function BPFL_EventUtility.BPFL_EventUtility_C.CheckOverProgressID
// 0x0040 (0x0040 - 0x0000)
struct BPFL_EventUtility_C_CheckOverProgressID final
{
public:
	int32                                         ProgressId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6220[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnEnable1;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6221[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6222[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPFL_EventUtility_C_CheckOverProgressID) == 0x000008, "Wrong alignment on BPFL_EventUtility_C_CheckOverProgressID");
static_assert(sizeof(BPFL_EventUtility_C_CheckOverProgressID) == 0x000040, "Wrong size on BPFL_EventUtility_C_CheckOverProgressID");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, ProgressId) == 0x000000, "Member 'BPFL_EventUtility_C_CheckOverProgressID::ProgressId' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, __WorldContext) == 0x000008, "Member 'BPFL_EventUtility_C_CheckOverProgressID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, ReturnEnable1) == 0x000010, "Member 'BPFL_EventUtility_C_CheckOverProgressID::ReturnEnable1' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BPFL_EventUtility_C_CheckOverProgressID::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BPFL_EventUtility_C_CheckOverProgressID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, CallFunc_GetProgressID_self_CastInput) == 0x000028, "Member 'BPFL_EventUtility_C_CheckOverProgressID::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, CallFunc_GetProgressID_ProgressID) == 0x000038, "Member 'BPFL_EventUtility_C_CheckOverProgressID::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BPFL_EventUtility_C_CheckOverProgressID, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BPFL_EventUtility_C_CheckOverProgressID::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

