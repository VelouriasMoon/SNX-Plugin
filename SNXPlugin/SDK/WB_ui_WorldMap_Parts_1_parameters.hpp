#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_WorldMap_Parts_1

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.ExecuteUbergraph_WB_ui_WorldMap_Parts_1
// 0x00DC (0x00DC - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF0[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF1[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF4[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF5[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF6[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF7[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_8;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF8[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_9;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_11;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CF9[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_10;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_11;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_12;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_13;           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFA[0x2];                                     // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_12;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_13;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_14;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_15;           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFB[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_14;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_15;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_16;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFC[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_16;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_17;           // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFD[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_17;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_18;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFE[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_18;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_19;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CFF[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_19;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_20;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D00[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_State;                                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_20;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_21;           // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D01[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_21;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_22;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_23;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D02[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_22;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_23;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_24;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D03[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_24;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_25;           // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D04[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_25;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_26;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D05[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_26;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_27;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D06[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_27;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1) == 0x0000DC, "Wrong size on WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, EntryPoint) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000011, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00001C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000020, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000024, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000028, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x00002C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000030, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000034, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000038, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x00003C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x000040, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_8) == 0x000044, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x000048, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_9) == 0x00004C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_11) == 0x000050, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_10) == 0x000054, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_11) == 0x000058, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_12) == 0x00005C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_13) == 0x00005D, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_12) == 0x000060, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_13) == 0x000064, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_14) == 0x000068, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_15) == 0x000069, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_14) == 0x00006C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_15) == 0x000070, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_16) == 0x000074, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_16) == 0x000078, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_17) == 0x00007C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_17) == 0x000080, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_18) == 0x000084, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_18) == 0x000088, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_19) == 0x00008C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_19) == 0x000090, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_20) == 0x000094, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, K2Node_Event_State) == 0x000098, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, K2Node_Event_SubState) == 0x00009C, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, K2Node_Event_DeltaSeconds) == 0x0000A0, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_20) == 0x0000A4, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, K2Node_SwitchInteger_CmpSuccess) == 0x0000A8, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_21) == 0x0000A9, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_21) == 0x0000AC, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_22) == 0x0000B0, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_23) == 0x0000B1, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_22) == 0x0000B4, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_23) == 0x0000B8, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_24) == 0x0000BC, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_24) == 0x0000C0, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_25) == 0x0000C4, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_25) == 0x0000C8, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_26) == 0x0000CC, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_26) == 0x0000D0, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_MakeLiteralByte_ReturnValue_27) == 0x0000D4, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_MakeLiteralByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1, CallFunc_Conv_ByteToInt_ReturnValue_27) == 0x0000D8, "Member 'WB_ui_WorldMap_Parts_1_C_ExecuteUbergraph_WB_ui_WorldMap_Parts_1::CallFunc_Conv_ByteToInt_ReturnValue_27' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_UpdateState");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_WorldMap_Parts_1_C_UpdateState");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_UpdateState, State) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.StateNone
// 0x0018 (0x0018 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_StateNone final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D07[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D08[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_StateNone) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_StateNone");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_StateNone) == 0x000018, "Wrong size on WB_ui_WorldMap_Parts_1_C_StateNone");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, SubState) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000006, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateNone, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_StateNone::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.StateLoop
// 0x0028 (0x0028 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_StateLoop final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D09[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0A[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D0B[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_StateLoop) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_StateLoop");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_StateLoop) == 0x000028, "Wrong size on WB_ui_WorldMap_Parts_1_C_StateLoop");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, SubState) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000006, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00001C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000020, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoop, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000024, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoop::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetEnable
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetEnable final
{
public:
	bool                                          Param_IsEnable;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetEnable) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetEnable");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetEnable) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetEnable");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetEnable, Param_IsEnable) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetEnable::Param_IsEnable' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetSelect
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetSelect final
{
public:
	bool                                          Param_IsSelect;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetSelect) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetSelect");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetSelect) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetSelect");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetSelect, Param_IsSelect) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetSelect::Param_IsSelect' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetAreaText
// 0x0028 (0x0028 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetAreaText final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetAreaText) == 0x000008, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetAreaText");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetAreaText) == 0x000028, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetAreaText");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetAreaText, Text) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetAreaText::Text' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetAreaText, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_SetAreaText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetMainQuest
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetMainQuest final
{
public:
	bool                                          IsMainQuest;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetMainQuest) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetMainQuest");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetMainQuest) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetMainQuest");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetMainQuest, IsMainQuest) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetMainQuest::IsMainQuest' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetSubQuest
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetSubQuest final
{
public:
	bool                                          IsSubQuest;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetSubQuest) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetSubQuest");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetSubQuest) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetSubQuest");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetSubQuest, IsSubQuest) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetSubQuest::IsSubQuest' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetNew
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetNew final
{
public:
	bool                                          IsNew;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetNew) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetNew");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetNew) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetNew");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetNew, IsNew) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetNew::IsNew' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.Decide
// 0x0002 (0x0002 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_Decide final
{
public:
	bool                                          Param_IsLock;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Param_IsWait;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_Decide) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_Decide");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_Decide) == 0x000002, "Wrong size on WB_ui_WorldMap_Parts_1_C_Decide");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_Decide, Param_IsLock) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_Decide::Param_IsLock' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_Decide, Param_IsWait) == 0x000001, "Member 'WB_ui_WorldMap_Parts_1_C_Decide::Param_IsWait' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.StateLoopSelect
// 0x005C (0x005C - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_StateLoopSelect final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D0D[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0E[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D0F[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D10[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D11[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_2;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D12[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D13[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D14[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_8;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_9;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_10;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_11;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_3;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D15[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_11;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_StateLoopSelect");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect) == 0x00005C, "Wrong size on WB_ui_WorldMap_Parts_1_C_StateLoopSelect");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, SubState) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00000D, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000015, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Not_PreBool_ReturnValue_1) == 0x000016, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x00001C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x00001D, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000020, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_1) == 0x000024, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000025, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000028, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_2) == 0x00002C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x00002D, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x000030, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000034, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000035, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000038, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x00003C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000040, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_8) == 0x000044, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Not_PreBool_ReturnValue_2) == 0x000048, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000049, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x00004A, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x00004B, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_9) == 0x00004C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_10) == 0x000050, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_MakeLiteralByte_ReturnValue_11) == 0x000054, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_MakeLiteralByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_3) == 0x000055, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopSelect, CallFunc_Conv_ByteToInt_ReturnValue_11) == 0x000058, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopSelect::CallFunc_Conv_ByteToInt_ReturnValue_11' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.IsDecideAnimation
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_IsDecideAnimation final
{
public:
	bool                                          Param_IsDecide;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_IsDecideAnimation) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_IsDecideAnimation");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_IsDecideAnimation) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_IsDecideAnimation");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_IsDecideAnimation, Param_IsDecide) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_IsDecideAnimation::Param_IsDecide' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetCurrentArea
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetCurrentArea final
{
public:
	bool                                          Param_IsCurrent;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetCurrentArea) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetCurrentArea");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetCurrentArea) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetCurrentArea");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetCurrentArea, Param_IsCurrent) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetCurrentArea::Param_IsCurrent' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetCurrentFontColor
// 0x0028 (0x0028 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor final
{
public:
	int32                                         _Work;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D16[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 _IndexList;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor) == 0x000008, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor) == 0x000028, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor, _Work) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor::_Work' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor, _IndexList) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor::_IndexList' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_SetCurrentFontColor::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.StateLoopCurrent
// 0x0028 (0x0028 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_StateLoopCurrent final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D17[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D18[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D19[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_StateLoopCurrent");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent) == 0x000028, "Wrong size on WB_ui_WorldMap_Parts_1_C_StateLoopCurrent");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, SubState) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000006, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000011, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000019, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00001C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000020, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrent, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000024, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrent::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.StateLoopCurrentSelect
// 0x0054 (0x0054 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect final
{
public:
	int32                                         SubState;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D1B[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1C[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_2;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_4;            // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_5;            // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_5;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_6;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1E[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_6;             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_7;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1F[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_7;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_8;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_9;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D20[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_8;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_9;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayUICurrentAnimation_isPlay_3;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_10;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D21[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_10;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect) == 0x000004, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect) == 0x000054, "Wrong size on WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, SubState) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, K2Node_SwitchInteger_CmpSuccess) == 0x000005, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000D, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00000E, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Not_PreBool_ReturnValue_2) == 0x000015, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_IsPlayUICurrentAnimation_isPlay) == 0x000016, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_IsPlayUICurrentAnimation_isPlay' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000017, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000018, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00001C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000020, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_1) == 0x000024, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_1' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_2) == 0x000025, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_2' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_4) == 0x000026, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_5) == 0x000027, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000028, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_5) == 0x00002C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_6) == 0x000030, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_6) == 0x000034, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Not_PreBool_ReturnValue_3) == 0x000038, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_7) == 0x000039, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_7) == 0x00003C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_8) == 0x000041, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_9) == 0x000042, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_8) == 0x000044, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_9) == 0x000048, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_IsPlayUICurrentAnimation_isPlay_3) == 0x00004C, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_IsPlayUICurrentAnimation_isPlay_3' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_MakeLiteralByte_ReturnValue_10) == 0x00004D, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_MakeLiteralByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect, CallFunc_Conv_ByteToInt_ReturnValue_10) == 0x000050, "Member 'WB_ui_WorldMap_Parts_1_C_StateLoopCurrentSelect::CallFunc_Conv_ByteToInt_ReturnValue_10' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetKizunaQuest
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetKizunaQuest final
{
public:
	bool                                          IsKizunaQuest;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetKizunaQuest) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetKizunaQuest");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetKizunaQuest) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetKizunaQuest");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetKizunaQuest, IsKizunaQuest) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetKizunaQuest::IsKizunaQuest' has a wrong offset!");

// Function WB_ui_WorldMap_Parts_1.WB_ui_WorldMap_Parts_1_C.SetSubQuestRequest
// 0x0001 (0x0001 - 0x0000)
struct WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest final
{
public:
	bool                                          IsSubQuestRequest;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest) == 0x000001, "Wrong alignment on WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest");
static_assert(sizeof(WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest) == 0x000001, "Wrong size on WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest");
static_assert(offsetof(WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest, IsSubQuestRequest) == 0x000000, "Member 'WB_ui_WorldMap_Parts_1_C_SetSubQuestRequest::IsSubQuestRequest' has a wrong offset!");

}

