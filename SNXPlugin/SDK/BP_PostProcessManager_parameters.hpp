#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessManager

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PostProcessManager.BP_PostProcessManager_C.ExecuteUbergraph_BP_PostProcessManager
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86AB[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlatFormType                                 CallFunc_GetPlatformType_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86AC[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86AD[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86AE[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EChangeAreaStatus Status, bool IsChangeLocation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86AF[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B0[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EChangeAreaStatus Status, bool IsChangeLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager");
static_assert(sizeof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager) == 0x0000B0, "Wrong size on BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, EntryPoint) == 0x000000, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, K2Node_Event_EndPlayReason) == 0x00000C, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_GetParticleManager_Particle_Manager) == 0x000010, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_GetPlatformType_ReturnValue) == 0x000019, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_GetPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_GetSceneManager_SceneManager) == 0x000020, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, Temp_int_Variable) == 0x00002C, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_GetSceneManager_SceneManager_1) == 0x000050, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_GetSceneManager_SceneManager_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, CallFunc_AddComponent_ReturnValue) == 0x000098, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A0, "Member 'BP_PostProcessManager_C_ExecuteUbergraph_BP_PostProcessManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessManager_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_ReceiveEndPlay");
static_assert(sizeof(BP_PostProcessManager_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PostProcessManager_C_ReceiveEndPlay");
static_assert(offsetof(BP_PostProcessManager_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PostProcessManager_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PostProcessManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_ReceiveTick");
static_assert(sizeof(BP_PostProcessManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_PostProcessManager_C_ReceiveTick");
static_assert(offsetof(BP_PostProcessManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.StartPostProcess
// 0x07B0 (0x07B0 - 0x0000)
struct BP_PostProcessManager_C_StartPostProcess final
{
public:
	struct FPostProcessSettings                   Settings;                                          // 0x0000(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         TimeSeconds;                                       // 0x0780(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Handle;                                            // 0x0784(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0794(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B1[0x3];                                     // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUnusedComponent_Index;                 // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86B2[0x4];                                     // 0x079C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x07A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_StartPostProcess) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_StartPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_StartPostProcess) == 0x0007B0, "Wrong size on BP_PostProcessManager_C_StartPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, Settings) == 0x000000, "Member 'BP_PostProcessManager_C_StartPostProcess::Settings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, TimeSeconds) == 0x000780, "Member 'BP_PostProcessManager_C_StartPostProcess::TimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, Handle) == 0x000784, "Member 'BP_PostProcessManager_C_StartPostProcess::Handle' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_Add_FloatFloat_ReturnValue) == 0x000788, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00078C, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000790, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, Temp_bool_Variable) == 0x000794, "Member 'BP_PostProcessManager_C_StartPostProcess::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_GetUnusedComponent_Index) == 0x000798, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_GetUnusedComponent_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_Array_Get_Item) == 0x0007A0, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPostProcess, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0007A8, "Member 'BP_PostProcessManager_C_StartPostProcess::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetUnusedComponent
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_GetUnusedComponent final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RetIndex;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B3[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B4[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_GetUnusedComponent) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_GetUnusedComponent");
static_assert(sizeof(BP_PostProcessManager_C_GetUnusedComponent) == 0x000024, "Wrong size on BP_PostProcessManager_C_GetUnusedComponent");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, Param_Index) == 0x000000, "Member 'BP_PostProcessManager_C_GetUnusedComponent::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, RetIndex) == 0x000004, "Member 'BP_PostProcessManager_C_GetUnusedComponent::RetIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_GetUnusedComponent::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PostProcessManager_C_GetUnusedComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PostProcessManager_C_GetUnusedComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000021, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetUnusedComponent, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'BP_PostProcessManager_C_GetUnusedComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.Update
// 0x0070 (0x0070 - 0x0000)
struct BP_PostProcessManager_C_Update final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86B5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnyMove;                                           // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AnyLive;                                           // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B6[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldNormalDeltaSeconds_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRecoverNPC_Active;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateLevelup_Active;                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdatePerformShot_Active;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateVisionFog_Active;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B8[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86B9[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86BA[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86BB[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_Update) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_Update");
static_assert(sizeof(BP_PostProcessManager_C_Update) == 0x000070, "Wrong size on BP_PostProcessManager_C_Update");
static_assert(offsetof(BP_PostProcessManager_C_Update, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_Update::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, MainPlayer) == 0x000008, "Member 'BP_PostProcessManager_C_Update::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, PlayerManager) == 0x000010, "Member 'BP_PostProcessManager_C_Update::PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, AnyMove) == 0x000018, "Member 'BP_PostProcessManager_C_Update::AnyMove' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, AnyLive) == 0x000019, "Member 'BP_PostProcessManager_C_Update::AnyLive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PostProcessManager_C_Update::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_GetWorldNormalDeltaSeconds_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_Update::CallFunc_GetWorldNormalDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_UpdateRecoverNPC_Active) == 0x000024, "Member 'BP_PostProcessManager_C_Update::CallFunc_UpdateRecoverNPC_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PostProcessManager_C_Update::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_UpdateLevelup_Active) == 0x00002C, "Member 'BP_PostProcessManager_C_Update::CallFunc_UpdateLevelup_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_UpdatePerformShot_Active) == 0x00002D, "Member 'BP_PostProcessManager_C_Update::CallFunc_UpdatePerformShot_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_UpdateVisionFog_Active) == 0x00002E, "Member 'BP_PostProcessManager_C_Update::CallFunc_UpdateVisionFog_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_BooleanOR_ReturnValue) == 0x00002F, "Member 'BP_PostProcessManager_C_Update::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PostProcessManager_C_Update::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_BooleanOR_ReturnValue_1) == 0x000038, "Member 'BP_PostProcessManager_C_Update::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_BooleanOR_ReturnValue_2) == 0x000039, "Member 'BP_PostProcessManager_C_Update::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_BooleanOR_ReturnValue_3) == 0x00003A, "Member 'BP_PostProcessManager_C_Update::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_float_Variable) == 0x00003C, "Member 'BP_PostProcessManager_C_Update::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_float_Variable_1) == 0x000040, "Member 'BP_PostProcessManager_C_Update::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_PostProcessManager_C_Update::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PostProcessManager_C_Update::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PostProcessManager_C_Update::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, Temp_bool_Variable) == 0x000050, "Member 'BP_PostProcessManager_C_Update::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_PostProcessManager_C_Update::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_PostProcessManager_C_Update::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_PostProcessManager_C_Update::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000061, "Member 'BP_PostProcessManager_C_Update::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_PostProcessManager_C_Update::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'BP_PostProcessManager_C_Update::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Update, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'BP_PostProcessManager_C_Update::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.EndPostProcess
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_EndPostProcess final
{
public:
	int32                                         Handle;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSeconds;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86BC[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_EndPostProcess) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_EndPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_EndPostProcess) == 0x000014, "Wrong size on BP_PostProcessManager_C_EndPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_EndPostProcess, Handle) == 0x000000, "Member 'BP_PostProcessManager_C_EndPostProcess::Handle' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPostProcess, TimeSeconds) == 0x000004, "Member 'BP_PostProcessManager_C_EndPostProcess::TimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPostProcess, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_EndPostProcess::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPostProcess, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_EndPostProcess::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPostProcess, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_EndPostProcess::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ResetSequencerPostProcess
// 0x0780 (0x0780 - 0x0000)
struct BP_PostProcessManager_C_ResetSequencerPostProcess final
{
public:
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0000(0x0780)()
};
static_assert(alignof(BP_PostProcessManager_C_ResetSequencerPostProcess) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_ResetSequencerPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_ResetSequencerPostProcess) == 0x000780, "Wrong size on BP_PostProcessManager_C_ResetSequencerPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_ResetSequencerPostProcess, K2Node_MakeStruct_PostProcessSettings) == 0x000000, "Member 'BP_PostProcessManager_C_ResetSequencerPostProcess::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetSequencerPostProcessSetting
// 0x0790 (0x0790 - 0x0000)
struct BP_PostProcessManager_C_SetSequencerPostProcessSetting final
{
public:
	struct FPostProcessSettings                   Settings;                                          // 0x0000(0x0780)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         BlendWeight;                                       // 0x0780(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetSequencerPostProcessSetting) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_SetSequencerPostProcessSetting");
static_assert(sizeof(BP_PostProcessManager_C_SetSequencerPostProcessSetting) == 0x000790, "Wrong size on BP_PostProcessManager_C_SetSequencerPostProcessSetting");
static_assert(offsetof(BP_PostProcessManager_C_SetSequencerPostProcessSetting, Settings) == 0x000000, "Member 'BP_PostProcessManager_C_SetSequencerPostProcessSetting::Settings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSequencerPostProcessSetting, BlendWeight) == 0x000780, "Member 'BP_PostProcessManager_C_SetSequencerPostProcessSetting::BlendWeight' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetPerformPostProcess
// 0x0008 (0x0008 - 0x0000)
struct BP_PostProcessManager_C_GetPerformPostProcess final
{
public:
	class UPostProcessComponent*                  PostProcess;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_GetPerformPostProcess) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_GetPerformPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_GetPerformPostProcess) == 0x000008, "Wrong size on BP_PostProcessManager_C_GetPerformPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_GetPerformPostProcess, PostProcess) == 0x000000, "Member 'BP_PostProcessManager_C_GetPerformPostProcess::PostProcess' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupDamagePostProcess
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupDamagePostProcess final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupDamagePostProcess) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupDamagePostProcess");
static_assert(sizeof(BP_PostProcessManager_C_SetupDamagePostProcess) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupDamagePostProcess");
static_assert(offsetof(BP_PostProcessManager_C_SetupDamagePostProcess, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupDamagePostProcess::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupDamagePostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupDamagePostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetDamagePostProcessPower
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_SetDamagePostProcessPower final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveDamagePostProcess_Active;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86BD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86BE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetDamagePostProcessPower) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetDamagePostProcessPower");
static_assert(sizeof(BP_PostProcessManager_C_SetDamagePostProcessPower) == 0x000028, "Wrong size on BP_PostProcessManager_C_SetDamagePostProcessPower");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPower, Power) == 0x000000, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPower::Power' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPower, CallFunc_IsActiveDamagePostProcess_Active) == 0x000004, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPower::CallFunc_IsActiveDamagePostProcess_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPower, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPower::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPower, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPower::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPower, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPower::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetDamagePostProcessPowerFlash
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_SetDamagePostProcessPowerFlash final
{
public:
	float                                         Power;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveDamagePostProcess_Active;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86BF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetDamagePostProcessPowerFlash");
static_assert(sizeof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash) == 0x000028, "Wrong size on BP_PostProcessManager_C_SetDamagePostProcessPowerFlash");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash, Power) == 0x000000, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPowerFlash::Power' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash, CallFunc_IsActiveDamagePostProcess_Active) == 0x000004, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPowerFlash::CallFunc_IsActiveDamagePostProcess_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPowerFlash::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPowerFlash::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetDamagePostProcessPowerFlash, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetDamagePostProcessPowerFlash::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupAcceleratorPP
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupAcceleratorPP final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupAcceleratorPP) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupAcceleratorPP");
static_assert(sizeof(BP_PostProcessManager_C_SetupAcceleratorPP) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupAcceleratorPP");
static_assert(offsetof(BP_PostProcessManager_C_SetupAcceleratorPP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupAcceleratorPP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupAcceleratorPP, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupAcceleratorPP::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.IsActiveDamagePostProcess
// 0x0005 (0x0005 - 0x0000)
struct BP_PostProcessManager_C_IsActiveDamagePostProcess final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_IsActiveDamagePostProcess) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_IsActiveDamagePostProcess");
static_assert(sizeof(BP_PostProcessManager_C_IsActiveDamagePostProcess) == 0x000005, "Wrong size on BP_PostProcessManager_C_IsActiveDamagePostProcess");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveDamagePostProcess, Active) == 0x000000, "Member 'BP_PostProcessManager_C_IsActiveDamagePostProcess::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveDamagePostProcess, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PostProcessManager_C_IsActiveDamagePostProcess::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveDamagePostProcess, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000002, "Member 'BP_PostProcessManager_C_IsActiveDamagePostProcess::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveDamagePostProcess, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_PostProcessManager_C_IsActiveDamagePostProcess::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveDamagePostProcess, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PostProcessManager_C_IsActiveDamagePostProcess::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.EnableDamagePostProcess
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_EnableDamagePostProcess final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_EnableDamagePostProcess) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_EnableDamagePostProcess");
static_assert(sizeof(BP_PostProcessManager_C_EnableDamagePostProcess) == 0x000018, "Wrong size on BP_PostProcessManager_C_EnableDamagePostProcess");
static_assert(offsetof(BP_PostProcessManager_C_EnableDamagePostProcess, Enable) == 0x000000, "Member 'BP_PostProcessManager_C_EnableDamagePostProcess::Enable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EnableDamagePostProcess, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'BP_PostProcessManager_C_EnableDamagePostProcess::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EnableDamagePostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_EnableDamagePostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.LoadAsset
// 0x0200 (0x0200 - 0x0000)
struct BP_PostProcessManager_C_LoadAsset final
{
public:
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_1;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_2;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_3;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_3;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C5[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_4;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_5;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_4;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C6[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_5;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C7[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_6;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_7;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_6;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C8[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_7;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86C9[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86CA[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_8;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_8;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86CB[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_9;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86CC[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_9;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86CD[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_10;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_10;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86CE[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_11;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_11;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86CF[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_12;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_12;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D0[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_13;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_13;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D1[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86D2[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_14;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_14;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D3[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_15;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_16;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_15;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D4[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_16;        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D5[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_17;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_18;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_17;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D6[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_18;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D7[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue_19;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_19;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_LoadAsset) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_LoadAsset");
static_assert(sizeof(BP_PostProcessManager_C_LoadAsset) == 0x000200, "Wrong size on BP_PostProcessManager_C_LoadAsset");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_1) == 0x000008, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface) == 0x000010, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000020, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_2) == 0x000030, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_3) == 0x000038, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x000040, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_3) == 0x000050, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_4) == 0x000060, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_5) == 0x000068, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_4) == 0x000070, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_5) == 0x000080, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_5) == 0x000088, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_6) == 0x000090, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_7) == 0x000098, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_6) == 0x0000A0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_6' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_6) == 0x0000A8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_7) == 0x0000B0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_7' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_7) == 0x0000B8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_PostProcessManager_C_LoadAsset::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_8) == 0x0000C8, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_8) == 0x0000D0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_8' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_8) == 0x0000D8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, Temp_int_Loop_Num_Variable) == 0x0000DC, "Member 'BP_PostProcessManager_C_LoadAsset::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_9) == 0x0000E0, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_9) == 0x0000F0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_9' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_9) == 0x0000F8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000100, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_10) == 0x000108, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_10) == 0x000110, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_10' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_10) == 0x000118, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_11) == 0x000120, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_11) == 0x000128, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_11' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_11) == 0x000130, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_12) == 0x000138, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_12) == 0x000140, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_12' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_12) == 0x000148, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_13) == 0x000150, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_13) == 0x000158, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_13' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_13) == 0x000160, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, Temp_int_Array_Index_Variable) == 0x000164, "Member 'BP_PostProcessManager_C_LoadAsset::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_14) == 0x000170, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_14) == 0x000178, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_14' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_14) == 0x000180, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000181, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_15) == 0x000188, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_16) == 0x000190, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_15) == 0x000198, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_15' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_15) == 0x0001A0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_16) == 0x0001A8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_16' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_16) == 0x0001B0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_17) == 0x0001B8, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_18) == 0x0001C0, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_17) == 0x0001C8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_17' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_17) == 0x0001D0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_18) == 0x0001D8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_18' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_18) == 0x0001E0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, CallFunc_LoadSoftObject_ReturnValue_19) == 0x0001E8, "Member 'BP_PostProcessManager_C_LoadAsset::CallFunc_LoadSoftObject_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_AsMaterial_Interface_19) == 0x0001F0, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_AsMaterial_Interface_19' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_LoadAsset, K2Node_DynamicCast_bSuccess_19) == 0x0001F8, "Member 'BP_PostProcessManager_C_LoadAsset::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateInitializePerformPostProcess
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_PrivateInitializePerformPostProcess final
{
public:
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateInitializePerformPostProcess) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateInitializePerformPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_PrivateInitializePerformPostProcess) == 0x000010, "Wrong size on BP_PostProcessManager_C_PrivateInitializePerformPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformPostProcess, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateInitializePerformPostProcess::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupSeeThroughPP
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_SetupSeeThroughPP final
{
public:
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86D8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupSeeThroughPP) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupSeeThroughPP");
static_assert(sizeof(BP_PostProcessManager_C_SetupSeeThroughPP) == 0x000020, "Wrong size on BP_PostProcessManager_C_SetupSeeThroughPP");
static_assert(offsetof(BP_PostProcessManager_C_SetupSeeThroughPP, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupSeeThroughPP::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupSeeThroughPP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetupSeeThroughPP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupSeeThroughPP, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_PostProcessManager_C_SetupSeeThroughPP::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetSeeThroughRate
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PostProcessManager_C_SetSeeThroughRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousSeeThroughRate;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86D9[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86DA[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetSeeThroughRate) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetSeeThroughRate");
static_assert(sizeof(BP_PostProcessManager_C_SetSeeThroughRate) == 0x0000A0, "Wrong size on BP_PostProcessManager_C_SetSeeThroughRate");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, PreviousSeeThroughRate) == 0x000004, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::PreviousSeeThroughRate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_GetParticleManager_Particle_Manager) == 0x000008, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000012, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000013, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000014, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000015, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000028, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, K2Node_MakeStruct_LinearColor) == 0x000038, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, K2Node_MakeStruct_LinearColor_1) == 0x000048, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000058, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x000068, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000078, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2) == 0x000080, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSeeThroughRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3) == 0x000090, "Member 'BP_PostProcessManager_C_SetSeeThroughRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetAcceleratorRate
// 0x0090 (0x0090 - 0x0000)
struct BP_PostProcessManager_C_SetAcceleratorRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousAcceleratorRate;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86DB[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetAcceleratorRate) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetAcceleratorRate");
static_assert(sizeof(BP_PostProcessManager_C_SetAcceleratorRate) == 0x000090, "Wrong size on BP_PostProcessManager_C_SetAcceleratorRate");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, PreviousAcceleratorRate) == 0x000004, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::PreviousAcceleratorRate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00000B, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x00000D, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000020, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, K2Node_MakeStruct_LinearColor) == 0x000030, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, K2Node_MakeStruct_LinearColor_1) == 0x000040, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000050, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x000060, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2) == 0x000070, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3) == 0x000080, "Member 'BP_PostProcessManager_C_SetAcceleratorRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetAcceleratorParameter
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_SetAcceleratorParameter final
{
public:
	float                                         RedBlurColorMul;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RedBlurPower;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NoRedBlurRadius;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PPTime;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlurCenter;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetAcceleratorParameter) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetAcceleratorParameter");
static_assert(sizeof(BP_PostProcessManager_C_SetAcceleratorParameter) == 0x000020, "Wrong size on BP_PostProcessManager_C_SetAcceleratorParameter");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameter, RedBlurColorMul) == 0x000000, "Member 'BP_PostProcessManager_C_SetAcceleratorParameter::RedBlurColorMul' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameter, RedBlurPower) == 0x000004, "Member 'BP_PostProcessManager_C_SetAcceleratorParameter::RedBlurPower' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameter, NoRedBlurRadius) == 0x000008, "Member 'BP_PostProcessManager_C_SetAcceleratorParameter::NoRedBlurRadius' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameter, PPTime) == 0x00000C, "Member 'BP_PostProcessManager_C_SetAcceleratorParameter::PPTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameter, BlurCenter) == 0x000010, "Member 'BP_PostProcessManager_C_SetAcceleratorParameter::BlurCenter' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupMenu
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PostProcessManager_C_SetupMenu final
{
public:
	class APostProcessVolume*                     PPV;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_ElevatorBase_C>   K2Node_DynamicCast_AsBPI_Elevator_Base;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86DC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0038(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86DD[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86DE[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_86DF[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APostProcessVolume*>             CallFunc_GetWorldPostProcessVolume_ReturnValue;    // 0x0078(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E0[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APostProcessVolume*                     CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E1[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetupMenu) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupMenu");
static_assert(sizeof(BP_PostProcessManager_C_SetupMenu) == 0x0000A8, "Wrong size on BP_PostProcessManager_C_SetupMenu");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, PPV) == 0x000000, "Member 'BP_PostProcessManager_C_SetupMenu::PPV' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_SetupMenu::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PostProcessManager_C_SetupMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PostProcessManager_C_SetupMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_PostProcessManager_C_SetupMenu::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, K2Node_DynamicCast_AsBPI_Elevator_Base) == 0x000020, "Member 'BP_PostProcessManager_C_SetupMenu::K2Node_DynamicCast_AsBPI_Elevator_Base' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PostProcessManager_C_SetupMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_PostProcessManager_C_SetupMenu::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000038, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_GetBrainFieldManager_Manager) == 0x000050, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_InBranField_InBrainDield) == 0x000059, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'BP_PostProcessManager_C_SetupMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000070, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_GetWorldPostProcessVolume_ReturnValue) == 0x000078, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_GetWorldPostProcessVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupMenu, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_PostProcessManager_C_SetupMenu::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetupMenuPP
// 0x0058 (0x0058 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetupMenuPP final
{
public:
	class UPostProcessComponent*                  PostProcess;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             RestoreWork;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86E3[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetupMenuPP) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateSetupMenuPP");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetupMenuPP) == 0x000058, "Wrong size on BP_PostProcessManager_C_PrivateSetupMenuPP");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, PostProcess) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::PostProcess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, RestoreWork) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::RestoreWork' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, K2Node_DynamicCast_AsMaterial_Interface) == 0x000030, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000040, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupMenuPP, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_PrivateSetupMenuPP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.RestoreScene
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PostProcessManager_C_RestoreScene final
{
public:
	class APostProcessVolume*                     PPV;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E6[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E8[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_ElevatorBase_C>   K2Node_DynamicCast_AsBPI_Elevator_Base;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InBranField_InBrainDield;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86E9[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstance*                        CallFunc_GetRSGameInstance_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86EA[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABlendableVolumeManager*                CallFunc_GetStageSettingVolumeManager_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStageParameterSettingVolumeManager*    K2Node_DynamicCast_AsStage_Parameter_Setting_Volume_Manager; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86EB[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0084(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_86EC[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86ED[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_RestoreScene) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_RestoreScene");
static_assert(sizeof(BP_PostProcessManager_C_RestoreScene) == 0x0000A8, "Wrong size on BP_PostProcessManager_C_RestoreScene");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, PPV) == 0x000000, "Member 'BP_PostProcessManager_C_RestoreScene::PPV' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Loop_Num_Variable_1) == 0x000024, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Less_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_PostProcessManager_C_RestoreScene::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_GetBrainFieldManager_Manager) == 0x000038, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, K2Node_DynamicCast_AsBPI_Elevator_Base) == 0x000048, "Member 'BP_PostProcessManager_C_RestoreScene::K2Node_DynamicCast_AsBPI_Elevator_Base' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PostProcessManager_C_RestoreScene::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_IsValid_ReturnValue_2) == 0x000059, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_InBranField_InBrainDield) == 0x00005A, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_InBranField_InBrainDield' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_GetRSGameInstance_ReturnValue) == 0x000060, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_GetRSGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_IsValid_ReturnValue_3) == 0x000068, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_GetStageSettingVolumeManager_ReturnValue) == 0x000070, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_GetStageSettingVolumeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, K2Node_DynamicCast_AsStage_Parameter_Setting_Volume_Manager) == 0x000078, "Member 'BP_PostProcessManager_C_RestoreScene::K2Node_DynamicCast_AsStage_Parameter_Setting_Volume_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_PostProcessManager_C_RestoreScene::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, K2Node_CreateDelegate_OutputDelegate) == 0x000084, "Member 'BP_PostProcessManager_C_RestoreScene::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000098, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_IsValid_ReturnValue_4) == 0x0000A0, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_RestoreScene, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_PostProcessManager_C_RestoreScene::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateRestoreScenePP
// 0x0050 (0x0050 - 0x0000)
struct BP_PostProcessManager_C_PrivateRestoreScenePP final
{
public:
	class UPostProcessComponent*                  PostProcess;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             RestoreWork;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86EE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86EF[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateRestoreScenePP) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateRestoreScenePP");
static_assert(sizeof(BP_PostProcessManager_C_PrivateRestoreScenePP) == 0x000050, "Wrong size on BP_PostProcessManager_C_PrivateRestoreScenePP");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, PostProcess) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::PostProcess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, RestoreWork) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::RestoreWork' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, Temp_int_Loop_Num_Variable) == 0x00001C, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, K2Node_DynamicCast_AsMaterial_Interface) == 0x000030, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateRestoreScenePP, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000040, "Member 'BP_PostProcessManager_C_PrivateRestoreScenePP::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupVisionFogPP
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PostProcessManager_C_SetupVisionFogPP final
{
public:
	TArray<float>                                 DefaultParameter;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86F0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               TmpMID;                                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F1[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArrayOfFloat                          K2Node_MakeStruct_ArrayOfFloat;                    // 0x0048(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F2[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F3[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86F4[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupVisionFogPP) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupVisionFogPP");
static_assert(sizeof(BP_PostProcessManager_C_SetupVisionFogPP) == 0x0000A0, "Wrong size on BP_PostProcessManager_C_SetupVisionFogPP");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, DefaultParameter) == 0x000000, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::DefaultParameter' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Param_Index) == 0x000010, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, TmpMID) == 0x000018, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::TmpMID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Loop_Num_Variable_1) == 0x00003C, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Length_ReturnValue_2) == 0x000044, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, K2Node_MakeStruct_ArrayOfFloat) == 0x000048, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::K2Node_MakeStruct_ArrayOfFloat' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x00005C, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000060, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_FMax_ReturnValue) == 0x000064, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_K2_GetScalarParameterValue_ReturnValue_2) == 0x000068, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_K2_GetScalarParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_Array_Length_ReturnValue_3) == 0x000080, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupVisionFogPP, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000090, "Member 'BP_PostProcessManager_C_SetupVisionFogPP::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetVisionFogRate
// 0x0040 (0x0040 - 0x0000)
struct BP_PostProcessManager_C_SetVisionFogRate final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86F5[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TmpMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastActive;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F6[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveVisionFog_Active;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveVisionFog_Active_1;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F7[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetVisionFogRate) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetVisionFogRate");
static_assert(sizeof(BP_PostProcessManager_C_SetVisionFogRate) == 0x000040, "Wrong size on BP_PostProcessManager_C_SetVisionFogRate");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_SetVisionFogRate::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_SetVisionFogRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, TmpMaterial) == 0x000008, "Member 'BP_PostProcessManager_C_SetVisionFogRate::TmpMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, LastActive) == 0x000010, "Member 'BP_PostProcessManager_C_SetVisionFogRate::LastActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x000018, "Member 'BP_PostProcessManager_C_SetVisionFogRate::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, CallFunc_IsActiveVisionFog_Active) == 0x000020, "Member 'BP_PostProcessManager_C_SetVisionFogRate::CallFunc_IsActiveVisionFog_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, CallFunc_IsActiveVisionFog_Active_1) == 0x000021, "Member 'BP_PostProcessManager_C_SetVisionFogRate::CallFunc_IsActiveVisionFog_Active_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000028, "Member 'BP_PostProcessManager_C_SetVisionFogRate::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogRate, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_SetVisionFogRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetVisionFogRate
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_GetVisionFogRate final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86F8[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TmpMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastActive;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86F9[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PrivateGetVisionFogRate_Rate;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_GetVisionFogRate) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_GetVisionFogRate");
static_assert(sizeof(BP_PostProcessManager_C_GetVisionFogRate) == 0x000018, "Wrong size on BP_PostProcessManager_C_GetVisionFogRate");
static_assert(offsetof(BP_PostProcessManager_C_GetVisionFogRate, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_GetVisionFogRate::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetVisionFogRate, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_GetVisionFogRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetVisionFogRate, TmpMaterial) == 0x000008, "Member 'BP_PostProcessManager_C_GetVisionFogRate::TmpMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetVisionFogRate, LastActive) == 0x000010, "Member 'BP_PostProcessManager_C_GetVisionFogRate::LastActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetVisionFogRate, CallFunc_PrivateGetVisionFogRate_Rate) == 0x000014, "Member 'BP_PostProcessManager_C_GetVisionFogRate::CallFunc_PrivateGetVisionFogRate_Rate' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.IsActiveVisionFog
// 0x0002 (0x0002 - 0x0000)
struct BP_PostProcessManager_C_IsActiveVisionFog final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_IsActiveVisionFog) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_IsActiveVisionFog");
static_assert(sizeof(BP_PostProcessManager_C_IsActiveVisionFog) == 0x000002, "Wrong size on BP_PostProcessManager_C_IsActiveVisionFog");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveVisionFog, Active) == 0x000000, "Member 'BP_PostProcessManager_C_IsActiveVisionFog::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActiveVisionFog, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PostProcessManager_C_IsActiveVisionFog::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetupVisionFogMaterial
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetupVisionFogMaterial final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86FA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _lFogNear;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SeeThroughFog;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopLastIndex;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 DefaultParameters;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TmpMID;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86FB[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86FC[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86FD[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86FE[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_86FF[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8700[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8701[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 CallFunc_PrivateGetVisionFogMaterialParameter_MID; // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetVisionFogRate_Rate;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8702[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8703[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateSetupVisionFogMaterial");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial) == 0x0000F8, "Wrong size on BP_PostProcessManager_C_PrivateSetupVisionFogMaterial");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, _lFogNear) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::_lFogNear' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, SeeThroughFog) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::SeeThroughFog' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, LoopLastIndex) == 0x00000C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::LoopLastIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, DefaultParameters) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::DefaultParameters' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, TmpMID) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::TmpMID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, Rate) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x000030, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00004C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00005C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000060, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_FMax_ReturnValue) == 0x000064, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000068, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Array_LastIndex_ReturnValue) == 0x00006C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000070, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, Temp_int_Variable) == 0x000074, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000078, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Min_ReturnValue) == 0x00007C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000084, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_PrivateGetVisionFogMaterialParameter_MID) == 0x000088, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_PrivateGetVisionFogMaterialParameter_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000098, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_PrivateGetVisionFogRate_Rate) == 0x00009C, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_PrivateGetVisionFogRate_Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000A0, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0000A4, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0000A8, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_SelectFloat_ReturnValue) == 0x0000AC, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0000B0, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_IsValid_ReturnValue) == 0x0000B4, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_SelectFloat_ReturnValue_1) == 0x0000BC, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_FClamp_ReturnValue_1) == 0x0000C0, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000C4, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_FClamp_ReturnValue_2) == 0x0000C8, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000CC, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x0000D4, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000D8, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupVisionFogMaterial, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x0000E8, "Member 'BP_PostProcessManager_C_PrivateSetupVisionFogMaterial::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.UpdateVisionFog
// 0x0130 (0x0130 - 0x0000)
struct BP_PostProcessManager_C_UpdateVisionFog final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8704[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpRate;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerLocation;                                    // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ActiveMID;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      MainPlayer;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    PlayerManager;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnyMove;                                           // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8705[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8706[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8707[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8708[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformDirection_ReturnValue;    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8709[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_870A[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_870B[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeXY_ReturnValue;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActiveVisionFog_Active;                 // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_UpdateVisionFog) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_UpdateVisionFog");
static_assert(sizeof(BP_PostProcessManager_C_UpdateVisionFog) == 0x000130, "Wrong size on BP_PostProcessManager_C_UpdateVisionFog");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_UpdateVisionFog::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, Active) == 0x000004, "Member 'BP_PostProcessManager_C_UpdateVisionFog::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, InterpRate) == 0x000008, "Member 'BP_PostProcessManager_C_UpdateVisionFog::InterpRate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, PlayerLocation) == 0x00000C, "Member 'BP_PostProcessManager_C_UpdateVisionFog::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, ActiveMID) == 0x000018, "Member 'BP_PostProcessManager_C_UpdateVisionFog::ActiveMID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, MainPlayer) == 0x000020, "Member 'BP_PostProcessManager_C_UpdateVisionFog::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, PlayerManager) == 0x000028, "Member 'BP_PostProcessManager_C_UpdateVisionFog::PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, AnyMove) == 0x000030, "Member 'BP_PostProcessManager_C_UpdateVisionFog::AnyMove' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, K2Node_MathExpression_ReturnValue) == 0x000034, "Member 'BP_PostProcessManager_C_UpdateVisionFog::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GetPlayerManager_PlayerManager) == 0x000048, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000060, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_InverseTransformDirection_ReturnValue) == 0x0000B0, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_InverseTransformDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000BC, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_BreakVector_X) == 0x0000C8, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_BreakVector_Y) == 0x0000CC, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_BreakVector_Z) == 0x0000D0, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x0000D8, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Add_VectorVector_ReturnValue) == 0x0000EC, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000FC, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GetVelocity_ReturnValue) == 0x000108, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_GetMainPlayer_Player) == 0x000118, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_VSizeXY_ReturnValue) == 0x000120, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000124, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_IsValid_ReturnValue_3) == 0x000128, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateVisionFog, CallFunc_IsActiveVisionFog_Active) == 0x000129, "Member 'BP_PostProcessManager_C_UpdateVisionFog::CallFunc_IsActiveVisionFog_Active' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupLocalVIsionFog
// 0x0048 (0x0048 - 0x0000)
struct BP_PostProcessManager_C_SetupLocalVIsionFog final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogNear;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogFar;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CenterLocation;                                    // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_870C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetupLocalVIsionFog) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupLocalVIsionFog");
static_assert(sizeof(BP_PostProcessManager_C_SetupLocalVIsionFog) == 0x000048, "Wrong size on BP_PostProcessManager_C_SetupLocalVIsionFog");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, Rate) == 0x000008, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, FogNear) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::FogNear' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, FogFar) == 0x000010, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::FogFar' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CenterLocation) == 0x000014, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CenterLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_FMin_ReturnValue) == 0x000024, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_FMax_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalVIsionFog, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_SetupLocalVIsionFog::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearLocalVIsionFog
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_ClearLocalVIsionFog final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearLocalVIsionFog) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearLocalVIsionFog");
static_assert(sizeof(BP_PostProcessManager_C_ClearLocalVIsionFog) == 0x000010, "Wrong size on BP_PostProcessManager_C_ClearLocalVIsionFog");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalVIsionFog, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_ClearLocalVIsionFog::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalVIsionFog, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_ClearLocalVIsionFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupLocalSeeThrough
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_SetupLocalSeeThrough final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurPower;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_870D[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ParticleManager_C*                  CallFunc_GetParticleManager_Particle_Manager;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupLocalSeeThrough) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupLocalSeeThrough");
static_assert(sizeof(BP_PostProcessManager_C_SetupLocalSeeThrough) == 0x000028, "Wrong size on BP_PostProcessManager_C_SetupLocalSeeThrough");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, Rate) == 0x000008, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, BlurPower) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::BlurPower' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, CallFunc_GetParticleManager_Particle_Manager) == 0x000018, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::CallFunc_GetParticleManager_Particle_Manager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalSeeThrough, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_PostProcessManager_C_SetupLocalSeeThrough::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearLocalSeeThrough
// 0x0008 (0x0008 - 0x0000)
struct BP_PostProcessManager_C_ClearLocalSeeThrough final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_ClearLocalSeeThrough) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearLocalSeeThrough");
static_assert(sizeof(BP_PostProcessManager_C_ClearLocalSeeThrough) == 0x000008, "Wrong size on BP_PostProcessManager_C_ClearLocalSeeThrough");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalSeeThrough, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_ClearLocalSeeThrough::PPMaterial' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupLocalAccelerator
// 0x0058 (0x0058 - 0x0000)
struct BP_PostProcessManager_C_SetupLocalAccelerator final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurCenter;                                        // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_870E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetupLocalAccelerator) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupLocalAccelerator");
static_assert(sizeof(BP_PostProcessManager_C_SetupLocalAccelerator) == 0x000058, "Wrong size on BP_PostProcessManager_C_SetupLocalAccelerator");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, Rate) == 0x000008, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, BlurCenter) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000034, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000038, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00004C, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalAccelerator, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000054, "Member 'BP_PostProcessManager_C_SetupLocalAccelerator::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearLocalAccelerator
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_ClearLocalAccelerator final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearLocalAccelerator) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearLocalAccelerator");
static_assert(sizeof(BP_PostProcessManager_C_ClearLocalAccelerator) == 0x000010, "Wrong size on BP_PostProcessManager_C_ClearLocalAccelerator");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalAccelerator, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_ClearLocalAccelerator::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalAccelerator, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_ClearLocalAccelerator::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupLocalRadialBlur
// 0x0090 (0x0090 - 0x0000)
struct BP_PostProcessManager_C_SetupLocalRadialBlur final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurSize;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurCenter;                                        // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurColor;                                         // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_870F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8710[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   K2Node_MakeArray_Array_2;                          // 0x0070(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array_3;                          // 0x0080(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetupLocalRadialBlur) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupLocalRadialBlur");
static_assert(sizeof(BP_PostProcessManager_C_SetupLocalRadialBlur) == 0x000090, "Wrong size on BP_PostProcessManager_C_SetupLocalRadialBlur");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, Rate) == 0x000008, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, BlurSize) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::BlurSize' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, BlurCenter) == 0x000010, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, BlurColor) == 0x00001C, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::BlurColor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, K2Node_MakeArray_Array_1) == 0x000050, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000060, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, K2Node_MakeArray_Array_2) == 0x000070, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLocalRadialBlur, K2Node_MakeArray_Array_3) == 0x000080, "Member 'BP_PostProcessManager_C_SetupLocalRadialBlur::K2Node_MakeArray_Array_3' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearLocalRadialBlur
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_ClearLocalRadialBlur final
{
public:
	class UMaterialInstanceDynamic*               PPMaterial;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearLocalRadialBlur) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearLocalRadialBlur");
static_assert(sizeof(BP_PostProcessManager_C_ClearLocalRadialBlur) == 0x000010, "Wrong size on BP_PostProcessManager_C_ClearLocalRadialBlur");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalRadialBlur, PPMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_ClearLocalRadialBlur::PPMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearLocalRadialBlur, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_ClearLocalRadialBlur::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetAcceleratorParameterFromRate
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_SetAcceleratorParameterFromRate final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BlurCenter;                                        // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetAcceleratorParameterFromRate) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetAcceleratorParameterFromRate");
static_assert(sizeof(BP_PostProcessManager_C_SetAcceleratorParameterFromRate) == 0x000020, "Wrong size on BP_PostProcessManager_C_SetAcceleratorParameterFromRate");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameterFromRate, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetAcceleratorParameterFromRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameterFromRate, BlurCenter) == 0x000004, "Member 'BP_PostProcessManager_C_SetAcceleratorParameterFromRate::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetAcceleratorParameterFromRate, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_SetAcceleratorParameterFromRate::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRadialBlur
// 0x0040 (0x0040 - 0x0000)
struct BP_PostProcessManager_C_SetRadialBlur final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurSize;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurCenter;                                        // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlurColor;                                         // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetRadialBlur) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRadialBlur");
static_assert(sizeof(BP_PostProcessManager_C_SetRadialBlur) == 0x000040, "Wrong size on BP_PostProcessManager_C_SetRadialBlur");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetRadialBlur::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, BlurSize) == 0x000004, "Member 'BP_PostProcessManager_C_SetRadialBlur::BlurSize' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, BlurCenter) == 0x000008, "Member 'BP_PostProcessManager_C_SetRadialBlur::BlurCenter' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, BlurColor) == 0x000014, "Member 'BP_PostProcessManager_C_SetRadialBlur::BlurColor' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetRadialBlur::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRadialBlur, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000030, "Member 'BP_PostProcessManager_C_SetRadialBlur::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupCinematicVisionFog
// 0x0040 (0x0040 - 0x0000)
struct BP_PostProcessManager_C_SetupCinematicVisionFog final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8711[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogNear;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FogFar;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CenterLocation;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8712[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupCinematicVisionFog) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupCinematicVisionFog");
static_assert(sizeof(BP_PostProcessManager_C_SetupCinematicVisionFog) == 0x000040, "Wrong size on BP_PostProcessManager_C_SetupCinematicVisionFog");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, FogNear) == 0x000008, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::FogNear' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, FogFar) == 0x00000C, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::FogFar' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, CenterLocation) == 0x000010, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::CenterLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, Mid) == 0x000020, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::Mid' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x000028, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicVisionFog, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000030, "Member 'BP_PostProcessManager_C_SetupCinematicVisionFog::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearCinematicVisionFog
// 0x0030 (0x0030 - 0x0000)
struct BP_PostProcessManager_C_ClearCinematicVisionFog final
{
public:
	bool                                          LastActive;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8713[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8714[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8715[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearCinematicVisionFog) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearCinematicVisionFog");
static_assert(sizeof(BP_PostProcessManager_C_ClearCinematicVisionFog) == 0x000030, "Wrong size on BP_PostProcessManager_C_ClearCinematicVisionFog");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, LastActive) == 0x000000, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::LastActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicVisionFog, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000020, "Member 'BP_PostProcessManager_C_ClearCinematicVisionFog::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupCinematicSeeThrough
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_SetupCinematicSeeThrough final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurPower;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8716[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupCinematicSeeThrough) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupCinematicSeeThrough");
static_assert(sizeof(BP_PostProcessManager_C_SetupCinematicSeeThrough) == 0x000020, "Wrong size on BP_PostProcessManager_C_SetupCinematicSeeThrough");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicSeeThrough, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetupCinematicSeeThrough::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicSeeThrough, BlurPower) == 0x000004, "Member 'BP_PostProcessManager_C_SetupCinematicSeeThrough::BlurPower' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetupCinematicSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupCinematicSeeThrough, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_PostProcessManager_C_SetupCinematicSeeThrough::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearCinematicSeeThrough
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_ClearCinematicSeeThrough final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8717[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearCinematicSeeThrough) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_ClearCinematicSeeThrough");
static_assert(sizeof(BP_PostProcessManager_C_ClearCinematicSeeThrough) == 0x000018, "Wrong size on BP_PostProcessManager_C_ClearCinematicSeeThrough");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicSeeThrough, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_ClearCinematicSeeThrough::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearCinematicSeeThrough, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_ClearCinematicSeeThrough::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateGetVisionFogMaterial
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_PrivateGetVisionFogMaterial final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8718[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mid;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8719[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateGetVisionFogMaterial");
static_assert(sizeof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial) == 0x000028, "Wrong size on BP_PostProcessManager_C_PrivateGetVisionFogMaterial");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterial::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial, Mid) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterial::Mid' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterial::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterial, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterial::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateGetVisionFogRate
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_PrivateGetVisionFogRate final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871A[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateGetVisionFogRate) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_PrivateGetVisionFogRate");
static_assert(sizeof(BP_PostProcessManager_C_PrivateGetVisionFogRate) == 0x000014, "Wrong size on BP_PostProcessManager_C_PrivateGetVisionFogRate");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogRate, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogRate::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogRate, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogRate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogRate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogRate, CallFunc_Array_Get_Item) == 0x00000C, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogRate, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogRate::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetVisionFogRate
// 0x002C (0x002C - 0x0000)
struct BP_PostProcessManager_C_PrivateSetVisionFogRate final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871C[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetVisionFogRate) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_PrivateSetVisionFogRate");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetVisionFogRate) == 0x00002C, "Wrong size on BP_PostProcessManager_C_PrivateSetVisionFogRate");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, Temp_int_Loop_Num_Variable) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_GetValidValue_ReturnValue) == 0x000015, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogRate, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetupPicturizeQuality
// 0x0002 (0x0002 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetupPicturizeQuality final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetupPicturizeQuality) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_PrivateSetupPicturizeQuality");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetupPicturizeQuality) == 0x000002, "Wrong size on BP_PostProcessManager_C_PrivateSetupPicturizeQuality");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPicturizeQuality, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetupPicturizeQuality::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPicturizeQuality, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000001, "Member 'BP_PostProcessManager_C_PrivateSetupPicturizeQuality::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.IsOutlinePriorityFront
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessManager_C_IsOutlinePriorityFront final
{
public:
	bool                                          IsFront;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_IsOutlinePriorityFront) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_IsOutlinePriorityFront");
static_assert(sizeof(BP_PostProcessManager_C_IsOutlinePriorityFront) == 0x000001, "Wrong size on BP_PostProcessManager_C_IsOutlinePriorityFront");
static_assert(offsetof(BP_PostProcessManager_C_IsOutlinePriorityFront, IsFront) == 0x000000, "Member 'BP_PostProcessManager_C_IsOutlinePriorityFront::IsFront' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetSimpleFade
// 0x0030 (0x0030 - 0x0000)
struct BP_PostProcessManager_C_SetSimpleFade final
{
public:
	float                                         Rate;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_871F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8720[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetSimpleFade) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetSimpleFade");
static_assert(sizeof(BP_PostProcessManager_C_SetSimpleFade) == 0x000030, "Wrong size on BP_PostProcessManager_C_SetSimpleFade");
static_assert(offsetof(BP_PostProcessManager_C_SetSimpleFade, Rate) == 0x000000, "Member 'BP_PostProcessManager_C_SetSimpleFade::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSimpleFade, Color) == 0x000004, "Member 'BP_PostProcessManager_C_SetSimpleFade::Color' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSimpleFade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_SetSimpleFade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSimpleFade, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_SetSimpleFade::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSimpleFade, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000020, "Member 'BP_PostProcessManager_C_SetSimpleFade::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupSimpleFade
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupSimpleFade final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupSimpleFade) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupSimpleFade");
static_assert(sizeof(BP_PostProcessManager_C_SetupSimpleFade) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupSimpleFade");
static_assert(offsetof(BP_PostProcessManager_C_SetupSimpleFade, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupSimpleFade::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupSimpleFade, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupSimpleFade::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateInitializePerformShotPostProcess
// 0x0060 (0x0060 - 0x0000)
struct BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8721[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8722[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess");
static_assert(sizeof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess) == 0x000060, "Wrong size on BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, DataTable) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::DataTable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, Temp_int_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_MakeLiteralInt_ReturnValue) == 0x00004C, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_MakeLiteralByte_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_Subtract_ByteByte_ReturnValue) == 0x000051, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000054, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcess::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.StartPerformShot
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_StartPerformShot final
{
public:
	EPerformShotType                              ShotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OneTime;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8723[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShotIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformShotState                             Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPerformShotState                             Temp_byte_Variable_1;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8724[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_LoopTime; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_StartPerformShot) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_StartPerformShot");
static_assert(sizeof(BP_PostProcessManager_C_StartPerformShot) == 0x000020, "Wrong size on BP_PostProcessManager_C_StartPerformShot");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, ShotType) == 0x000000, "Member 'BP_PostProcessManager_C_StartPerformShot::ShotType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, OneTime) == 0x000001, "Member 'BP_PostProcessManager_C_StartPerformShot::OneTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, ShotIndex) == 0x000004, "Member 'BP_PostProcessManager_C_StartPerformShot::ShotIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, Temp_byte_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_StartPerformShot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_PostProcessManager_C_StartPerformShot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, Temp_byte_Variable_1) == 0x00000A, "Member 'BP_PostProcessManager_C_StartPerformShot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime) == 0x00000C, "Member 'BP_PostProcessManager_C_StartPerformShot::CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, CallFunc_PrivateGetPerformShotFinishTime_LoopTime) == 0x000010, "Member 'BP_PostProcessManager_C_StartPerformShot::CallFunc_PrivateGetPerformShotFinishTime_LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime) == 0x000014, "Member 'BP_PostProcessManager_C_StartPerformShot::CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'BP_PostProcessManager_C_StartPerformShot::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartPerformShot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_StartPerformShot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.EndPerformShot
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_EndPerformShot final
{
public:
	EPerformShotType                              ShotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OneTime;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8725[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShotIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformShotState                             Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformShotState                             Temp_byte_Variable_1;                              // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8726[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_LoopTime; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8727[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_EndPerformShot) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_EndPerformShot");
static_assert(sizeof(BP_PostProcessManager_C_EndPerformShot) == 0x000024, "Wrong size on BP_PostProcessManager_C_EndPerformShot");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, ShotType) == 0x000000, "Member 'BP_PostProcessManager_C_EndPerformShot::ShotType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, OneTime) == 0x000001, "Member 'BP_PostProcessManager_C_EndPerformShot::OneTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, ShotIndex) == 0x000004, "Member 'BP_PostProcessManager_C_EndPerformShot::ShotIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, Temp_byte_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_EndPerformShot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, Temp_byte_Variable_1) == 0x000009, "Member 'BP_PostProcessManager_C_EndPerformShot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime) == 0x00000C, "Member 'BP_PostProcessManager_C_EndPerformShot::CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, CallFunc_PrivateGetPerformShotFinishTime_LoopTime) == 0x000010, "Member 'BP_PostProcessManager_C_EndPerformShot::CallFunc_PrivateGetPerformShotFinishTime_LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime) == 0x000014, "Member 'BP_PostProcessManager_C_EndPerformShot::CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_PostProcessManager_C_EndPerformShot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_PostProcessManager_C_EndPerformShot::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_EndPerformShot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_EndPerformShot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.UpdatePerformShot
// 0x006C (0x006C - 0x0000)
struct BP_PostProcessManager_C_UpdatePerformShot final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8728[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NormalizeDeltaSeconds;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopActive;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8729[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShotType;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformShotState                             NextState;                                         // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_872A[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NowTime;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinishTime;                                        // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShotActive;                                        // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_872B[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_LoopTime; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPerformShotState                             CallFunc_Array_Get_Item;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_872C[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x004C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_872D[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_872E[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_872F[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_UpdatePerformShot) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_UpdatePerformShot");
static_assert(sizeof(BP_PostProcessManager_C_UpdatePerformShot) == 0x00006C, "Wrong size on BP_PostProcessManager_C_UpdatePerformShot");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_UpdatePerformShot::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, Active) == 0x000004, "Member 'BP_PostProcessManager_C_UpdatePerformShot::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, NormalizeDeltaSeconds) == 0x000008, "Member 'BP_PostProcessManager_C_UpdatePerformShot::NormalizeDeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, LoopActive) == 0x00000C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::LoopActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, ShotType) == 0x000010, "Member 'BP_PostProcessManager_C_UpdatePerformShot::ShotType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, NextState) == 0x000014, "Member 'BP_PostProcessManager_C_UpdatePerformShot::NextState' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, NowTime) == 0x000018, "Member 'BP_PostProcessManager_C_UpdatePerformShot::NowTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, FinishTime) == 0x00001C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::FinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, ShotActive) == 0x000020, "Member 'BP_PostProcessManager_C_UpdatePerformShot::ShotActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime) == 0x000024, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_PrivateGetPerformShotFinishTime_LoopTime) == 0x000028, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_PrivateGetPerformShotFinishTime_LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime) == 0x00002C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000032, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Less_FloatFloat_ReturnValue) == 0x000033, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000034, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Conv_IntToByte_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_GetValidValue_ReturnValue) == 0x000041, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, Temp_int_Loop_Num_Variable) == 0x000044, "Member 'BP_PostProcessManager_C_UpdatePerformShot::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_PostProcessManager_C_UpdatePerformShot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, Temp_float_Variable) == 0x00004C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_PostProcessManager_C_UpdatePerformShot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, K2Node_SwitchEnum_CmpSuccess) == 0x000055, "Member 'BP_PostProcessManager_C_UpdatePerformShot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, K2Node_SwitchEnum_CmpSuccess_1) == 0x000064, "Member 'BP_PostProcessManager_C_UpdatePerformShot::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdatePerformShot, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_PostProcessManager_C_UpdatePerformShot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetupPerformShotRate
// 0x0820 (0x0820 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetupPerformShotRate final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8730[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerformShotData                       ShotData;                                          // 0x0010(0x07B0)(Edit, BlueprintVisible)
	bool                                          UseFovAdd;                                         // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseBlur;                                           // 0x07C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8731[0x2];                                     // 0x07C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlurRate;                                          // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FovAdd;                                            // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rate;                                              // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurveValue;                                        // 0x07D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NowTime;                                           // 0x07DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PPC;                                               // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8732[0x2];                                     // 0x07EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x080C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8733[0x3];                                     // 0x080D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x0810(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetupPerformShotRate) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateSetupPerformShotRate");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetupPerformShotRate) == 0x000820, "Wrong size on BP_PostProcessManager_C_PrivateSetupPerformShotRate");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, Param_Index) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, ShotData) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::ShotData' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, UseFovAdd) == 0x0007C0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::UseFovAdd' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, UseBlur) == 0x0007C1, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::UseBlur' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, BlurRate) == 0x0007C4, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::BlurRate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, FovAdd) == 0x0007C8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::FovAdd' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, Rate) == 0x0007CC, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CurveValue) == 0x0007D0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, NowTime) == 0x0007DC, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::NowTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, PPC) == 0x0007E0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::PPC' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_IsValid_ReturnValue) == 0x0007E8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_IsValid_ReturnValue_1) == 0x0007E9, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_GetFloatValue_ReturnValue) == 0x0007EC, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0007F0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0007F4, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0007F8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0007FC, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Ease_ReturnValue) == 0x000800, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Ease_ReturnValue_1) == 0x000804, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_GetFloatValue_ReturnValue_1) == 0x000808, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00080C, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, CallFunc_Array_Get_Item) == 0x000810, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRate, K2Node_SwitchEnum_CmpSuccess) == 0x000818, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateGetPerformShotFinishTime
// 0x07E0 (0x07E0 - 0x0000)
struct BP_PostProcessManager_C_PrivateGetPerformShotFinishTime final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartFinishTime;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LoopTime;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndFinishTime;                                     // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPerformShotData                       ShotData;                                          // 0x0010(0x07B0)(Edit, BlueprintVisible)
	bool                                          TmpUseCurve;                                       // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8734[0x3];                                     // 0x07C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TmpEndFinishTime;                                  // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TmpStartFinishTime;                                // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x07CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8735[0x2];                                     // 0x07CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime_1;                   // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime_1;                   // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateGetPerformShotFinishTime");
static_assert(sizeof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime) == 0x0007E0, "Wrong size on BP_PostProcessManager_C_PrivateGetPerformShotFinishTime");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, Param_Index) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, StartFinishTime) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, LoopTime) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, EndFinishTime) == 0x00000C, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, ShotData) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::ShotData' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, TmpUseCurve) == 0x0007C0, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::TmpUseCurve' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, TmpEndFinishTime) == 0x0007C4, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::TmpEndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, TmpStartFinishTime) == 0x0007C8, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::TmpStartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_IsValid_ReturnValue) == 0x0007CC, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_IsValid_ReturnValue_1) == 0x0007CD, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_GetTimeRange_MinTime) == 0x0007D0, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_GetTimeRange_MaxTime) == 0x0007D4, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_GetTimeRange_MinTime_1) == 0x0007D8, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_GetTimeRange_MinTime_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetPerformShotFinishTime, CallFunc_GetTimeRange_MaxTime_1) == 0x0007DC, "Member 'BP_PostProcessManager_C_PrivateGetPerformShotFinishTime::CallFunc_GetTimeRange_MaxTime_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetupPerformShotRateValues
// 0x0860 (0x0860 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetupPerformShotRateValues final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseBlur;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseFov;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8736[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerformShotData                       ShotData;                                          // 0x0010(0x07B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         FovAdd;                                            // 0x07C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlurRate;                                          // 0x07C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OtherFovAdd;                                       // 0x07C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseFOV;                                           // 0x07CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      Player;                                            // 0x07D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PPC;                                               // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8737[0x7];                                     // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_RadialBlurManager_C*                CallFunc_GetRadialBlurManager_RadialBlurManager;   // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8738[0x3];                                     // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlaying_ReturnValue;                   // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8739[0x7];                                     // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x0800(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873A[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873B[0x4];                                     // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0820(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_873C[0x7];                                     // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetMainPlayerBP_Player;                   // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873D[0x4];                                     // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateSetupPerformShotRateValues");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues) == 0x000860, "Wrong size on BP_PostProcessManager_C_PrivateSetupPerformShotRateValues");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, Param_Index) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, Weight) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::Weight' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, UseBlur) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::UseBlur' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, UseFov) == 0x000009, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::UseFov' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, ShotData) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::ShotData' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, FovAdd) == 0x0007C0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::FovAdd' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, BlurRate) == 0x0007C4, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::BlurRate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, OtherFovAdd) == 0x0007C8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::OtherFovAdd' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, BaseFOV) == 0x0007CC, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::BaseFOV' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, Player) == 0x0007D0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, PPC) == 0x0007D8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::PPC' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0007E0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetRadialBlurManager_RadialBlurManager) == 0x0007E8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetRadialBlurManager_RadialBlurManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_IsValid_ReturnValue) == 0x0007F0, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0007F4, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetPlaying_ReturnValue) == 0x0007F8, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_Array_Get_Item) == 0x000800, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000808, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetGameMode_ReturnValue) == 0x000810, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_FMax_ReturnValue) == 0x000818, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000820, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, K2Node_DynamicCast_bSuccess) == 0x000830, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetMainPlayerBP_Player) == 0x000838, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetMainPlayerBP_Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000840, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, K2Node_DynamicCast_AsRSBattle_Player) == 0x000848, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetupPerformShotRateValues, K2Node_DynamicCast_bSuccess_1) == 0x000850, "Member 'BP_PostProcessManager_C_PrivateSetupPerformShotRateValues::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateInitializePerformShotPostProcessReload
// 0x1010 (0x1010 - 0x0000)
struct BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload final
{
public:
	TArray<struct FLinearColor>                   VectorParameters;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<float>                                 ScalarParameters;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  PPC;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPerformShotData                       ShotData;                                          // 0x0030(0x07B0)(Edit, BlueprintVisible)
	class UDataTable*                             DataTable;                                         // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_873F[0x3];                                     // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8740[0x4];                                     // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0800(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8741[0xC];                                     // 0x0814(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPerformShotDataTable                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0820(0x07C0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8742[0x7];                                     // 0x0FE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0FF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8743[0x7];                                     // 0x0FF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x1000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload");
static_assert(sizeof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload) == 0x001010, "Wrong size on BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, VectorParameters) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::VectorParameters' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, ScalarParameters) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::ScalarParameters' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, Param_Index) == 0x000020, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, PPC) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::PPC' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, ShotData) == 0x000030, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::ShotData' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, DataTable) == 0x0007E0, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::DataTable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, Temp_int_Array_Index_Variable) == 0x0007E8, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, Temp_int_Loop_Num_Variable) == 0x0007EC, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, Temp_int_Loop_Counter_Variable) == 0x0007F0, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_Less_IntInt_ReturnValue) == 0x0007F4, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_Add_IntInt_ReturnValue) == 0x0007F8, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000800, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_Array_Length_ReturnValue) == 0x000810, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_GetDataTableRowFromName_OutRow) == 0x000820, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000FE0, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_LoadSoftObject_ReturnValue) == 0x000FE8, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, K2Node_DynamicCast_AsData_Table) == 0x000FF0, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, K2Node_DynamicCast_bSuccess) == 0x000FF8, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload, CallFunc_Array_Get_Item) == 0x001000, "Member 'BP_PostProcessManager_C_PrivateInitializePerformShotPostProcessReload::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupScreenLight
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupScreenLight final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupScreenLight) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupScreenLight");
static_assert(sizeof(BP_PostProcessManager_C_SetupScreenLight) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupScreenLight");
static_assert(offsetof(BP_PostProcessManager_C_SetupScreenLight, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupScreenLight::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupScreenLight, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupScreenLight::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupLevelup
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_SetupLevelup final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8744[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupLevelup) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupLevelup");
static_assert(sizeof(BP_PostProcessManager_C_SetupLevelup) == 0x000020, "Wrong size on BP_PostProcessManager_C_SetupLevelup");
static_assert(offsetof(BP_PostProcessManager_C_SetupLevelup, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupLevelup::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLevelup, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetupLevelup::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupLevelup, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000010, "Member 'BP_PostProcessManager_C_SetupLevelup::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.UpdateLevelup
// 0x0170 (0x0170 - 0x0000)
struct BP_PostProcessManager_C_UpdateLevelup final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8745[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IndexString;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          FirstSetup;                                        // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8746[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       Player;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               PlayerList;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AnyActive;                                         // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8747[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8748[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox2D                                 CallFunc_CalcScreenRectFromBounds_BoxSize;         // 0x0054(0x0014)(ZeroConstructor, NoDestructor)
	struct FBox2D                                 CallFunc_CalcScreenRectFromBounds_BoxUV;           // 0x0068(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CalcScreenRectFromBounds_Success;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8749[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874A[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874B[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874C[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874D[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00F8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue_1;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874E[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_874F[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_UpdateLevelup) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_UpdateLevelup");
static_assert(sizeof(BP_PostProcessManager_C_UpdateLevelup) == 0x000170, "Wrong size on BP_PostProcessManager_C_UpdateLevelup");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_UpdateLevelup::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Active) == 0x000004, "Member 'BP_PostProcessManager_C_UpdateLevelup::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, IndexString) == 0x000008, "Member 'BP_PostProcessManager_C_UpdateLevelup::IndexString' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, FirstSetup) == 0x000018, "Member 'BP_PostProcessManager_C_UpdateLevelup::FirstSetup' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Player) == 0x000020, "Member 'BP_PostProcessManager_C_UpdateLevelup::Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, PlayerList) == 0x000028, "Member 'BP_PostProcessManager_C_UpdateLevelup::PlayerList' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Param_Index) == 0x000038, "Member 'BP_PostProcessManager_C_UpdateLevelup::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Time) == 0x00003C, "Member 'BP_PostProcessManager_C_UpdateLevelup::Time' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, AnyActive) == 0x000040, "Member 'BP_PostProcessManager_C_UpdateLevelup::AnyActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_PostProcessManager_C_UpdateLevelup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Temp_int_Loop_Num_Variable) == 0x000048, "Member 'BP_PostProcessManager_C_UpdateLevelup::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_PostProcessManager_C_UpdateLevelup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_CalcScreenRectFromBounds_BoxSize) == 0x000054, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_CalcScreenRectFromBounds_BoxSize' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_CalcScreenRectFromBounds_BoxUV) == 0x000068, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_CalcScreenRectFromBounds_BoxUV' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_CalcScreenRectFromBounds_Success) == 0x00007C, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_CalcScreenRectFromBounds_Success' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_BreakVector2D_X) == 0x000084, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_BreakVector2D_X_1) == 0x00008C, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_BreakVector2D_Y_1) == 0x000090, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_MakeColor_ReturnValue) == 0x000094, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, Temp_bool_Variable) == 0x0000C0, "Member 'BP_PostProcessManager_C_UpdateLevelup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000C8, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E0, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_GetPlayerManager_PlayerManager) == 0x0000E8, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_GetPlayerList_ReturnValue) == 0x0000F8, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_MakeLiteralString_ReturnValue) == 0x000108, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Conv_StringToName_ReturnValue) == 0x000128, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_FClamp_ReturnValue) == 0x000134, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_MakeLiteralString_ReturnValue_1) == 0x000138, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_MakeLiteralString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000148, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000158, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Add_FloatFloat_ReturnValue) == 0x000164, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_IsValid_ReturnValue_1) == 0x000168, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateLevelup, CallFunc_Array_Length_ReturnValue) == 0x00016C, "Member 'BP_PostProcessManager_C_UpdateLevelup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.StartLevelup
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_StartLevelup final
{
public:
	ERSPartyPlayerKind                            PartyKind;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8750[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Index;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_StartLevelup) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_StartLevelup");
static_assert(sizeof(BP_PostProcessManager_C_StartLevelup) == 0x000014, "Wrong size on BP_PostProcessManager_C_StartLevelup");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, PartyKind) == 0x000000, "Member 'BP_PostProcessManager_C_StartLevelup::PartyKind' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, Param_Index) == 0x000004, "Member 'BP_PostProcessManager_C_StartLevelup::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, Temp_float_Variable) == 0x000008, "Member 'BP_PostProcessManager_C_StartLevelup::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_StartLevelup::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, Temp_bool_Variable) == 0x000010, "Member 'BP_PostProcessManager_C_StartLevelup::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartLevelup, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000011, "Member 'BP_PostProcessManager_C_StartLevelup::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetSeeThroughInterpolateTime
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_GetSeeThroughInterpolateTime final
{
public:
	float                                         StartSeconds;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndSeconds;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8751[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_LoopTime; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_GetSeeThroughInterpolateTime");
static_assert(sizeof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime) == 0x000024, "Wrong size on BP_PostProcessManager_C_GetSeeThroughInterpolateTime");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, StartSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::StartSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, EndSeconds) == 0x000004, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::EndSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000009, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime) == 0x000014, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_LoopTime) == 0x000018, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime) == 0x00001C, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetSeeThroughInterpolateTime, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_GetSeeThroughInterpolateTime::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetAcceleratorInterpolateTime
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_GetAcceleratorInterpolateTime final
{
public:
	float                                         StartSeconds;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndSeconds;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8752[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_LoopTime; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_GetAcceleratorInterpolateTime");
static_assert(sizeof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime) == 0x000024, "Wrong size on BP_PostProcessManager_C_GetAcceleratorInterpolateTime");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, StartSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::StartSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, EndSeconds) == 0x000004, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::EndSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_MakeLiteralByte_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000009, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000010, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime) == 0x000014, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_StartFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_LoopTime) == 0x000018, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_LoopTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime) == 0x00001C, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_PrivateGetPerformShotFinishTime_EndFinishTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetAcceleratorInterpolateTime, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_GetAcceleratorInterpolateTime::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupFishEye
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupFishEye final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupFishEye) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupFishEye");
static_assert(sizeof(BP_PostProcessManager_C_SetupFishEye) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupFishEye");
static_assert(offsetof(BP_PostProcessManager_C_SetupFishEye, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupFishEye::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupFishEye, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupFishEye::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateGetVisionFogMaterialParameter
// 0x0030 (0x0030 - 0x0000)
struct BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8753[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 Mid;                                               // 0x0008(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter");
static_assert(sizeof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter) == 0x000030, "Wrong size on BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter, Mid) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter::Mid' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'BP_PostProcessManager_C_PrivateGetVisionFogMaterialParameter::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.StartRecoverNPC
// 0x001C (0x001C - 0x0000)
struct BP_PostProcessManager_C_StartRecoverNPC final
{
public:
	ERSPartyPlayerKind                            PlayerKind;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERSPartyPlayerKind                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8754[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8755[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_StartRecoverNPC) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_StartRecoverNPC");
static_assert(sizeof(BP_PostProcessManager_C_StartRecoverNPC) == 0x00001C, "Wrong size on BP_PostProcessManager_C_StartRecoverNPC");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, PlayerKind) == 0x000000, "Member 'BP_PostProcessManager_C_StartRecoverNPC::PlayerKind' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, Temp_byte_Variable) == 0x000001, "Member 'BP_PostProcessManager_C_StartRecoverNPC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, Temp_float_Variable) == 0x000004, "Member 'BP_PostProcessManager_C_StartRecoverNPC::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, Temp_float_Variable_1) == 0x000008, "Member 'BP_PostProcessManager_C_StartRecoverNPC::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, Temp_float_Variable_2) == 0x00000C, "Member 'BP_PostProcessManager_C_StartRecoverNPC::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, Temp_float_Variable_3) == 0x000010, "Member 'BP_PostProcessManager_C_StartRecoverNPC::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PostProcessManager_C_StartRecoverNPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_StartRecoverNPC, K2Node_Select_Default) == 0x000018, "Member 'BP_PostProcessManager_C_StartRecoverNPC::K2Node_Select_Default' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.UpdateRecoverNPC
// 0x0100 (0x0100 - 0x0000)
struct BP_PostProcessManager_C_UpdateRecoverNPC final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8756[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Center;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       TargetPlayer;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Value;                                             // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Weight;                                            // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreen_ScreenPosition;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreen_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8757[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8758[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8759[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_2;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_875A[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_875B[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_875C[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_UpdateRecoverNPC) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_UpdateRecoverNPC");
static_assert(sizeof(BP_PostProcessManager_C_UpdateRecoverNPC) == 0x000100, "Wrong size on BP_PostProcessManager_C_UpdateRecoverNPC");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, DeltaSeconds) == 0x000000, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, Active) == 0x000004, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, Center) == 0x000008, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::Center' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, PlayerController) == 0x000018, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::PlayerController' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, TargetPlayer) == 0x000020, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, Value) == 0x000028, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::Value' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, Weight) == 0x000034, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::Weight' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetViewportSize_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Y) == 0x00004C, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetSocketLocation_ReturnValue) == 0x000054, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_ProjectWorldToScreen_ScreenPosition) == 0x000060, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_ProjectWorldToScreen_ScreenPosition' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_ProjectWorldToScreen_ReturnValue) == 0x000068, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_ProjectWorldToScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetPlayerManager_PlayerManager) == 0x000070, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetPlayer_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector2D_X) == 0x000090, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector2D_Y) == 0x000094, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_MakeColor_ReturnValue) == 0x000098, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_X_1) == 0x0000A8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Y_1) == 0x0000AC, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_X_2) == 0x0000BC, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Y_2) == 0x0000C0, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_BreakVector_Z_2) == 0x0000C4, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetVectorValue_ReturnValue) == 0x0000CC, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetTimeRange_MinTime) == 0x0000D8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_GetTimeRange_MaxTime) == 0x0000DC, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_IsValid_ReturnValue_3) == 0x0000E0, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E1, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x0000E8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_IsValid_ReturnValue_4) == 0x0000F8, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateRecoverNPC, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_PostProcessManager_C_UpdateRecoverNPC::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupKarenMemory
// 0x0018 (0x0018 - 0x0000)
struct BP_PostProcessManager_C_SetupKarenMemory final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupKarenMemory) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetupKarenMemory");
static_assert(sizeof(BP_PostProcessManager_C_SetupKarenMemory) == 0x000018, "Wrong size on BP_PostProcessManager_C_SetupKarenMemory");
static_assert(offsetof(BP_PostProcessManager_C_SetupKarenMemory, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_SetupKarenMemory::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetupKarenMemory, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'BP_PostProcessManager_C_SetupKarenMemory::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetEventCommandVisionFogRate
// 0x0050 (0x0050 - 0x0000)
struct BP_PostProcessManager_C_SetEventCommandVisionFogRate final
{
public:
	EVisionFogID                                  FogID;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_875D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rate;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_875E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SimpleFloatToString_ReturnValue;          // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_875F[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVisionFogRate_Rate;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetEventCommandVisionFogRate) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetEventCommandVisionFogRate");
static_assert(sizeof(BP_PostProcessManager_C_SetEventCommandVisionFogRate) == 0x000050, "Wrong size on BP_PostProcessManager_C_SetEventCommandVisionFogRate");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, FogID) == 0x000000, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::FogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, Rate) == 0x000004, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, Time) == 0x000008, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::Time' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_SimpleFloatToString_ReturnValue) == 0x000020, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_SimpleFloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000040, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetEventCommandVisionFogRate, CallFunc_GetVisionFogRate_Rate) == 0x000048, "Member 'BP_PostProcessManager_C_SetEventCommandVisionFogRate::CallFunc_GetVisionFogRate_Rate' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.UpdateAlways
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_UpdateAlways final
{
public:
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8760[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8761[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_UpdateAlways) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_UpdateAlways");
static_assert(sizeof(BP_PostProcessManager_C_UpdateAlways) == 0x000028, "Wrong size on BP_PostProcessManager_C_UpdateAlways");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000004, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_UpdateAlways, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000018, "Member 'BP_PostProcessManager_C_UpdateAlways::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.Setup Outline PPM
// 0x0140 (0x0140 - 0x0000)
struct BP_PostProcessManager_C_Setup_Outline_PPM final
{
public:
	class UMaterialInterface*                     TmpMaterial;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             OutlineMaterialList;                               // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInterface*                     UseMaterial;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOutlineObjEmission;                             // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseOutlineEmission;                                // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8762[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8763[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8764[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8765[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               CallFunc_GetFocusObject_focus_obj_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8766[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8767[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8768[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8769[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_876A[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_1;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_2;    // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_1;                           // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_1;                           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_1;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_1;                           // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_2;                           // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_2;                           // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_2;                           // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_2;                           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_3;    // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R_3;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G_3;                           // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B_3;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A_3;                           // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_Setup_Outline_PPM) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_Setup_Outline_PPM");
static_assert(sizeof(BP_PostProcessManager_C_Setup_Outline_PPM) == 0x000140, "Wrong size on BP_PostProcessManager_C_Setup_Outline_PPM");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, TmpMaterial) == 0x000000, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::TmpMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, OutlineMaterialList) == 0x000008, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::OutlineMaterialList' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, UseMaterial) == 0x000018, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::UseMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, UseOutlineObjEmission) == 0x000020, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::UseOutlineObjEmission' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, UseOutlineEmission) == 0x000021, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::UseOutlineEmission' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, Temp_int_Loop_Num_Variable) == 0x00002C, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000040, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue_3) == 0x000049, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetFocusObject_focus_obj) == 0x000050, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetFocusObject_focus_obj' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetFocusObject_focus_obj_1) == 0x000058, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetFocusObject_focus_obj_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue_4) == 0x000060, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_IsValid_ReturnValue_5) == 0x000061, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BooleanOR_ReturnValue_1) == 0x000063, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000064, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000068, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000070, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, K2Node_MakeArray_Array) == 0x000080, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, Temp_bool_Variable) == 0x000090, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, K2Node_Select_Default) == 0x000098, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, Temp_bool_Variable_1) == 0x0000A0, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetVectorParameterValue_ReturnValue) == 0x0000A4, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, K2Node_Select_Default_1) == 0x0000B8, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_R) == 0x0000C0, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_G) == 0x0000C4, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_B) == 0x0000C8, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_A) == 0x0000CC, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x0000D0, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetVectorParameterValue_ReturnValue_2) == 0x0000E0, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetVectorParameterValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_R_1) == 0x0000F0, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_R_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_G_1) == 0x0000F4, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_G_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_B_1) == 0x0000F8, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_B_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_A_1) == 0x0000FC, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_A_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_R_2) == 0x000100, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_R_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_G_2) == 0x000104, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_G_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_B_2) == 0x000108, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_B_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_A_2) == 0x00010C, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_A_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_GetVectorParameterValue_ReturnValue_3) == 0x000110, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_GetVectorParameterValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_R_3) == 0x000120, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_R_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_G_3) == 0x000124, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_G_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_B_3) == 0x000128, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_B_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_BreakColor_A_3) == 0x00012C, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_BreakColor_A_3' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Add_FloatFloat_ReturnValue) == 0x000130, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000134, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000138, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_Setup_Outline_PPM, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00013C, "Member 'BP_PostProcessManager_C_Setup_Outline_PPM::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetPerformShotFov
// 0x0800 (0x0800 - 0x0000)
struct BP_PostProcessManager_C_PrivateSetPerformShotFov final
{
public:
	EPerformShotType                              ShotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OneShot;                                           // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_876B[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       MainPlayer;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPerformShotData                       ShotData;                                          // 0x0010(0x07B0)(Edit, BlueprintVisible)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x07C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_876C[0x2];                                     // 0x07C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_876D[0x3];                                     // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x07D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x07DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_876E[0x3];                                     // 0x07ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetPerformShotFov) == 0x000010, "Wrong alignment on BP_PostProcessManager_C_PrivateSetPerformShotFov");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetPerformShotFov) == 0x000800, "Wrong size on BP_PostProcessManager_C_PrivateSetPerformShotFov");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, ShotType) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::ShotType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, Enable) == 0x000001, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::Enable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, OneShot) == 0x000002, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::OneShot' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, MainPlayer) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::MainPlayer' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, ShotData) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::ShotData' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0007C0, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0007C4, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_Not_PreBool_ReturnValue) == 0x0007C5, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, K2Node_DynamicCast_AsRSBattle_Player) == 0x0007C8, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, K2Node_DynamicCast_bSuccess) == 0x0007D0, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_SelectFloat_ReturnValue) == 0x0007D4, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_SelectFloat_ReturnValue_1) == 0x0007D8, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_Add_FloatFloat_ReturnValue) == 0x0007DC, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_GetPlayerManager_PlayerManager) == 0x0007E0, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_FMax_ReturnValue) == 0x0007E8, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_IsValid_ReturnValue) == 0x0007EC, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetPerformShotFov, CallFunc_GetPlayer_ReturnValue) == 0x0007F0, "Member 'BP_PostProcessManager_C_PrivateSetPerformShotFov::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsALLDefault
// 0x0088 (0x0088 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsALLDefault final
{
public:
	struct FRenderingSettingsDataTable            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsALLDefault) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsALLDefault");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsALLDefault) == 0x000088, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsALLDefault");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsALLDefault, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsALLDefault::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsALLDefault, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_SetRenderingSettingsALLDefault::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsALLDynamicEvent
// 0x0088 (0x0088 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent final
{
public:
	struct FRenderingSettingsDataTable            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent) == 0x000088, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000080, "Member 'BP_PostProcessManager_C_SetRenderingSettingsALLDynamicEvent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsTranslucency
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsTranslucency final
{
public:
	ERenderingSettingsType                        RenderingSettingType;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderingSettingsType                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_876F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsTranslucency");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency) == 0x000024, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsTranslucency");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, RenderingSettingType) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::RenderingSettingType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, Temp_byte_Variable) == 0x000001, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, Temp_name_Variable) == 0x000004, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, Temp_name_Variable_1) == 0x00000C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, Temp_name_Variable_2) == 0x000014, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucency, K2Node_Select_Default) == 0x00001C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucency::K2Node_Select_Default' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsMergeInternal
// 0x02E8 (0x02E8 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsMergeInternal final
{
public:
	struct FRenderingSettings                     BaseSettings;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   OverrideParamName;                                 // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRenderingSettings                     MergeSettings;                                     // 0x0080(0x0078)(Parm, OutParm, NoDestructor)
	struct FRenderingSettings                     NewSettings;                                       // 0x00F8(0x0078)(Edit, BlueprintVisible, NoDestructor)
	struct FRenderingSettings                     CallFunc_MergeRenderingSettings_ReturnValue;       // 0x0170(0x0078)(NoDestructor)
	struct FRenderingSettingsDataTable            CallFunc_GetDataTableRowFromName_OutRow;           // 0x01E8(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8770[0x2];                                     // 0x026A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRenderingSettings                     CallFunc_MergeRenderingSettings_ReturnValue_1;     // 0x026C(0x0078)(NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsMergeInternal");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal) == 0x0002E8, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsMergeInternal");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, BaseSettings) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::BaseSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, OverrideParamName) == 0x000078, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::OverrideParamName' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, MergeSettings) == 0x000080, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::MergeSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, NewSettings) == 0x0000F8, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::NewSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, CallFunc_MergeRenderingSettings_ReturnValue) == 0x000170, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::CallFunc_MergeRenderingSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001E8, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000268, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, CallFunc_NotEqual_NameName_ReturnValue) == 0x000269, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsMergeInternal, CallFunc_MergeRenderingSettings_ReturnValue_1) == 0x00026C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsMergeInternal::CallFunc_MergeRenderingSettings_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsTranslucencyInternal
// 0x0170 (0x0170 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal final
{
public:
	struct FRenderingSettings                     BaseSettings;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   OverrideParamName;                                 // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRenderingSettings                     NewSettings;                                       // 0x0080(0x0078)(Edit, BlueprintVisible, NoDestructor)
	struct FRenderingSettings                     CallFunc_SetRenderingSettingsMergeInternal_MergeSettings; // 0x00F8(0x0078)(NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal) == 0x000170, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal, BaseSettings) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal::BaseSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal, OverrideParamName) == 0x000078, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal::OverrideParamName' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal, NewSettings) == 0x000080, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal::NewSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal, CallFunc_SetRenderingSettingsMergeInternal_MergeSettings) == 0x0000F8, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTranslucencyInternal::CallFunc_SetRenderingSettingsMergeInternal_MergeSettings' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsSSRResolution
// 0x0024 (0x0024 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsSSRResolution final
{
public:
	ERenderingSettingsType                        RenderingSettingType;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERenderingSettingsType                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8771[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsSSRResolution");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution) == 0x000024, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsSSRResolution");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, RenderingSettingType) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::RenderingSettingType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, Temp_byte_Variable) == 0x000001, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, Temp_name_Variable) == 0x000004, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, Temp_name_Variable_1) == 0x00000C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, Temp_name_Variable_2) == 0x000014, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolution, K2Node_Select_Default) == 0x00001C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolution::K2Node_Select_Default' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsTest
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsTest final
{
public:
	class FName                                   NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParamName;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsTest) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsTest");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsTest) == 0x000010, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsTest");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTest, NewParam) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTest::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsTest, ParamName) == 0x000008, "Member 'BP_PostProcessManager_C_SetRenderingSettingsTest::ParamName' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetupOutlineOptimizeNoCustomDepth
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth");
static_assert(sizeof(BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth) == 0x000001, "Wrong size on BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth");
static_assert(offsetof(BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth, Enable) == 0x000000, "Member 'BP_PostProcessManager_C_SetupOutlineOptimizeNoCustomDepth::Enable' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetOutlineENPC
// 0x0058 (0x0058 - 0x0000)
struct BP_PostProcessManager_C_SetOutlineENPC final
{
public:
	bool                                          BrainField;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8772[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Alpha;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetOutlineENPC) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetOutlineENPC");
static_assert(sizeof(BP_PostProcessManager_C_SetOutlineENPC) == 0x000058, "Wrong size on BP_PostProcessManager_C_SetOutlineENPC");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, BrainField) == 0x000000, "Member 'BP_PostProcessManager_C_SetOutlineENPC::BrainField' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, Alpha) == 0x000004, "Member 'BP_PostProcessManager_C_SetOutlineENPC::Alpha' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, Color) == 0x000008, "Member 'BP_PostProcessManager_C_SetOutlineENPC::Color' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_BreakColor_R) == 0x000018, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_BreakColor_G) == 0x00001C, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_BreakColor_B) == 0x000020, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_BreakColor_A) == 0x000024, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000038, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineENPC, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000048, "Member 'BP_PostProcessManager_C_SetOutlineENPC::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetOutlineOFF
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_SetOutlineOFF final
{
public:
	bool                                          Off;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8773[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_SetOutlineOFF) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetOutlineOFF");
static_assert(sizeof(BP_PostProcessManager_C_SetOutlineOFF) == 0x000014, "Wrong size on BP_PostProcessManager_C_SetOutlineOFF");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineOFF, Off) == 0x000000, "Member 'BP_PostProcessManager_C_SetOutlineOFF::Off' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetOutlineOFF, Color) == 0x000004, "Member 'BP_PostProcessManager_C_SetOutlineOFF::Color' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsSSRResolutionInternal
// 0x0170 (0x0170 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal final
{
public:
	struct FRenderingSettings                     BaseSettings;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   OverrideParamName;                                 // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRenderingSettings                     NewSettings;                                       // 0x0080(0x0078)(Edit, BlueprintVisible, NoDestructor)
	struct FRenderingSettings                     CallFunc_SetRenderingSettingsMergeInternal_MergeSettings; // 0x00F8(0x0078)(NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal) == 0x000170, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal, BaseSettings) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal::BaseSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal, OverrideParamName) == 0x000078, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal::OverrideParamName' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal, NewSettings) == 0x000080, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal::NewSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal, CallFunc_SetRenderingSettingsMergeInternal_MergeSettings) == 0x0000F8, "Member 'BP_PostProcessManager_C_SetRenderingSettingsSSRResolutionInternal::CallFunc_SetRenderingSettingsMergeInternal_MergeSettings' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetRenderingSettingsLocation
// 0x0320 (0x0320 - 0x0000)
struct BP_PostProcessManager_C_SetRenderingSettingsLocation final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 LocationString;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FRenderingSettings                     NewSettings;                                       // 0x0018(0x0078)(Edit, BlueprintVisible, NoDestructor)
	struct FRenderingSettings                     K2Node_MakeStruct_RenderingSettings;               // 0x0090(0x0078)(NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0118(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0140(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRenderingSettingsDataTable            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8774[0x3];                                     // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRenderingSettings                     CallFunc_MergeRenderingSettings_ReturnValue;       // 0x0214(0x0078)(NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x028C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8775[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRenderingSettingsDataTable            CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0298(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetRenderingSettingsLocation) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetRenderingSettingsLocation");
static_assert(sizeof(BP_PostProcessManager_C_SetRenderingSettingsLocation) == 0x000320, "Wrong size on BP_PostProcessManager_C_SetRenderingSettingsLocation");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, LocationId) == 0x000000, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::LocationId' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, AreaId) == 0x000004, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::AreaId' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, LocationString) == 0x000008, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::LocationString' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, NewSettings) == 0x000018, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::NewSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, K2Node_MakeStruct_RenderingSettings) == 0x000090, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::K2Node_MakeStruct_RenderingSettings' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Concat_StrStr_ReturnValue) == 0x000108, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_IntToText_ReturnValue) == 0x000118, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000140, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000158, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000168, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_StringToName_ReturnValue) == 0x000178, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000180, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000210, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_MergeRenderingSettings_ReturnValue) == 0x000214, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_MergeRenderingSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00028C, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000298, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetRenderingSettingsLocation, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000318, "Member 'BP_PostProcessManager_C_SetRenderingSettingsLocation::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.ClearRenderingSettingsLocation
// 0x0080 (0x0080 - 0x0000)
struct BP_PostProcessManager_C_ClearRenderingSettingsLocation final
{
public:
	class FName                                   ParamName;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRenderingSettings                     K2Node_MakeStruct_RenderingSettings;               // 0x0008(0x0078)(NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_ClearRenderingSettingsLocation) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_ClearRenderingSettingsLocation");
static_assert(sizeof(BP_PostProcessManager_C_ClearRenderingSettingsLocation) == 0x000080, "Wrong size on BP_PostProcessManager_C_ClearRenderingSettingsLocation");
static_assert(offsetof(BP_PostProcessManager_C_ClearRenderingSettingsLocation, ParamName) == 0x000000, "Member 'BP_PostProcessManager_C_ClearRenderingSettingsLocation::ParamName' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_ClearRenderingSettingsLocation, K2Node_MakeStruct_RenderingSettings) == 0x000008, "Member 'BP_PostProcessManager_C_ClearRenderingSettingsLocation::K2Node_MakeStruct_RenderingSettings' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateOnChangeArea
// 0x0020 (0x0020 - 0x0000)
struct BP_PostProcessManager_C_PrivateOnChangeArea final
{
public:
	EChangeAreaStatus                             Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChangeLocation;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8776[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8777[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateOnChangeArea) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_PrivateOnChangeArea");
static_assert(sizeof(BP_PostProcessManager_C_PrivateOnChangeArea) == 0x000020, "Wrong size on BP_PostProcessManager_C_PrivateOnChangeArea");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, Status) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::Status' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, IsChangeLocation) == 0x000001, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::IsChangeLocation' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, CallFunc_GetSceneManager_SceneManager) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x000014, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateOnChangeArea, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x000018, "Member 'BP_PostProcessManager_C_PrivateOnChangeArea::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_PostProcessManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_PostProcessManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_PostProcessManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_PostProcessManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_PostProcessManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_PostProcessManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.IsActivePerformShot
// 0x0010 (0x0010 - 0x0000)
struct BP_PostProcessManager_C_IsActivePerformShot final
{
public:
	EPerformShotType                              ShotType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8778[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShotIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_IsActivePerformShot) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_IsActivePerformShot");
static_assert(sizeof(BP_PostProcessManager_C_IsActivePerformShot) == 0x000010, "Wrong size on BP_PostProcessManager_C_IsActivePerformShot");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, ShotType) == 0x000000, "Member 'BP_PostProcessManager_C_IsActivePerformShot::ShotType' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, IsActive) == 0x000001, "Member 'BP_PostProcessManager_C_IsActivePerformShot::IsActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, ShotIndex) == 0x000004, "Member 'BP_PostProcessManager_C_IsActivePerformShot::ShotIndex' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_IsActivePerformShot::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'BP_PostProcessManager_C_IsActivePerformShot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_IsActivePerformShot, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BP_PostProcessManager_C_IsActivePerformShot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetSASPPMCancelCelLook
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_SetSASPPMCancelCelLook final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8779[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_877A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetSASPPMCancelCelLook) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_SetSASPPMCancelCelLook");
static_assert(sizeof(BP_PostProcessManager_C_SetSASPPMCancelCelLook) == 0x000014, "Wrong size on BP_PostProcessManager_C_SetSASPPMCancelCelLook");
static_assert(offsetof(BP_PostProcessManager_C_SetSASPPMCancelCelLook, Enable) == 0x000000, "Member 'BP_PostProcessManager_C_SetSASPPMCancelCelLook::Enable' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSASPPMCancelCelLook, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'BP_PostProcessManager_C_SetSASPPMCancelCelLook::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSASPPMCancelCelLook, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_SetSASPPMCancelCelLook::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSASPPMCancelCelLook, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00000C, "Member 'BP_PostProcessManager_C_SetSASPPMCancelCelLook::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetSASPPMCancelCelLook, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_PostProcessManager_C_SetSASPPMCancelCelLook::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetVisionFogNear
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_SetVisionFogNear final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_877B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Near;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TmpMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastActive;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_877C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveVisionFog_Active;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetVisionFogNear) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetVisionFogNear");
static_assert(sizeof(BP_PostProcessManager_C_SetVisionFogNear) == 0x000028, "Wrong size on BP_PostProcessManager_C_SetVisionFogNear");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_SetVisionFogNear::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, Near) == 0x000004, "Member 'BP_PostProcessManager_C_SetVisionFogNear::Near' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, TmpMaterial) == 0x000008, "Member 'BP_PostProcessManager_C_SetVisionFogNear::TmpMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, LastActive) == 0x000010, "Member 'BP_PostProcessManager_C_SetVisionFogNear::LastActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x000018, "Member 'BP_PostProcessManager_C_SetVisionFogNear::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, CallFunc_IsActiveVisionFog_Active) == 0x000020, "Member 'BP_PostProcessManager_C_SetVisionFogNear::CallFunc_IsActiveVisionFog_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogNear, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PostProcessManager_C_SetVisionFogNear::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.SetVisionFogFar
// 0x0028 (0x0028 - 0x0000)
struct BP_PostProcessManager_C_SetVisionFogFar final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_877D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Far;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               TmpMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastActive;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_877E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_PrivateGetVisionFogMaterial_MID;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveVisionFog_Active;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PostProcessManager_C_SetVisionFogFar) == 0x000008, "Wrong alignment on BP_PostProcessManager_C_SetVisionFogFar");
static_assert(sizeof(BP_PostProcessManager_C_SetVisionFogFar) == 0x000028, "Wrong size on BP_PostProcessManager_C_SetVisionFogFar");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_SetVisionFogFar::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, Far) == 0x000004, "Member 'BP_PostProcessManager_C_SetVisionFogFar::Far' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, TmpMaterial) == 0x000008, "Member 'BP_PostProcessManager_C_SetVisionFogFar::TmpMaterial' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, LastActive) == 0x000010, "Member 'BP_PostProcessManager_C_SetVisionFogFar::LastActive' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, CallFunc_PrivateGetVisionFogMaterial_MID) == 0x000018, "Member 'BP_PostProcessManager_C_SetVisionFogFar::CallFunc_PrivateGetVisionFogMaterial_MID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, CallFunc_IsActiveVisionFog_Active) == 0x000020, "Member 'BP_PostProcessManager_C_SetVisionFogFar::CallFunc_IsActiveVisionFog_Active' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_SetVisionFogFar, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PostProcessManager_C_SetVisionFogFar::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetVisionFogNear
// 0x000C (0x000C - 0x0000)
struct BP_PostProcessManager_C_PrivateSetVisionFogNear final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_877F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Near;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetVisionFogNear) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_PrivateSetVisionFogNear");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetVisionFogNear) == 0x00000C, "Wrong size on BP_PostProcessManager_C_PrivateSetVisionFogNear");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogNear, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogNear::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogNear, Near) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogNear::Near' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogNear, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogNear::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.PrivateSetVisionFogFar
// 0x000C (0x000C - 0x0000)
struct BP_PostProcessManager_C_PrivateSetVisionFogFar final
{
public:
	EVisionFogID                                  VisionFogID;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8780[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Far;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_PrivateSetVisionFogFar) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_PrivateSetVisionFogFar");
static_assert(sizeof(BP_PostProcessManager_C_PrivateSetVisionFogFar) == 0x00000C, "Wrong size on BP_PostProcessManager_C_PrivateSetVisionFogFar");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogFar, VisionFogID) == 0x000000, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogFar::VisionFogID' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogFar, Far) == 0x000004, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogFar::Far' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_PrivateSetVisionFogFar, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'BP_PostProcessManager_C_PrivateSetVisionFogFar::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_PostProcessManager.BP_PostProcessManager_C.GetOutlineEnpcAlpha
// 0x0014 (0x0014 - 0x0000)
struct BP_PostProcessManager_C_GetOutlineEnpcAlpha final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PostProcessManager_C_GetOutlineEnpcAlpha) == 0x000004, "Wrong alignment on BP_PostProcessManager_C_GetOutlineEnpcAlpha");
static_assert(sizeof(BP_PostProcessManager_C_GetOutlineEnpcAlpha) == 0x000014, "Wrong size on BP_PostProcessManager_C_GetOutlineEnpcAlpha");
static_assert(offsetof(BP_PostProcessManager_C_GetOutlineEnpcAlpha, Alpha) == 0x000000, "Member 'BP_PostProcessManager_C_GetOutlineEnpcAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(BP_PostProcessManager_C_GetOutlineEnpcAlpha, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000004, "Member 'BP_PostProcessManager_C_GetOutlineEnpcAlpha::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");

}

