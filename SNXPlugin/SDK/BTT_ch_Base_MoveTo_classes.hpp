#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_ch_Base_MoveTo

#include "Basic.hpp"

#include "TaskBase_ch_Base_MoveTo_classes.hpp"
#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_ch_Base_MoveTo.BTT_ch_Base_MoveTo_C
// 0x0008 (0x0180 - 0x0178)
class UBTT_ch_Base_MoveTo_C : public UTaskBase_ch_Base_MoveTo_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTT_ch_Base_MoveTo_C;               // 0x0178(0x0008)(ZeroConstructor, Transient, DuplicateTransient)

public:
	void ExecuteUbergraph_BTT_ch_Base_MoveTo(int32 EntryPoint);
	void Exit_CallFromCPP(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetAIMoveTo_CallFromCPP(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetAIMoveTo(class AAIController* OwnerController, class ARSBattlePlayer_C* Player);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void OnSuccess_6FF7E653409D8C7BD2E703A76336C01D(EPathFollowingResult MovementResult);
	void OnFail_6FF7E653409D8C7BD2E703A76336C01D(EPathFollowingResult MovementResult);
	void Exit(class AAIController* OwnerController, class APawn* ControlledPawn);
	void TickMove(class AAIController* OwnerController, class APawn* ControlledPawn);
	void CheckWall(class ARSBattlePlayer_C* Player);
	void CheckMovedDistance_Tick(class ARSCharacterBase* Param_OwnerCharacter, float DeltaSeconds);
	void CheckMovedDistance_Initialize(class ARSCharacterBase* Param_OwnerCharacter);
	void CheckMoveDistance_IsEnd(class ARSCharacterBase* Param_OwnerCharacter, bool* bEnd);
	void ForceWarp(class ARSBattlePlayer_C* Param_OwnerCharacter);
	void StopAIMoveTo(class ARSCharacterBase* Param_OwnerCharacter, bool bRechargeResetAIMoveTimer);

	void Check_Stick_Move_End(class APawn* ControlledPawn, bool* bEnd) const;
	void CheckDistanceAndHeight(const struct FVector& Location1, const struct FVector& Location2, float DistanceXY, float DistanceZ, bool* bNearly) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_ch_Base_MoveTo_C">();
	}
	static class UBTT_ch_Base_MoveTo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_ch_Base_MoveTo_C>();
	}
};
static_assert(alignof(UBTT_ch_Base_MoveTo_C) == 0x000008, "Wrong alignment on UBTT_ch_Base_MoveTo_C");
static_assert(sizeof(UBTT_ch_Base_MoveTo_C) == 0x000180, "Wrong size on UBTT_ch_Base_MoveTo_C");
static_assert(offsetof(UBTT_ch_Base_MoveTo_C, UberGraphFrame_BTT_ch_Base_MoveTo_C) == 0x000178, "Member 'UBTT_ch_Base_MoveTo_C::UberGraphFrame_BTT_ch_Base_MoveTo_C' has a wrong offset!");

}

