#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_static_pl

#include "Basic.hpp"

#include "BP_static_pl_classes.hpp"
#include "BP_static_pl_parameters.hpp"


namespace SDK
{

// Function BP_static_pl.BP_static_pl_C.ExecuteUbergraph_BP_static_pl
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::ExecuteUbergraph_BP_static_pl(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ExecuteUbergraph_BP_static_pl");

	Params::BP_static_pl_C_ExecuteUbergraph_BP_static_pl Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.CreateMatchIDWidget
// (BlueprintCallable, BlueprintEvent)

void ABP_static_pl_C::CreateMatchIDWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "CreateMatchIDWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ReceiveEndPlay");

	Params::BP_static_pl_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.StartShaderAnimMontageWeightTimeLine
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCurveFloat*                      Curve                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::StartShaderAnimMontageWeightTimeLine(class UCurveFloat* Curve)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "StartShaderAnimMontageWeightTimeLine");

	Params::BP_static_pl_C_StartShaderAnimMontageWeightTimeLine Parms{};

	Parms.Curve = Curve;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_static_pl_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ReceiveTick");

	Params::BP_static_pl_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.PlayBoardAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoop                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::PlayBoardAnimation(class UAnimMontage* AnimMontage, bool IsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "PlayBoardAnimation");

	Params::BP_static_pl_C_PlayBoardAnimation Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.IsLoop = IsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.SetTicks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::SetTicks(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetTicks");

	Params::BP_static_pl_C_SetTicks Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.ShaderAnimMontageWeightTimeLine__UpdateFunc
// (BlueprintEvent)

void ABP_static_pl_C::ShaderAnimMontageWeightTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ShaderAnimMontageWeightTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.ShaderAnimMontageWeightTimeLine__FinishedFunc
// (BlueprintEvent)

void ABP_static_pl_C::ShaderAnimMontageWeightTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ShaderAnimMontageWeightTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.StopMoveTransform
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_static_pl_C::StopMoveTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "StopMoveTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.PrivateSetTicks
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::PrivateSetTicks(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "PrivateSetTicks");

	Params::BP_static_pl_C_PrivateSetTicks Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.PrivatePlayBoardAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    InIsLoop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::PrivatePlayBoardAnimation(class UAnimMontage* AnimMontage, bool InIsLoop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "PrivatePlayBoardAnimation");

	Params::BP_static_pl_C_PrivatePlayBoardAnimation Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.InIsLoop = InIsLoop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.SetIsGeneralStaticFlag
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsGeneralStatic                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::SetIsGeneralStaticFlag(bool Param_IsGeneralStatic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetIsGeneralStaticFlag");

	Params::BP_static_pl_C_SetIsGeneralStaticFlag Parms{};

	Parms.Param_IsGeneralStatic = Param_IsGeneralStatic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.SetPauseTimerHandle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPause                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::SetPauseTimerHandle(bool IsPause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetPauseTimerHandle");

	Params::BP_static_pl_C_SetPauseTimerHandle Parms{};

	Parms.IsPause = IsPause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.StartMatchIDWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CharaID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ArmyCodeMessageID                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::StartMatchIDWidget(const class FName CharaID, const class FName ArmyCodeMessageID, const struct FVector& Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "StartMatchIDWidget");

	Params::BP_static_pl_C_StartMatchIDWidget Parms{};

	Parms.CharaID = CharaID;
	Parms.ArmyCodeMessageID = ArmyCodeMessageID;
	Parms.Scale = std::move(Scale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.EndMatchIDWidget
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_static_pl_C::EndMatchIDWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "EndMatchIDWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.SetHiddenInGameMatchIDWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHidden                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::SetHiddenInGameMatchIDWidget(bool NewHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetHiddenInGameMatchIDWidget");

	Params::BP_static_pl_C_SetHiddenInGameMatchIDWidget Parms{};

	Parms.NewHidden = NewHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.SetToneMapCounter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::SetToneMapCounter(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetToneMapCounter");

	Params::BP_static_pl_C_SetToneMapCounter Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.ClearAttachEventAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_static_pl_C::ClearAttachEventAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "ClearAttachEventAsset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.SetAlphaAttachEventAsset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FloatParam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_static_pl_C::SetAlphaAttachEventAsset(float FloatParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetAlphaAttachEventAsset");

	Params::BP_static_pl_C_SetAlphaAttachEventAsset Parms{};

	Parms.FloatParam = FloatParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.SetMaterialUseCrossFadeAlpha
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::SetMaterialUseCrossFadeAlpha(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "SetMaterialUseCrossFadeAlpha");

	Params::BP_static_pl_C_SetMaterialUseCrossFadeAlpha Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_static_pl.BP_static_pl_C.EventEnd
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_static_pl_C::EventEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "EventEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_static_pl.BP_static_pl_C.IsAnimationPlay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::IsAnimationPlay(bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "IsAnimationPlay");

	Params::BP_static_pl_C_IsAnimationPlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function BP_static_pl.BP_static_pl_C.IsAnimationPlayToggle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    PlayToggle                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::IsAnimationPlayToggle(bool* PlayToggle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "IsAnimationPlayToggle");

	Params::BP_static_pl_C_IsAnimationPlayToggle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayToggle != nullptr)
		*PlayToggle = Parms.PlayToggle;
}


// Function BP_static_pl.BP_static_pl_C.IsPlayBeforeAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlay                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::IsPlayBeforeAnimation(bool* IsPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "IsPlayBeforeAnimation");

	Params::BP_static_pl_C_IsPlayBeforeAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlay != nullptr)
		*IsPlay = Parms.IsPlay;
}


// Function BP_static_pl.BP_static_pl_C.StopBoadAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_static_pl_C::StopBoadAnimation(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_static_pl_C", "StopBoadAnimation");

	Params::BP_static_pl_C_StopBoadAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}

}

