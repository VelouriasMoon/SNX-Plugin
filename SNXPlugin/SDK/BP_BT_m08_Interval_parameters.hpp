#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BT_m08_Interval

#include "Basic.hpp"

#include "FEventTriggerCommand_structs.hpp"


namespace SDK::Params
{

// Function BP_BT_m08_Interval.BP_BT_m08_Interval_C.ExecuteUbergraph_BP_BT_m08_Interval
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_457D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SceneManager_C*                     CallFunc_GetSceneManager_SceneManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_457E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand;            // 0x0018(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_AddEventTriggerCommand_self_CastInput;    // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval) == 0x000008, "Wrong alignment on BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval");
static_assert(sizeof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval) == 0x0000A0, "Wrong size on BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, EntryPoint) == 0x000000, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, CallFunc_GetSceneManager_SceneManager) == 0x000008, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, CallFunc_CheckScenarioFlag_ReturnValue) == 0x000010, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::CallFunc_CheckScenarioFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, K2Node_MakeStruct_FEventTriggerCommand) == 0x000018, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::K2Node_MakeStruct_FEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, CallFunc_GetEventManager_EventManager) == 0x000080, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, CallFunc_AddEventTriggerCommand_self_CastInput) == 0x000088, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::CallFunc_AddEventTriggerCommand_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_BT_m08_Interval_C_ExecuteUbergraph_BP_BT_m08_Interval::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

