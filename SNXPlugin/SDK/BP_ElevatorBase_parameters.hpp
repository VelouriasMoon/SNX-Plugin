#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ElevatorBase

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ElevatorBase.BP_ElevatorBase_C.ExecuteUbergraph_BP_ElevatorBase
// 0x02B0 (0x02B0 - 0x0000)
struct BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ElevatorMoveEnd_Dummy;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A85[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CallFunc_FinishSpawningActor_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A86[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A87[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A88[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0098(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A89[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0140(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ElevatorMoveStart_Dummy;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ElevatorMoveStart_Dummy_1;                // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8A[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Floor;                                // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayCutScene_OK;                       // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8B[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0200(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_InMenu;                               // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8C[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase) == 0x000010, "Wrong alignment on BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase");
static_assert(sizeof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase) == 0x0002B0, "Wrong size on BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, EntryPoint) == 0x000000, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_ElevatorMoveEnd_Dummy) == 0x000004, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_ElevatorMoveEnd_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000040, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_FinishSpawningActor_ReturnValue) == 0x000048, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_Event_DeltaSeconds) == 0x000050, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000058, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000060, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000068, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000070, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000078, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000080, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000088, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000090, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x000094, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000098, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000120, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000128, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000130, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000138, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00013C, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000140, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001C8, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_ElevatorMoveStart_Dummy) == 0x0001D0, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_ElevatorMoveStart_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001D1, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001D2, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_ElevatorMoveStart_Dummy_1) == 0x0001D3, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_ElevatorMoveStart_Dummy_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_Event_Floor) == 0x0001D8, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_Event_Floor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_IsPlaying_ReturnValue) == 0x0001DC, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_Event_EndPlayReason) == 0x0001DD, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_IsValid_ReturnValue) == 0x0001DE, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_CanPlayCutScene_OK) == 0x0001DF, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_CanPlayCutScene_OK' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001E0, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherActor) == 0x0001E8, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherComp) == 0x0001F0, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001F8, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x0001FC, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000200, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_GetObjectName_ReturnValue) == 0x000288, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, K2Node_Event_InMenu) == 0x000298, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::K2Node_Event_InMenu' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase, CallFunc_Concat_StrStr_ReturnValue) == 0x0002A0, "Member 'BP_ElevatorBase_C_ExecuteUbergraph_BP_ElevatorBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetupMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_ElevatorBase_C_SetupMenu final
{
public:
	bool                                          InMenu;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_SetupMenu) == 0x000001, "Wrong alignment on BP_ElevatorBase_C_SetupMenu");
static_assert(sizeof(BP_ElevatorBase_C_SetupMenu) == 0x000001, "Wrong size on BP_ElevatorBase_C_SetupMenu");
static_assert(offsetof(BP_ElevatorBase_C_SetupMenu, InMenu) == 0x000000, "Member 'BP_ElevatorBase_C_SetupMenu::InMenu' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ElevatorBase_C_BndEvt__PsyInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ElevatorBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ElevatorBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_ElevatorBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ElevatorBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_ElevatorBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ElevatorBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.EV_MoveFloorForce
// 0x0004 (0x0004 - 0x0000)
struct BP_ElevatorBase_C_EV_MoveFloorForce final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_EV_MoveFloorForce) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_EV_MoveFloorForce");
static_assert(sizeof(BP_ElevatorBase_C_EV_MoveFloorForce) == 0x000004, "Wrong size on BP_ElevatorBase_C_EV_MoveFloorForce");
static_assert(offsetof(BP_ElevatorBase_C_EV_MoveFloorForce, Floor) == 0x000000, "Member 'BP_ElevatorBase_C_EV_MoveFloorForce::Floor' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorInnerInsideCollision_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A8F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ElevatorBase_C_BndEvt__ElevatorMoveStartCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ElevatorBase_C_BndEvt__MoveStartCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ElevatorBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_ReceiveTick");
static_assert(sizeof(BP_ElevatorBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_ElevatorBase_C_ReceiveTick");
static_assert(offsetof(BP_ElevatorBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ElevatorBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorMove
// 0x03A0 (0x03A0 - 0x0000)
struct BP_ElevatorBase_C_ElevatorMove final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LDeltaMove;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          ElevatorMoveSound;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          LMoveSound;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldActorLocation;                                  // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaAlpha;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovePos;                                           // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CalcElevatorMove;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A90[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A91[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A92[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0158(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsPlaying_ReturnValue_1;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A93[0x6];                                     // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URSAtomComponentBase*                   CallFunc_SpawnSoundAtLocationRS_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A94[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ElevatorMoveEnd_Dummy;                    // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A95[0x3];                                     // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0264(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A96[0x3];                                     // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_2;     // 0x02F0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_2;        // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A97[0x1];                                     // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue_1;                      // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorMove) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_ElevatorMove");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorMove) == 0x0003A0, "Wrong size on BP_ElevatorBase_C_ElevatorMove");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, DeltaSeconds) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorMove::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, LDeltaMove) == 0x000004, "Member 'BP_ElevatorBase_C_ElevatorMove::LDeltaMove' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, ElevatorMoveSound) == 0x000010, "Member 'BP_ElevatorBase_C_ElevatorMove::ElevatorMoveSound' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, LMoveSound) == 0x000018, "Member 'BP_ElevatorBase_C_ElevatorMove::LMoveSound' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, OldActorLocation) == 0x000020, "Member 'BP_ElevatorBase_C_ElevatorMove::OldActorLocation' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, DeltaAlpha) == 0x00002C, "Member 'BP_ElevatorBase_C_ElevatorMove::DeltaAlpha' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, MovePos) == 0x000030, "Member 'BP_ElevatorBase_C_ElevatorMove::MovePos' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CalcElevatorMove) == 0x00003C, "Member 'BP_ElevatorBase_C_ElevatorMove::CalcElevatorMove' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_IsPlaying_ReturnValue) == 0x000040, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_GetSocketLocation_ReturnValue) == 0x000044, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_VSize_ReturnValue) == 0x00006C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000070, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00007C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000088, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000094, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0000A0, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_VectorVector_ReturnValue) == 0x0000AC, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000B8, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000140, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000144, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000148, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x00014C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000158, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_IsPlaying_ReturnValue_1) == 0x0001E0, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_IsValid_ReturnValue) == 0x0001E1, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_SpawnSoundAtLocationRS_ReturnValue) == 0x0001E8, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_SpawnSoundAtLocationRS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x0001F0, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001FC, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000208, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000218, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00021C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000228, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00022C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x000230, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x00023C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000248, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_ElevatorMoveEnd_Dummy) == 0x000254, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_ElevatorMoveEnd_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_VEase_ReturnValue) == 0x000258, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000264, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x0002EC, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_SweepHitResult_2) == 0x0002F0, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_K2_SetActorLocation_ReturnValue_2) == 0x000378, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_K2_SetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000379, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00037A, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_FClamp_ReturnValue) == 0x00037C, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000380, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000384, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_VEase_ReturnValue_1) == 0x000388, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_VEase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_VSize_ReturnValue_1) == 0x000394, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, K2Node_SwitchInteger_CmpSuccess) == 0x000398, "Member 'BP_ElevatorBase_C_ElevatorMove::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMove, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000399, "Member 'BP_ElevatorBase_C_ElevatorMove::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorMoveStart
// 0x0390 (0x0390 - 0x0000)
struct BP_ElevatorBase_C_ElevatorMoveStart final
{
public:
	int32                                         GotoFloor;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dummy;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A98[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	struct FVector                                L_pos;                                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A99[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         L_playerManager;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LDeltaMove;                                        // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9A[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0070(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9B[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9C[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9D[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9E[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9F[0xB];                                     // 0x0115(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLockTarget_ReturnValue;                 // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA0[0x3];                                     // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA1[0xC];                                     // 0x01B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0030)(IsPlainOldData, NoDestructor)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue;                    // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_1;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA2[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_1;       // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetNpcWarpDither_bDummy;                  // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetNpcWarpDither_bDummy_1;                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA3[0x5];                                     // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_2;       // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA4[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface_3;       // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ForceWarp_Interface_Dummy;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ForceWarp_Interface_Dummy_1;              // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA5[0x5];                                     // 0x028B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager_2;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetPlayer_ReturnValue_2;                  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattleCharacter_C*                   CallFunc_Array_Get_Item;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA6[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBattling_bBatting;                      // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA7[0x5];                                     // 0x02CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AA8[0x4];                                     // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EnemyInterface_C> K2Node_DynamicCast_AsBPI_Enemy_Interface;          // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AA9[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetEnemyTarget_NewParam;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AAA[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AAB[0x2];                                     // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x031C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0328(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0350(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x0368(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0374(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0380(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorMoveStart) == 0x000010, "Wrong alignment on BP_ElevatorBase_C_ElevatorMoveStart");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorMoveStart) == 0x000390, "Wrong size on BP_ElevatorBase_C_ElevatorMoveStart");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, GotoFloor) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::GotoFloor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Dummy) == 0x000004, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, LPlayer) == 0x000008, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, LPlayerList) == 0x000010, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, L_pos) == 0x000020, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::L_pos' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, L_playerManager) == 0x000030, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::L_playerManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, LDeltaMove) == 0x000038, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::LDeltaMove' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_VSize_ReturnValue) == 0x000044, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_VSize_ReturnValue_1) == 0x000048, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayerManager_PlayerManager) == 0x000068, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayersAll_Player) == 0x000070, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetEventManager_EventManager) == 0x000080, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000098, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetMainPlayer_Player) == 0x0000A0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000B0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Location) == 0x0000E4, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Rotation) == 0x0000F0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Scale) == 0x0000FC, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_X) == 0x000108, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Y) == 0x00010C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Z) == 0x000110, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_IsValid_ReturnValue_2) == 0x000114, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000120, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Location_1) == 0x000150, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Rotation_1) == 0x00015C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakTransform_Scale_1) == 0x000168, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_IsLockTarget_ReturnValue) == 0x000174, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_IsLockTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_X_1) == 0x000178, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Y_1) == 0x00017C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Z_1) == 0x000180, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_X_2) == 0x000184, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Y_2) == 0x000188, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Z_2) == 0x00018C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_X_3) == 0x000190, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Y_3) == 0x000194, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_BreakVector_Z_3) == 0x000198, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_MakeVector_ReturnValue) == 0x00019C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_MakeVector_ReturnValue_1) == 0x0001A8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayer_ReturnValue) == 0x000220, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayer_ReturnValue_1) == 0x000228, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000230, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsBPI_Player_Interface_1) == 0x000248, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsBPI_Player_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_SetNpcWarpDither_bDummy) == 0x000259, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_SetNpcWarpDither_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_SetNpcWarpDither_bDummy_1) == 0x00025A, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_SetNpcWarpDither_bDummy_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsBPI_Player_Interface_2) == 0x000260, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsBPI_Player_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess_2) == 0x000270, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsBPI_Player_Interface_3) == 0x000278, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsBPI_Player_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess_3) == 0x000288, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_ForceWarp_Interface_Dummy) == 0x000289, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_ForceWarp_Interface_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_ForceWarp_Interface_Dummy_1) == 0x00028A, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_ForceWarp_Interface_Dummy_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayerManager_PlayerManager_2) == 0x000290, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayerManager_PlayerManager_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetPlayer_ReturnValue_2) == 0x000298, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Length_ReturnValue) == 0x0002AC, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Length_ReturnValue_1) == 0x0002B8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsRSBattle_Player) == 0x0002C0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess_4) == 0x0002C8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Less_IntInt_ReturnValue) == 0x0002C9, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_IsBattling_bBatting) == 0x0002CA, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_IsBattling_bBatting' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_GetEnemyManager_Manager) == 0x0002D0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Add_ReturnValue) == 0x0002D8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Get_Item_1) == 0x0002E0, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_AsBPI_Enemy_Interface) == 0x0002E8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_AsBPI_Enemy_Interface' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, K2Node_DynamicCast_bSuccess_5) == 0x0002F8, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Array_Length_ReturnValue_2) == 0x0002FC, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_ResetEnemyTarget_NewParam) == 0x000300, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_ResetEnemyTarget_NewParam' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x000301, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000304, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Loop_Num_Variable) == 0x000310, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Less_IntInt_ReturnValue_2) == 0x000314, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Greater_IntInt_ReturnValue) == 0x000315, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000318, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00031C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000328, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, Temp_int_Array_Index_Variable_2) == 0x000334, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000344, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000350, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00035C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x000368, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000374, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000380, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00038C, "Member 'BP_ElevatorBase_C_ElevatorMoveStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorMoveAddParam
// 0x00B4 (0x00B4 - 0x0000)
struct BP_ElevatorBase_C_ElevatorMoveAddParam final
{
public:
	struct FVector                                ElevatorNewPos;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CalcElevatorMove;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorMoveAddParam) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_ElevatorMoveAddParam");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorMoveAddParam) == 0x0000B4, "Wrong size on BP_ElevatorBase_C_ElevatorMoveAddParam");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, ElevatorNewPos) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::ElevatorNewPos' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, CalcElevatorMove) == 0x00000C, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::CalcElevatorMove' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00001C, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveAddParam, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B0, "Member 'BP_ElevatorBase_C_ElevatorMoveAddParam::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorMoveEnd
// 0x0048 (0x0048 - 0x0000)
struct BP_ElevatorBase_C_ElevatorMoveEnd final
{
public:
	bool                                          Dummy;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AAC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AAD[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorMoveEnd) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_ElevatorMoveEnd");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorMoveEnd) == 0x000048, "Wrong size on BP_ElevatorBase_C_ElevatorMoveEnd");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, Dummy) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, LPlayerList) == 0x000008, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_GetEventManager_EventManager) == 0x000038, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorMoveEnd, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_ElevatorBase_C_ElevatorMoveEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.PlayerInElevator
// 0x0038 (0x0038 - 0x0000)
struct BP_ElevatorBase_C_PlayerInElevator final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMainPlayer_bMainPlayer;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_PlayerInElevator) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_PlayerInElevator");
static_assert(sizeof(BP_ElevatorBase_C_PlayerInElevator) == 0x000038, "Wrong size on BP_ElevatorBase_C_PlayerInElevator");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, HitActor) == 0x000000, "Member 'BP_ElevatorBase_C_PlayerInElevator::HitActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, LPlayer) == 0x000008, "Member 'BP_ElevatorBase_C_PlayerInElevator::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, LPlayerList) == 0x000010, "Member 'BP_ElevatorBase_C_PlayerInElevator::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000020, "Member 'BP_ElevatorBase_C_PlayerInElevator::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ElevatorBase_C_PlayerInElevator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerInElevator, CallFunc_IsMainPlayer_bMainPlayer) == 0x000031, "Member 'BP_ElevatorBase_C_PlayerInElevator::CallFunc_IsMainPlayer_bMainPlayer' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.PlayerOutElevator
// 0x0098 (0x0098 - 0x0000)
struct BP_ElevatorBase_C_PlayerOutElevator final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      LPlayer;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AAE[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMainPlayer_bMainPlayer;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AAF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AB0[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB1[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetPlayersAll_Player;                     // 0x0058(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_ElevatorSetting_self_CastInput;           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ElevatorSetting_bDummy;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AB3[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_PlayerOutElevator) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_PlayerOutElevator");
static_assert(sizeof(BP_ElevatorBase_C_PlayerOutElevator) == 0x000098, "Wrong size on BP_ElevatorBase_C_PlayerOutElevator");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, HitActor) == 0x000000, "Member 'BP_ElevatorBase_C_PlayerOutElevator::HitActor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, LPlayer) == 0x000008, "Member 'BP_ElevatorBase_C_PlayerOutElevator::LPlayer' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, LPlayerList) == 0x000010, "Member 'BP_ElevatorBase_C_PlayerOutElevator::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000020, "Member 'BP_ElevatorBase_C_PlayerOutElevator::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ElevatorBase_C_PlayerOutElevator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_ElevatorBase_C_PlayerOutElevator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_IsMainPlayer_bMainPlayer) == 0x000038, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_IsMainPlayer_bMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BP_ElevatorBase_C_PlayerOutElevator::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_ElevatorBase_C_PlayerOutElevator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000044, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_GetPlayerManager_PlayerManager) == 0x000050, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_GetPlayersAll_Player) == 0x000058, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_GetPlayersAll_Player' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_ElevatorSetting_self_CastInput) == 0x000070, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_ElevatorSetting_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_ElevatorSetting_bDummy) == 0x000080, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_ElevatorSetting_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_Find_ReturnValue) == 0x000084, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_Find_ReturnValue_1) == 0x000088, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_Find_ReturnValue_2) == 0x00008C, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerOutElevator, CallFunc_Array_RemoveItem_ReturnValue) == 0x000090, "Member 'BP_ElevatorBase_C_PlayerOutElevator::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.PlayerMoveForElevator
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ElevatorBase_C_PlayerMoveForElevator final
{
public:
	struct FVector                                DeltaMove;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattleCharacter_C*>           AllCharacter;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFlying_ReturnValue;                     // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_PlayerMoveForElevator) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_PlayerMoveForElevator");
static_assert(sizeof(BP_ElevatorBase_C_PlayerMoveForElevator) == 0x0000C8, "Wrong size on BP_ElevatorBase_C_PlayerMoveForElevator");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, DeltaMove) == 0x000000, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::DeltaMove' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, AllCharacter) == 0x000010, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::AllCharacter' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x00003C, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_IsFlying_ReturnValue) == 0x0000C5, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_IsFlying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_IsFalling_ReturnValue) == 0x0000C6, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_PlayerMoveForElevator, CallFunc_BooleanOR_ReturnValue) == 0x0000C7, "Member 'BP_ElevatorBase_C_PlayerMoveForElevator::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.MoveFloorForce
// 0x00A4 (0x00A4 - 0x0000)
struct BP_ElevatorBase_C_MoveFloorForce final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ElevatorMoveEnd_Dummy;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AB6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_MoveFloorForce) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_MoveFloorForce");
static_assert(sizeof(BP_ElevatorBase_C_MoveFloorForce) == 0x0000A4, "Wrong size on BP_ElevatorBase_C_MoveFloorForce");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, Floor) == 0x000000, "Member 'BP_ElevatorBase_C_MoveFloorForce::Floor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_ElevatorMoveEnd_Dummy) == 0x000004, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_ElevatorMoveEnd_Dummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_Add_VectorVector_ReturnValue) == 0x000008, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000018, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000A0, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_MoveFloorForce, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_ElevatorBase_C_MoveFloorForce::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ResetToPlayerCamera
// 0x0018 (0x0018 - 0x0000)
struct BP_ElevatorBase_C_ResetToPlayerCamera final
{
public:
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    K2Node_DynamicCast_AsBP_Player_Manager;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_ResetToPlayerCamera) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_ResetToPlayerCamera");
static_assert(sizeof(BP_ElevatorBase_C_ResetToPlayerCamera) == 0x000018, "Wrong size on BP_ElevatorBase_C_ResetToPlayerCamera");
static_assert(offsetof(BP_ElevatorBase_C_ResetToPlayerCamera, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_ElevatorBase_C_ResetToPlayerCamera::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ResetToPlayerCamera, K2Node_DynamicCast_AsBP_Player_Manager) == 0x000008, "Member 'BP_ElevatorBase_C_ResetToPlayerCamera::K2Node_DynamicCast_AsBP_Player_Manager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ResetToPlayerCamera, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ElevatorBase_C_ResetToPlayerCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ResetToPlayerCamera, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ElevatorBase_C_ResetToPlayerCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetToElevatorCamera
// 0x0008 (0x0008 - 0x0000)
struct BP_ElevatorBase_C_SetToElevatorCamera final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_SetToElevatorCamera) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_SetToElevatorCamera");
static_assert(sizeof(BP_ElevatorBase_C_SetToElevatorCamera) == 0x000008, "Wrong size on BP_ElevatorBase_C_SetToElevatorCamera");
static_assert(offsetof(BP_ElevatorBase_C_SetToElevatorCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_ElevatorBase_C_SetToElevatorCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.UpdateCurrentFloor
// 0x0028 (0x0028 - 0x0000)
struct BP_ElevatorBase_C_UpdateCurrentFloor final
{
public:
	int32                                         NewFloor;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELiftFloorInfoId                              LiftId;                                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6AB7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetSceneManager_SceneManager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SceneManager_C*                     K2Node_DynamicCast_AsBP_Scene_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_UpdateCurrentFloor) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_UpdateCurrentFloor");
static_assert(sizeof(BP_ElevatorBase_C_UpdateCurrentFloor) == 0x000028, "Wrong size on BP_ElevatorBase_C_UpdateCurrentFloor");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, NewFloor) == 0x000000, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::NewFloor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, LiftId) == 0x000004, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::LiftId' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x000008, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, CallFunc_GetSceneManager_SceneManager) == 0x000010, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::CallFunc_GetSceneManager_SceneManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, K2Node_DynamicCast_AsBP_Scene_Manager) == 0x000018, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::K2Node_DynamicCast_AsBP_Scene_Manager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_UpdateCurrentFloor, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000022, "Member 'BP_ElevatorBase_C_UpdateCurrentFloor::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorLight
// 0x000C (0x000C - 0x0000)
struct BP_ElevatorBase_C_ElevatorLight final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AB8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorLight) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_ElevatorLight");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorLight) == 0x00000C, "Wrong size on BP_ElevatorBase_C_ElevatorLight");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorLight, Time) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorLight::Time' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorLight, Condition) == 0x000004, "Member 'BP_ElevatorBase_C_ElevatorLight::Condition' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorLight, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_ElevatorBase_C_ElevatorLight::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetAvailableWorldMap
// 0x0028 (0x0028 - 0x0000)
struct BP_ElevatorBase_C_SetAvailableWorldMap final
{
public:
	bool                                          Available;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AB9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABA[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorldmapOpenParam*                     CallFunc_GetWorldmapOpenParam_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_SetAvailableWorldMap) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_SetAvailableWorldMap");
static_assert(sizeof(BP_ElevatorBase_C_SetAvailableWorldMap) == 0x000028, "Wrong size on BP_ElevatorBase_C_SetAvailableWorldMap");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, Available) == 0x000000, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::Available' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, CallFunc_GetWorldmapOpenParam_ReturnValue) == 0x000018, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::CallFunc_GetWorldmapOpenParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetAvailableWorldMap, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_ElevatorBase_C_SetAvailableWorldMap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.AdjustFloorInPlayerSpawn
// 0x000C (0x000C - 0x0000)
struct BP_ElevatorBase_C_AdjustFloorInPlayerSpawn final
{
public:
	struct FVector                                PlayerPos;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_AdjustFloorInPlayerSpawn) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_AdjustFloorInPlayerSpawn");
static_assert(sizeof(BP_ElevatorBase_C_AdjustFloorInPlayerSpawn) == 0x00000C, "Wrong size on BP_ElevatorBase_C_AdjustFloorInPlayerSpawn");
static_assert(offsetof(BP_ElevatorBase_C_AdjustFloorInPlayerSpawn, PlayerPos) == 0x000000, "Member 'BP_ElevatorBase_C_AdjustFloorInPlayerSpawn::PlayerPos' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetElevatorTickEnable
// 0x0001 (0x0001 - 0x0000)
struct BP_ElevatorBase_C_SetElevatorTickEnable final
{
public:
	bool                                          Enable_in;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_SetElevatorTickEnable) == 0x000001, "Wrong alignment on BP_ElevatorBase_C_SetElevatorTickEnable");
static_assert(sizeof(BP_ElevatorBase_C_SetElevatorTickEnable) == 0x000001, "Wrong size on BP_ElevatorBase_C_SetElevatorTickEnable");
static_assert(offsetof(BP_ElevatorBase_C_SetElevatorTickEnable, Enable_in) == 0x000000, "Member 'BP_ElevatorBase_C_SetElevatorTickEnable::Enable_in' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetInitialPosition
// 0x0034 (0x0034 - 0x0000)
struct BP_ElevatorBase_C_SetInitialPosition final
{
public:
	struct FVector                                SetPosition;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABB[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_SetInitialPosition) == 0x000004, "Wrong alignment on BP_ElevatorBase_C_SetInitialPosition");
static_assert(sizeof(BP_ElevatorBase_C_SetInitialPosition) == 0x000034, "Wrong size on BP_ElevatorBase_C_SetInitialPosition");
static_assert(offsetof(BP_ElevatorBase_C_SetInitialPosition, SetPosition) == 0x000000, "Member 'BP_ElevatorBase_C_SetInitialPosition::SetPosition' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetInitialPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_ElevatorBase_C_SetInitialPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetInitialPosition, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_ElevatorBase_C_SetInitialPosition::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetInitialPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00001C, "Member 'BP_ElevatorBase_C_SetInitialPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_SetInitialPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_ElevatorBase_C_SetInitialPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.SetupMenuPPC
// 0x0001 (0x0001 - 0x0000)
struct BP_ElevatorBase_C_SetupMenuPPC final
{
public:
	bool                                          InMenu;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorBase_C_SetupMenuPPC) == 0x000001, "Wrong alignment on BP_ElevatorBase_C_SetupMenuPPC");
static_assert(sizeof(BP_ElevatorBase_C_SetupMenuPPC) == 0x000001, "Wrong size on BP_ElevatorBase_C_SetupMenuPPC");
static_assert(offsetof(BP_ElevatorBase_C_SetupMenuPPC, InMenu) == 0x000000, "Member 'BP_ElevatorBase_C_SetupMenuPPC::InMenu' has a wrong offset!");

// Function BP_ElevatorBase.BP_ElevatorBase_C.ElevatorInPlayerSetting
// 0x0028 (0x0028 - 0x0000)
struct BP_ElevatorBase_C_ElevatorInPlayerSetting final
{
public:
	class ARSBattlePlayer_C*                      InPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_ElevatorSetting_self_CastInput;           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ElevatorSetting_bDummy;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ABC[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorBase_C_ElevatorInPlayerSetting) == 0x000008, "Wrong alignment on BP_ElevatorBase_C_ElevatorInPlayerSetting");
static_assert(sizeof(BP_ElevatorBase_C_ElevatorInPlayerSetting) == 0x000028, "Wrong size on BP_ElevatorBase_C_ElevatorInPlayerSetting");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, InPlayer) == 0x000000, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::InPlayer' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, CallFunc_ElevatorSetting_self_CastInput) == 0x000008, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::CallFunc_ElevatorSetting_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, CallFunc_ElevatorSetting_bDummy) == 0x000018, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::CallFunc_ElevatorSetting_bDummy' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, CallFunc_Array_Add_ReturnValue) == 0x00001C, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, CallFunc_Array_Add_ReturnValue_1) == 0x000020, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorBase_C_ElevatorInPlayerSetting, CallFunc_Array_Add_ReturnValue_2) == 0x000024, "Member 'BP_ElevatorBase_C_ElevatorInPlayerSetting::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

}

