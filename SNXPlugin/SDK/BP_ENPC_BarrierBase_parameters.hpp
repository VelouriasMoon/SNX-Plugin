#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENPC_BarrierBase

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.ExecuteUbergraph_BP_ENPC_BarrierBase
// 0x01E8 (0x01E8 - 0x0000)
struct BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E44[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> K2Node_DynamicCast_AsBPI_Player_Interface;         // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E45[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHCHitResult                           K2Node_ComponentBoundEvent_Result;                 // 0x0020(0x01C0)(ContainsInstancedReference)
	bool                                          CallFunc_EnpcBarrierHitNotify_Dammy;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase) == 0x000008, "Wrong alignment on BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase");
static_assert(sizeof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase) == 0x0001E8, "Wrong size on BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, EntryPoint) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, K2Node_DynamicCast_AsBPI_Player_Interface) == 0x000008, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::K2Node_DynamicCast_AsBPI_Player_Interface' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, K2Node_ComponentBoundEvent_Result) == 0x000020, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::K2Node_ComponentBoundEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, CallFunc_EnpcBarrierHitNotify_Dammy) == 0x0001E0, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::CallFunc_EnpcBarrierHitNotify_Dammy' has a wrong offset!");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase, K2Node_Event_EndPlayReason) == 0x0001E1, "Member 'BP_ENPC_BarrierBase_C_ExecuteUbergraph_BP_ENPC_BarrierBase::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPC_BarrierBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_ENPC_BarrierBase_C_ReceiveEndPlay");
static_assert(sizeof(BP_ENPC_BarrierBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_ENPC_BarrierBase_C_ReceiveEndPlay");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature final
{
public:
	struct FHCHitResult                           Result;                                            // 0x0000(0x01C0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");
static_assert(sizeof(BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature) == 0x0001C0, "Wrong size on BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature");
static_assert(offsetof(BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature, Result) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature::Result' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPC_BarrierBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ENPC_BarrierBase_C_ReceiveTick");
static_assert(sizeof(BP_ENPC_BarrierBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_ENPC_BarrierBase_C_ReceiveTick");
static_assert(offsetof(BP_ENPC_BarrierBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.SetBarrierHp
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPC_BarrierBase_C_SetBarrierHp final
{
public:
	int32                                         SetHp;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_SetBarrierHp) == 0x000004, "Wrong alignment on BP_ENPC_BarrierBase_C_SetBarrierHp");
static_assert(sizeof(BP_ENPC_BarrierBase_C_SetBarrierHp) == 0x000004, "Wrong size on BP_ENPC_BarrierBase_C_SetBarrierHp");
static_assert(offsetof(BP_ENPC_BarrierBase_C_SetBarrierHp, SetHp) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_SetBarrierHp::SetHp' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.GetBarrierHp
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPC_BarrierBase_C_GetBarrierHp final
{
public:
	int32                                         CurrentHp;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_GetBarrierHp) == 0x000004, "Wrong alignment on BP_ENPC_BarrierBase_C_GetBarrierHp");
static_assert(sizeof(BP_ENPC_BarrierBase_C_GetBarrierHp) == 0x000004, "Wrong size on BP_ENPC_BarrierBase_C_GetBarrierHp");
static_assert(offsetof(BP_ENPC_BarrierBase_C_GetBarrierHp, CurrentHp) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_GetBarrierHp::CurrentHp' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.SetActive
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPC_BarrierBase_C_SetActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_SetActive) == 0x000001, "Wrong alignment on BP_ENPC_BarrierBase_C_SetActive");
static_assert(sizeof(BP_ENPC_BarrierBase_C_SetActive) == 0x000001, "Wrong size on BP_ENPC_BarrierBase_C_SetActive");
static_assert(offsetof(BP_ENPC_BarrierBase_C_SetActive, Active) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_SetActive::Active' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.SetCollisionRadius
// 0x0004 (0x0004 - 0x0000)
struct BP_ENPC_BarrierBase_C_SetCollisionRadius final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_SetCollisionRadius) == 0x000004, "Wrong alignment on BP_ENPC_BarrierBase_C_SetCollisionRadius");
static_assert(sizeof(BP_ENPC_BarrierBase_C_SetCollisionRadius) == 0x000004, "Wrong size on BP_ENPC_BarrierBase_C_SetCollisionRadius");
static_assert(offsetof(BP_ENPC_BarrierBase_C_SetCollisionRadius, Radius) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_SetCollisionRadius::Radius' has a wrong offset!");

// Function BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C.GetActive
// 0x0001 (0x0001 - 0x0000)
struct BP_ENPC_BarrierBase_C_GetActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ENPC_BarrierBase_C_GetActive) == 0x000001, "Wrong alignment on BP_ENPC_BarrierBase_C_GetActive");
static_assert(sizeof(BP_ENPC_BarrierBase_C_GetActive) == 0x000001, "Wrong size on BP_ENPC_BarrierBase_C_GetActive");
static_assert(offsetof(BP_ENPC_BarrierBase_C_GetActive, bActive) == 0x000000, "Member 'BP_ENPC_BarrierBase_C_GetActive::bActive' has a wrong offset!");

}

