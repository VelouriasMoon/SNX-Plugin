#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerActionStateWalkRun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_PlayerActionStateCommonBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlayerActionStateWalkRun.BP_PlayerActionStateWalkRun_C
// 0x0030 (0x0118 - 0x00E8)
class UBP_PlayerActionStateWalkRun_C final : public UBP_PlayerActionStateCommonBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlayerActionStateWalkRun_C;      // 0x00E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bRootMotionModeSwitch;                             // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45F0[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RotateTimer;                                       // 0x00F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StoreMaxAcceleration;                              // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RootMotionInterpTimer;                             // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RootMotionInterpDir;                               // 0x0100(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PARAM_RootMotionInterpTime;                        // 0x010C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PARAM_RootMotionInterpDistance;                    // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlayerActionStateWalkRun(int32 EntryPoint);
	void UnbindChangeWalkRunStateKind();
	void BindChangeWalkRunStateKind();
	int32 Enter(int32 Param);
	int32 Update();
	int32 Exit(int32 NextStateIndex);
	void UpdateRotate(float DeltaSeconds);
	void OnChangeWalkRunStateKind(EPlayerWalkRunStateKind Kind);
	void CheckRootMotionMode();
	void UpdateRootMotionInterp(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlayerActionStateWalkRun_C">();
	}
	static class UBP_PlayerActionStateWalkRun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PlayerActionStateWalkRun_C>();
	}
};
static_assert(alignof(UBP_PlayerActionStateWalkRun_C) == 0x000008, "Wrong alignment on UBP_PlayerActionStateWalkRun_C");
static_assert(sizeof(UBP_PlayerActionStateWalkRun_C) == 0x000118, "Wrong size on UBP_PlayerActionStateWalkRun_C");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, UberGraphFrame_BP_PlayerActionStateWalkRun_C) == 0x0000E8, "Member 'UBP_PlayerActionStateWalkRun_C::UberGraphFrame_BP_PlayerActionStateWalkRun_C' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, bRootMotionModeSwitch) == 0x0000F0, "Member 'UBP_PlayerActionStateWalkRun_C::bRootMotionModeSwitch' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, RotateTimer) == 0x0000F4, "Member 'UBP_PlayerActionStateWalkRun_C::RotateTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, StoreMaxAcceleration) == 0x0000F8, "Member 'UBP_PlayerActionStateWalkRun_C::StoreMaxAcceleration' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, RootMotionInterpTimer) == 0x0000FC, "Member 'UBP_PlayerActionStateWalkRun_C::RootMotionInterpTimer' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, RootMotionInterpDir) == 0x000100, "Member 'UBP_PlayerActionStateWalkRun_C::RootMotionInterpDir' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, PARAM_RootMotionInterpTime) == 0x00010C, "Member 'UBP_PlayerActionStateWalkRun_C::PARAM_RootMotionInterpTime' has a wrong offset!");
static_assert(offsetof(UBP_PlayerActionStateWalkRun_C, PARAM_RootMotionInterpDistance) == 0x000110, "Member 'UBP_PlayerActionStateWalkRun_C::PARAM_RootMotionInterpDistance' has a wrong offset!");

}

