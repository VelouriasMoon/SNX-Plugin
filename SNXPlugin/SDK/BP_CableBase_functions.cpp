#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CableBase

#include "Basic.hpp"

#include "BP_CableBase_classes.hpp"
#include "BP_CableBase_parameters.hpp"


namespace SDK
{

// Function BP_CableBase.BP_CableBase_C.ExecuteUbergraph_BP_CableBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::ExecuteUbergraph_BP_CableBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "ExecuteUbergraph_BP_CableBase");

	Params::BP_CableBase_C_ExecuteUbergraph_BP_CableBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.OnReadyDebManager
// (BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::OnReadyDebManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "OnReadyDebManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "ReceiveTick");

	Params::BP_CableBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.OnChangedColoring
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ADebuggingItemFloat*              InItem                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::OnChangedColoring(const class ADebuggingItemFloat* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "OnChangedColoring");

	Params::BP_CableBase_C_OnChangedColoring Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CableBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.SetCodeColoring
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::SetCodeColoring(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetCodeColoring");

	Params::BP_CableBase_C_SetCodeColoring Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    New_Visibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::SetVisibility(bool New_Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetVisibility");

	Params::BP_CableBase_C_SetVisibility Parms{};

	Parms.New_Visibility = New_Visibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetBoneParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCableAdditiveBoneParam          BoneParam                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_CableBase_C::SetBoneParam(const struct FCableAdditiveBoneParam& BoneParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetBoneParam");

	Params::BP_CableBase_C_SetBoneParam Parms{};

	Parms.BoneParam = std::move(BoneParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.CheckCollision
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::CheckCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "CheckCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.CodeStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDrive                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bOptionNoCutin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NexusDrive                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ExColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::CodeStart(ECableType Type, bool bDrive, bool bOptionNoCutin, bool NexusDrive, bool ExColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "CodeStart");

	Params::BP_CableBase_C_CodeStart Parms{};

	Parms.Type = Type;
	Parms.bDrive = bDrive;
	Parms.bOptionNoCutin = bOptionNoCutin;
	Parms.NexusDrive = NexusDrive;
	Parms.ExColor = ExColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.CodeEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::CodeEnd(ECableType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "CodeEnd");

	Params::BP_CableBase_C_CodeEnd Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetCodeDither
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::SetCodeDither(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetCodeDither");

	Params::BP_CableBase_C_SetCodeDither Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetCodePower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Rate                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::SetCodePower(float Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetCodePower");

	Params::BP_CableBase_C_SetCodePower Parms{};

	Parms.Rate = Rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.UpdateState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::UpdateState(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "UpdateState");

	Params::BP_CableBase_C_UpdateState Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetBrainFieldParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BasePos                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::SetBrainFieldParam(const struct FVector& BasePos, float CrashRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetBrainFieldParam");

	Params::BP_CableBase_C_SetBrainFieldParam Parms{};

	Parms.BasePos = std::move(BasePos);
	Parms.CrashRate = CrashRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.DoCodeStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bOptionNoCutin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bNexusDrive                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bExColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::DoCodeStart(ECableType Type, bool bOptionNoCutin, bool bNexusDrive, bool bExColor, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "DoCodeStart");

	Params::BP_CableBase_C_DoCodeStart Parms{};

	Parms.Type = Type;
	Parms.bOptionNoCutin = bOptionNoCutin;
	Parms.bNexusDrive = bNexusDrive;
	Parms.bExColor = bExColor;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_CableBase.BP_CableBase_C.DoCodeEnd
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECableType                              Ttype                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEnd                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::DoCodeEnd(ECableType Ttype, bool* bEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "DoCodeEnd");

	Params::BP_CableBase_C_DoCodeEnd Parms{};

	Parms.Ttype = Ttype;

	UObject::ProcessEvent(Func, &Parms);

	if (bEnd != nullptr)
		*bEnd = Parms.bEnd;
}


// Function BP_CableBase.BP_CableBase_C.BeginOverrideGravity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSCableGravityType                     Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::BeginOverrideGravity(ERSCableGravityType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "BeginOverrideGravity");

	Params::BP_CableBase_C_BeginOverrideGravity Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.EndOverrideGravity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ERSCableGravityType                     Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::EndOverrideGravity(ERSCableGravityType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "EndOverrideGravity");

	Params::BP_CableBase_C_EndOverrideGravity Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetBrainFieldMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::SetBrainFieldMode(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetBrainFieldMode");

	Params::BP_CableBase_C_SetBrainFieldMode Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SetMaterialScalarParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::SetMaterialScalarParameter(class FName ParamName, float Value, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetMaterialScalarParameter");

	Params::BP_CableBase_C_SetMaterialScalarParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_CableBase.BP_CableBase_C.EnableTempVisibilityOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::EnableTempVisibilityOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "EnableTempVisibilityOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.DisableTempVisibilityOff
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::DisableTempVisibilityOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "DisableTempVisibilityOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.SetAttachPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARSBattlePlayer_C*                Param_AttachPlayer                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_AttachSocketName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::SetAttachPlayer(class ARSBattlePlayer_C* Param_AttachPlayer, class FName Param_AttachSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SetAttachPlayer");

	Params::BP_CableBase_C_SetAttachPlayer Parms{};

	Parms.Param_AttachPlayer = Param_AttachPlayer;
	Parms.Param_AttachSocketName = Param_AttachSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.DirectEnablePhysics
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::DirectEnablePhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "DirectEnablePhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.RegisterCustomTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeDilation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::RegisterCustomTimeDilation(float TimeDilation, class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "RegisterCustomTimeDilation");

	Params::BP_CableBase_C_RegisterCustomTimeDilation Parms{};

	Parms.TimeDilation = TimeDilation;
	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.UnregisterCustomTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::UnregisterCustomTimeDilation(class FName ClaimantName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "UnregisterCustomTimeDilation");

	Params::BP_CableBase_C_UnregisterCustomTimeDilation Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.UpdateTimeDilation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CableBase_C::UpdateTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "UpdateTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CableBase.BP_CableBase_C.EventPhysicsIdling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   IdlingSec                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::EventPhysicsIdling(float IdlingSec, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "EventPhysicsIdling");

	Params::BP_CableBase_C_EventPhysicsIdling Parms{};

	Parms.IdlingSec = IdlingSec;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BP_CableBase.BP_CableBase_C.GetSASStartAnimSequence
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    AnimSequence                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::GetSASStartAnimSequence(class UAnimSequence** AnimSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "GetSASStartAnimSequence");

	Params::BP_CableBase_C_GetSASStartAnimSequence Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnimSequence != nullptr)
		*AnimSequence = Parms.AnimSequence;
}


// Function BP_CableBase.BP_CableBase_C.SwitchNexusDrive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNexusDrive                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::SwitchNexusDrive(bool bNexusDrive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SwitchNexusDrive");

	Params::BP_CableBase_C_SwitchNexusDrive Parms{};

	Parms.bNexusDrive = bNexusDrive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.SwitchExColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bExColor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::SwitchExColor(bool bExColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "SwitchExColor");

	Params::BP_CableBase_C_SwitchExColor Parms{};

	Parms.bExColor = bExColor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CableBase.BP_CableBase_C.IsCableMode
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ECableType                              CableMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::IsCableMode(ECableType CableMode, bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "IsCableMode");

	Params::BP_CableBase_C_IsCableMode Parms{};

	Parms.CableMode = CableMode;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BP_CableBase.BP_CableBase_C.GetCableIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::GetCableIndex(int32* Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "GetCableIndex");

	Params::BP_CableBase_C_GetCableIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Index != nullptr)
		*Param_Index = Parms.Param_Index;
}


// Function BP_CableBase.BP_CableBase_C.GetMaterialLocationParamName
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             ParamName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CableBase_C::GetMaterialLocationParamName(class FName* ParamName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "GetMaterialLocationParamName");

	Params::BP_CableBase_C_GetMaterialLocationParamName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ParamName != nullptr)
		*ParamName = Parms.ParamName;
}


// Function BP_CableBase.BP_CableBase_C.IsDriveMode
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bDrive                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CableBase_C::IsDriveMode(bool* bDrive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CableBase_C", "IsDriveMode");

	Params::BP_CableBase_C_IsDriveMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDrive != nullptr)
		*bDrive = Parms.bDrive;
}

}

