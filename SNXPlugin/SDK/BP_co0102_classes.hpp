#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_co0102

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "BP_CableBase_classes.hpp"
#include "ECableType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_co0102.BP_co0102_C
// 0x0040 (0x0358 - 0x0318)
class ABP_co0102_C final : public ABP_CableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_co0102_C;                        // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameTimer                             DitherTimer;                                       // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PARAM_DitherTime;                                  // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_BP_co0102_C;                                 // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_84FB[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_co0102_C*                          AnimBP;                                            // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bBrainFieldMode;                                   // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStart;                                            // 0x0341(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84FC[0x2];                                     // 0x0342(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PARAM_ReticleScale;                                // 0x0344(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SASCableEnergyMesh_C*               EnergyMesh;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_co0102(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SetEnegyCableDissolve(float Dissolve, float ParentDissolve);
	void DirectEnablePhysics();
	void EndOverrideGravity(ERSCableGravityType Type);
	void BeginOverrideGravity(ERSCableGravityType Type);
	void ReceiveBeginPlay();
	void SetCodePower(float Rate);
	void SetVisibility(bool New_Visibility);
	void UpdateDither();
	void DoCodeStart(ECableType Type, bool bOptionNoCutin, bool bNexusDrive, bool bExColor, bool* bDummy);
	void DoCodeEnd(ECableType Ttype, bool* bEnd);
	void InitializeEnergyCable();
	void FinalizeEnergyCable(EEndPlayReason EndPlayReason);
	void GetEnergyCable(class ABP_SASCableEnergyMesh_C** Param_EnergyMesh);
	void StartEnergyCable();
	void EndEnergyCable();
	void SetEnergyCableDissolveInternal(float Dissolve, float ParentDissolve);

	void GetCableIndex(int32* Param_Index) const;
	void GetMaterialLocationParamName(class FName* ParamName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_co0102_C">();
	}
	static class ABP_co0102_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_co0102_C>();
	}
};
static_assert(alignof(ABP_co0102_C) == 0x000008, "Wrong alignment on ABP_co0102_C");
static_assert(sizeof(ABP_co0102_C) == 0x000358, "Wrong size on ABP_co0102_C");
static_assert(offsetof(ABP_co0102_C, UberGraphFrame_BP_co0102_C) == 0x000318, "Member 'ABP_co0102_C::UberGraphFrame_BP_co0102_C' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, DitherTimer) == 0x000320, "Member 'ABP_co0102_C::DitherTimer' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, PARAM_DitherTime) == 0x00032C, "Member 'ABP_co0102_C::PARAM_DitherTime' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, Index_BP_co0102_C) == 0x000330, "Member 'ABP_co0102_C::Index_BP_co0102_C' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, AnimBP) == 0x000338, "Member 'ABP_co0102_C::AnimBP' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, bBrainFieldMode) == 0x000340, "Member 'ABP_co0102_C::bBrainFieldMode' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, bStart) == 0x000341, "Member 'ABP_co0102_C::bStart' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, PARAM_ReticleScale) == 0x000344, "Member 'ABP_co0102_C::PARAM_ReticleScale' has a wrong offset!");
static_assert(offsetof(ABP_co0102_C, EnergyMesh) == 0x000350, "Member 'ABP_co0102_C::EnergyMesh' has a wrong offset!");

}

