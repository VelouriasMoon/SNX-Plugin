#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicAnimObject

#include "Basic.hpp"

#include "PsychicAnimObject_classes.hpp"
#include "PsychicAnimObject_parameters.hpp"


namespace SDK
{

// Function PsychicAnimObject.PsychicAnimObject_C.ExecuteUbergraph_PsychicAnimObject
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::ExecuteUbergraph_PsychicAnimObject(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "ExecuteUbergraph_PsychicAnimObject");

	Params::PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "ReceiveTick");

	Params::PsychicAnimObject_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APsychicAnimObject_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetTickEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::SetTickEnable(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetTickEnable");

	Params::PsychicAnimObject_C_SetTickEnable Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetOccupied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::SetOccupied(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetOccupied");

	Params::PsychicAnimObject_C_SetOccupied Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.CheckOccupied
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::CheckOccupied(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "CheckOccupied");

	Params::PsychicAnimObject_C_CheckOccupied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetAttach
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ARsBattleHero_C*                  Hero_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::SetAttach(bool Flag_in, class ABP_PsychicObjectBasic_C* Psy_obj_in, class ARsBattleHero_C* Hero_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetAttach");

	Params::PsychicAnimObject_C_SetAttach Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Psy_obj_in = Psy_obj_in;
	Parms.Hero_in = Hero_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.CanAttach
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::CanAttach(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "CanAttach");

	Params::PsychicAnimObject_C_CanAttach Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetAttackThrow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Throw_speed_in                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Homing_speed_in                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Enemy_direct_shot_in                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Enemy_attack_row_name_in                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::SetAttackThrow(float Throw_speed_in, float Homing_speed_in, bool Enemy_direct_shot_in, class FName Enemy_attack_row_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetAttackThrow");

	Params::PsychicAnimObject_C_SetAttackThrow Parms{};

	Parms.Throw_speed_in = Throw_speed_in;
	Parms.Homing_speed_in = Homing_speed_in;
	Parms.Enemy_direct_shot_in = Enemy_direct_shot_in;
	Parms.Enemy_attack_row_name_in = Enemy_attack_row_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetObjOwner
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PsychicObjectBasic_C*         Psy_obj_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::SetObjOwner(class ABP_PsychicObjectBasic_C* Psy_obj_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetObjOwner");

	Params::PsychicAnimObject_C_SetObjOwner Parms{};

	Parms.Psy_obj_in = Psy_obj_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.PlayObjectAnimation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimationAsset*                  NewAnimToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Play_rate_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loop_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::PlayObjectAnimation(class UAnimationAsset* NewAnimToPlay, float Play_rate_in, bool Loop_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "PlayObjectAnimation");

	Params::PsychicAnimObject_C_PlayObjectAnimation Parms{};

	Parms.NewAnimToPlay = NewAnimToPlay;
	Parms.Play_rate_in = Play_rate_in;
	Parms.Loop_in = Loop_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetAnimObjLocationRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Direct_rot_in                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::SetAnimObjLocationRotation(const struct FVector& Location_in, const struct FRotator& Rotation_in, bool Direct_rot_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetAnimObjLocationRotation");

	Params::PsychicAnimObject_C_SetAnimObjLocationRotation Parms{};

	Parms.Location_in = std::move(Location_in);
	Parms.Rotation_in = std::move(Rotation_in);
	Parms.Direct_rot_in = Direct_rot_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.DetachAttackCombo
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicAnimObject_C::DetachAttackCombo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "DetachAttackCombo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetCheckTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::SetCheckTimeDilation(bool Flag_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetCheckTimeDilation");

	Params::PsychicAnimObject_C_SetCheckTimeDilation Parms{};

	Parms.Flag_in = Flag_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.UpdateCheckTimeDilation
// (Public, BlueprintCallable, BlueprintEvent)

void APsychicAnimObject_C::UpdateCheckTimeDilation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "UpdateCheckTimeDilation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetMeshTickEnable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Flag_in                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             Ref_name_in                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::SetMeshTickEnable(bool Flag_in, class FName Ref_name_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetMeshTickEnable");

	Params::PsychicAnimObject_C_SetMeshTickEnable Parms{};

	Parms.Flag_in = Flag_in;
	Parms.Ref_name_in = Ref_name_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PsychicAnimObject.PsychicAnimObject_C.UpdateAnimationTick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APsychicAnimObject_C::UpdateAnimationTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "UpdateAnimationTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PsychicAnimObject.PsychicAnimObject_C.GetSocketLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::GetSocketLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "GetSocketLocation");

	Params::PsychicAnimObject_C_GetSocketLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function PsychicAnimObject.PsychicAnimObject_C.GetSocketRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Roation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::GetSocketRotation(struct FRotator* Roation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "GetSocketRotation");

	Params::PsychicAnimObject_C_GetSocketRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roation != nullptr)
		*Roation = std::move(Parms.Roation);
}


// Function PsychicAnimObject.PsychicAnimObject_C.GetCalcSocketRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Roation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APsychicAnimObject_C::GetCalcSocketRotation(struct FRotator* Roation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "GetCalcSocketRotation");

	Params::PsychicAnimObject_C_GetCalcSocketRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Roation != nullptr)
		*Roation = std::move(Parms.Roation);
}


// Function PsychicAnimObject.PsychicAnimObject_C.SetAttachMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   Mesh_comp_in                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APsychicAnimObject_C::SetAttachMesh(class UMeshComponent* Mesh_comp_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PsychicAnimObject_C", "SetAttachMesh");

	Params::PsychicAnimObject_C_SetAttachMesh Parms{};

	Parms.Mesh_comp_in = Mesh_comp_in;

	UObject::ProcessEvent(Func, &Parms);
}

}

