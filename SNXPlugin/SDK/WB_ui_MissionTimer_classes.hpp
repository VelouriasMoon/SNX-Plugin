#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_MissionTimer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BattlePrototype_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ui_MissionTimer.WB_ui_MissionTimer_C
// 0x00B8 (0x0440 - 0x0388)
class UWB_ui_MissionTimer_C final : public UUIBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Out;                                               // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Default;                                           // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_colon;                                // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_colon_add;                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_hh_1;                                 // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_hh_10;                                // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_hh_10_add;                            // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_hh_1_add;                             // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_mm_1;                                 // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_mm_10;                                // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_mm_10_add;                            // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mission_Time_mm_1_add;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UImage*>                         TimeList;                                          // 0x03F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UImage*>                         TimeAddList;                                       // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ColorIndex;                                        // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5705[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   ColorList;                                         // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   ColorAddList;                                      // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_ui_MissionTimer(int32 EntryPoint);
	void UpdateState(int32 State, int32 SubState, float DeltaSeconds);
	void OnInitialized();
	void Construct();
	void StateNone(int32 SubState);
	void StateOpen(int32 SubState);
	void StateLoop(int32 SubState);
	void StateClose(int32 SubState);
	void UpdateTime();
	void SetColor(int32 Param_ColorIndex);
	void SetTimeNum(int32 Param_Index, int32 Num);
	void UpdateColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ui_MissionTimer_C">();
	}
	static class UWB_ui_MissionTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ui_MissionTimer_C>();
	}
};
static_assert(alignof(UWB_ui_MissionTimer_C) == 0x000008, "Wrong alignment on UWB_ui_MissionTimer_C");
static_assert(sizeof(UWB_ui_MissionTimer_C) == 0x000440, "Wrong size on UWB_ui_MissionTimer_C");
static_assert(offsetof(UWB_ui_MissionTimer_C, UberGraphFrame) == 0x000388, "Member 'UWB_ui_MissionTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Out) == 0x000390, "Member 'UWB_ui_MissionTimer_C::Out' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, In) == 0x000398, "Member 'UWB_ui_MissionTimer_C::In' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Default) == 0x0003A0, "Member 'UWB_ui_MissionTimer_C::Default' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_colon) == 0x0003A8, "Member 'UWB_ui_MissionTimer_C::Mission_Time_colon' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_colon_add) == 0x0003B0, "Member 'UWB_ui_MissionTimer_C::Mission_Time_colon_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_hh_1) == 0x0003B8, "Member 'UWB_ui_MissionTimer_C::Mission_Time_hh_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_hh_10) == 0x0003C0, "Member 'UWB_ui_MissionTimer_C::Mission_Time_hh_10' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_hh_10_add) == 0x0003C8, "Member 'UWB_ui_MissionTimer_C::Mission_Time_hh_10_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_hh_1_add) == 0x0003D0, "Member 'UWB_ui_MissionTimer_C::Mission_Time_hh_1_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_mm_1) == 0x0003D8, "Member 'UWB_ui_MissionTimer_C::Mission_Time_mm_1' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_mm_10) == 0x0003E0, "Member 'UWB_ui_MissionTimer_C::Mission_Time_mm_10' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_mm_10_add) == 0x0003E8, "Member 'UWB_ui_MissionTimer_C::Mission_Time_mm_10_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, Mission_Time_mm_1_add) == 0x0003F0, "Member 'UWB_ui_MissionTimer_C::Mission_Time_mm_1_add' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, TimeList) == 0x0003F8, "Member 'UWB_ui_MissionTimer_C::TimeList' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, TimeAddList) == 0x000408, "Member 'UWB_ui_MissionTimer_C::TimeAddList' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, ColorIndex) == 0x000418, "Member 'UWB_ui_MissionTimer_C::ColorIndex' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, ColorList) == 0x000420, "Member 'UWB_ui_MissionTimer_C::ColorList' has a wrong offset!");
static_assert(offsetof(UWB_ui_MissionTimer_C, ColorAddList) == 0x000430, "Member 'UWB_ui_MissionTimer_C::ColorAddList' has a wrong offset!");

}

