#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NameWidgetActor

#include "Basic.hpp"

#include "BattlePrototype_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NameWidgetActor.BP_NameWidgetActor_C.ExecuteUbergraph_BP_NameWidgetActor
// 0x0008 (0x0008 - 0x0000)
struct BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor) == 0x000004, "Wrong alignment on BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor");
static_assert(sizeof(BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor) == 0x000008, "Wrong size on BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor");
static_assert(offsetof(BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor, EntryPoint) == 0x000000, "Member 'BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_NameWidgetActor_C_ExecuteUbergraph_BP_NameWidgetActor::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_NameWidgetActor.BP_NameWidgetActor_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_NameWidgetActor_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NameWidgetActor_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_NameWidgetActor_C_ReceiveEndPlay");
static_assert(sizeof(BP_NameWidgetActor_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_NameWidgetActor_C_ReceiveEndPlay");
static_assert(offsetof(BP_NameWidgetActor_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_NameWidgetActor_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_NameWidgetActor.BP_NameWidgetActor_C.StartEventCharaName
// 0x0070 (0x0070 - 0x0000)
struct BP_NameWidgetActor_C_StartEventCharaName final
{
public:
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CharaNameWidget;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CharaID;                                           // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69CC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_CharaName_C*                     K2Node_DynamicCast_AsWB_Ui_Chara_Name;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69CD[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_CharaName_C*                     K2Node_DynamicCast_AsWB_Ui_Chara_Name_1;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NameWidgetActor_C_StartEventCharaName) == 0x000008, "Wrong alignment on BP_NameWidgetActor_C_StartEventCharaName");
static_assert(sizeof(BP_NameWidgetActor_C_StartEventCharaName) == 0x000070, "Wrong size on BP_NameWidgetActor_C_StartEventCharaName");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CaptureActor) == 0x000000, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, Scale) == 0x000008, "Member 'BP_NameWidgetActor_C_StartEventCharaName::Scale' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, SocketName) == 0x000014, "Member 'BP_NameWidgetActor_C_StartEventCharaName::SocketName' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CharaNameWidget) == 0x000020, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CharaNameWidget' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CharaID) == 0x000028, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CharaID' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CallFunc_GetBP_static_pl_AsCharacter) == 0x000038, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, K2Node_DynamicCast_AsWB_Ui_Chara_Name) == 0x000048, "Member 'BP_NameWidgetActor_C_StartEventCharaName::K2Node_DynamicCast_AsWB_Ui_Chara_Name' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_NameWidgetActor_C_StartEventCharaName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000051, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000058, "Member 'BP_NameWidgetActor_C_StartEventCharaName::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, K2Node_DynamicCast_AsWB_Ui_Chara_Name_1) == 0x000060, "Member 'BP_NameWidgetActor_C_StartEventCharaName::K2Node_DynamicCast_AsWB_Ui_Chara_Name_1' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventCharaName, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_NameWidgetActor_C_StartEventCharaName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_NameWidgetActor.BP_NameWidgetActor_C.StartEventBossName
// 0x0078 (0x0078 - 0x0000)
struct BP_NameWidgetActor_C_StartEventBossName final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 bossId;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                Scale;                                             // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBossNameMode                                 Mode;                                              // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FreeFixedDrawSecond;                               // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69CF[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            BossNameWidget;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPCaptureActor_C*                      CaptureActor;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetBP_static_pl_AsCharacter;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69D0[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_BossName_C*                      K2Node_DynamicCast_AsWB_Ui_Boss_Name;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69D1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ui_BossName_C*                      K2Node_DynamicCast_AsWB_Ui_Boss_Name_1;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NameWidgetActor_C_StartEventBossName) == 0x000008, "Wrong alignment on BP_NameWidgetActor_C_StartEventBossName");
static_assert(sizeof(BP_NameWidgetActor_C_StartEventBossName) == 0x000078, "Wrong size on BP_NameWidgetActor_C_StartEventBossName");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, SocketName) == 0x000000, "Member 'BP_NameWidgetActor_C_StartEventBossName::SocketName' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, bossId) == 0x000008, "Member 'BP_NameWidgetActor_C_StartEventBossName::bossId' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, Scale) == 0x000018, "Member 'BP_NameWidgetActor_C_StartEventBossName::Scale' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, Mode) == 0x000024, "Member 'BP_NameWidgetActor_C_StartEventBossName::Mode' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, FreeFixedDrawSecond) == 0x000028, "Member 'BP_NameWidgetActor_C_StartEventBossName::FreeFixedDrawSecond' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, BossNameWidget) == 0x000030, "Member 'BP_NameWidgetActor_C_StartEventBossName::BossNameWidget' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, CaptureActor) == 0x000038, "Member 'BP_NameWidgetActor_C_StartEventBossName::CaptureActor' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, CallFunc_GetBP_static_pl_AsCharacter) == 0x000040, "Member 'BP_NameWidgetActor_C_StartEventBossName::CallFunc_GetBP_static_pl_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_NameWidgetActor_C_StartEventBossName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000049, "Member 'BP_NameWidgetActor_C_StartEventBossName::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000050, "Member 'BP_NameWidgetActor_C_StartEventBossName::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, K2Node_DynamicCast_AsWB_Ui_Boss_Name) == 0x000058, "Member 'BP_NameWidgetActor_C_StartEventBossName::K2Node_DynamicCast_AsWB_Ui_Boss_Name' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_NameWidgetActor_C_StartEventBossName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, K2Node_DynamicCast_AsWB_Ui_Boss_Name_1) == 0x000068, "Member 'BP_NameWidgetActor_C_StartEventBossName::K2Node_DynamicCast_AsWB_Ui_Boss_Name_1' has a wrong offset!");
static_assert(offsetof(BP_NameWidgetActor_C_StartEventBossName, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BP_NameWidgetActor_C_StartEventBossName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

