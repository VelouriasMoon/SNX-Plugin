#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SceneManager

#include "Basic.hpp"

#include "E_SceneManagerStatus_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "S_BattleSimulatorData_structs.hpp"
#include "FEventTriggerCommand_structs.hpp"
#include "S_AreaInfo_structs.hpp"
#include "E_SceneType_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ScenarioJump_structs.hpp"


namespace SDK::Params
{

// Function BP_SceneManager.BP_SceneManager_C.ExecuteUbergraph_BP_SceneManager
// 0x0308 (0x0308 - 0x0000)
struct BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SceneManagerStatus                          K2Node_Event_CurrentStatus;                        // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828E[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementManager*                    CallFunc_GetAchievementManager_AchievementManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_828F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPPlayerManagerInterface_C> K2Node_DynamicCast_AsBPPlayer_Manager_Interface;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8290[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStreamingTextureNum_ReturnValue;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8291[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8292[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8293[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class Ubp_ui_map_icon_manager_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BattleSimulatorRowName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0160(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8294[0x6];                                     // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8295[0x6];                                     // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BattleSimulatorData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x01F0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8296[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GameMainManager_C*                  CallFunc_GetGameMainManager_GameMainManager;       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveRetryDataExec_ReturnValue;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8297[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsMake_Event_Actor;        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8298[0x6];                                     // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand;            // 0x0268(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_AddEventTriggerCommand_self_CastInput;    // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x02E0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestChangeScene_Error;                 // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8299[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x02FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckScenarioFlag_FlagValue;              // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager) == 0x000008, "Wrong alignment on BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager");
static_assert(sizeof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager) == 0x000308, "Wrong size on BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, EntryPoint) == 0x000000, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_SwitchEnum_CmpSuccess) == 0x000014, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_Event_CurrentStatus) == 0x000015, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_Event_CurrentStatus' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetAchievementManager_AchievementManager) == 0x000018, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetAchievementManager_AchievementManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetPlayerManager_PlayerManager) == 0x000020, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_AsBPPlayer_Manager_Interface) == 0x000030, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_AsBPPlayer_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetGameMode_ReturnValue) == 0x000048, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetStreamingTextureNum_ReturnValue) == 0x000050, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetStreamingTextureNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000058, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue) == 0x0000B0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetLevelManager_LevelManager) == 0x0000B8, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetSoundManager_SoundManager) == 0x000100, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_MakeArray_Array) == 0x000108, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_Format_ReturnValue) == 0x000118, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_Conv_TextToString_ReturnValue) == 0x000130, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_SpawnObject_ReturnValue) == 0x000140, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_Event_BattleSimulatorRowName) == 0x000148, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_Event_BattleSimulatorRowName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x000150, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetAreaName_ReturnValue) == 0x000158, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetAreaInfo_AreaInfo) == 0x000160, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetAreaInfo_Found) == 0x0001C8, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetAreaInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_IsValid_ReturnValue_1) == 0x0001C9, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_LoadSoftObject_ReturnValue) == 0x0001D0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetEventManager_EventManager) == 0x0001D8, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_AsData_Table) == 0x0001E0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_IsValid_ReturnValue_2) == 0x0001E9, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001F0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000238, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetGameMainManager_GameMainManager) == 0x000240, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetGameMainManager_GameMainManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_LoadSoftClass_ReturnValue) == 0x000248, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_SaveRetryDataExec_ReturnValue) == 0x000250, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_SaveRetryDataExec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_ClassDynamicCast_AsMake_Event_Actor) == 0x000258, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_ClassDynamicCast_AsMake_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_ClassDynamicCast_bSuccess) == 0x000260, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000261, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_MakeStruct_FEventTriggerCommand) == 0x000268, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_MakeStruct_FEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_AddEventTriggerCommand_self_CastInput) == 0x0002D0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_AddEventTriggerCommand_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, K2Node_MakeArray_Array_1) == 0x0002E0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x0002F0, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_RequestChangeScene_Error) == 0x0002F8, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_RequestChangeScene_Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_MakeLiteralName_ReturnValue) == 0x0002FC, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager, CallFunc_CheckScenarioFlag_FlagValue) == 0x000304, "Member 'BP_SceneManager_C_ExecuteUbergraph_BP_SceneManager::CallFunc_CheckScenarioFlag_FlagValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.RequestChangeSceneBattleSimulator
// 0x0008 (0x0008 - 0x0000)
struct BP_SceneManager_C_RequestChangeSceneBattleSimulator final
{
public:
	class FName                                   BattleSimulatorRowName;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_RequestChangeSceneBattleSimulator) == 0x000004, "Wrong alignment on BP_SceneManager_C_RequestChangeSceneBattleSimulator");
static_assert(sizeof(BP_SceneManager_C_RequestChangeSceneBattleSimulator) == 0x000008, "Wrong size on BP_SceneManager_C_RequestChangeSceneBattleSimulator");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneBattleSimulator, BattleSimulatorRowName) == 0x000000, "Member 'BP_SceneManager_C_RequestChangeSceneBattleSimulator::BattleSimulatorRowName' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SceneManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SceneManager_C_ReceiveTick");
static_assert(sizeof(BP_SceneManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_SceneManager_C_ReceiveTick");
static_assert(offsetof(BP_SceneManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SceneManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.Debug Set Current Status
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneManager_C_Debug_Set_Current_Status final
{
public:
	E_SceneManagerStatus                          Param_CurrentStatus;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_Debug_Set_Current_Status) == 0x000001, "Wrong alignment on BP_SceneManager_C_Debug_Set_Current_Status");
static_assert(sizeof(BP_SceneManager_C_Debug_Set_Current_Status) == 0x000001, "Wrong size on BP_SceneManager_C_Debug_Set_Current_Status");
static_assert(offsetof(BP_SceneManager_C_Debug_Set_Current_Status, Param_CurrentStatus) == 0x000000, "Member 'BP_SceneManager_C_Debug_Set_Current_Status::Param_CurrentStatus' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.ChangeSceneManagerStatus
// 0x0070 (0x0070 - 0x0000)
struct BP_SceneManager_C_ChangeSceneManagerStatus final
{
public:
	E_SceneManagerStatus                          Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             ChangeAreaStatus;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_2;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_3;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_4;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_5;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_6;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_7;                              // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_8;                              // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_9;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_10;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_11;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_12;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChangeAreaStatus                             Temp_byte_Variable_13;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneManagerStatus                          Temp_byte_Variable_14;                             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829B[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EChangeAreaStatus                             K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_ChangeSceneManagerStatus) == 0x000008, "Wrong alignment on BP_SceneManager_C_ChangeSceneManagerStatus");
static_assert(sizeof(BP_SceneManager_C_ChangeSceneManagerStatus) == 0x000070, "Wrong size on BP_SceneManager_C_ChangeSceneManagerStatus");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Status) == 0x000000, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Status' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, ChangeAreaStatus) == 0x000001, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::ChangeAreaStatus' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable) == 0x000002, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_1) == 0x000018, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_2) == 0x000019, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_3) == 0x00001A, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_4) == 0x00001B, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_5) == 0x00001C, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_6) == 0x00001D, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_7) == 0x00001E, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_8) == 0x00001F, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_9) == 0x000020, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_10) == 0x000021, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_11) == 0x000022, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_12) == 0x000023, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_13) == 0x000024, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, Temp_byte_Variable_14) == 0x000025, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000028, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, K2Node_Select_Default) == 0x000038, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ChangeSceneManagerStatus, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000060, "Member 'BP_SceneManager_C_ChangeSceneManagerStatus::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickWaitAreaLoading
// 0x0088 (0x0088 - 0x0000)
struct BP_SceneManager_C_TickWaitAreaLoading final
{
public:
	class FName                                   _curAreaName;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AArrangeItemManager*                    CallFunc_GetArrangeItemManager_ArrangeItemManager; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLevelsLoaded_IsLoaded;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLevelsLoaded_IsError;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829D[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaLevelsLoaded_Area_Info;             // 0x0020(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_TickWaitAreaLoading) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickWaitAreaLoading");
static_assert(sizeof(BP_SceneManager_C_TickWaitAreaLoading) == 0x000088, "Wrong size on BP_SceneManager_C_TickWaitAreaLoading");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, _curAreaName) == 0x000000, "Member 'BP_SceneManager_C_TickWaitAreaLoading::_curAreaName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_GetAreaName_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_GetArrangeItemManager_ArrangeItemManager) == 0x000010, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_GetArrangeItemManager_ArrangeItemManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_IsAreaLevelsLoaded_IsLoaded) == 0x000019, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_IsAreaLevelsLoaded_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_IsAreaLevelsLoaded_IsError) == 0x00001A, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_IsAreaLevelsLoaded_IsError' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLoading, CallFunc_IsAreaLevelsLoaded_Area_Info) == 0x000020, "Member 'BP_SceneManager_C_TickWaitAreaLoading::CallFunc_IsAreaLevelsLoaded_Area_Info' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickWaitAreaVisible
// 0x00C8 (0x00C8 - 0x0000)
struct BP_SceneManager_C_TickWaitAreaVisible final
{
public:
	int32                                         CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_829F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationRestaurant_InAjito;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    K2Node_DynamicCast_AsBP_Player_Manager;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_CosmosWebManager_C*                 CallFunc_GetCosmosWebManager_CosmosWebMaanger;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ui_CrossSave_Updating_C*            CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAddNotificationBrainMessage_ReturnValue; // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A4[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82A5[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LevelManager_C>   CallFunc_AreaNameToID_self_CastInput;              // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AreaNameToID_LocationID;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_AreaID;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_VariationID;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CallAreaPostLoadFunction_Initialized;     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CallAreaPostLoadFunction_ReturnValue;     // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaReadyForStart_IsReady;              // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickWaitAreaVisible) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickWaitAreaVisible");
static_assert(sizeof(BP_SceneManager_C_TickWaitAreaVisible) == 0x0000C8, "Wrong size on BP_SceneManager_C_TickWaitAreaVisible");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_StreamingTextureBlockTillAllRequestsFinished_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_IsLocationRestaurant_InAjito) == 0x000038, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_IsLocationRestaurant_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, K2Node_DynamicCast_AsBP_Player_Manager) == 0x000040, "Member 'BP_SceneManager_C_TickWaitAreaVisible::K2Node_DynamicCast_AsBP_Player_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_SceneManager_C_TickWaitAreaVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000060, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetEventManager_EventManager) == 0x000070, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetCosmosWebManager_CosmosWebMaanger) == 0x000088, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetCosmosWebManager_CosmosWebMaanger' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_Create_ReturnValue) == 0x000090, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_RequestAddNotificationBrainMessage_ReturnValue) == 0x000098, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_RequestAddNotificationBrainMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_GetAreaName_ReturnValue) == 0x00009C, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_AreaNameToID_self_CastInput) == 0x0000A8, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_AreaNameToID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_AreaNameToID_LocationID) == 0x0000B8, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_AreaNameToID_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_AreaNameToID_AreaID) == 0x0000BC, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_AreaNameToID_AreaID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_AreaNameToID_VariationID) == 0x0000C0, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_AreaNameToID_VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_CallAreaPostLoadFunction_Initialized) == 0x0000C4, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_CallAreaPostLoadFunction_Initialized' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_CallAreaPostLoadFunction_ReturnValue) == 0x0000C5, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_CallAreaPostLoadFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaVisible, CallFunc_IsAreaReadyForStart_IsReady) == 0x0000C6, "Member 'BP_SceneManager_C_TickWaitAreaVisible::CallFunc_IsAreaReadyForStart_IsReady' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickSceneStarting
// 0x03C0 (0x03C0 - 0x0000)
struct BP_SceneManager_C_TickSceneStarting final
{
public:
	TArray<class AActor*>                         LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMake_Event_Actor;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNotAppliedDLCAndReceiveBrainMessage_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A6[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand;            // 0x0038(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A7[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntroTutorialManager*                  CallFunc_GetIntroTutorialManager_ReturnValue;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A8[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82A9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickManager_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Manager;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PostProcessManager_C*               CallFunc_GetPostProcessManager_Manager;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AB[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_AddEventTriggerCommand_self_CastInput;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue_1;                      // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ADropItemManager*                       CallFunc_GetDropItemManager_Drop_Item_Manager;     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue; // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AC[0x2];                                     // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1; // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AD[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_2;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AE[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorldmapOpenParam*                     CallFunc_GetWorldmapOpenParam_ReturnValue;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_3;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_1; // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue;    // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AutoSaveExec_result;                      // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82AF[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager_1;   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_2; // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue_1;  // 0x020B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B0[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_2;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B1[0x3];                                     // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82B2[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangePlayUI_ReturnValue;                 // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MiniMapModelDelete_ReturnValue;           // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B3[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager_1; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B4[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattlefieldManager*                    CallFunc_GetBattleFieldManager_BattleFieldManager; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager_2; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               K2Node_DynamicCast_AsBP_Battlefield_Manager;       // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B5[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager_3; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChangeLocation_Internal_ReturnValue;    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnLoad_SaveData_ReturnValue;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B6[0x6];                                     // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveLoadParamClassManager*             CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadExecution_ReturnValue;              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_3; // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SaveRetryDataExec_result;                 // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USaveLoadParamClassManager*             CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager_1; // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadExecution_ReturnValue_1;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B7[0x2];                                     // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckPlayerInEventTrigger_InEvent;        // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B8[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82B9[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BA[0x2];                                     // 0x02CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartAreaHere_ReturnValue;                // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BB[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BC[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventStart_ReturnValue;                   // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BD[0x2];                                     // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_3;             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BE[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager_4;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager_4; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_2; // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetFenceRandomSeed_ReturnValue;         // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0333(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82BF[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_StageManager_C*                     CallFunc_GetStageManager_Manager;                  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82C0[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0350(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneType                                   CallFunc_GetCurrentSceneType_SceneType;            // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C1[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82C2[0x6];                                     // 0x037A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0380(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82C3[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	E_SceneType                                   CallFunc_GetCurrentSceneType_SceneType_1;          // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C4[0x2];                                     // 0x03A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x03A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C5[0x4];                                     // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentArea_Result;                    // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickSceneStarting) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickSceneStarting");
static_assert(sizeof(BP_SceneManager_C_TickSceneStarting) == 0x0003C0, "Wrong size on BP_SceneManager_C_TickSceneStarting");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, LEnemyList) == 0x000000, "Member 'BP_SceneManager_C_TickSceneStarting::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, LPlayerList) == 0x000010, "Member 'BP_SceneManager_C_TickSceneStarting::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_LoadSoftClass_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_ClassDynamicCast_AsMake_Event_Actor) == 0x000028, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_ClassDynamicCast_AsMake_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsNotAppliedDLCAndReceiveBrainMessage_ReturnValue) == 0x000031, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsNotAppliedDLCAndReceiveBrainMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_MakeStruct_FEventTriggerCommand) == 0x000038, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_MakeStruct_FEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_SceneManager_C_TickSceneStarting::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetIntroTutorialManager_ReturnValue) == 0x0000A8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetIntroTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000B0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0000B2, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_BooleanAND_ReturnValue) == 0x0000B3, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEventManager_EventManager) == 0x0000B8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue) == 0x0000C0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x0000C8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetMapGimmickManager_MapGimmickManager_1) == 0x0000D0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetMapGimmickManager_MapGimmickManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_AsBP_Map_Gimmick_Manager) == 0x0000D8, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_AsBP_Map_Gimmick_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEventManager_EventManager_1) == 0x0000E8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEventManager_EventManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPostProcessManager_Manager) == 0x0000F0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPostProcessManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_2) == 0x0000F8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_3) == 0x0000F9, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_AddEventTriggerCommand_self_CastInput) == 0x000100, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_AddEventTriggerCommand_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Conv_IntToString_ReturnValue) == 0x000110, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000120, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Concat_StrStr_ReturnValue) == 0x000130, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000140, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Right_ReturnValue) == 0x000150, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Right_ReturnValue_1) == 0x000160, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Right_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000170, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000180, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetDropItemManager_Drop_Item_Manager) == 0x000190, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetDropItemManager_Drop_Item_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000198, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_4) == 0x0001A8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue) == 0x0001A9, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, Temp_int_Array_Index_Variable_1) == 0x0001AC, "Member 'BP_SceneManager_C_TickSceneStarting::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetHUDMainGame_HUDMainGame) == 0x0001B0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetSoundManager_SoundManager) == 0x0001B8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x0001C0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1) == 0x0001C8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetUserParamManager_UserParamManager) == 0x0001D0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEventManager_EventManager_2) == 0x0001D8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEventManager_EventManager_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_5) == 0x0001E0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetWorldmapOpenParam_ReturnValue) == 0x0001E8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetWorldmapOpenParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEventManager_EventManager_3) == 0x0001F0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEventManager_EventManager_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_6) == 0x0001F8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_1) == 0x0001F9, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_BooleanOR_ReturnValue) == 0x0001FA, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue) == 0x0001FB, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_AutoSaveExec_result) == 0x0001FC, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_AutoSaveExec_result' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetUserParamManager_UserParamManager_1) == 0x000200, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetUserParamManager_UserParamManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_2) == 0x000208, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_BooleanOR_ReturnValue_1) == 0x000209, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_7) == 0x00020A, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue_1) == 0x00020B, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsAreaChangeRetrySaveFlag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000210, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetHUDMainGame_HUDMainGame_2) == 0x000218, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetHUDMainGame_HUDMainGame_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, Temp_int_Loop_Counter_Variable) == 0x000220, "Member 'BP_SceneManager_C_TickSceneStarting::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_8) == 0x000224, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Add_IntInt_ReturnValue) == 0x000228, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x000230, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_ChangePlayUI_ReturnValue) == 0x000238, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_ChangePlayUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_9) == 0x000239, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00023A, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_MiniMapModelDelete_ReturnValue) == 0x00023B, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_MiniMapModelDelete_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetDebuggingManager_Manager) == 0x000240, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattlefieldManager_BP_BattlefieldManager_1) == 0x000248, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattlefieldManager_BP_BattlefieldManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_10) == 0x000250, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattleFieldManager_BattleFieldManager) == 0x000258, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattleFieldManager_BattleFieldManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattlefieldManager_BP_BattlefieldManager_2) == 0x000260, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattlefieldManager_BP_BattlefieldManager_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_AsBP_Battlefield_Manager) == 0x000268, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_AsBP_Battlefield_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattlefieldManager_BP_BattlefieldManager_3) == 0x000278, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattlefieldManager_BP_BattlefieldManager_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsChangeLocation_Internal_ReturnValue) == 0x000280, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsChangeLocation_Internal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_OnLoad_SaveData_ReturnValue) == 0x000281, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_OnLoad_SaveData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager) == 0x000288, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsLoadExecution_ReturnValue) == 0x000290, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsLoadExecution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_3) == 0x000291, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidCurrentSimulatorLevelInfosName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_11) == 0x000292, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_SaveRetryDataExec_result) == 0x000293, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_SaveRetryDataExec_result' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, Temp_int_Loop_Counter_Variable_1) == 0x000294, "Member 'BP_SceneManager_C_TickSceneStarting::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager_1) == 0x000298, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsLoadExecution_ReturnValue_1) == 0x0002A0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsLoadExecution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_12) == 0x0002A1, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002A4, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_CheckPlayerInEventTrigger_InEvent) == 0x0002A8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_CheckPlayerInEventTrigger_InEvent' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_AsRSBattle_Player) == 0x0002C0, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_bSuccess_2) == 0x0002C8, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002C9, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Array_Length_ReturnValue) == 0x0002CC, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Less_IntInt_ReturnValue) == 0x0002D0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_StartAreaHere_ReturnValue) == 0x0002D1, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_StartAreaHere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPlayerPawn_ReturnValue) == 0x0002D8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Array_Get_Item_1) == 0x0002E0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_AsEvent_Interface) == 0x0002E8, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_bSuccess_3) == 0x0002F8, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_AsRSBattle_Character) == 0x000300, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_DynamicCast_bSuccess_4) == 0x000308, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_EventStart_ReturnValue) == 0x000309, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_EventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Array_Length_ReturnValue_1) == 0x00030C, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetHUDMainGame_HUDMainGame_3) == 0x000310, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetHUDMainGame_HUDMainGame_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_Less_IntInt_ReturnValue_1) == 0x000318, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEventManager_EventManager_4) == 0x000320, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEventManager_EventManager_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetBattlefieldManager_BP_BattlefieldManager_4) == 0x000328, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetBattlefieldManager_BP_BattlefieldManager_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_2) == 0x000330, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValidChangeLevelAfterEventComand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_BooleanOR_ReturnValue_2) == 0x000331, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_ResetFenceRandomSeed_ReturnValue) == 0x000332, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_ResetFenceRandomSeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_13) == 0x000333, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetStageManager_Manager) == 0x000338, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetStageManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEnemyManager_Manager) == 0x000340, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_14) == 0x000348, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetEnemyList_ReturnValue) == 0x000350, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPlayerManager_PlayerManager) == 0x000360, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetCurrentSceneType_SceneType) == 0x000368, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetCurrentSceneType_SceneType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000370, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000378, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_15) == 0x000379, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPlayerList_ReturnValue) == 0x000380, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, K2Node_SwitchEnum_CmpSuccess) == 0x000390, "Member 'BP_SceneManager_C_TickSceneStarting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x000398, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_16) == 0x0003A0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetCurrentSceneType_SceneType_1) == 0x0003A1, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetCurrentSceneType_SceneType_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetAreaName_ReturnValue) == 0x0003A4, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x0003B0, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_IsValid_ReturnValue_17) == 0x0003B8, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickSceneStarting, CallFunc_SetCurrentArea_Result) == 0x0003B9, "Member 'BP_SceneManager_C_TickSceneStarting::CallFunc_SetCurrentArea_Result' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickInScene
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_TickInScene final
{
public:
	class ABP_CosmosWebManager_C*                 CallFunc_GetCosmosWebManager_CosmosWebMaanger;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationAjito_InAjito;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickInScene) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickInScene");
static_assert(sizeof(BP_SceneManager_C_TickInScene) == 0x000010, "Wrong size on BP_SceneManager_C_TickInScene");
static_assert(offsetof(BP_SceneManager_C_TickInScene, CallFunc_GetCosmosWebManager_CosmosWebMaanger) == 0x000000, "Member 'BP_SceneManager_C_TickInScene::CallFunc_GetCosmosWebManager_CosmosWebMaanger' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickInScene, CallFunc_IsLocationAjito_InAjito) == 0x000008, "Member 'BP_SceneManager_C_TickInScene::CallFunc_IsLocationAjito_InAjito' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickInitialize
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_TickInitialize final
{
public:
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickInitialize) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickInitialize");
static_assert(sizeof(BP_SceneManager_C_TickInitialize) == 0x000010, "Wrong size on BP_SceneManager_C_TickInitialize");
static_assert(offsetof(BP_SceneManager_C_TickInitialize, CallFunc_GetLevelManager_LevelManager) == 0x000000, "Member 'BP_SceneManager_C_TickInitialize::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickInitialize, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_TickInitialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickWaitFadeOut
// 0x0028 (0x0028 - 0x0000)
struct BP_SceneManager_C_TickWaitFadeOut final
{
public:
	TArray<class AActor*>                         LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugInvisible_IsVisible;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeAnimation_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickWaitFadeOut) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickWaitFadeOut");
static_assert(sizeof(BP_SceneManager_C_TickWaitFadeOut) == 0x000028, "Wrong size on BP_SceneManager_C_TickWaitFadeOut");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, LEnemyList) == 0x000000, "Member 'BP_SceneManager_C_TickWaitFadeOut::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, LPlayerList) == 0x000010, "Member 'BP_SceneManager_C_TickWaitFadeOut::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, CallFunc_GetDebugInvisible_IsVisible) == 0x000020, "Member 'BP_SceneManager_C_TickWaitFadeOut::CallFunc_GetDebugInvisible_IsVisible' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, CallFunc_IsFadeAnimation_ReturnValue) == 0x000021, "Member 'BP_SceneManager_C_TickWaitFadeOut::CallFunc_IsFadeAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'BP_SceneManager_C_TickWaitFadeOut::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitFadeOut, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'BP_SceneManager_C_TickWaitFadeOut::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.SetAreaSoundSetting_
// 0x0090 (0x0090 - 0x0000)
struct BP_SceneManager_C_SetAreaSoundSetting_ final
{
public:
	class ABP_LevelManager_C*                     CallFunc_GetLevelManager_LevelManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SoundManager_C*                     CallFunc_GetSoundManager_SoundManager;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82C6[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C7[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_GetAreaInfo_AreaInfo;                     // 0x0020(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetAreaInfo_Found;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_SetAreaSoundSetting_) == 0x000008, "Wrong alignment on BP_SceneManager_C_SetAreaSoundSetting_");
static_assert(sizeof(BP_SceneManager_C_SetAreaSoundSetting_) == 0x000090, "Wrong size on BP_SceneManager_C_SetAreaSoundSetting_");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_GetLevelManager_LevelManager) == 0x000000, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_GetLevelManager_LevelManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_GetSoundManager_SoundManager) == 0x000008, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_GetSoundManager_SoundManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_GetAreaName_ReturnValue) == 0x000014, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_GetAreaInfo_AreaInfo) == 0x000020, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_GetAreaInfo_AreaInfo' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetAreaSoundSetting_, CallFunc_GetAreaInfo_Found) == 0x000088, "Member 'BP_SceneManager_C_SetAreaSoundSetting_::CallFunc_GetAreaInfo_Found' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickStartFade
// 0x0080 (0x0080 - 0x0000)
struct BP_SceneManager_C_TickStartFade final
{
public:
	TArray<class AActor*>                         LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C8[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattleManager_C*                    CallFunc_GetBattleManager_BattleManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82C9[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugInvisible_IsVisible;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82CA[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFadeAnimation_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82CB[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_TickStartFade) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickStartFade");
static_assert(sizeof(BP_SceneManager_C_TickStartFade) == 0x000080, "Wrong size on BP_SceneManager_C_TickStartFade");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, LEnemyList) == 0x000000, "Member 'BP_SceneManager_C_TickStartFade::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, LPlayerList) == 0x000010, "Member 'BP_SceneManager_C_TickStartFade::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_SceneManager_C_TickStartFade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_GetBattleManager_BattleManager) == 0x000028, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_GetBattleManager_BattleManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_GetEnemyManager_Manager) == 0x000030, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_GetEnemyList_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_SceneManager_C_TickStartFade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_GetDebugInvisible_IsVisible) == 0x000060, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_GetDebugInvisible_IsVisible' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, K2Node_DynamicCast_AsRSBattle_Character) == 0x000068, "Member 'BP_SceneManager_C_TickStartFade::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_SceneManager_C_TickStartFade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_IsFadeAnimation_ReturnValue) == 0x000071, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_IsFadeAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartFade, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_SceneManager_C_TickStartFade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickStartNoFade
// 0x0020 (0x0020 - 0x0000)
struct BP_SceneManager_C_TickStartNoFade final
{
public:
	TArray<class AActor*>                         LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_TickStartNoFade) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickStartNoFade");
static_assert(sizeof(BP_SceneManager_C_TickStartNoFade) == 0x000020, "Wrong size on BP_SceneManager_C_TickStartNoFade");
static_assert(offsetof(BP_SceneManager_C_TickStartNoFade, LEnemyList) == 0x000000, "Member 'BP_SceneManager_C_TickStartNoFade::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickStartNoFade, LPlayerList) == 0x000010, "Member 'BP_SceneManager_C_TickStartNoFade::LPlayerList' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.InitOnStartFade
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SceneManager_C_InitOnStartFade final
{
public:
	TArray<class AActor*>                         LEnemyList;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82CC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82CD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82CE[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82CF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82D0[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D1[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D2[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0090(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D3[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x00B0(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_InitOnStartFade) == 0x000008, "Wrong alignment on BP_SceneManager_C_InitOnStartFade");
static_assert(sizeof(BP_SceneManager_C_InitOnStartFade) == 0x0000C0, "Wrong size on BP_SceneManager_C_InitOnStartFade");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, LEnemyList) == 0x000000, "Member 'BP_SceneManager_C_InitOnStartFade::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, LPlayerList) == 0x000010, "Member 'BP_SceneManager_C_InitOnStartFade::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_SceneManager_C_InitOnStartFade::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_SceneManager_C_InitOnStartFade::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, K2Node_DynamicCast_AsRSBattle_Character) == 0x000048, "Member 'BP_SceneManager_C_InitOnStartFade::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_SceneManager_C_InitOnStartFade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_SceneManager_C_InitOnStartFade::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_SceneManager_C_InitOnStartFade::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_GetEnemyManager_Manager) == 0x000068, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, K2Node_DynamicCast_AsRSBattle_Player) == 0x000080, "Member 'BP_SceneManager_C_InitOnStartFade::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_SceneManager_C_InitOnStartFade::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_GetEnemyList_ReturnValue) == 0x000090, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_GetPlayerManager_PlayerManager) == 0x0000A0, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitOnStartFade, CallFunc_GetPlayerList_ReturnValue) == 0x0000B0, "Member 'BP_SceneManager_C_InitOnStartFade::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.InitBeforeLoadLevels
// 0x0108 (0x0108 - 0x0000)
struct BP_SceneManager_C_InitBeforeLoadLevels final
{
public:
	int32                                         L_NextLocation;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82D4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class AActor*>                         LEnemyList;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0038(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Coat_Moat_Need;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D6[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastDungeon_LastDungeon;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D7[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D8[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EnemyManager_C*                     CallFunc_GetEnemyManager_Manager;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82D9[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetEnemyList_ReturnValue;                 // 0x0088(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82DA[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSCharacterBase*                       CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82DB[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_AreaChangeFadeOut_self_CastInput;         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82DC[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattleCharacter_C*                   K2Node_DynamicCast_AsRSBattle_Character;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82DD[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_BattleCharacterInterface_C> CallFunc_AreaChangeFadeOut_self_CastInput_1;       // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82DE[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_InitBeforeLoadLevels) == 0x000008, "Wrong alignment on BP_SceneManager_C_InitBeforeLoadLevels");
static_assert(sizeof(BP_SceneManager_C_InitBeforeLoadLevels) == 0x000108, "Wrong size on BP_SceneManager_C_InitBeforeLoadLevels");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, L_NextLocation) == 0x000000, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::L_NextLocation' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, LPlayerList) == 0x000008, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, LEnemyList) == 0x000018, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::LEnemyList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetPlayerManager_PlayerManager) == 0x000028, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetPlayerList_ReturnValue) == 0x000038, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Is_Coat_Moat_Need) == 0x000048, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Is_Coat_Moat_Need' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000050, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_IsLastDungeon_LastDungeon) == 0x000059, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_IsLastDungeon_LastDungeon' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetPsychicObjectManager_PsyObjManager_1) == 0x000060, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetPsychicObjectManager_PsyObjManager_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_IsValid_ReturnValue_2) == 0x00006C, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetEnemyManager_Manager) == 0x000078, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetEnemyManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_IsValid_ReturnValue_3) == 0x000080, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_GetEnemyList_ReturnValue) == 0x000088, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_GetEnemyList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000A8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_AreaChangeFadeOut_self_CastInput) == 0x0000B8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_AreaChangeFadeOut_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, K2Node_DynamicCast_AsRSBattle_Character) == 0x0000D8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::K2Node_DynamicCast_AsRSBattle_Character' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Less_IntInt_ReturnValue) == 0x0000E1, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_AreaChangeFadeOut_self_CastInput_1) == 0x0000E8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_AreaChangeFadeOut_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, Temp_int_Loop_Counter_Variable_1) == 0x0000F8, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBeforeLoadLevels, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_SceneManager_C_InitBeforeLoadLevels::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetNextAreaInfo
// 0x002C (0x002C - 0x0000)
struct BP_SceneManager_C_GetNextAreaInfo final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AreaName;                                          // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PortalName;                                        // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewLocalVar_1;                                     // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewLocalVar_0;                                     // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetNextAreaInfo) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetNextAreaInfo");
static_assert(sizeof(BP_SceneManager_C_GetNextAreaInfo) == 0x00002C, "Wrong size on BP_SceneManager_C_GetNextAreaInfo");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetNextAreaInfo::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, AreaId) == 0x000004, "Member 'BP_SceneManager_C_GetNextAreaInfo::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, PortalID) == 0x000008, "Member 'BP_SceneManager_C_GetNextAreaInfo::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, AreaName) == 0x00000C, "Member 'BP_SceneManager_C_GetNextAreaInfo::AreaName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, PortalName) == 0x000014, "Member 'BP_SceneManager_C_GetNextAreaInfo::PortalName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, NewLocalVar_1) == 0x00001C, "Member 'BP_SceneManager_C_GetNextAreaInfo::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetNextAreaInfo, NewLocalVar_0) == 0x000024, "Member 'BP_SceneManager_C_GetNextAreaInfo::NewLocalVar_0' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.InitBoot_
// 0x0048 (0x0048 - 0x0000)
struct BP_SceneManager_C_InitBoot_ final
{
public:
	class URSGameInstance*                        CallFunc_GetRSGameInstance_RSGameInstance;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IRSGameModeBPInterface_C> K2Node_DynamicCast_AsRSGame_Mode_BPInterface;      // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82DF[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPPlayerManagerInterface_C> K2Node_DynamicCast_AsBPPlayer_Manager_Interface;   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_InitBoot_) == 0x000008, "Wrong alignment on BP_SceneManager_C_InitBoot_");
static_assert(sizeof(BP_SceneManager_C_InitBoot_) == 0x000048, "Wrong size on BP_SceneManager_C_InitBoot_");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, CallFunc_GetRSGameInstance_RSGameInstance) == 0x000000, "Member 'BP_SceneManager_C_InitBoot_::CallFunc_GetRSGameInstance_RSGameInstance' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_InitBoot_::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, CallFunc_GetPlayerManager_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_InitBoot_::CallFunc_GetPlayerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, K2Node_DynamicCast_AsRSGame_Mode_BPInterface) == 0x000018, "Member 'BP_SceneManager_C_InitBoot_::K2Node_DynamicCast_AsRSGame_Mode_BPInterface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_SceneManager_C_InitBoot_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, K2Node_DynamicCast_AsBPPlayer_Manager_Interface) == 0x000030, "Member 'BP_SceneManager_C_InitBoot_::K2Node_DynamicCast_AsBPPlayer_Manager_Interface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBoot_, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_SceneManager_C_InitBoot_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.RequestChapterJump
// 0x0268 (0x0268 - 0x0000)
struct BP_SceneManager_C_RequestChapterJump final
{
public:
	class FName                                   ChapterName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E0[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWorldmapOpenAreaParam                 K2Node_MakeStruct_WorldmapOpenAreaParam;           // 0x000C(0x0028)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ScenarioJump                        CallFunc_GetChapterInfo_Info;                      // 0x0040(0x01F0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetChapterInfo_Found;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E2[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TScriptInterface<class IBPI_LevelManager_C>   CallFunc_AreaNameToID_self_CastInput;              // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AreaNameToID_LocationID;                  // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_AreaID;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_VariationID;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequestChangeScene_Error;                 // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_RequestChapterJump) == 0x000008, "Wrong alignment on BP_SceneManager_C_RequestChapterJump");
static_assert(sizeof(BP_SceneManager_C_RequestChapterJump) == 0x000268, "Wrong size on BP_SceneManager_C_RequestChapterJump");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, ChapterName) == 0x000000, "Member 'BP_SceneManager_C_RequestChapterJump::ChapterName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, Debug) == 0x000008, "Member 'BP_SceneManager_C_RequestChapterJump::Debug' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, Error) == 0x000009, "Member 'BP_SceneManager_C_RequestChapterJump::Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, K2Node_MakeStruct_WorldmapOpenAreaParam) == 0x00000C, "Member 'BP_SceneManager_C_RequestChapterJump::K2Node_MakeStruct_WorldmapOpenAreaParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BP_SceneManager_C_RequestChapterJump::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_GetEventManager_EventManager) == 0x000038, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_GetChapterInfo_Info) == 0x000040, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_GetChapterInfo_Info' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_GetChapterInfo_Found) == 0x000230, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_GetChapterInfo_Found' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, K2Node_MakeArray_Array) == 0x000238, "Member 'BP_SceneManager_C_RequestChapterJump::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_AreaNameToID_self_CastInput) == 0x000248, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_AreaNameToID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_AreaNameToID_LocationID) == 0x000258, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_AreaNameToID_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_AreaNameToID_AreaID) == 0x00025C, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_AreaNameToID_AreaID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_AreaNameToID_VariationID) == 0x000260, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_AreaNameToID_VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChapterJump, CallFunc_RequestChangeScene_Error) == 0x000264, "Member 'BP_SceneManager_C_RequestChapterJump::CallFunc_RequestChangeScene_Error' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetChapterInfo
// 0x03F8 (0x03F8 - 0x0000)
struct BP_SceneManager_C_GetChapterInfo final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ScenarioJump                        Info;                                              // 0x0008(0x01F0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x01F8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E3[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ScenarioJump                        CallFunc_GetDataTableRowFromName_OutRow;           // 0x0200(0x01F0)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_GetChapterInfo) == 0x000008, "Wrong alignment on BP_SceneManager_C_GetChapterInfo");
static_assert(sizeof(BP_SceneManager_C_GetChapterInfo) == 0x0003F8, "Wrong size on BP_SceneManager_C_GetChapterInfo");
static_assert(offsetof(BP_SceneManager_C_GetChapterInfo, RowName) == 0x000000, "Member 'BP_SceneManager_C_GetChapterInfo::RowName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetChapterInfo, Info) == 0x000008, "Member 'BP_SceneManager_C_GetChapterInfo::Info' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetChapterInfo, Found) == 0x0001F8, "Member 'BP_SceneManager_C_GetChapterInfo::Found' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetChapterInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000200, "Member 'BP_SceneManager_C_GetChapterInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetChapterInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003F0, "Member 'BP_SceneManager_C_GetChapterInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.RequestChangeSceneImmediate
// 0x0238 (0x0238 - 0x0000)
struct BP_SceneManager_C_RequestChangeSceneImmediate final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           SceneArgs;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          NoFade;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadingScreenType                            Param_LoadingScreenType;                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82E4[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_LoadingScreenParam;                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSaveDataLoadFlow;                                // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E5[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E6[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82E7[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82E8[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0110(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0150(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0190(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0220(0x0018)()
};
static_assert(alignof(BP_SceneManager_C_RequestChangeSceneImmediate) == 0x000008, "Wrong alignment on BP_SceneManager_C_RequestChangeSceneImmediate");
static_assert(sizeof(BP_SceneManager_C_RequestChangeSceneImmediate) == 0x000238, "Wrong size on BP_SceneManager_C_RequestChangeSceneImmediate");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, LocationId) == 0x000000, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, AreaId) == 0x000004, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, VariationID) == 0x000008, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, PortalID) == 0x00000C, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, SceneArgs) == 0x000010, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::SceneArgs' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, NoFade) == 0x000020, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::NoFade' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, Param_LoadingScreenType) == 0x000021, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::Param_LoadingScreenType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, Param_LoadingScreenParam) == 0x000024, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::Param_LoadingScreenParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, IsSaveDataLoadFlow) == 0x000028, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::IsSaveDataLoadFlow' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, Error) == 0x000029, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_SwitchEnum_CmpSuccess) == 0x00002A, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000030, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00003A, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00003B, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00003C, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000080, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0000C8, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000D0, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_3) == 0x000110, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_4) == 0x000150, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_5) == 0x000190, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeStruct_FormatArgumentData_6) == 0x0001D0, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, K2Node_MakeArray_Array) == 0x000210, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediate, CallFunc_Format_ReturnValue) == 0x000220, "Member 'BP_SceneManager_C_RequestChangeSceneImmediate::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.SetCurrentArea
// 0x0028 (0x0028 - 0x0000)
struct BP_SceneManager_C_SetCurrentArea final
{
public:
	int32                                         Location;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Area;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Variation;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Portal;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateBeforeID;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82E9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BattlefieldManager_C*               CallFunc_GetBattlefieldManager_BP_BattlefieldManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_SetCurrentArea) == 0x000008, "Wrong alignment on BP_SceneManager_C_SetCurrentArea");
static_assert(sizeof(BP_SceneManager_C_SetCurrentArea) == 0x000028, "Wrong size on BP_SceneManager_C_SetCurrentArea");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, Location) == 0x000000, "Member 'BP_SceneManager_C_SetCurrentArea::Location' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, Area) == 0x000004, "Member 'BP_SceneManager_C_SetCurrentArea::Area' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, Variation) == 0x000008, "Member 'BP_SceneManager_C_SetCurrentArea::Variation' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, Portal) == 0x00000C, "Member 'BP_SceneManager_C_SetCurrentArea::Portal' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, UpdateBeforeID) == 0x000010, "Member 'BP_SceneManager_C_SetCurrentArea::UpdateBeforeID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, CallFunc_GetBattlefieldManager_BP_BattlefieldManager) == 0x000018, "Member 'BP_SceneManager_C_SetCurrentArea::CallFunc_GetBattlefieldManager_BP_BattlefieldManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetCurrentArea, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_SetCurrentArea::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.CurrentAreaName
// 0x0018 (0x0018 - 0x0000)
struct BP_SceneManager_C_CurrentAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82EA[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_CurrentAreaName) == 0x000004, "Wrong alignment on BP_SceneManager_C_CurrentAreaName");
static_assert(sizeof(BP_SceneManager_C_CurrentAreaName) == 0x000018, "Wrong size on BP_SceneManager_C_CurrentAreaName");
static_assert(offsetof(BP_SceneManager_C_CurrentAreaName, AreaName) == 0x000000, "Member 'BP_SceneManager_C_CurrentAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CurrentAreaName, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_CurrentAreaName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CurrentAreaName, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_SceneManager_C_CurrentAreaName::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CurrentAreaName, CallFunc_GetAreaName_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_CurrentAreaName::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.RequestChangeSceneImmediateByName
// 0x01E0 (0x01E0 - 0x0000)
struct BP_SceneManager_C_RequestChangeSceneImmediateByName final
{
public:
	class FName                                   AreaInfoName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82EB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SceneArgs;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          NoFade;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadingScreenType                            Param_LoadingScreenType;                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82EC[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_LoadingScreenParam;                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0018)()
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82ED[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0108(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82EE[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_LevelManager_C>   CallFunc_AreaNameToID_self_CastInput;              // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AreaNameToID_LocationID;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_AreaID;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AreaNameToID_VariationID;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82EF[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0170(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_RequestChangeSceneImmediate_Error;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F0[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
};
static_assert(alignof(BP_SceneManager_C_RequestChangeSceneImmediateByName) == 0x000008, "Wrong alignment on BP_SceneManager_C_RequestChangeSceneImmediateByName");
static_assert(sizeof(BP_SceneManager_C_RequestChangeSceneImmediateByName) == 0x0001E0, "Wrong size on BP_SceneManager_C_RequestChangeSceneImmediateByName");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, AreaInfoName) == 0x000000, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::AreaInfoName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, PortalID) == 0x000008, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, SceneArgs) == 0x000010, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::SceneArgs' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, NoFade) == 0x000020, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::NoFade' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, Param_LoadingScreenType) == 0x000021, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::Param_LoadingScreenType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, Param_LoadingScreenParam) == 0x000024, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::Param_LoadingScreenParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000C8, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeStruct_FormatArgumentData_3) == 0x000108, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000148, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_AreaNameToID_self_CastInput) == 0x000150, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_AreaNameToID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_AreaNameToID_LocationID) == 0x000160, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_AreaNameToID_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_AreaNameToID_AreaID) == 0x000164, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_AreaNameToID_AreaID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_AreaNameToID_VariationID) == 0x000168, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_AreaNameToID_VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeStruct_FormatArgumentData_4) == 0x000170, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_RequestChangeSceneImmediate_Error) == 0x0001B0, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_RequestChangeSceneImmediate_Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, K2Node_MakeArray_Array) == 0x0001B8, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeSceneImmediateByName, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'BP_SceneManager_C_RequestChangeSceneImmediateByName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.Tick Wait Event Asset Load
// 0x0048 (0x0048 - 0x0000)
struct BP_SceneManager_C_Tick_Wait_Event_Asset_Load final
{
public:
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventEnd_ReturnValue;                     // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F1[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitingLoadOrVisible_IsWaiting;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadedEventAsset_isLoaded;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EndLoading_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanEndLoading_Can_End;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load) == 0x000008, "Wrong alignment on BP_SceneManager_C_Tick_Wait_Event_Asset_Load");
static_assert(sizeof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load) == 0x000048, "Wrong size on BP_SceneManager_C_Tick_Wait_Event_Asset_Load");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000000, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_GetPlayerManager_PlayerManager) == 0x000008, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, K2Node_DynamicCast_AsEvent_Interface) == 0x000010, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_EventEnd_ReturnValue) == 0x000022, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_EventEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000028, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_IsWaitingLoadOrVisible_IsWaiting) == 0x000030, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_IsWaitingLoadOrVisible_IsWaiting' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_GetEventManager_EventManager) == 0x000038, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_IsLoadedEventAsset_isLoaded) == 0x000040, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_IsLoadedEventAsset_isLoaded' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_EndLoading_ReturnValue) == 0x000042, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_EndLoading_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Event_Asset_Load, CallFunc_CanEndLoading_Can_End) == 0x000043, "Member 'BP_SceneManager_C_Tick_Wait_Event_Asset_Load::CallFunc_CanEndLoading_Can_End' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.DeleteAllWalkingNPC
// 0x0038 (0x0038 - 0x0000)
struct BP_SceneManager_C_DeleteAllWalkingNPC final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SplineMoveNPCSpawner_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SplineMoveNPCSpawner_C*             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_DeleteAllWalkingNPC) == 0x000008, "Wrong alignment on BP_SceneManager_C_DeleteAllWalkingNPC");
static_assert(sizeof(BP_SceneManager_C_DeleteAllWalkingNPC) == 0x000038, "Wrong size on BP_SceneManager_C_DeleteAllWalkingNPC");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_DeleteAllWalkingNPC, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_SceneManager_C_DeleteAllWalkingNPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.RequestChangeScene
// 0x0278 (0x0278 - 0x0000)
struct BP_SceneManager_C_RequestChangeScene final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           SceneArgs;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          NoFade;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadingScreenType                            Param_LoadingScreenType;                           // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82F6[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_LoadingScreenParam;                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAutoSaveEnable;                                  // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BattleSimulatorLevelInfosName;                     // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrainFieldManager_C*                CallFunc_GetBrainFieldManager_Manager;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInvokeBrainField_InvokeBrainField;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82F9[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FA[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseMinimap_ReturnValue;                 // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FB[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ByteToText_ReturnValue;              // 0x0068(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82FC[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82FD[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0150(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0190(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0210(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0260(0x0018)()
};
static_assert(alignof(BP_SceneManager_C_RequestChangeScene) == 0x000008, "Wrong alignment on BP_SceneManager_C_RequestChangeScene");
static_assert(sizeof(BP_SceneManager_C_RequestChangeScene) == 0x000278, "Wrong size on BP_SceneManager_C_RequestChangeScene");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, LocationId) == 0x000000, "Member 'BP_SceneManager_C_RequestChangeScene::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, AreaId) == 0x000004, "Member 'BP_SceneManager_C_RequestChangeScene::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, PortalID) == 0x000008, "Member 'BP_SceneManager_C_RequestChangeScene::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, SceneArgs) == 0x000010, "Member 'BP_SceneManager_C_RequestChangeScene::SceneArgs' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, NoFade) == 0x000020, "Member 'BP_SceneManager_C_RequestChangeScene::NoFade' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, Error) == 0x000021, "Member 'BP_SceneManager_C_RequestChangeScene::Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, Param_LoadingScreenType) == 0x000022, "Member 'BP_SceneManager_C_RequestChangeScene::Param_LoadingScreenType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, Param_LoadingScreenParam) == 0x000024, "Member 'BP_SceneManager_C_RequestChangeScene::Param_LoadingScreenParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, IsAutoSaveEnable) == 0x000028, "Member 'BP_SceneManager_C_RequestChangeScene::IsAutoSaveEnable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, BattleSimulatorLevelInfosName) == 0x00002C, "Member 'BP_SceneManager_C_RequestChangeScene::BattleSimulatorLevelInfosName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_GetBrainFieldManager_Manager) == 0x000038, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_GetBrainFieldManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_IsInvokeBrainField_InvokeBrainField) == 0x000040, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_IsInvokeBrainField_InvokeBrainField' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000048, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000058, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000061, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_CloseMinimap_ReturnValue) == 0x000062, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_CloseMinimap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000063, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000065, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_Conv_ByteToText_ReturnValue) == 0x000068, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_Conv_ByteToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000100, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000148, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_3) == 0x000150, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_4) == 0x000190, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_5) == 0x0001D0, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeStruct_FormatArgumentData_6) == 0x000210, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, K2Node_MakeArray_Array) == 0x000250, "Member 'BP_SceneManager_C_RequestChangeScene::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_RequestChangeScene, CallFunc_Format_ReturnValue) == 0x000260, "Member 'BP_SceneManager_C_RequestChangeScene::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsStatusInScene
// 0x0002 (0x0002 - 0x0000)
struct BP_SceneManager_C_IsStatusInScene final
{
public:
	bool                                          IsInScene;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsStatusInScene) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsStatusInScene");
static_assert(sizeof(BP_SceneManager_C_IsStatusInScene) == 0x000002, "Wrong size on BP_SceneManager_C_IsStatusInScene");
static_assert(offsetof(BP_SceneManager_C_IsStatusInScene, IsInScene) == 0x000000, "Member 'BP_SceneManager_C_IsStatusInScene::IsInScene' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsStatusInScene, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsStatusInScene::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.UpdateAllTownPeopleState
// 0x0030 (0x0030 - 0x0000)
struct BP_SceneManager_C_UpdateAllTownPeopleState final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82FE[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_TownPeople_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82FF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_UpdateAllTownPeopleState) == 0x000008, "Wrong alignment on BP_SceneManager_C_UpdateAllTownPeopleState");
static_assert(sizeof(BP_SceneManager_C_UpdateAllTownPeopleState) == 0x000030, "Wrong size on BP_SceneManager_C_UpdateAllTownPeopleState");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, Temp_int_Loop_Num_Variable) == 0x000004, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateAllTownPeopleState, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_UpdateAllTownPeopleState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsWaitLoadScene
// 0x0004 (0x0004 - 0x0000)
struct BP_SceneManager_C_IsWaitLoadScene final
{
public:
	bool                                          IsWaitLoad;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitingLoadOrVisible_IsWaiting;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsWaitLoadScene) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsWaitLoadScene");
static_assert(sizeof(BP_SceneManager_C_IsWaitLoadScene) == 0x000004, "Wrong size on BP_SceneManager_C_IsWaitLoadScene");
static_assert(offsetof(BP_SceneManager_C_IsWaitLoadScene, IsWaitLoad) == 0x000000, "Member 'BP_SceneManager_C_IsWaitLoadScene::IsWaitLoad' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsWaitLoadScene, CallFunc_IsWaitingLoadOrVisible_IsWaiting) == 0x000001, "Member 'BP_SceneManager_C_IsWaitLoadScene::CallFunc_IsWaitingLoadOrVisible_IsWaiting' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsWaitLoadScene, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_SceneManager_C_IsWaitLoadScene::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsWaitLoadScene, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_SceneManager_C_IsWaitLoadScene::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.SelectLoadingUI
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_SelectLoadingUI final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELoadingScreenType                            Param_LoadingScreenType;                           // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8300[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_LoadingScreenParam;                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_SelectLoadingUI) == 0x000004, "Wrong alignment on BP_SceneManager_C_SelectLoadingUI");
static_assert(sizeof(BP_SceneManager_C_SelectLoadingUI) == 0x000010, "Wrong size on BP_SceneManager_C_SelectLoadingUI");
static_assert(offsetof(BP_SceneManager_C_SelectLoadingUI, LocationId) == 0x000000, "Member 'BP_SceneManager_C_SelectLoadingUI::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SelectLoadingUI, Param_LoadingScreenType) == 0x000004, "Member 'BP_SceneManager_C_SelectLoadingUI::Param_LoadingScreenType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SelectLoadingUI, Param_LoadingScreenParam) == 0x000008, "Member 'BP_SceneManager_C_SelectLoadingUI::Param_LoadingScreenParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SelectLoadingUI, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'BP_SceneManager_C_SelectLoadingUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SelectLoadingUI, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BP_SceneManager_C_SelectLoadingUI::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetCurrentLocationAndArea
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_GetCurrentLocationAndArea final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_LocationID;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationAndArea_AreaID;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetCurrentLocationAndArea) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetCurrentLocationAndArea");
static_assert(sizeof(BP_SceneManager_C_GetCurrentLocationAndArea) == 0x000010, "Wrong size on BP_SceneManager_C_GetCurrentLocationAndArea");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationAndArea, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetCurrentLocationAndArea::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationAndArea, AreaId) == 0x000004, "Member 'BP_SceneManager_C_GetCurrentLocationAndArea::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationAndArea, CallFunc_GetCurrentLocationAndArea_LocationID) == 0x000008, "Member 'BP_SceneManager_C_GetCurrentLocationAndArea::CallFunc_GetCurrentLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationAndArea, CallFunc_GetCurrentLocationAndArea_AreaID) == 0x00000C, "Member 'BP_SceneManager_C_GetCurrentLocationAndArea::CallFunc_GetCurrentLocationAndArea_AreaID' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.Tick Wait Unload Dynamic Levels
// 0x0058 (0x0058 - 0x0000)
struct BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels final
{
public:
	int32                                         L_NextLocation;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8301[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitedForWaitUnloadDynamicLevels_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Init_Loading_Chara_isinit;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8302[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEventInterface>       K2Node_DynamicCast_AsEvent_Interface;              // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitingLoadOrVisible_IsWaiting;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventStart_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8303[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APsychicObjectManager_C*                CallFunc_GetPsychicObjectManager_PsyObjManager;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8304[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Request_Load_Area_Async_LoadLocationID;   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Request_Load_Area_Async_LoadAreaID;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Request_Load_Area_Async_LoadVariationID;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartLoading_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels) == 0x000008, "Wrong alignment on BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels");
static_assert(sizeof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels) == 0x000058, "Wrong size on BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, L_NextLocation) == 0x000000, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::L_NextLocation' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000008, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_IsWaitedForWaitUnloadDynamicLevels_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_IsWaitedForWaitUnloadDynamicLevels_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_Is_Init_Loading_Chara_isinit) == 0x000011, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_Is_Init_Loading_Chara_isinit' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_GetPlayerManager_PlayerManager) == 0x000018, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, K2Node_DynamicCast_AsEvent_Interface) == 0x000020, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::K2Node_DynamicCast_AsEvent_Interface' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_IsWaitingLoadOrVisible_IsWaiting) == 0x000031, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_IsWaitingLoadOrVisible_IsWaiting' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_EventStart_ReturnValue) == 0x000032, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_EventStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_IsValid_ReturnValue) == 0x000033, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000035, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_GetPsychicObjectManager_PsyObjManager) == 0x000038, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_GetPsychicObjectManager_PsyObjManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_Less_IntInt_ReturnValue) == 0x000042, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_Request_Load_Area_Async_LoadLocationID) == 0x000044, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_Request_Load_Area_Async_LoadLocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_Request_Load_Area_Async_LoadAreaID) == 0x000048, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_Request_Load_Area_Async_LoadAreaID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_Request_Load_Area_Async_LoadVariationID) == 0x00004C, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_Request_Load_Area_Async_LoadVariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels, CallFunc_StartLoading_ReturnValue) == 0x000050, "Member 'BP_SceneManager_C_Tick_Wait_Unload_Dynamic_Levels::CallFunc_StartLoading_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetPreviousLocationAndArea
// 0x000C (0x000C - 0x0000)
struct BP_SceneManager_C_GetPreviousLocationAndArea final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetPreviousLocationAndArea) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetPreviousLocationAndArea");
static_assert(sizeof(BP_SceneManager_C_GetPreviousLocationAndArea) == 0x00000C, "Wrong size on BP_SceneManager_C_GetPreviousLocationAndArea");
static_assert(offsetof(BP_SceneManager_C_GetPreviousLocationAndArea, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetPreviousLocationAndArea::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPreviousLocationAndArea, AreaId) == 0x000004, "Member 'BP_SceneManager_C_GetPreviousLocationAndArea::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPreviousLocationAndArea, PortalID) == 0x000008, "Member 'BP_SceneManager_C_GetPreviousLocationAndArea::PortalID' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetStartPortalName
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_GetStartPortalName final
{
public:
	class FName                                   PortalName;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetStartPortalName) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetStartPortalName");
static_assert(sizeof(BP_SceneManager_C_GetStartPortalName) == 0x000010, "Wrong size on BP_SceneManager_C_GetStartPortalName");
static_assert(offsetof(BP_SceneManager_C_GetStartPortalName, PortalName) == 0x000000, "Member 'BP_SceneManager_C_GetStartPortalName::PortalName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetStartPortalName, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_SceneManager_C_GetStartPortalName::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetBeforeLocationAndArea
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_GetBeforeLocationAndArea final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforeLocationAndArea_LocationID;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBeforeLocationAndArea_AreaID;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetBeforeLocationAndArea) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetBeforeLocationAndArea");
static_assert(sizeof(BP_SceneManager_C_GetBeforeLocationAndArea) == 0x000010, "Wrong size on BP_SceneManager_C_GetBeforeLocationAndArea");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationAndArea, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetBeforeLocationAndArea::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationAndArea, AreaId) == 0x000004, "Member 'BP_SceneManager_C_GetBeforeLocationAndArea::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationAndArea, CallFunc_GetBeforeLocationAndArea_LocationID) == 0x000008, "Member 'BP_SceneManager_C_GetBeforeLocationAndArea::CallFunc_GetBeforeLocationAndArea_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationAndArea, CallFunc_GetBeforeLocationAndArea_AreaID) == 0x00000C, "Member 'BP_SceneManager_C_GetBeforeLocationAndArea::CallFunc_GetBeforeLocationAndArea_AreaID' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.MovePlayerAtNewArea
// 0x0068 (0x0068 - 0x0000)
struct BP_SceneManager_C_MovePlayerAtNewArea final
{
public:
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8305[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentLocationID_locationID;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8306[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveLoadParamClassManager*             CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8307[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLoadExecution_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8308[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0050(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_MovePlayerAtNewArea) == 0x000008, "Wrong alignment on BP_SceneManager_C_MovePlayerAtNewArea");
static_assert(sizeof(BP_SceneManager_C_MovePlayerAtNewArea) == 0x000068, "Wrong size on BP_SceneManager_C_MovePlayerAtNewArea");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x000000, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_GetCurrentLocationID_locationID) == 0x00000C, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_GetCurrentLocationID_locationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager) == 0x000018, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_GetSaveLoadParamClassManager_SaveLoadParamClassManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_IsLoadExecution_ReturnValue) == 0x000029, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_IsLoadExecution_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, Temp_name_Variable) == 0x00002C, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_GetAllActorsOfClass_OutActors) == 0x000050, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MovePlayerAtNewArea, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_SceneManager_C_MovePlayerAtNewArea::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickWaitAreaLBPortalLevelLoading
// 0x0078 (0x0078 - 0x0000)
struct BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading final
{
public:
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsLoaded_IsLoaded;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsLoaded_IsError;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8309[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaLBPortalLevelsLoaded_Area_Info;     // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading");
static_assert(sizeof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading) == 0x000078, "Wrong size on BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x000000, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading, CallFunc_IsAreaLBPortalLevelsLoaded_IsLoaded) == 0x000009, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading::CallFunc_IsAreaLBPortalLevelsLoaded_IsLoaded' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading, CallFunc_IsAreaLBPortalLevelsLoaded_IsError) == 0x00000A, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading::CallFunc_IsAreaLBPortalLevelsLoaded_IsError' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading, CallFunc_IsAreaLBPortalLevelsLoaded_Area_Info) == 0x000010, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelLoading::CallFunc_IsAreaLBPortalLevelsLoaded_Area_Info' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetPortalTransform
// 0x0110 (0x0110 - 0x0000)
struct BP_SceneManager_C_GetPortalTransform final
{
public:
	int32                                         LocationNo;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaNo;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PortalName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	bool                                          Found;                                             // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_830A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUiSceneMapIconNode>            ResultList;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_830B[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_830C[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_830D[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_GetPortalTransform) == 0x000010, "Wrong alignment on BP_SceneManager_C_GetPortalTransform");
static_assert(sizeof(BP_SceneManager_C_GetPortalTransform) == 0x000110, "Wrong size on BP_SceneManager_C_GetPortalTransform");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, LocationNo) == 0x000000, "Member 'BP_SceneManager_C_GetPortalTransform::LocationNo' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, AreaNo) == 0x000004, "Member 'BP_SceneManager_C_GetPortalTransform::AreaNo' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, PortalName) == 0x000008, "Member 'BP_SceneManager_C_GetPortalTransform::PortalName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, Transform) == 0x000010, "Member 'BP_SceneManager_C_GetPortalTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, Found) == 0x000040, "Member 'BP_SceneManager_C_GetPortalTransform::Found' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, ResultList) == 0x000048, "Member 'BP_SceneManager_C_GetPortalTransform::ResultList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_SceneManager_C_GetPortalTransform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, Temp_int_Loop_Num_Variable) == 0x00005C, "Member 'BP_SceneManager_C_GetPortalTransform::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_SceneManager_C_GetPortalTransform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_BreakVector_X) == 0x0000A4, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_Conv_NameToString_ReturnValue) == 0x0000B0, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_MakeRotator_ReturnValue) == 0x0000C0, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x0000D0, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetPortalTransform, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000100, "Member 'BP_SceneManager_C_GetPortalTransform::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.TickWaitAreaLBPortalLevelVisible
// 0x0078 (0x0078 - 0x0000)
struct BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible final
{
public:
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SceneType                                   CallFunc_GetCurrentSceneType_SceneType;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsVisible_IsVisible;    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAreaLBPortalLevelsVisible_IsError;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_830E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AreaInfo                            CallFunc_IsAreaLBPortalLevelsVisible_Area_Info;    // 0x0010(0x0068)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible) == 0x000008, "Wrong alignment on BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible");
static_assert(sizeof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible) == 0x000078, "Wrong size on BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_GetPlayerManager_PlayerManager) == 0x000000, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_GetCurrentSceneType_SceneType) == 0x000008, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_GetCurrentSceneType_SceneType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_IsAreaLBPortalLevelsVisible_IsVisible) == 0x00000A, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_IsAreaLBPortalLevelsVisible_IsVisible' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_IsAreaLBPortalLevelsVisible_IsError) == 0x00000B, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_IsAreaLBPortalLevelsVisible_IsError' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible, CallFunc_IsAreaLBPortalLevelsVisible_Area_Info) == 0x000010, "Member 'BP_SceneManager_C_TickWaitAreaLBPortalLevelVisible::CallFunc_IsAreaLBPortalLevelsVisible_Area_Info' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.CheckPlayerInEventTrigger
// 0x0040 (0x0040 - 0x0000)
struct BP_SceneManager_C_CheckPlayerInEventTrigger final
{
public:
	bool                                          InEvent;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_830F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EventTriggerBox_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckEnableEvent_Enable;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8310[0x1];                                     // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_CheckPlayerInEventTrigger) == 0x000008, "Wrong alignment on BP_SceneManager_C_CheckPlayerInEventTrigger");
static_assert(sizeof(BP_SceneManager_C_CheckPlayerInEventTrigger) == 0x000040, "Wrong size on BP_SceneManager_C_CheckPlayerInEventTrigger");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, InEvent) == 0x000000, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::InEvent' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_IsValid_ReturnValue) == 0x000025, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_CheckEnableEvent_Enable) == 0x000026, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_CheckEnableEvent_Enable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_CheckPlayerInEventTrigger, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SceneManager_C_CheckPlayerInEventTrigger::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetDebugStartedScenarioJumpRowName
// 0x0008 (0x0008 - 0x0000)
struct BP_SceneManager_C_GetDebugStartedScenarioJumpRowName final
{
public:
	class FName                                   ScenerioJumpRowName;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetDebugStartedScenarioJumpRowName) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetDebugStartedScenarioJumpRowName");
static_assert(sizeof(BP_SceneManager_C_GetDebugStartedScenarioJumpRowName) == 0x000008, "Wrong size on BP_SceneManager_C_GetDebugStartedScenarioJumpRowName");
static_assert(offsetof(BP_SceneManager_C_GetDebugStartedScenarioJumpRowName, ScenerioJumpRowName) == 0x000000, "Member 'BP_SceneManager_C_GetDebugStartedScenarioJumpRowName::ScenerioJumpRowName' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.SetDebugStartedScenarioJumpRowName
// 0x0008 (0x0008 - 0x0000)
struct BP_SceneManager_C_SetDebugStartedScenarioJumpRowName final
{
public:
	class FName                                   ScenerioJumpRowName;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_SetDebugStartedScenarioJumpRowName) == 0x000004, "Wrong alignment on BP_SceneManager_C_SetDebugStartedScenarioJumpRowName");
static_assert(sizeof(BP_SceneManager_C_SetDebugStartedScenarioJumpRowName) == 0x000008, "Wrong size on BP_SceneManager_C_SetDebugStartedScenarioJumpRowName");
static_assert(offsetof(BP_SceneManager_C_SetDebugStartedScenarioJumpRowName, ScenerioJumpRowName) == 0x000000, "Member 'BP_SceneManager_C_SetDebugStartedScenarioJumpRowName::ScenerioJumpRowName' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsDebugAlphaROMScenerio
// 0x0020 (0x0020 - 0x0000)
struct BP_SceneManager_C_IsDebugAlphaROMScenerio final
{
public:
	bool                                          bAlphaScenerio;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8311[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesWildcard_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsDebugAlphaROMScenerio) == 0x000008, "Wrong alignment on BP_SceneManager_C_IsDebugAlphaROMScenerio");
static_assert(sizeof(BP_SceneManager_C_IsDebugAlphaROMScenerio) == 0x000020, "Wrong size on BP_SceneManager_C_IsDebugAlphaROMScenerio");
static_assert(offsetof(BP_SceneManager_C_IsDebugAlphaROMScenerio, bAlphaScenerio) == 0x000000, "Member 'BP_SceneManager_C_IsDebugAlphaROMScenerio::bAlphaScenerio' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsDebugAlphaROMScenerio, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_IsDebugAlphaROMScenerio::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsDebugAlphaROMScenerio, CallFunc_MatchesWildcard_ReturnValue) == 0x000018, "Member 'BP_SceneManager_C_IsDebugAlphaROMScenerio::CallFunc_MatchesWildcard_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.SetLastPlayerSpawnInfo
// 0x0040 (0x0040 - 0x0000)
struct BP_SceneManager_C_SetLastPlayerSpawnInfo final
{
public:
	class FName                                   PortalName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8312[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LastSpawnTransform;                                // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_SetLastPlayerSpawnInfo) == 0x000010, "Wrong alignment on BP_SceneManager_C_SetLastPlayerSpawnInfo");
static_assert(sizeof(BP_SceneManager_C_SetLastPlayerSpawnInfo) == 0x000040, "Wrong size on BP_SceneManager_C_SetLastPlayerSpawnInfo");
static_assert(offsetof(BP_SceneManager_C_SetLastPlayerSpawnInfo, PortalName) == 0x000000, "Member 'BP_SceneManager_C_SetLastPlayerSpawnInfo::PortalName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_SetLastPlayerSpawnInfo, LastSpawnTransform) == 0x000010, "Member 'BP_SceneManager_C_SetLastPlayerSpawnInfo::LastSpawnTransform' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.EventManagerStart
// 0x0118 (0x0118 - 0x0000)
struct BP_SceneManager_C_EventManagerStart final
{
public:
	bool                                          EnableTick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Visibility;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8313[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANpcShopBase*>                   ShopNPCList;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ANpcTownPeopleBase*>             NPCList;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ASavePointBase*>                 SavePointList;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8314[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8315[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationRestaurant_InAjito;             // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationAjito_InAjito;                  // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8316[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNpcManager*                            CallFunc_GetNpcManager_NpcManager;                 // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocationAjito_InAjito_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8317[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8318[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AAjitoManager*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A0(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AAjitoManager*                          CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_NewTownPeople_C>  K2Node_DynamicCast_AsBPI_New_Town_People;          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8319[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IEventManagerInterface> CallFunc_EventManagerStart_self_CastInput;         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventManagerStart_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNowHiddenData_IsHidden;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831A[0x5];                                     // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NewTownPeople_C>  K2Node_DynamicCast_AsBPI_New_Town_People_1;        // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831B[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDTRowName_Name;                        // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831C[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_EventManagerStart) == 0x000008, "Wrong alignment on BP_SceneManager_C_EventManagerStart");
static_assert(sizeof(BP_SceneManager_C_EventManagerStart) == 0x000118, "Wrong size on BP_SceneManager_C_EventManagerStart");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, EnableTick) == 0x000000, "Member 'BP_SceneManager_C_EventManagerStart::EnableTick' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Visibility) == 0x000001, "Member 'BP_SceneManager_C_EventManagerStart::Visibility' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, ReturnValue) == 0x000002, "Member 'BP_SceneManager_C_EventManagerStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, ShopNPCList) == 0x000008, "Member 'BP_SceneManager_C_EventManagerStart::ShopNPCList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, NPCList) == 0x000018, "Member 'BP_SceneManager_C_EventManagerStart::NPCList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, SavePointList) == 0x000028, "Member 'BP_SceneManager_C_EventManagerStart::SavePointList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Num_Variable) == 0x00003C, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Greater_IntInt_ReturnValue) == 0x00004D, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Num_Variable_1) == 0x000054, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Counter_Variable_1) == 0x000058, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Array_Index_Variable_2) == 0x000064, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Num_Variable_2) == 0x000068, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue_2) == 0x000070, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue_3) == 0x000074, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000078, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_IsLocationRestaurant_InAjito) == 0x00007A, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_IsLocationRestaurant_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_IsLocationAjito_InAjito) == 0x00007B, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_IsLocationAjito_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_BooleanOR_ReturnValue) == 0x00007C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_GetNpcManager_NpcManager) == 0x000080, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_GetNpcManager_NpcManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_IsLocationAjito_InAjito_1) == 0x000088, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_IsLocationAjito_InAjito_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, Temp_int_Loop_Counter_Variable_2) == 0x00008C, "Member 'BP_SceneManager_C_EventManagerStart::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000090, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Less_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A0, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, K2Node_DynamicCast_AsBPI_New_Town_People) == 0x0000B8, "Member 'BP_SceneManager_C_EventManagerStart::K2Node_DynamicCast_AsBPI_New_Town_People' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_SceneManager_C_EventManagerStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_EventManagerStart_self_CastInput) == 0x0000D0, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_EventManagerStart_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_EventManagerStart_ReturnValue) == 0x0000E0, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_EventManagerStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_GetNowHiddenData_IsHidden) == 0x0000E1, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_GetNowHiddenData_IsHidden' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_IsValid_ReturnValue_1) == 0x0000E2, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, K2Node_DynamicCast_AsBPI_New_Town_People_1) == 0x0000E8, "Member 'BP_SceneManager_C_EventManagerStart::K2Node_DynamicCast_AsBPI_New_Town_People_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'BP_SceneManager_C_EventManagerStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_GetDTRowName_Name) == 0x0000FC, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_GetDTRowName_Name' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_DoesImplementInterface_ReturnValue) == 0x000104, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000105, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000106, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000107, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_BooleanOR_ReturnValue_1) == 0x000108, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue_4) == 0x00010C, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Array_Length_ReturnValue_5) == 0x000110, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerStart, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000114, "Member 'BP_SceneManager_C_EventManagerStart::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.EventManagerEnd
// 0x0178 (0x0178 - 0x0000)
struct BP_SceneManager_C_EventManagerEnd final
{
public:
	bool                                          RestoreEnableTick;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RestoreVisibility;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831D[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AAjitoManager*                          LAjitoManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANpcTownPeopleBase*                     LNPC;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	bool                                          LIsLocationAjito;                                  // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831E[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ANpcShopBase*>                   ShopNPCList;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ANpcTownPeopleBase*>             NPCList;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ASavePointBase*>                 SavePointList;                                     // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831F[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8320[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NewTownPeople_C>  K2Node_DynamicCast_AsBPI_New_Town_People;          // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8321[0x2];                                     // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDTRowName_Name;                        // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IEventManagerInterface> CallFunc_EventManagerEnd_self_CastInput;           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EventManagerEnd_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8322[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NewTownPeople_C>  K2Node_DynamicCast_AsBPI_New_Town_People_1;        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetNowHiddenData_IsHidden;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8323[0x2];                                     // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8324[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0100(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8325[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8326[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationRestaurant_InAjito;             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8327[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Num_Variable_3;                      // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8328[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNpcManager*                            CallFunc_GetNpcManager_NpcManager;                 // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8329[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationAjito_InAjito;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_832A[0x6];                                     // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AAjitoManager*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0160(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AAjitoManager*                          CallFunc_Array_Get_Item;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_EventManagerEnd) == 0x000008, "Wrong alignment on BP_SceneManager_C_EventManagerEnd");
static_assert(sizeof(BP_SceneManager_C_EventManagerEnd) == 0x000178, "Wrong size on BP_SceneManager_C_EventManagerEnd");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, RestoreEnableTick) == 0x000000, "Member 'BP_SceneManager_C_EventManagerEnd::RestoreEnableTick' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, RestoreVisibility) == 0x000001, "Member 'BP_SceneManager_C_EventManagerEnd::RestoreVisibility' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, ReturnValue) == 0x000002, "Member 'BP_SceneManager_C_EventManagerEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, LAjitoManager) == 0x000008, "Member 'BP_SceneManager_C_EventManagerEnd::LAjitoManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, LNPC) == 0x000010, "Member 'BP_SceneManager_C_EventManagerEnd::LNPC' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, LPlayerList) == 0x000018, "Member 'BP_SceneManager_C_EventManagerEnd::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, LIsLocationAjito) == 0x000028, "Member 'BP_SceneManager_C_EventManagerEnd::LIsLocationAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, ShopNPCList) == 0x000030, "Member 'BP_SceneManager_C_EventManagerEnd::ShopNPCList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, NPCList) == 0x000040, "Member 'BP_SceneManager_C_EventManagerEnd::NPCList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, SavePointList) == 0x000050, "Member 'BP_SceneManager_C_EventManagerEnd::SavePointList' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Num_Variable) == 0x000070, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Array_Index_Variable_2) == 0x00008C, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Num_Variable_1) == 0x000090, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_AsBPI_New_Town_People) == 0x000098, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_AsBPI_New_Town_People' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_IsValid_ReturnValue) == 0x0000A9, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetDTRowName_Name) == 0x0000AC, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetDTRowName_Name' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B4, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000B5, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000B6, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_BooleanOR_ReturnValue) == 0x0000B7, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_EventManagerEnd_self_CastInput) == 0x0000B8, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_EventManagerEnd_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_EventManagerEnd_ReturnValue) == 0x0000C8, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_EventManagerEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000C9, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_AsBPI_New_Town_People_1) == 0x0000D0, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_AsBPI_New_Town_People_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetNowHiddenData_IsHidden) == 0x0000E1, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetNowHiddenData_IsHidden' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Counter_Variable_3) == 0x0000E4, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E8, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_1) == 0x0000EC, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetPlayerManager_PlayerManager) == 0x0000F8, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetPlayerList_ReturnValue) == 0x000100, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_3) == 0x000110, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_4) == 0x000114, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_5) == 0x00011C, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Length_ReturnValue_6) == 0x000120, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000124, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_IsValid_ReturnValue_1) == 0x000125, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Num_Variable_2) == 0x000128, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Less_IntInt_ReturnValue_2) == 0x00012C, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_IsLocationRestaurant_InAjito) == 0x00012D, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_IsLocationRestaurant_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Loop_Num_Variable_3) == 0x000130, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Loop_Num_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Less_IntInt_ReturnValue_3) == 0x000134, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetNpcManager_NpcManager) == 0x000138, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetNpcManager_NpcManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, Temp_int_Array_Index_Variable_3) == 0x000140, "Member 'BP_SceneManager_C_EventManagerEnd::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_AsRSBattle_Player) == 0x000148, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'BP_SceneManager_C_EventManagerEnd::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_IsLocationAjito_InAjito) == 0x000151, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_IsLocationAjito_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000158, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_GetAllActorsOfClass_OutActors) == 0x000160, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_EventManagerEnd, CallFunc_Array_Get_Item) == 0x000170, "Member 'BP_SceneManager_C_EventManagerEnd::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.InitializeAjito
// 0x0080 (0x0080 - 0x0000)
struct BP_SceneManager_C_InitializeAjito final
{
public:
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_832B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBrainMessageParamManager*              CallFunc_GetBrainMessageParamManager_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetToday_Year;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetToday_Month;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetToday_Day;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CosmosWebManager_C*                 CallFunc_GetCosmosWebManager_CosmosWebMaanger;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_StartAndGetBirthdayThreadID_ReturnValue;  // 0x0030(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_RequestAddNotificationBrainMessage_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocationAjito_InAjito;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_832D[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AAjitoManager*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0048(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class AAjitoManager*                          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_832E[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_AjitoManager_C>   K2Node_DynamicCast_AsBPI_Ajito_Manager;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_InitializeAjito) == 0x000008, "Wrong alignment on BP_SceneManager_C_InitializeAjito");
static_assert(sizeof(BP_SceneManager_C_InitializeAjito) == 0x000080, "Wrong size on BP_SceneManager_C_InitializeAjito");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetUserParamManager_UserParamManager) == 0x000000, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetBrainMessageParamManager_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetBrainMessageParamManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetToday_Year) == 0x000018, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetToday_Year' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetToday_Month) == 0x00001C, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetToday_Month' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetToday_Day) == 0x000020, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetToday_Day' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetCosmosWebManager_CosmosWebMaanger) == 0x000028, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetCosmosWebManager_CosmosWebMaanger' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_StartAndGetBirthdayThreadID_ReturnValue) == 0x000030, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_StartAndGetBirthdayThreadID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_RequestAddNotificationBrainMessage_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_RequestAddNotificationBrainMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_IsLocationAjito_InAjito) == 0x000041, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_IsLocationAjito_InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_GetAllActorsOfClass_OutActors) == 0x000048, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_SceneManager_C_InitializeAjito::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, K2Node_DynamicCast_AsBPI_Ajito_Manager) == 0x000068, "Member 'BP_SceneManager_C_InitializeAjito::K2Node_DynamicCast_AsBPI_Ajito_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitializeAjito, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_SceneManager_C_InitializeAjito::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsLocationAjito
// 0x0002 (0x0002 - 0x0000)
struct BP_SceneManager_C_IsLocationAjito final
{
public:
	bool                                          InAjito;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsLocationAjito) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsLocationAjito");
static_assert(sizeof(BP_SceneManager_C_IsLocationAjito) == 0x000002, "Wrong size on BP_SceneManager_C_IsLocationAjito");
static_assert(offsetof(BP_SceneManager_C_IsLocationAjito, InAjito) == 0x000000, "Member 'BP_SceneManager_C_IsLocationAjito::InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsLocationAjito, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsLocationAjito::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.UpdateLiftFloorAtLoad
// 0x0070 (0x0070 - 0x0000)
struct BP_SceneManager_C_UpdateLiftFloorAtLoad final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_832F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapGimmickManager*                     MapGimmickMan;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      UserParamMan;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8330[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_ElevatorBase_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSCharacterBase*                       CallFunc_GetBattleMemberActorFromKind_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_UpdateLiftFloorAtLoad) == 0x000008, "Wrong alignment on BP_SceneManager_C_UpdateLiftFloorAtLoad");
static_assert(sizeof(BP_SceneManager_C_UpdateLiftFloorAtLoad) == 0x000070, "Wrong size on BP_SceneManager_C_UpdateLiftFloorAtLoad");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, Floor) == 0x000000, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::Floor' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, MapGimmickMan) == 0x000008, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::MapGimmickMan' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, UserParamMan) == 0x000010, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::UserParamMan' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_GetPlayerManager_PlayerManager) == 0x000038, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_GetBattleMemberActorFromKind_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_GetBattleMemberActorFromKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x000058, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, Temp_int_Loop_Num_Variable) == 0x000060, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000065, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000067, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000068, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_UpdateLiftFloorAtLoad, CallFunc_BooleanAND_ReturnValue_1) == 0x000069, "Member 'BP_SceneManager_C_UpdateLiftFloorAtLoad::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.MoveLiftFloorForce
// 0x0030 (0x0030 - 0x0000)
struct BP_SceneManager_C_MoveLiftFloorForce final
{
public:
	int32                                         Floor;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_ElevatorBase_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8331[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_MoveLiftFloorForce) == 0x000008, "Wrong alignment on BP_SceneManager_C_MoveLiftFloorForce");
static_assert(sizeof(BP_SceneManager_C_MoveLiftFloorForce) == 0x000030, "Wrong size on BP_SceneManager_C_MoveLiftFloorForce");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, Floor) == 0x000000, "Member 'BP_SceneManager_C_MoveLiftFloorForce::Floor' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SceneManager_C_MoveLiftFloorForce::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_SceneManager_C_MoveLiftFloorForce::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SceneManager_C_MoveLiftFloorForce::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'BP_SceneManager_C_MoveLiftFloorForce::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_MoveLiftFloorForce::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_SceneManager_C_MoveLiftFloorForce::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_MoveLiftFloorForce, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SceneManager_C_MoveLiftFloorForce::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsLocationRestaurant
// 0x0004 (0x0004 - 0x0000)
struct BP_SceneManager_C_IsLocationRestaurant final
{
public:
	bool                                          InAjito;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsLocationRestaurant) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsLocationRestaurant");
static_assert(sizeof(BP_SceneManager_C_IsLocationRestaurant) == 0x000004, "Wrong size on BP_SceneManager_C_IsLocationRestaurant");
static_assert(offsetof(BP_SceneManager_C_IsLocationRestaurant, InAjito) == 0x000000, "Member 'BP_SceneManager_C_IsLocationRestaurant::InAjito' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsLocationRestaurant, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsLocationRestaurant::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsLocationRestaurant, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'BP_SceneManager_C_IsLocationRestaurant::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsLocationRestaurant, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_SceneManager_C_IsLocationRestaurant::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.OnEndGameMenu
// 0x0048 (0x0048 - 0x0000)
struct BP_SceneManager_C_OnEndGameMenu final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8332[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8333[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_TeleportableWallBase_C> K2Node_DynamicCast_AsBPI_Teleportable_Wall_Base;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8334[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnEndGameMenu_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_OnEndGameMenu) == 0x000008, "Wrong alignment on BP_SceneManager_C_OnEndGameMenu");
static_assert(sizeof(BP_SceneManager_C_OnEndGameMenu) == 0x000048, "Wrong size on BP_SceneManager_C_OnEndGameMenu");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_OnEndGameMenu::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_SceneManager_C_OnEndGameMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_SceneManager_C_OnEndGameMenu::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_SceneManager_C_OnEndGameMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000010, "Member 'BP_SceneManager_C_OnEndGameMenu::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_OnEndGameMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, K2Node_DynamicCast_AsBPI_Teleportable_Wall_Base) == 0x000028, "Member 'BP_SceneManager_C_OnEndGameMenu::K2Node_DynamicCast_AsBPI_Teleportable_Wall_Base' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SceneManager_C_OnEndGameMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_SceneManager_C_OnEndGameMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SceneManager_C_OnEndGameMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_OnEndGameMenu, CallFunc_OnEndGameMenu_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_OnEndGameMenu::CallFunc_OnEndGameMenu_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsAcceptRequest
// 0x0003 (0x0003 - 0x0000)
struct BP_SceneManager_C_IsAcceptRequest final
{
public:
	bool                                          IsAccept;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAccept_L;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsAcceptRequest) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsAcceptRequest");
static_assert(sizeof(BP_SceneManager_C_IsAcceptRequest) == 0x000003, "Wrong size on BP_SceneManager_C_IsAcceptRequest");
static_assert(offsetof(BP_SceneManager_C_IsAcceptRequest, IsAccept) == 0x000000, "Member 'BP_SceneManager_C_IsAcceptRequest::IsAccept' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsAcceptRequest, bAccept_L) == 0x000001, "Member 'BP_SceneManager_C_IsAcceptRequest::bAccept_L' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsAcceptRequest, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_SceneManager_C_IsAcceptRequest::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.StartLoadingChara_Local
// 0x0048 (0x0048 - 0x0000)
struct BP_SceneManager_C_StartLoadingChara_Local final
{
public:
	class AHUDMainGame_C*                         Param_HUDManager;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextLocation;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8335[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerManager*                         CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8336[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_GetProgressID_self_CastInput;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetProgressID_ProgressID;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_GetBattleMemberPlayerID_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8337[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBeginningTips_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_StartLoadingChara_Local) == 0x000008, "Wrong alignment on BP_SceneManager_C_StartLoadingChara_Local");
static_assert(sizeof(BP_SceneManager_C_StartLoadingChara_Local) == 0x000048, "Wrong size on BP_SceneManager_C_StartLoadingChara_Local");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, Param_HUDManager) == 0x000000, "Member 'BP_SceneManager_C_StartLoadingChara_Local::Param_HUDManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, NextLocation) == 0x000008, "Member 'BP_SceneManager_C_StartLoadingChara_Local::NextLocation' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetEventManager_EventManager) == 0x000018, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetProgressID_self_CastInput) == 0x000028, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetProgressID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetProgressID_ProgressID) == 0x000038, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetProgressID_ProgressID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetBattleMemberPlayerID_ReturnValue) == 0x00003C, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetBattleMemberPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_StartLoadingChara_Local, CallFunc_GetBeginningTips_ReturnValue) == 0x000040, "Member 'BP_SceneManager_C_StartLoadingChara_Local::CallFunc_GetBeginningTips_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.Debug Set Current Status Internal
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneManager_C_Debug_Set_Current_Status_Internal final
{
public:
	E_SceneManagerStatus                          Param_CurrentStatus;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_Debug_Set_Current_Status_Internal) == 0x000001, "Wrong alignment on BP_SceneManager_C_Debug_Set_Current_Status_Internal");
static_assert(sizeof(BP_SceneManager_C_Debug_Set_Current_Status_Internal) == 0x000001, "Wrong size on BP_SceneManager_C_Debug_Set_Current_Status_Internal");
static_assert(offsetof(BP_SceneManager_C_Debug_Set_Current_Status_Internal, Param_CurrentStatus) == 0x000000, "Member 'BP_SceneManager_C_Debug_Set_Current_Status_Internal::Param_CurrentStatus' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetBeforeLocationName
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_GetBeforeLocationName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetBeforeLocationName) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetBeforeLocationName");
static_assert(sizeof(BP_SceneManager_C_GetBeforeLocationName) == 0x000010, "Wrong size on BP_SceneManager_C_GetBeforeLocationName");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationName, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_GetBeforeLocationName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetBeforeLocationName, CallFunc_GetAreaName_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_GetBeforeLocationName::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetCurrentLocationInfo
// 0x0020 (0x0020 - 0x0000)
struct BP_SceneManager_C_GetCurrentLocationInfo final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationInfo_LocationID;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationInfo_AreaID;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationInfo_VariationID;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentLocationInfo_PortalID;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetCurrentLocationInfo) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetCurrentLocationInfo");
static_assert(sizeof(BP_SceneManager_C_GetCurrentLocationInfo) == 0x000020, "Wrong size on BP_SceneManager_C_GetCurrentLocationInfo");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, AreaId) == 0x000004, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, VariationID) == 0x000008, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, PortalID) == 0x00000C, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, CallFunc_GetCurrentLocationInfo_LocationID) == 0x000010, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::CallFunc_GetCurrentLocationInfo_LocationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, CallFunc_GetCurrentLocationInfo_AreaID) == 0x000014, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::CallFunc_GetCurrentLocationInfo_AreaID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, CallFunc_GetCurrentLocationInfo_VariationID) == 0x000018, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::CallFunc_GetCurrentLocationInfo_VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationInfo, CallFunc_GetCurrentLocationInfo_PortalID) == 0x00001C, "Member 'BP_SceneManager_C_GetCurrentLocationInfo::CallFunc_GetCurrentLocationInfo_PortalID' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetCurrentLocationName
// 0x0010 (0x0010 - 0x0000)
struct BP_SceneManager_C_GetCurrentLocationName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetCurrentLocationName) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetCurrentLocationName");
static_assert(sizeof(BP_SceneManager_C_GetCurrentLocationName) == 0x000010, "Wrong size on BP_SceneManager_C_GetCurrentLocationName");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationName, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_GetCurrentLocationName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationName, CallFunc_GetAreaName_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_GetCurrentLocationName::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsNeedFrameWait
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneManager_C_IsNeedFrameWait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsNeedFrameWait) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsNeedFrameWait");
static_assert(sizeof(BP_SceneManager_C_IsNeedFrameWait) == 0x000001, "Wrong size on BP_SceneManager_C_IsNeedFrameWait");
static_assert(offsetof(BP_SceneManager_C_IsNeedFrameWait, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_IsNeedFrameWait::ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.ResetGimmickScenarioFlag
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SceneManager_C_ResetGimmickScenarioFlag final
{
public:
	int32                                         ElectronicGateCount;                               // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8338[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapGimmickManager*                     CallFunc_GetMapGimmickManager_MapGimmickManager;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MapGimmickManager_C*                K2Node_DynamicCast_AsBP_Map_Gimmick_Manager;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8339[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833B[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChangeLocation_ReturnValue;             // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_ResetGimmickScenarioFlag) == 0x000008, "Wrong alignment on BP_SceneManager_C_ResetGimmickScenarioFlag");
static_assert(sizeof(BP_SceneManager_C_ResetGimmickScenarioFlag) == 0x0000E0, "Wrong size on BP_SceneManager_C_ResetGimmickScenarioFlag");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, ElectronicGateCount) == 0x000000, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::ElectronicGateCount' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, Temp_int_Variable) == 0x000004, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_GetMapGimmickManager_MapGimmickManager) == 0x000020, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_GetMapGimmickManager_MapGimmickManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, K2Node_DynamicCast_AsBP_Map_Gimmick_Manager) == 0x000028, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::K2Node_DynamicCast_AsBP_Map_Gimmick_Manager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, Temp_int_Variable_1) == 0x000034, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A0, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000B0, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000C0, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000D0, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000D8, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000D9, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000DA, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_ResetGimmickScenarioFlag, CallFunc_IsChangeLocation_ReturnValue) == 0x0000DB, "Member 'BP_SceneManager_C_ResetGimmickScenarioFlag::CallFunc_IsChangeLocation_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.Is Coat Moat
// 0x0009 (0x0009 - 0x0000)
struct BP_SceneManager_C_Is_Coat_Moat final
{
public:
	bool                                          Need;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_Is_Coat_Moat) == 0x000001, "Wrong alignment on BP_SceneManager_C_Is_Coat_Moat");
static_assert(sizeof(BP_SceneManager_C_Is_Coat_Moat) == 0x000009, "Wrong size on BP_SceneManager_C_Is_Coat_Moat");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, Need) == 0x000000, "Member 'BP_SceneManager_C_Is_Coat_Moat::Need' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000004, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000006, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_Is_Coat_Moat, CallFunc_BooleanAND_ReturnValue_2) == 0x000008, "Member 'BP_SceneManager_C_Is_Coat_Moat::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.BeforeAreaName
// 0x0018 (0x0018 - 0x0000)
struct BP_SceneManager_C_BeforeAreaName final
{
public:
	class FName                                   AreaName;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAreaName_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_BeforeAreaName) == 0x000004, "Wrong alignment on BP_SceneManager_C_BeforeAreaName");
static_assert(sizeof(BP_SceneManager_C_BeforeAreaName) == 0x000018, "Wrong size on BP_SceneManager_C_BeforeAreaName");
static_assert(offsetof(BP_SceneManager_C_BeforeAreaName, AreaName) == 0x000000, "Member 'BP_SceneManager_C_BeforeAreaName::AreaName' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_BeforeAreaName, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_BeforeAreaName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_BeforeAreaName, CallFunc_SelectInt_ReturnValue) == 0x00000C, "Member 'BP_SceneManager_C_BeforeAreaName::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_BeforeAreaName, CallFunc_GetAreaName_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_BeforeAreaName::CallFunc_GetAreaName_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsLastDungeon
// 0x0002 (0x0002 - 0x0000)
struct BP_SceneManager_C_IsLastDungeon final
{
public:
	bool                                          LastDungeon;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsLastDungeon) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsLastDungeon");
static_assert(sizeof(BP_SceneManager_C_IsLastDungeon) == 0x000002, "Wrong size on BP_SceneManager_C_IsLastDungeon");
static_assert(offsetof(BP_SceneManager_C_IsLastDungeon, LastDungeon) == 0x000000, "Member 'BP_SceneManager_C_IsLastDungeon::LastDungeon' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsLastDungeon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsLastDungeon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.InitBattleSimulatorRetry
// 0x0110 (0x0110 - 0x0000)
struct BP_SceneManager_C_InitBattleSimulatorRetry final
{
public:
	class ABP_EventManager_C*                     CallFunc_GetEventManager_EventManager;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadSoftObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_DynamicCast_AsData_Table;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_833F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSGameInstanceBP_C*                    CallFunc_GetRSGameInstance_AsRSGame_Instance_BP;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BattleSimulatorData                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8340[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadSoftClass_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsMake_Event_Actor;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8341[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEventTriggerCommand                  K2Node_MakeStruct_FEventTriggerCommand;            // 0x0098(0x0068)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_EventManager_C>   CallFunc_AddEventTriggerCommand_self_CastInput;    // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_InitBattleSimulatorRetry) == 0x000008, "Wrong alignment on BP_SceneManager_C_InitBattleSimulatorRetry");
static_assert(sizeof(BP_SceneManager_C_InitBattleSimulatorRetry) == 0x000110, "Wrong size on BP_SceneManager_C_InitBattleSimulatorRetry");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_GetEventManager_EventManager) == 0x000000, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_GetEventManager_EventManager' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_LoadSoftObject_ReturnValue) == 0x000008, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_LoadSoftObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, K2Node_DynamicCast_AsData_Table) == 0x000018, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::K2Node_DynamicCast_AsData_Table' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_GetRSGameInstance_AsRSGame_Instance_BP) == 0x000028, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_GetRSGameInstance_AsRSGame_Instance_BP' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000079, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_LoadSoftClass_ReturnValue) == 0x000080, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_LoadSoftClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, K2Node_ClassDynamicCast_AsMake_Event_Actor) == 0x000088, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::K2Node_ClassDynamicCast_AsMake_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, K2Node_ClassDynamicCast_bSuccess) == 0x000090, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, K2Node_MakeStruct_FEventTriggerCommand) == 0x000098, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::K2Node_MakeStruct_FEventTriggerCommand' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_InitBattleSimulatorRetry, CallFunc_AddEventTriggerCommand_self_CastInput) == 0x000100, "Member 'BP_SceneManager_C_InitBattleSimulatorRetry::CallFunc_AddEventTriggerCommand_self_CastInput' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IRequestChangeSceneImmediate
// 0x0030 (0x0030 - 0x0000)
struct BP_SceneManager_C_IRequestChangeSceneImmediate final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AreaId;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VariationID;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortalID;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           SceneArgs;                                         // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	bool                                          NoFade;                                            // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ELoadingScreenType                            Param_LoadingScreenType;                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8342[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_LoadingScreenParam;                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSaveDataLoadFlow;                                // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Error;                                             // 0x0029(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RequestChangeSceneImmediate_Error;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IRequestChangeSceneImmediate) == 0x000008, "Wrong alignment on BP_SceneManager_C_IRequestChangeSceneImmediate");
static_assert(sizeof(BP_SceneManager_C_IRequestChangeSceneImmediate) == 0x000030, "Wrong size on BP_SceneManager_C_IRequestChangeSceneImmediate");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, LocationId) == 0x000000, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::LocationId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, AreaId) == 0x000004, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::AreaId' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, VariationID) == 0x000008, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::VariationID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, PortalID) == 0x00000C, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::PortalID' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, SceneArgs) == 0x000010, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::SceneArgs' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, NoFade) == 0x000020, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::NoFade' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, Param_LoadingScreenType) == 0x000021, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::Param_LoadingScreenType' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, Param_LoadingScreenParam) == 0x000024, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::Param_LoadingScreenParam' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, IsSaveDataLoadFlow) == 0x000028, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::IsSaveDataLoadFlow' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, Error) == 0x000029, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::Error' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IRequestChangeSceneImmediate, CallFunc_RequestChangeSceneImmediate_Error) == 0x00002A, "Member 'BP_SceneManager_C_IRequestChangeSceneImmediate::CallFunc_RequestChangeSceneImmediate_Error' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetCurrentStatus
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneManager_C_GetCurrentStatus final
{
public:
	E_SceneManagerStatus                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetCurrentStatus) == 0x000001, "Wrong alignment on BP_SceneManager_C_GetCurrentStatus");
static_assert(sizeof(BP_SceneManager_C_GetCurrentStatus) == 0x000001, "Wrong size on BP_SceneManager_C_GetCurrentStatus");
static_assert(offsetof(BP_SceneManager_C_GetCurrentStatus, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_GetCurrentStatus::ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.GetCurrentLocationID
// 0x0004 (0x0004 - 0x0000)
struct BP_SceneManager_C_GetCurrentLocationID final
{
public:
	int32                                         LocationId;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SceneManager_C_GetCurrentLocationID) == 0x000004, "Wrong alignment on BP_SceneManager_C_GetCurrentLocationID");
static_assert(sizeof(BP_SceneManager_C_GetCurrentLocationID) == 0x000004, "Wrong size on BP_SceneManager_C_GetCurrentLocationID");
static_assert(offsetof(BP_SceneManager_C_GetCurrentLocationID, LocationId) == 0x000000, "Member 'BP_SceneManager_C_GetCurrentLocationID::LocationId' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsChangeLocation_Internal
// 0x0002 (0x0002 - 0x0000)
struct BP_SceneManager_C_IsChangeLocation_Internal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsChangeLocation_Internal) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsChangeLocation_Internal");
static_assert(sizeof(BP_SceneManager_C_IsChangeLocation_Internal) == 0x000002, "Wrong size on BP_SceneManager_C_IsChangeLocation_Internal");
static_assert(offsetof(BP_SceneManager_C_IsChangeLocation_Internal, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_IsChangeLocation_Internal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsChangeLocation_Internal, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsChangeLocation_Internal::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsInitialized
// 0x0001 (0x0001 - 0x0000)
struct BP_SceneManager_C_IsInitialized final
{
public:
	bool                                          Initialized;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsInitialized) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsInitialized");
static_assert(sizeof(BP_SceneManager_C_IsInitialized) == 0x000001, "Wrong size on BP_SceneManager_C_IsInitialized");
static_assert(offsetof(BP_SceneManager_C_IsInitialized, Initialized) == 0x000000, "Member 'BP_SceneManager_C_IsInitialized::Initialized' has a wrong offset!");

// Function BP_SceneManager.BP_SceneManager_C.IsChangeLocation
// 0x0002 (0x0002 - 0x0000)
struct BP_SceneManager_C_IsChangeLocation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChangeLocation_Internal_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_SceneManager_C_IsChangeLocation) == 0x000001, "Wrong alignment on BP_SceneManager_C_IsChangeLocation");
static_assert(sizeof(BP_SceneManager_C_IsChangeLocation) == 0x000002, "Wrong size on BP_SceneManager_C_IsChangeLocation");
static_assert(offsetof(BP_SceneManager_C_IsChangeLocation, ReturnValue) == 0x000000, "Member 'BP_SceneManager_C_IsChangeLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SceneManager_C_IsChangeLocation, CallFunc_IsChangeLocation_Internal_ReturnValue) == 0x000001, "Member 'BP_SceneManager_C_IsChangeLocation::CallFunc_IsChangeLocation_Internal_ReturnValue' has a wrong offset!");

}

