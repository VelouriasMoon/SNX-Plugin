#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ui_BossName

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ui_BossName.WB_ui_BossName_C.ExecuteUbergraph_WB_ui_BossName
// 0x004C (0x004C - 0x0000)
struct WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_State;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SubState;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName) == 0x000004, "Wrong alignment on WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName");
static_assert(sizeof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName) == 0x00004C, "Wrong size on WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, EntryPoint) == 0x000000, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, K2Node_Event_State) == 0x000004, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, K2Node_Event_SubState) == 0x000008, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::K2Node_Event_SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, K2Node_Event_DeltaSeconds) == 0x00000C, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, K2Node_Event_MyGeometry) == 0x000010, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName, K2Node_Event_InDeltaTime) == 0x000048, "Member 'WB_ui_BossName_C_ExecuteUbergraph_WB_ui_BossName::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_ui_BossName.WB_ui_BossName_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ui_BossName_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BossName_C_Tick) == 0x000004, "Wrong alignment on WB_ui_BossName_C_Tick");
static_assert(sizeof(WB_ui_BossName_C_Tick) == 0x00003C, "Wrong size on WB_ui_BossName_C_Tick");
static_assert(offsetof(WB_ui_BossName_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ui_BossName_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ui_BossName_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ui_BossName.WB_ui_BossName_C.UpdateState
// 0x000C (0x000C - 0x0000)
struct WB_ui_BossName_C_UpdateState final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SubState;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BossName_C_UpdateState) == 0x000004, "Wrong alignment on WB_ui_BossName_C_UpdateState");
static_assert(sizeof(WB_ui_BossName_C_UpdateState) == 0x00000C, "Wrong size on WB_ui_BossName_C_UpdateState");
static_assert(offsetof(WB_ui_BossName_C_UpdateState, State) == 0x000000, "Member 'WB_ui_BossName_C_UpdateState::State' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_UpdateState, SubState) == 0x000004, "Member 'WB_ui_BossName_C_UpdateState::SubState' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_UpdateState, DeltaSeconds) == 0x000008, "Member 'WB_ui_BossName_C_UpdateState::DeltaSeconds' has a wrong offset!");

// Function WB_ui_BossName.WB_ui_BossName_C.image_fade
// 0x0020 (0x0020 - 0x0000)
struct WB_ui_BossName_C_Image_fade final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ui_BossName_C_Image_fade) == 0x000008, "Wrong alignment on WB_ui_BossName_C_Image_fade");
static_assert(sizeof(WB_ui_BossName_C_Image_fade) == 0x000020, "Wrong size on WB_ui_BossName_C_Image_fade");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_BreakVector2D_X) == 0x000008, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_BreakVector2D_X_1) == 0x000018, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_ui_BossName_C_Image_fade, CallFunc_BreakVector2D_Y_1) == 0x00001C, "Member 'WB_ui_BossName_C_Image_fade::CallFunc_BreakVector2D_Y_1' has a wrong offset!");

}

