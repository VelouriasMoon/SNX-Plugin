#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ECableType_structs.hpp"
#include "BattlePrototype_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CableBase.BP_CableBase_C
// 0x00E8 (0x0318 - 0x0230)
class ABP_CableBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleManageComponent_C*             WeakDamageParticleManageComponent;                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           BoneName;                                          // 0x0250(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           BoneParentName;                                    // 0x0260(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           MaterialCollisionPositionName;                     // 0x0270(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FName>                           MaterialCollisionRadiusName;                       // 0x0280(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         ThicknessTraceLength;                              // 0x0290(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E67[0x4];                                     // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      AttachPlayer;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<ECableType>                            bVisibleFlagArray;                                 // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   LocationParamName;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocketName;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bTempVisibilityOff;                                // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bDriveMode;                                        // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E68[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, float>                      TimeDilationList;                                  // 0x02C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_CableBase(int32 EntryPoint);
	void OnReadyDebManager();
	void ReceiveTick(float DeltaSeconds);
	void OnChangedColoring(const class ADebuggingItemFloat* InItem);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetCodeColoring(float Rate);
	void SetVisibility(bool New_Visibility);
	void SetBoneParam(const struct FCableAdditiveBoneParam& BoneParam);
	void CheckCollision();
	void CodeStart(ECableType Type, bool bDrive, bool bOptionNoCutin, bool NexusDrive, bool ExColor);
	void CodeEnd(ECableType Type);
	void SetCodeDither(float Rate);
	void SetCodePower(float Rate);
	void UpdateState(float DeltaSeconds);
	void SetBrainFieldParam(const struct FVector& BasePos, float CrashRate);
	void DoCodeStart(ECableType Type, bool bOptionNoCutin, bool bNexusDrive, bool bExColor, bool* bDummy);
	void DoCodeEnd(ECableType Ttype, bool* bEnd);
	void BeginOverrideGravity(ERSCableGravityType Type);
	void EndOverrideGravity(ERSCableGravityType Type);
	void SetBrainFieldMode(bool Enable);
	void SetMaterialScalarParameter(class FName ParamName, float Value, bool* bDummy);
	void EnableTempVisibilityOff();
	void DisableTempVisibilityOff();
	void SetAttachPlayer(class ARSBattlePlayer_C* Param_AttachPlayer, class FName Param_AttachSocketName);
	void DirectEnablePhysics();
	void RegisterCustomTimeDilation(float TimeDilation, class FName ClaimantName);
	void UnregisterCustomTimeDilation(class FName ClaimantName);
	void UpdateTimeDilation();
	void EventPhysicsIdling(float IdlingSec, bool* bDummy);
	void GetSASStartAnimSequence(class UAnimSequence** AnimSequence);
	void SwitchNexusDrive(bool bNexusDrive);
	void SwitchExColor(bool bExColor);

	void IsCableMode(ECableType CableMode, bool* bResult) const;
	void GetCableIndex(int32* Param_Index) const;
	void GetMaterialLocationParamName(class FName* ParamName) const;
	void IsDriveMode(bool* bDrive) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CableBase_C">();
	}
	static class ABP_CableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CableBase_C>();
	}
};
static_assert(alignof(ABP_CableBase_C) == 0x000008, "Wrong alignment on ABP_CableBase_C");
static_assert(sizeof(ABP_CableBase_C) == 0x000318, "Wrong size on ABP_CableBase_C");
static_assert(offsetof(ABP_CableBase_C, UberGraphFrame) == 0x000230, "Member 'ABP_CableBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, WeakDamageParticleManageComponent) == 0x000238, "Member 'ABP_CableBase_C::WeakDamageParticleManageComponent' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, SkeletalMesh) == 0x000240, "Member 'ABP_CableBase_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, DefaultSceneRoot) == 0x000248, "Member 'ABP_CableBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, BoneName) == 0x000250, "Member 'ABP_CableBase_C::BoneName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, BoneParentName) == 0x000260, "Member 'ABP_CableBase_C::BoneParentName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, MaterialCollisionPositionName) == 0x000270, "Member 'ABP_CableBase_C::MaterialCollisionPositionName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, MaterialCollisionRadiusName) == 0x000280, "Member 'ABP_CableBase_C::MaterialCollisionRadiusName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, ThicknessTraceLength) == 0x000290, "Member 'ABP_CableBase_C::ThicknessTraceLength' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, AttachPlayer) == 0x000298, "Member 'ABP_CableBase_C::AttachPlayer' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, bVisibleFlagArray) == 0x0002A0, "Member 'ABP_CableBase_C::bVisibleFlagArray' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, LocationParamName) == 0x0002B0, "Member 'ABP_CableBase_C::LocationParamName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, AttachSocketName) == 0x0002B8, "Member 'ABP_CableBase_C::AttachSocketName' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, bTempVisibilityOff) == 0x0002C0, "Member 'ABP_CableBase_C::bTempVisibilityOff' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, bDriveMode) == 0x0002C1, "Member 'ABP_CableBase_C::bDriveMode' has a wrong offset!");
static_assert(offsetof(ABP_CableBase_C, TimeDilationList) == 0x0002C8, "Member 'ABP_CableBase_C::TimeDilationList' has a wrong offset!");

}

