#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_BattleCharacterInterface

#include "Basic.hpp"

#include "BPI_BattleCharacterInterface_classes.hpp"
#include "BPI_BattleCharacterInterface_parameters.hpp"


namespace SDK
{

// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetCharacterVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisibility                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetCharacterVisibility(bool bVisibility, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetCharacterVisibility");

	Params::BPI_BattleCharacterInterface_C_SetCharacterVisibility Parms{};

	Parms.bVisibility = bVisibility;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsBadStausMetalMode
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleCharacterInterface_C::IsBadStausMetalMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsBadStausMetalMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetCounterWait
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Wait_on_in                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetCounterWait(bool Wait_on_in)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetCounterWait");

	Params::BPI_BattleCharacterInterface_C_SetCounterWait Parms{};

	Parms.Wait_on_in = Wait_on_in;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetCounter
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleCharacterInterface_C::SetCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsCounterSuccess
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsCounterSuccess(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsCounterSuccess");

	Params::BPI_BattleCharacterInterface_C_IsCounterSuccess Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.StartVisionFog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::StartVisionFog(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "StartVisionFog");

	Params::BPI_BattleCharacterInterface_C_StartVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetActorStartPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetActorStartPoint(struct FVector* StartLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetActorStartPoint");

	Params::BPI_BattleCharacterInterface_C_GetActorStartPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StartLocation != nullptr)
		*StartLocation = std::move(Parms.StartLocation);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetNotifyAttackData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFNotifyAttackData               Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetNotifyAttackData(const struct FFNotifyAttackData& Data, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetNotifyAttackData");

	Params::BPI_BattleCharacterInterface_C_SetNotifyAttackData Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetLockOnTargetInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetLockOnTargetInterface(class AActor** TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetLockOnTargetInterface");

	Params::BPI_BattleCharacterInterface_C_GetLockOnTargetInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetActor != nullptr)
		*TargetActor = Parms.TargetActor;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accelerating                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::GetAccelerating(bool* Accelerating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetAccelerating");

	Params::BPI_BattleCharacterInterface_C_GetAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accelerating != nullptr)
		*Accelerating = Parms.Accelerating;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accelerating                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetAccelerating(bool Accelerating, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetAccelerating");

	Params::BPI_BattleCharacterInterface_C_SetAccelerating Parms{};

	Parms.Accelerating = Accelerating;

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.MeshFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleLimit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bEndFit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::MeshFitGround(float InterpSpeed, float AngleLimit, bool bEndFit, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "MeshFitGround");

	Params::BPI_BattleCharacterInterface_C_MeshFitGround Parms{};

	Parms.InterpSpeed = InterpSpeed;
	Parms.AngleLimit = AngleLimit;
	Parms.bEndFit = bEndFit;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetMeshFitGroundCheckLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CheckHeight                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetMeshFitGroundCheckLocation(struct FVector* Location, float* CheckHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetMeshFitGroundCheckLocation");

	Params::BPI_BattleCharacterInterface_C_GetMeshFitGroundCheckLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (CheckHeight != nullptr)
		*CheckHeight = Parms.CheckHeight;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.CancelMeshFitGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::CancelMeshFitGround(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "CancelMeshFitGround");

	Params::BPI_BattleCharacterInterface_C_CancelMeshFitGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.StartSASChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::StartSASChance(float Time, bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "StartSASChance");

	Params::BPI_BattleCharacterInterface_C_StartSASChance Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.EndSASChance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dammy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::EndSASChance(bool* Dammy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "EndSASChance");

	Params::BPI_BattleCharacterInterface_C_EndSASChance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dammy != nullptr)
		*Dammy = Parms.Dammy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetHitStopInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHCRestictedHitStopType                 HitStopType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCritical                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetHitStopInterface(EHCRestictedHitStopType HitStopType, bool bCritical, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetHitStopInterface");

	Params::BPI_BattleCharacterInterface_C_SetHitStopInterface Parms{};

	Parms.HitStopType = HitStopType;
	Parms.bCritical = bCritical;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.UpdateCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseDither                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CameraDither                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::UpdateCameraDither(float DeltaSeconds, bool UseDither, float* CameraDither)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "UpdateCameraDither");

	Params::BPI_BattleCharacterInterface_C_UpdateCameraDither Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.UseDither = UseDither;

	UObject::ProcessEvent(Func, &Parms);

	if (CameraDither != nullptr)
		*CameraDither = Parms.CameraDither;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   SetDitherValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetCameraDither(float SetDitherValue, bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetCameraDither");

	Params::BPI_BattleCharacterInterface_C_SetCameraDither Parms{};

	Parms.SetDitherValue = SetDitherValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetUseCameraDither
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bUse                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetUseCameraDither(bool bUse, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetUseCameraDither");

	Params::BPI_BattleCharacterInterface_C_SetUseCameraDither Parms{};

	Parms.bUse = bUse;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsCounterWait
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWait                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsCounterWait(bool* bWait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsCounterWait");

	Params::BPI_BattleCharacterInterface_C_IsCounterWait Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bWait != nullptr)
		*bWait = Parms.bWait;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.RequestDie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::RequestDie(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "RequestDie");

	Params::BPI_BattleCharacterInterface_C_RequestDie Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.EndVisionFog
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dummy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::EndVisionFog(bool* Dummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "EndVisionFog");

	Params::BPI_BattleCharacterInterface_C_EndVisionFog Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dummy != nullptr)
		*Dummy = Parms.Dummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.EnableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNormalAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPsychicAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReactionSRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReactionLRate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DownRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAcceptAll                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::EnableReactionCoefficient(bool bNormalAttack, bool bPsychicAttack, float ReactionSRate, float ReactionLRate, float DownRate, float CrashRate, bool bAcceptAll, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "EnableReactionCoefficient");

	Params::BPI_BattleCharacterInterface_C_EnableReactionCoefficient Parms{};

	Parms.bNormalAttack = bNormalAttack;
	Parms.bPsychicAttack = bPsychicAttack;
	Parms.ReactionSRate = ReactionSRate;
	Parms.ReactionLRate = ReactionLRate;
	Parms.DownRate = DownRate;
	Parms.CrashRate = CrashRate;
	Parms.bAcceptAll = bAcceptAll;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.DisableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNormalAttack                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bPsychicAttack                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::DisableReactionCoefficient(bool bNormalAttack, bool bPsychicAttack, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "DisableReactionCoefficient");

	Params::BPI_BattleCharacterInterface_C_DisableReactionCoefficient Parms{};

	Parms.bNormalAttack = bNormalAttack;
	Parms.bPsychicAttack = bPsychicAttack;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SpawnSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// class FName                             AttachName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SpawnSequencerEffectInterface(class FName ClaimantName, class UParticleSystem* Template, const struct FTransform& Transform, class FName AttachName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SpawnSequencerEffectInterface");

	Params::BPI_BattleCharacterInterface_C_SpawnSequencerEffectInterface Parms{};

	Parms.ClaimantName = ClaimantName;
	Parms.Template = Template;
	Parms.Transform = std::move(Transform);
	Parms.AttachName = AttachName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.EndSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ClaimantName                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::EndSequencerEffectInterface(class FName ClaimantName, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "EndSequencerEffectInterface");

	Params::BPI_BattleCharacterInterface_C_EndSequencerEffectInterface Parms{};

	Parms.ClaimantName = ClaimantName;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.UpdateSequencerEffectInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSec                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::UpdateSequencerEffectInterface(float DeltaSec, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "UpdateSequencerEffectInterface");

	Params::BPI_BattleCharacterInterface_C_UpdateSequencerEffectInterface Parms{};

	Parms.DeltaSec = DeltaSec;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsInScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InScreen                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsInScreen(bool* InScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsInScreen");

	Params::BPI_BattleCharacterInterface_C_IsInScreen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InScreen != nullptr)
		*InScreen = Parms.InScreen;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.Get Event Bind Mesh Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UStaticMeshComponent*>     MeshComponent                                          (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::Get_Event_Bind_Mesh_Component(TArray<class UStaticMeshComponent*>* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "Get Event Bind Mesh Component");

	Params::BPI_BattleCharacterInterface_C_Get_Event_Bind_Mesh_Component Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComponent != nullptr)
		*MeshComponent = std::move(Parms.MeshComponent);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.AreaChangeFadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_BattleCharacterInterface_C::AreaChangeFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "AreaChangeFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.RegisterBrainFieldNormalTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InNormalTransform                                      (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::RegisterBrainFieldNormalTransform(const struct FTransform& InNormalTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "RegisterBrainFieldNormalTransform");

	Params::BPI_BattleCharacterInterface_C_RegisterBrainFieldNormalTransform Parms{};

	Parms.InNormalTransform = std::move(InNormalTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.CheckNoDamagePopUpFromAttacker
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNoPopUp                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::CheckNoDamagePopUpFromAttacker(bool* bNoPopUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "CheckNoDamagePopUpFromAttacker");

	Params::BPI_BattleCharacterInterface_C_CheckNoDamagePopUpFromAttacker Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bNoPopUp != nullptr)
		*bNoPopUp = Parms.bNoPopUp;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetGroupIDInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   GroupID                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SubGroupID                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetGroupIDInterface(bool* bSuccess, int32* GroupID, int32* SubGroupID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetGroupIDInterface");

	Params::BPI_BattleCharacterInterface_C_GetGroupIDInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bSuccess != nullptr)
		*bSuccess = Parms.bSuccess;

	if (GroupID != nullptr)
		*GroupID = Parms.GroupID;

	if (SubGroupID != nullptr)
		*SubGroupID = Parms.SubGroupID;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.StopMovementImmediately
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::StopMovementImmediately(bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "StopMovementImmediately");

	Params::BPI_BattleCharacterInterface_C_StopMovementImmediately Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetPsychicObjectThrowParameter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Apply                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Directshot_throw_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Directshot_homing_speed                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Combo_throw_speed                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Combo_homing_speed                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   brainfield_throw_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   brainfield_homing_speed                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intercept_throw_speed                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intercept_homing_speed                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetPsychicObjectThrowParameter(bool* Apply, float* Directshot_throw_speed, float* Directshot_homing_speed, float* Combo_throw_speed, float* Combo_homing_speed, float* brainfield_throw_speed, float* brainfield_homing_speed, float* Intercept_throw_speed, float* Intercept_homing_speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetPsychicObjectThrowParameter");

	Params::BPI_BattleCharacterInterface_C_GetPsychicObjectThrowParameter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Apply != nullptr)
		*Apply = Parms.Apply;

	if (Directshot_throw_speed != nullptr)
		*Directshot_throw_speed = Parms.Directshot_throw_speed;

	if (Directshot_homing_speed != nullptr)
		*Directshot_homing_speed = Parms.Directshot_homing_speed;

	if (Combo_throw_speed != nullptr)
		*Combo_throw_speed = Parms.Combo_throw_speed;

	if (Combo_homing_speed != nullptr)
		*Combo_homing_speed = Parms.Combo_homing_speed;

	if (brainfield_throw_speed != nullptr)
		*brainfield_throw_speed = Parms.brainfield_throw_speed;

	if (brainfield_homing_speed != nullptr)
		*brainfield_homing_speed = Parms.brainfield_homing_speed;

	if (Intercept_throw_speed != nullptr)
		*Intercept_throw_speed = Parms.Intercept_throw_speed;

	if (Intercept_homing_speed != nullptr)
		*Intercept_homing_speed = Parms.Intercept_homing_speed;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetCharacterSkillTableWithReplace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDataTable*                       OrgTable                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             SkillName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHCSkillCommonInfo               SkillCommonInfo                                        (Parm, OutParm)

void IBPI_BattleCharacterInterface_C::GetCharacterSkillTableWithReplace(class UDataTable*& OrgTable, class FName SkillName, struct FHCSkillCommonInfo* SkillCommonInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetCharacterSkillTableWithReplace");

	Params::BPI_BattleCharacterInterface_C_GetCharacterSkillTableWithReplace Parms{};

	Parms.OrgTable = OrgTable;
	Parms.SkillName = SkillName;

	UObject::ProcessEvent(Func, &Parms);

	OrgTable = Parms.OrgTable;

	if (SkillCommonInfo != nullptr)
		*SkillCommonInfo = std::move(Parms.SkillCommonInfo);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.ReserveCrashVisionShockWave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EffectDelayTime                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::ReserveCrashVisionShockWave(float EffectDelayTime, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "ReserveCrashVisionShockWave");

	Params::BPI_BattleCharacterInterface_C_ReserveCrashVisionShockWave Parms{};

	Parms.EffectDelayTime = EffectDelayTime;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.SetIgnoreVisionSimulatorScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIgnore                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDummy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::SetIgnoreVisionSimulatorScore(bool bIgnore, bool* bDummy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "SetIgnoreVisionSimulatorScore");

	Params::BPI_BattleCharacterInterface_C_SetIgnoreVisionSimulatorScore Parms{};

	Parms.bIgnore = bIgnore;

	UObject::ProcessEvent(Func, &Parms);

	if (bDummy != nullptr)
		*bDummy = Parms.bDummy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.isForceCritical
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsForceCritical(bool* bResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "isForceCritical");

	Params::BPI_BattleCharacterInterface_C_IsForceCritical Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// ETeamKind                               Team                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetTeam(ETeamKind* Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetTeam");

	Params::BPI_BattleCharacterInterface_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team != nullptr)
		*Team = Parms.Team;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bPlayer                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsPlayer(bool* bPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsPlayer");

	Params::BPI_BattleCharacterInterface_C_IsPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPlayer != nullptr)
		*bPlayer = Parms.bPlayer;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnemy                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsEnemy(bool* bEnemy) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsEnemy");

	Params::BPI_BattleCharacterInterface_C_IsEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnemy != nullptr)
		*bEnemy = Parms.bEnemy;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsMetalMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMetal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsMetalMode(bool* bMetal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsMetalMode");

	Params::BPI_BattleCharacterInterface_C_IsMetalMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMetal != nullptr)
		*bMetal = Parms.bMetal;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetWeakTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          AttackerPos                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetWeakTargetPoint(const struct FVector& AttackerPos, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetWeakTargetPoint");

	Params::BPI_BattleCharacterInterface_C_GetWeakTargetPoint Parms{};

	Parms.AttackerPos = std::move(AttackerPos);

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetTopTargetPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetTopTargetPoint(struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetTopTargetPoint");

	Params::BPI_BattleCharacterInterface_C_GetTopTargetPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetWeakUIPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Point                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetWeakUIPoint(int32 Param_Index, struct FVector* Point) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetWeakUIPoint");

	Params::BPI_BattleCharacterInterface_C_GetWeakUIPoint Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Point != nullptr)
		*Point = std::move(Parms.Point);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetWeakTargetComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*                  WeakComponent                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetWeakTargetComponent(class USceneComponent** WeakComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetWeakTargetComponent");

	Params::BPI_BattleCharacterInterface_C_GetWeakTargetComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeakComponent != nullptr)
		*WeakComponent = Parms.WeakComponent;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetNotifyAttackData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FFNotifyAttackData               Data                                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetNotifyAttackData(struct FFNotifyAttackData* Data) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetNotifyAttackData");

	Params::BPI_BattleCharacterInterface_C_GetNotifyAttackData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.CanTakeBrainField
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    CanTake                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::CanTakeBrainField(bool* CanTake) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "CanTakeBrainField");

	Params::BPI_BattleCharacterInterface_C_CanTakeBrainField Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanTake != nullptr)
		*CanTake = Parms.CanTake;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsHitWeak_ChangeDefaultEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    ChangeDefault                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsHitWeak_ChangeDefaultEffect(bool* ChangeDefault) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsHitWeak_ChangeDefaultEffect");

	Params::BPI_BattleCharacterInterface_C_IsHitWeak_ChangeDefaultEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeDefault != nullptr)
		*ChangeDefault = Parms.ChangeDefault;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsEnableSlashEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FHCHitResult                     HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsEnableSlashEffect(struct FHCHitResult& HitResult, bool* bEnable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsEnableSlashEffect");

	Params::BPI_BattleCharacterInterface_C_IsEnableSlashEffect Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);

	HitResult = std::move(Parms.HitResult);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsBrainCrashAccessInterface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bAccess                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsBrainCrashAccessInterface(bool* bAccess) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsBrainCrashAccessInterface");

	Params::BPI_BattleCharacterInterface_C_IsBrainCrashAccessInterface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bAccess != nullptr)
		*bAccess = Parms.bAccess;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetAutoAimRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetAutoAimRate(float* Rate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetAutoAimRate");

	Params::BPI_BattleCharacterInterface_C_GetAutoAimRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetCharacterLV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int32                                   LV                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetCharacterLV(int32* LV) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetCharacterLV");

	Params::BPI_BattleCharacterInterface_C_GetCharacterLV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LV != nullptr)
		*LV = Parms.LV;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsEnableReactionCoefficient
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bEnable                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ReactionSRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReactionLRate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DownRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CrashRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAcceptAll                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsEnableReactionCoefficient(bool* bEnable, float* ReactionSRate, float* ReactionLRate, float* DownRate, float* CrashRate, bool* bAcceptAll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsEnableReactionCoefficient");

	Params::BPI_BattleCharacterInterface_C_IsEnableReactionCoefficient Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bEnable != nullptr)
		*bEnable = Parms.bEnable;

	if (ReactionSRate != nullptr)
		*ReactionSRate = Parms.ReactionSRate;

	if (ReactionLRate != nullptr)
		*ReactionLRate = Parms.ReactionLRate;

	if (DownRate != nullptr)
		*DownRate = Parms.DownRate;

	if (CrashRate != nullptr)
		*CrashRate = Parms.CrashRate;

	if (bAcceptAll != nullptr)
		*bAcceptAll = Parms.bAcceptAll;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.IsAttackerMainPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// bool                                    bMainPlayer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBPI_BattleCharacterInterface_C::IsAttackerMainPlayer(bool* bMainPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "IsAttackerMainPlayer");

	Params::BPI_BattleCharacterInterface_C_IsAttackerMainPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bMainPlayer != nullptr)
		*bMainPlayer = Parms.bMainPlayer;
}


// Function BPI_BattleCharacterInterface.BPI_BattleCharacterInterface_C.GetCharacterReplaceSkillTable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class UDataTable*                       Original                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDataTable*                       SkillTable                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_BattleCharacterInterface_C::GetCharacterReplaceSkillTable(class UDataTable* Original, class UDataTable** SkillTable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_BattleCharacterInterface_C", "GetCharacterReplaceSkillTable");

	Params::BPI_BattleCharacterInterface_C_GetCharacterReplaceSkillTable Parms{};

	Parms.Original = Original;

	UObject::ProcessEvent(Func, &Parms);

	if (SkillTable != nullptr)
		*SkillTable = Parms.SkillTable;
}

}

