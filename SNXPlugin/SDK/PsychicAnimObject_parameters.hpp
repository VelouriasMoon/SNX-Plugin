#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PsychicAnimObject

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PsychicAnimObject.PsychicAnimObject_C.ExecuteUbergraph_PsychicAnimObject
// 0x0008 (0x0008 - 0x0000)
struct PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject) == 0x000004, "Wrong alignment on PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject");
static_assert(sizeof(PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject) == 0x000008, "Wrong size on PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject");
static_assert(offsetof(PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject, EntryPoint) == 0x000000, "Member 'PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject::EntryPoint' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'PsychicAnimObject_C_ExecuteUbergraph_PsychicAnimObject::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PsychicAnimObject_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicAnimObject_C_ReceiveTick) == 0x000004, "Wrong alignment on PsychicAnimObject_C_ReceiveTick");
static_assert(sizeof(PsychicAnimObject_C_ReceiveTick) == 0x000004, "Wrong size on PsychicAnimObject_C_ReceiveTick");
static_assert(offsetof(PsychicAnimObject_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PsychicAnimObject_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetTickEnable
// 0x0001 (0x0001 - 0x0000)
struct PsychicAnimObject_C_SetTickEnable final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetTickEnable) == 0x000001, "Wrong alignment on PsychicAnimObject_C_SetTickEnable");
static_assert(sizeof(PsychicAnimObject_C_SetTickEnable) == 0x000001, "Wrong size on PsychicAnimObject_C_SetTickEnable");
static_assert(offsetof(PsychicAnimObject_C_SetTickEnable, Flag_in) == 0x000000, "Member 'PsychicAnimObject_C_SetTickEnable::Flag_in' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetOccupied
// 0x0030 (0x0030 - 0x0000)
struct PsychicAnimObject_C_SetOccupied final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E83[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetOccupied) == 0x000008, "Wrong alignment on PsychicAnimObject_C_SetOccupied");
static_assert(sizeof(PsychicAnimObject_C_SetOccupied) == 0x000030, "Wrong size on PsychicAnimObject_C_SetOccupied");
static_assert(offsetof(PsychicAnimObject_C_SetOccupied, Flag_in) == 0x000000, "Member 'PsychicAnimObject_C_SetOccupied::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetOccupied, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'PsychicAnimObject_C_SetOccupied::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetOccupied, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_SetOccupied::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetOccupied, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000028, "Member 'PsychicAnimObject_C_SetOccupied::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.CheckOccupied
// 0x0001 (0x0001 - 0x0000)
struct PsychicAnimObject_C_CheckOccupied final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_CheckOccupied) == 0x000001, "Wrong alignment on PsychicAnimObject_C_CheckOccupied");
static_assert(sizeof(PsychicAnimObject_C_CheckOccupied) == 0x000001, "Wrong size on PsychicAnimObject_C_CheckOccupied");
static_assert(offsetof(PsychicAnimObject_C_CheckOccupied, Return) == 0x000000, "Member 'PsychicAnimObject_C_CheckOccupied::Return' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetAttach
// 0x0140 (0x0140 - 0x0000)
struct PsychicAnimObject_C_SetAttach final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E84[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        Hero_in;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E85[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetAttach) == 0x000010, "Wrong alignment on PsychicAnimObject_C_SetAttach");
static_assert(sizeof(PsychicAnimObject_C_SetAttach) == 0x000140, "Wrong size on PsychicAnimObject_C_SetAttach");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, Flag_in) == 0x000000, "Member 'PsychicAnimObject_C_SetAttach::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, Psy_obj_in) == 0x000008, "Member 'PsychicAnimObject_C_SetAttach::Psy_obj_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, Hero_in) == 0x000010, "Member 'PsychicAnimObject_C_SetAttach::Hero_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_BreakTransform_Location) == 0x000050, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_ComposeRotators_ReturnValue) == 0x000074, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000B0, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000138, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_IsValid_ReturnValue_3) == 0x000139, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_IsValid_ReturnValue_4) == 0x00013A, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttach, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00013B, "Member 'PsychicAnimObject_C_SetAttach::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.CanAttach
// 0x0002 (0x0002 - 0x0000)
struct PsychicAnimObject_C_CanAttach final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_CanAttach) == 0x000001, "Wrong alignment on PsychicAnimObject_C_CanAttach");
static_assert(sizeof(PsychicAnimObject_C_CanAttach) == 0x000002, "Wrong size on PsychicAnimObject_C_CanAttach");
static_assert(offsetof(PsychicAnimObject_C_CanAttach, Return) == 0x000000, "Member 'PsychicAnimObject_C_CanAttach::Return' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_CanAttach, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PsychicAnimObject_C_CanAttach::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetAttackThrow
// 0x0018 (0x0018 - 0x0000)
struct PsychicAnimObject_C_SetAttackThrow final
{
public:
	float                                         Throw_speed_in;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Homing_speed_in;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enemy_direct_shot_in;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E86[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Enemy_attack_row_name_in;                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetAttackThrow) == 0x000004, "Wrong alignment on PsychicAnimObject_C_SetAttackThrow");
static_assert(sizeof(PsychicAnimObject_C_SetAttackThrow) == 0x000018, "Wrong size on PsychicAnimObject_C_SetAttackThrow");
static_assert(offsetof(PsychicAnimObject_C_SetAttackThrow, Throw_speed_in) == 0x000000, "Member 'PsychicAnimObject_C_SetAttackThrow::Throw_speed_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttackThrow, Homing_speed_in) == 0x000004, "Member 'PsychicAnimObject_C_SetAttackThrow::Homing_speed_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttackThrow, Enemy_direct_shot_in) == 0x000008, "Member 'PsychicAnimObject_C_SetAttackThrow::Enemy_direct_shot_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttackThrow, Enemy_attack_row_name_in) == 0x00000C, "Member 'PsychicAnimObject_C_SetAttackThrow::Enemy_attack_row_name_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAttackThrow, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'PsychicAnimObject_C_SetAttackThrow::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetObjOwner
// 0x0008 (0x0008 - 0x0000)
struct PsychicAnimObject_C_SetObjOwner final
{
public:
	class ABP_PsychicObjectBasic_C*               Psy_obj_in;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicAnimObject_C_SetObjOwner) == 0x000008, "Wrong alignment on PsychicAnimObject_C_SetObjOwner");
static_assert(sizeof(PsychicAnimObject_C_SetObjOwner) == 0x000008, "Wrong size on PsychicAnimObject_C_SetObjOwner");
static_assert(offsetof(PsychicAnimObject_C_SetObjOwner, Psy_obj_in) == 0x000000, "Member 'PsychicAnimObject_C_SetObjOwner::Psy_obj_in' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.PlayObjectAnimation
// 0x0010 (0x0010 - 0x0000)
struct PsychicAnimObject_C_PlayObjectAnimation final
{
public:
	class UAnimationAsset*                        NewAnimToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Play_rate_in;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loop_in;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_PlayObjectAnimation) == 0x000008, "Wrong alignment on PsychicAnimObject_C_PlayObjectAnimation");
static_assert(sizeof(PsychicAnimObject_C_PlayObjectAnimation) == 0x000010, "Wrong size on PsychicAnimObject_C_PlayObjectAnimation");
static_assert(offsetof(PsychicAnimObject_C_PlayObjectAnimation, NewAnimToPlay) == 0x000000, "Member 'PsychicAnimObject_C_PlayObjectAnimation::NewAnimToPlay' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_PlayObjectAnimation, Play_rate_in) == 0x000008, "Member 'PsychicAnimObject_C_PlayObjectAnimation::Play_rate_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_PlayObjectAnimation, Loop_in) == 0x00000C, "Member 'PsychicAnimObject_C_PlayObjectAnimation::Loop_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_PlayObjectAnimation, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'PsychicAnimObject_C_PlayObjectAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetAnimObjLocationRotation
// 0x00C0 (0x00C0 - 0x0000)
struct PsychicAnimObject_C_SetAnimObjLocationRotation final
{
public:
	struct FVector                                Location_in;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation_in;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Direct_rot_in;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E87[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetAnimObjLocationRotation) == 0x000004, "Wrong alignment on PsychicAnimObject_C_SetAnimObjLocationRotation");
static_assert(sizeof(PsychicAnimObject_C_SetAnimObjLocationRotation) == 0x0000C0, "Wrong size on PsychicAnimObject_C_SetAnimObjLocationRotation");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, Location_in) == 0x000000, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::Location_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, Rotation_in) == 0x00000C, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::Rotation_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, Direct_rot_in) == 0x000018, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::Direct_rot_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, CallFunc_ComposeRotators_ReturnValue) == 0x00001C, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, CallFunc_SelectRotator_ReturnValue) == 0x000028, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000034, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetAnimObjLocationRotation, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000BC, "Member 'PsychicAnimObject_C_SetAnimObjLocationRotation::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.DetachAttackCombo
// 0x0001 (0x0001 - 0x0000)
struct PsychicAnimObject_C_DetachAttackCombo final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_DetachAttackCombo) == 0x000001, "Wrong alignment on PsychicAnimObject_C_DetachAttackCombo");
static_assert(sizeof(PsychicAnimObject_C_DetachAttackCombo) == 0x000001, "Wrong size on PsychicAnimObject_C_DetachAttackCombo");
static_assert(offsetof(PsychicAnimObject_C_DetachAttackCombo, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PsychicAnimObject_C_DetachAttackCombo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetCheckTimeDilation
// 0x0001 (0x0001 - 0x0000)
struct PsychicAnimObject_C_SetCheckTimeDilation final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetCheckTimeDilation) == 0x000001, "Wrong alignment on PsychicAnimObject_C_SetCheckTimeDilation");
static_assert(sizeof(PsychicAnimObject_C_SetCheckTimeDilation) == 0x000001, "Wrong size on PsychicAnimObject_C_SetCheckTimeDilation");
static_assert(offsetof(PsychicAnimObject_C_SetCheckTimeDilation, Flag_in) == 0x000000, "Member 'PsychicAnimObject_C_SetCheckTimeDilation::Flag_in' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.UpdateCheckTimeDilation
// 0x0038 (0x0038 - 0x0000)
struct PsychicAnimObject_C_UpdateCheckTimeDilation final
{
public:
	class ARsBattleHero_C*                        L_owner;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PsychicObjectBasic_C*               L_obj;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E88[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARsBattleHero_C*                        K2Node_DynamicCast_AsRs_Battle_Hero;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_UpdateCheckTimeDilation) == 0x000008, "Wrong alignment on PsychicAnimObject_C_UpdateCheckTimeDilation");
static_assert(sizeof(PsychicAnimObject_C_UpdateCheckTimeDilation) == 0x000038, "Wrong size on PsychicAnimObject_C_UpdateCheckTimeDilation");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, L_owner) == 0x000000, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::L_owner' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, L_obj) == 0x000008, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::L_obj' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_GetMainPlayer_Player) == 0x000020, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, K2Node_DynamicCast_AsRs_Battle_Hero) == 0x000028, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::K2Node_DynamicCast_AsRs_Battle_Hero' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateCheckTimeDilation, CallFunc_IsPlaying_ReturnValue) == 0x000033, "Member 'PsychicAnimObject_C_UpdateCheckTimeDilation::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetMeshTickEnable
// 0x0020 (0x0020 - 0x0000)
struct PsychicAnimObject_C_SetMeshTickEnable final
{
public:
	bool                                          Flag_in;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E89[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Ref_name_in;                                       // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E8A[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_SetMeshTickEnable) == 0x000004, "Wrong alignment on PsychicAnimObject_C_SetMeshTickEnable");
static_assert(sizeof(PsychicAnimObject_C_SetMeshTickEnable) == 0x000020, "Wrong size on PsychicAnimObject_C_SetMeshTickEnable");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, Flag_in) == 0x000000, "Member 'PsychicAnimObject_C_SetMeshTickEnable::Flag_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, Ref_name_in) == 0x000004, "Member 'PsychicAnimObject_C_SetMeshTickEnable::Ref_name_in' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_Array_RemoveItem_ReturnValue) == 0x000010, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_SetMeshTickEnable, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'PsychicAnimObject_C_SetMeshTickEnable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.UpdateAnimationTick
// 0x00B4 (0x00B4 - 0x0000)
struct PsychicAnimObject_C_UpdateAnimationTick final
{
public:
	struct FVector                                CallFunc_GetSocketLocation_location;               // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCalcSocketRotation_roation;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E8B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_UpdateAnimationTick) == 0x000004, "Wrong alignment on PsychicAnimObject_C_UpdateAnimationTick");
static_assert(sizeof(PsychicAnimObject_C_UpdateAnimationTick) == 0x0000B4, "Wrong size on PsychicAnimObject_C_UpdateAnimationTick");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_GetSocketLocation_location) == 0x000000, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_GetSocketLocation_location' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_GetCalcSocketRotation_roation) == 0x00000C, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_GetCalcSocketRotation_roation' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_ComposeRotators_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000028, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000B0, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_UpdateAnimationTick, CallFunc_IsPlaying_ReturnValue) == 0x0000B1, "Member 'PsychicAnimObject_C_UpdateAnimationTick::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.GetSocketLocation
// 0x0018 (0x0018 - 0x0000)
struct PsychicAnimObject_C_GetSocketLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicAnimObject_C_GetSocketLocation) == 0x000004, "Wrong alignment on PsychicAnimObject_C_GetSocketLocation");
static_assert(sizeof(PsychicAnimObject_C_GetSocketLocation) == 0x000018, "Wrong size on PsychicAnimObject_C_GetSocketLocation");
static_assert(offsetof(PsychicAnimObject_C_GetSocketLocation, Location) == 0x000000, "Member 'PsychicAnimObject_C_GetSocketLocation::Location' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetSocketLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'PsychicAnimObject_C_GetSocketLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.GetSocketRotation
// 0x0018 (0x0018 - 0x0000)
struct PsychicAnimObject_C_GetSocketRotation final
{
public:
	struct FRotator                               Roation;                                           // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_GetSocketRotation) == 0x000004, "Wrong alignment on PsychicAnimObject_C_GetSocketRotation");
static_assert(sizeof(PsychicAnimObject_C_GetSocketRotation) == 0x000018, "Wrong size on PsychicAnimObject_C_GetSocketRotation");
static_assert(offsetof(PsychicAnimObject_C_GetSocketRotation, Roation) == 0x000000, "Member 'PsychicAnimObject_C_GetSocketRotation::Roation' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetSocketRotation, CallFunc_GetSocketRotation_ReturnValue) == 0x00000C, "Member 'PsychicAnimObject_C_GetSocketRotation::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.GetCalcSocketRotation
// 0x0048 (0x0048 - 0x0000)
struct PsychicAnimObject_C_GetCalcSocketRotation final
{
public:
	struct FRotator                               Roation;                                           // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PsychicAnimObject_C_GetCalcSocketRotation) == 0x000004, "Wrong alignment on PsychicAnimObject_C_GetCalcSocketRotation");
static_assert(sizeof(PsychicAnimObject_C_GetCalcSocketRotation) == 0x000048, "Wrong size on PsychicAnimObject_C_GetCalcSocketRotation");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, Roation) == 0x000000, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::Roation' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, CallFunc_GetSocketRotation_ReturnValue) == 0x00000C, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, CallFunc_GetUpVector_ReturnValue) == 0x000018, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, CallFunc_GetRightVector_ReturnValue) == 0x000024, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PsychicAnimObject_C_GetCalcSocketRotation, CallFunc_MakeRotFromXZ_ReturnValue) == 0x00003C, "Member 'PsychicAnimObject_C_GetCalcSocketRotation::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");

// Function PsychicAnimObject.PsychicAnimObject_C.SetAttachMesh
// 0x0008 (0x0008 - 0x0000)
struct PsychicAnimObject_C_SetAttachMesh final
{
public:
	class UMeshComponent*                         Mesh_comp_in;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PsychicAnimObject_C_SetAttachMesh) == 0x000008, "Wrong alignment on PsychicAnimObject_C_SetAttachMesh");
static_assert(sizeof(PsychicAnimObject_C_SetAttachMesh) == 0x000008, "Wrong size on PsychicAnimObject_C_SetAttachMesh");
static_assert(offsetof(PsychicAnimObject_C_SetAttachMesh, Mesh_comp_in) == 0x000000, "Member 'PsychicAnimObject_C_SetAttachMesh::Mesh_comp_in' has a wrong offset!");

}

