#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ENPC_BarrierBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ENPC_BarrierBase.BP_ENPC_BarrierBase_C
// 0x0070 (0x02A0 - 0x0230)
class ABP_ENPC_BarrierBase_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCharactersParameterComponent*          CharactersParameter;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageCalcComponent*                   DamageCalc;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      BarrierCollision;                                  // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitBitComponent*                       HitBit;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitCheckReceiverComponent*             HitCheckReceiver;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTeamComponent*                         Team;                                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        BarrierHitEffect;                                  // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        TornadoEffect;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        BarrierBreakEffect;                                // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E43[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwnerActor;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentBarrierHp;                                  // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ENPC_BarrierBase(int32 EntryPoint);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void BndEvt__HitCheckReceiver_K2Node_ComponentBoundEvent_0_HitResultDelegate__DelegateSignature(const struct FHCHitResult& Result);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void SetBarrierHp(int32 SetHp);
	void GetBarrierHp(int32* CurrentHp);
	void SetActive(bool Active);
	void SetCollisionRadius(float Radius);
	void GetActive(bool* bActive);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ENPC_BarrierBase_C">();
	}
	static class ABP_ENPC_BarrierBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ENPC_BarrierBase_C>();
	}
};
static_assert(alignof(ABP_ENPC_BarrierBase_C) == 0x000008, "Wrong alignment on ABP_ENPC_BarrierBase_C");
static_assert(sizeof(ABP_ENPC_BarrierBase_C) == 0x0002A0, "Wrong size on ABP_ENPC_BarrierBase_C");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, UberGraphFrame) == 0x000230, "Member 'ABP_ENPC_BarrierBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, CharactersParameter) == 0x000238, "Member 'ABP_ENPC_BarrierBase_C::CharactersParameter' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, DamageCalc) == 0x000240, "Member 'ABP_ENPC_BarrierBase_C::DamageCalc' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, BarrierCollision) == 0x000248, "Member 'ABP_ENPC_BarrierBase_C::BarrierCollision' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, HitBit) == 0x000250, "Member 'ABP_ENPC_BarrierBase_C::HitBit' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, HitCheckReceiver) == 0x000258, "Member 'ABP_ENPC_BarrierBase_C::HitCheckReceiver' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, Team) == 0x000260, "Member 'ABP_ENPC_BarrierBase_C::Team' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, DefaultSceneRoot) == 0x000268, "Member 'ABP_ENPC_BarrierBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, BarrierHitEffect) == 0x000270, "Member 'ABP_ENPC_BarrierBase_C::BarrierHitEffect' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, TornadoEffect) == 0x000278, "Member 'ABP_ENPC_BarrierBase_C::TornadoEffect' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, BarrierBreakEffect) == 0x000280, "Member 'ABP_ENPC_BarrierBase_C::BarrierBreakEffect' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, IsActive) == 0x000288, "Member 'ABP_ENPC_BarrierBase_C::IsActive' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, OwnerActor) == 0x000290, "Member 'ABP_ENPC_BarrierBase_C::OwnerActor' has a wrong offset!");
static_assert(offsetof(ABP_ENPC_BarrierBase_C, CurrentBarrierHp) == 0x000298, "Member 'ABP_ENPC_BarrierBase_C::CurrentBarrierHp' has a wrong offset!");

}

