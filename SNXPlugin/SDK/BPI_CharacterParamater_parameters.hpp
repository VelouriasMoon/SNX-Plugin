#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_CharacterParamater

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusAny
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusAny final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusAny) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusAny");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusAny) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusAny");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusAny, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusAny::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.SetHp
// 0x0008 (0x0008 - 0x0000)
struct BPI_CharacterParamater_C_SetHp final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDummy;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_SetHp) == 0x000004, "Wrong alignment on BPI_CharacterParamater_C_SetHp");
static_assert(sizeof(BPI_CharacterParamater_C_SetHp) == 0x000008, "Wrong size on BPI_CharacterParamater_C_SetHp");
static_assert(offsetof(BPI_CharacterParamater_C_SetHp, HP) == 0x000000, "Member 'BPI_CharacterParamater_C_SetHp::HP' has a wrong offset!");
static_assert(offsetof(BPI_CharacterParamater_C_SetHp, bDummy) == 0x000004, "Member 'BPI_CharacterParamater_C_SetHp::bDummy' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsDead final
{
public:
	bool                                          bDead;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsDead) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsDead");
static_assert(sizeof(BPI_CharacterParamater_C_IsDead) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsDead");
static_assert(offsetof(BPI_CharacterParamater_C_IsDead, bDead) == 0x000000, "Member 'BPI_CharacterParamater_C_IsDead::bDead' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusFrame
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusFrame final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusFrame) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusFrame");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusFrame) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusFrame");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusFrame, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusFrame::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusElectric
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusElectric final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusElectric) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusElectric");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusElectric) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusElectric");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusElectric, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusElectric::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusFlooded
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusFlooded final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusFlooded) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusFlooded");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusFlooded) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusFlooded");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusFlooded, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusFlooded::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusOil
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusOil final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusOil) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusOil");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusOil) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusOil");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusOil, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusOil::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.IsBadStatusConfusion
// 0x0001 (0x0001 - 0x0000)
struct BPI_CharacterParamater_C_IsBadStatusConfusion final
{
public:
	bool                                          bBadStatus;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_CharacterParamater_C_IsBadStatusConfusion) == 0x000001, "Wrong alignment on BPI_CharacterParamater_C_IsBadStatusConfusion");
static_assert(sizeof(BPI_CharacterParamater_C_IsBadStatusConfusion) == 0x000001, "Wrong size on BPI_CharacterParamater_C_IsBadStatusConfusion");
static_assert(offsetof(BPI_CharacterParamater_C_IsBadStatusConfusion, bBadStatus) == 0x000000, "Member 'BPI_CharacterParamater_C_IsBadStatusConfusion::bBadStatus' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetHp
// 0x0004 (0x0004 - 0x0000)
struct BPI_CharacterParamater_C_GetHp final
{
public:
	int32                                         HP;                                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CharacterParamater_C_GetHp) == 0x000004, "Wrong alignment on BPI_CharacterParamater_C_GetHp");
static_assert(sizeof(BPI_CharacterParamater_C_GetHp) == 0x000004, "Wrong size on BPI_CharacterParamater_C_GetHp");
static_assert(offsetof(BPI_CharacterParamater_C_GetHp, HP) == 0x000000, "Member 'BPI_CharacterParamater_C_GetHp::HP' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetMaxHp
// 0x0004 (0x0004 - 0x0000)
struct BPI_CharacterParamater_C_GetMaxHp final
{
public:
	int32                                         MaxHp;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CharacterParamater_C_GetMaxHp) == 0x000004, "Wrong alignment on BPI_CharacterParamater_C_GetMaxHp");
static_assert(sizeof(BPI_CharacterParamater_C_GetMaxHp) == 0x000004, "Wrong size on BPI_CharacterParamater_C_GetMaxHp");
static_assert(offsetof(BPI_CharacterParamater_C_GetMaxHp, MaxHp) == 0x000000, "Member 'BPI_CharacterParamater_C_GetMaxHp::MaxHp' has a wrong offset!");

// Function BPI_CharacterParamater.BPI_CharacterParamater_C.GetHPPercent
// 0x0004 (0x0004 - 0x0000)
struct BPI_CharacterParamater_C_GetHPPercent final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_CharacterParamater_C_GetHPPercent) == 0x000004, "Wrong alignment on BPI_CharacterParamater_C_GetHPPercent");
static_assert(sizeof(BPI_CharacterParamater_C_GetHPPercent) == 0x000004, "Wrong size on BPI_CharacterParamater_C_GetHPPercent");
static_assert(offsetof(BPI_CharacterParamater_C_GetHPPercent, Percent) == 0x000000, "Member 'BPI_CharacterParamater_C_GetHPPercent::Percent' has a wrong offset!");

}

