#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyChangeTimeDilationComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnemyChangeTimeDilationComponent.BP_EnemyChangeTimeDilationComponent_C
// 0x0030 (0x00F0 - 0x00C0)
class UBP_EnemyChangeTimeDilationComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         LearpTime;                                         // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   EaseFunc;                                          // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5801[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EaseBlendExp;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Steps;                                             // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bChangeTime;                                       // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5802[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      PlayAnim;                                          // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTimeDilation;                               // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EnemyChangeTimeDilationComponent(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void Start(float Param_LearpTime, EEasingFunc Param_EaseFunc, float Param_EaseBlendExp, int32 Param_Steps, class UAnimSequenceBase* Animation);
	void Update(float DeltaSec);
	void IsPlayerAccelerating(bool* bAccelerating);
	void End();
	void IsChangeTimeDilation(bool* bChange);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnemyChangeTimeDilationComponent_C">();
	}
	static class UBP_EnemyChangeTimeDilationComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EnemyChangeTimeDilationComponent_C>();
	}
};
static_assert(alignof(UBP_EnemyChangeTimeDilationComponent_C) == 0x000008, "Wrong alignment on UBP_EnemyChangeTimeDilationComponent_C");
static_assert(sizeof(UBP_EnemyChangeTimeDilationComponent_C) == 0x0000F0, "Wrong size on UBP_EnemyChangeTimeDilationComponent_C");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, UberGraphFrame) == 0x0000C0, "Member 'UBP_EnemyChangeTimeDilationComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, LearpTime) == 0x0000C8, "Member 'UBP_EnemyChangeTimeDilationComponent_C::LearpTime' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, EaseFunc) == 0x0000CC, "Member 'UBP_EnemyChangeTimeDilationComponent_C::EaseFunc' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, EaseBlendExp) == 0x0000D0, "Member 'UBP_EnemyChangeTimeDilationComponent_C::EaseBlendExp' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, Steps) == 0x0000D4, "Member 'UBP_EnemyChangeTimeDilationComponent_C::Steps' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, CurrentTime) == 0x0000D8, "Member 'UBP_EnemyChangeTimeDilationComponent_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, bChangeTime) == 0x0000DC, "Member 'UBP_EnemyChangeTimeDilationComponent_C::bChangeTime' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, PlayAnim) == 0x0000E0, "Member 'UBP_EnemyChangeTimeDilationComponent_C::PlayAnim' has a wrong offset!");
static_assert(offsetof(UBP_EnemyChangeTimeDilationComponent_C, CurrentTimeDilation) == 0x0000E8, "Member 'UBP_EnemyChangeTimeDilationComponent_C::CurrentTimeDilation' has a wrong offset!");

}

