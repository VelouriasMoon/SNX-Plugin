#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PostProcessOverrayBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PostProcessOverrayBase.BP_PostProcessOverrayBase_C
// 0x0050 (0x0280 - 0x0230)
class ABP_PostProcessOverrayBase_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Cube;                                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SmoothRadius;                                      // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Radius;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          UseOverray;                                        // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E3A[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessOverraySystem_C*         OverraySystem;                                     // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRange;                                          // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E3B[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PostProcessOverrayVolume_C*         Volume;                                            // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PostProcessOverrayBase(int32 EntryPoint);
	void GetSystem();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	void BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__SmoothRadius_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void AddSystem();
	void RemoveSystem();
	void CalcRate(const struct FVector& CameraVector, const struct FRotator& CameraRotation, float* Rate);
	void CalcLengthRate(const struct FVector& CameraLocation, const struct FRotator& CameraRotation, float* Rate);
	void CalcRotationRate(const struct FVector& CameraLocation, const struct FRotator& CameraRotation, float* Rate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PostProcessOverrayBase_C">();
	}
	static class ABP_PostProcessOverrayBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PostProcessOverrayBase_C>();
	}
};
static_assert(alignof(ABP_PostProcessOverrayBase_C) == 0x000008, "Wrong alignment on ABP_PostProcessOverrayBase_C");
static_assert(sizeof(ABP_PostProcessOverrayBase_C) == 0x000280, "Wrong size on ABP_PostProcessOverrayBase_C");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, UberGraphFrame) == 0x000230, "Member 'ABP_PostProcessOverrayBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, Cube) == 0x000238, "Member 'ABP_PostProcessOverrayBase_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, Arrow) == 0x000240, "Member 'ABP_PostProcessOverrayBase_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, SmoothRadius) == 0x000248, "Member 'ABP_PostProcessOverrayBase_C::SmoothRadius' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, Radius) == 0x000250, "Member 'ABP_PostProcessOverrayBase_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, DefaultSceneRoot) == 0x000258, "Member 'ABP_PostProcessOverrayBase_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, UseOverray) == 0x000260, "Member 'ABP_PostProcessOverrayBase_C::UseOverray' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, OverraySystem) == 0x000268, "Member 'ABP_PostProcessOverrayBase_C::OverraySystem' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, UseRange) == 0x000270, "Member 'ABP_PostProcessOverrayBase_C::UseRange' has a wrong offset!");
static_assert(offsetof(ABP_PostProcessOverrayBase_C, Volume) == 0x000278, "Member 'ABP_PostProcessOverrayBase_C::Volume' has a wrong offset!");

}

