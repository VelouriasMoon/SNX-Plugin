#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_HologramCh0200

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_HologramCh0200.ABP_HologramCh0200_C.ExecuteUbergraph_ABP_HologramCh0200
// 0x0030 (0x0030 - 0x0000)
struct ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9835[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_PlayerHologramInterface_C> K2Node_DynamicCast_AsBPI_Player_Hologram_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HologramWeaponEmissive_bDummy;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200) == 0x000008, "Wrong alignment on ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200");
static_assert(sizeof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200) == 0x000030, "Wrong size on ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, EntryPoint) == 0x000000, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, CallFunc_GetOwningActor_ReturnValue) == 0x000010, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, K2Node_DynamicCast_AsBPI_Player_Hologram_Interface) == 0x000018, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::K2Node_DynamicCast_AsBPI_Player_Hologram_Interface' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200, CallFunc_HologramWeaponEmissive_bDummy) == 0x000029, "Member 'ABP_HologramCh0200_C_ExecuteUbergraph_ABP_HologramCh0200::CallFunc_HologramWeaponEmissive_bDummy' has a wrong offset!");

// Function ABP_HologramCh0200.ABP_HologramCh0200_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_HologramCh0200_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_HologramCh0200_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_HologramCh0200_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_HologramCh0200_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_HologramCh0200_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_HologramCh0200_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_HologramCh0200_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_HologramCh0200.ABP_HologramCh0200_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_HologramCh0200_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_HologramCh0200_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_HologramCh0200_C_AnimGraph");
static_assert(sizeof(ABP_HologramCh0200_C_AnimGraph) == 0x000010, "Wrong size on ABP_HologramCh0200_C_AnimGraph");
static_assert(offsetof(ABP_HologramCh0200_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_HologramCh0200_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

