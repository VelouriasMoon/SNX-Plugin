#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelCommandComponent

#include "Basic.hpp"

#include "BP_LevelCommandComponent_classes.hpp"
#include "BP_LevelCommandComponent_parameters.hpp"


namespace SDK
{

// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.ExecuteUbergraph_BP_LevelCommandComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::ExecuteUbergraph_BP_LevelCommandComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "ExecuteUbergraph_BP_LevelCommandComponent");

	Params::BP_LevelCommandComponent_C_ExecuteUbergraph_BP_LevelCommandComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UBP_LevelCommandComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandLoadAreaAsync
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandLoadAreaAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandLoadAreaAsync");

	Params::BP_LevelCommandComponent_C_CommandLoadAreaAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandSetAreaVisible
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Async                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelCommandComponent_C::CommandSetAreaVisible(const struct FS_LevelManagerCommand& Command, bool Async)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandSetAreaVisible");

	Params::BP_LevelCommandComponent_C_CommandSetAreaVisible Parms{};

	Parms.Command = std::move(Command);
	Parms.Async = Async;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.FullPathToLevelName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FullPath                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LevelName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::FullPathToLevelName(class FName FullPath, class FName* LevelName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "FullPathToLevelName");

	Params::BP_LevelCommandComponent_C_FullPathToLevelName Parms{};

	Parms.FullPath = FullPath;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelName != nullptr)
		*LevelName = Parms.LevelName;
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.__CommandSetAreaOnlyVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Async                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelCommandComponent_C::__CommandSetAreaOnlyVisible(const struct FS_LevelManagerCommand& Command, bool Async)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "__CommandSetAreaOnlyVisible");

	Params::BP_LevelCommandComponent_C___CommandSetAreaOnlyVisible Parms{};

	Parms.Command = std::move(Command);
	Parms.Async = Async;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandUnloadAreaAsync
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandUnloadAreaAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandUnloadAreaAsync");

	Params::BP_LevelCommandComponent_C_CommandUnloadAreaAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitLoadAreaWait
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitLoadAreaWait(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitLoadAreaWait");

	Params::BP_LevelCommandComponent_C_CommandWaitLoadAreaWait Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C._CommandWaitUnloadAreaWait
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::_CommandWaitUnloadAreaWait(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "_CommandWaitUnloadAreaWait");

	Params::BP_LevelCommandComponent_C__CommandWaitUnloadAreaWait Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandChangeArea
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandChangeArea(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandChangeArea");

	Params::BP_LevelCommandComponent_C_CommandChangeArea Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.IsAreaLevelLoaded
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoaded                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsError                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelCommandComponent_C::IsAreaLevelLoaded(class FName Area, bool* IsLoaded, bool* IsError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "IsAreaLevelLoaded");

	Params::BP_LevelCommandComponent_C_IsAreaLevelLoaded Parms{};

	Parms.Area = Area;

	UObject::ProcessEvent(Func, &Parms);

	if (IsLoaded != nullptr)
		*IsLoaded = Parms.IsLoaded;

	if (IsError != nullptr)
		*IsError = Parms.IsError;
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.LoadLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::LoadLevel(class FName Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "LoadLevel");

	Params::BP_LevelCommandComponent_C_LoadLevel Parms{};

	Parms.Param_Name = Param_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C._CommandWaitLoadAreaAsync
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::_CommandWaitLoadAreaAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "_CommandWaitLoadAreaAsync");

	Params::BP_LevelCommandComponent_C__CommandWaitLoadAreaAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C._CommandWaitUnloadAreaAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::_CommandWaitUnloadAreaAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "_CommandWaitUnloadAreaAsync");

	Params::BP_LevelCommandComponent_C__CommandWaitUnloadAreaAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitAreaVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitAreaVisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitAreaVisible");

	Params::BP_LevelCommandComponent_C_CommandWaitAreaVisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitAreaUnvisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitAreaUnvisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitAreaUnvisible");

	Params::BP_LevelCommandComponent_C_CommandWaitAreaUnvisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C._CommandCancelLoadAreaAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::_CommandCancelLoadAreaAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "_CommandCancelLoadAreaAsync");

	Params::BP_LevelCommandComponent_C__CommandCancelLoadAreaAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandLoadAssetPackAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandLoadAssetPackAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandLoadAssetPackAsync");

	Params::BP_LevelCommandComponent_C_CommandLoadAssetPackAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandLoadAssetAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandLoadAssetAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandLoadAssetAsync");

	Params::BP_LevelCommandComponent_C_CommandLoadAssetAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandSetLevelVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandSetLevelVisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandSetLevelVisible");

	Params::BP_LevelCommandComponent_C_CommandSetLevelVisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitLevelVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitLevelVisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitLevelVisible");

	Params::BP_LevelCommandComponent_C_CommandWaitLevelVisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandLoadLevelAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandLoadLevelAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandLoadLevelAsync");

	Params::BP_LevelCommandComponent_C_CommandLoadLevelAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandUnloadLevelAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandUnloadLevelAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandUnloadLevelAsync");

	Params::BP_LevelCommandComponent_C_CommandUnloadLevelAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitLoadLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitLoadLevel(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitLoadLevel");

	Params::BP_LevelCommandComponent_C_CommandWaitLoadLevel Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitUnloadLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitUnloadLevel(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitUnloadLevel");

	Params::BP_LevelCommandComponent_C_CommandWaitUnloadLevel Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandSetLevelUnvisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandSetLevelUnvisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandSetLevelUnvisible");

	Params::BP_LevelCommandComponent_C_CommandSetLevelUnvisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C._CommandWaitAreaPreloadVisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::_CommandWaitAreaPreloadVisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "_CommandWaitAreaPreloadVisible");

	Params::BP_LevelCommandComponent_C__CommandWaitAreaPreloadVisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandUnloadAssetAsync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandUnloadAssetAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandUnloadAssetAsync");

	Params::BP_LevelCommandComponent_C_CommandUnloadAssetAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitLevelUnvisible
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitLevelUnvisible(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitLevelUnvisible");

	Params::BP_LevelCommandComponent_C_CommandWaitLevelUnvisible Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.DestroyLevelSpawnedNpc
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           Level                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::DestroyLevelSpawnedNpc(const TSoftObjectPtr<class UObject>& Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "DestroyLevelSpawnedNpc");

	Params::BP_LevelCommandComponent_C_DestroyLevelSpawnedNpc Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.SetVisibleCars
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           Level                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LevelCommandComponent_C::SetVisibleCars(const TSoftObjectPtr<class UObject>& Level, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "SetVisibleCars");

	Params::BP_LevelCommandComponent_C_SetVisibleCars Parms{};

	Parms.Level = Level;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitUnloadAllLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitUnloadAllLevel(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitUnloadAllLevel");

	Params::BP_LevelCommandComponent_C_CommandWaitUnloadAllLevel Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitAnyLoadEnd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitAnyLoadEnd(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitAnyLoadEnd");

	Params::BP_LevelCommandComponent_C_CommandWaitAnyLoadEnd Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandLoadAreaLBPortalAsync
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandLoadAreaLBPortalAsync(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandLoadAreaLBPortalAsync");

	Params::BP_LevelCommandComponent_C_CommandLoadAreaLBPortalAsync Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LevelCommandComponent.BP_LevelCommandComponent_C.CommandWaitLoadAreaLBPortalWait
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_LevelManagerCommand           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_LevelCommandComponent_C::CommandWaitLoadAreaLBPortalWait(const struct FS_LevelManagerCommand& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelCommandComponent_C", "CommandWaitLoadAreaLBPortalWait");

	Params::BP_LevelCommandComponent_C_CommandWaitLoadAreaLBPortalWait Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}

}

