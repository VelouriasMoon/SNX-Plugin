#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_GhostTrail

#include "Basic.hpp"

#include "EBonusGhostType_structs.hpp"


namespace SDK::Params
{

// Function BPI_GhostTrail.BPI_GhostTrail_C.SetGhostActive
// 0x0001 (0x0001 - 0x0000)
struct BPI_GhostTrail_C_SetGhostActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPI_GhostTrail_C_SetGhostActive) == 0x000001, "Wrong alignment on BPI_GhostTrail_C_SetGhostActive");
static_assert(sizeof(BPI_GhostTrail_C_SetGhostActive) == 0x000001, "Wrong size on BPI_GhostTrail_C_SetGhostActive");
static_assert(offsetof(BPI_GhostTrail_C_SetGhostActive, Active) == 0x000000, "Member 'BPI_GhostTrail_C_SetGhostActive::Active' has a wrong offset!");

// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhost
// 0x0004 (0x0004 - 0x0000)
struct BPI_GhostTrail_C_OnBonusGhost final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GhostTrail_C_OnBonusGhost) == 0x000004, "Wrong alignment on BPI_GhostTrail_C_OnBonusGhost");
static_assert(sizeof(BPI_GhostTrail_C_OnBonusGhost) == 0x000004, "Wrong size on BPI_GhostTrail_C_OnBonusGhost");
static_assert(offsetof(BPI_GhostTrail_C_OnBonusGhost, Time) == 0x000000, "Member 'BPI_GhostTrail_C_OnBonusGhost::Time' has a wrong offset!");

// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhostFromDT
// 0x0001 (0x0001 - 0x0000)
struct BPI_GhostTrail_C_OnBonusGhostFromDT final
{
public:
	EBonusGhostType                               Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GhostTrail_C_OnBonusGhostFromDT) == 0x000001, "Wrong alignment on BPI_GhostTrail_C_OnBonusGhostFromDT");
static_assert(sizeof(BPI_GhostTrail_C_OnBonusGhostFromDT) == 0x000001, "Wrong size on BPI_GhostTrail_C_OnBonusGhostFromDT");
static_assert(offsetof(BPI_GhostTrail_C_OnBonusGhostFromDT, Type) == 0x000000, "Member 'BPI_GhostTrail_C_OnBonusGhostFromDT::Type' has a wrong offset!");

// Function BPI_GhostTrail.BPI_GhostTrail_C.OnGhostOneShot
// 0x0004 (0x0004 - 0x0000)
struct BPI_GhostTrail_C_OnGhostOneShot final
{
public:
	float                                         AliveTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GhostTrail_C_OnGhostOneShot) == 0x000004, "Wrong alignment on BPI_GhostTrail_C_OnGhostOneShot");
static_assert(sizeof(BPI_GhostTrail_C_OnGhostOneShot) == 0x000004, "Wrong size on BPI_GhostTrail_C_OnGhostOneShot");
static_assert(offsetof(BPI_GhostTrail_C_OnGhostOneShot, AliveTime) == 0x000000, "Member 'BPI_GhostTrail_C_OnGhostOneShot::AliveTime' has a wrong offset!");

// Function BPI_GhostTrail.BPI_GhostTrail_C.OnBonusGhostOneShot
// 0x0004 (0x0004 - 0x0000)
struct BPI_GhostTrail_C_OnBonusGhostOneShot final
{
public:
	float                                         AliveTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_GhostTrail_C_OnBonusGhostOneShot) == 0x000004, "Wrong alignment on BPI_GhostTrail_C_OnBonusGhostOneShot");
static_assert(sizeof(BPI_GhostTrail_C_OnBonusGhostOneShot) == 0x000004, "Wrong size on BPI_GhostTrail_C_OnBonusGhostOneShot");
static_assert(offsetof(BPI_GhostTrail_C_OnBonusGhostOneShot, AliveTime) == 0x000000, "Member 'BPI_GhostTrail_C_OnBonusGhostOneShot::AliveTime' has a wrong offset!");

}

