#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UseItemComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BattlePrototype_structs.hpp"
#include "EPlayerBattleVoiceType_structs.hpp"


namespace SDK::Params
{

// Function BP_UseItemComponent.BP_UseItemComponent_C.ExecuteUbergraph_BP_UseItemComponent
// 0x0140 (0x0140 - 0x0000)
struct BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89E7[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89E8[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89E9[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89EA[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetDataTableRowFromName_OutRow;           // 0x0058(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89EB[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89EC[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89ED[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89EE[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         K2Node_DynamicCast_AsHUDMain_Game;                 // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89EF[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent");
static_assert(sizeof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent) == 0x000140, "Wrong size on BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, EntryPoint) == 0x000000, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_int_Variable) == 0x000004, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetValidValue_ReturnValue) == 0x00000D, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_int_Variable_1) == 0x000010, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetEnumeratorName_ReturnValue) == 0x000018, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetSubstring_ReturnValue) == 0x000038, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000048, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000054, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000058, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000DC, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000E0, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_int_Loop_Num_Variable) == 0x0000F0, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_bool_Has_Been_Initd_Variable) == 0x0000F4, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000F5, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, K2Node_Event_DeltaSeconds) == 0x0000F8, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetOwner_ReturnValue) == 0x000100, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000108, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, K2Node_DynamicCast_AsRSBattle_Player) == 0x000110, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_GetHUD_ReturnValue) == 0x000120, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, K2Node_DynamicCast_AsHUDMain_Game) == 0x000128, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::K2Node_DynamicCast_AsHUDMain_Game' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000134, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000138, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent, Temp_bool_IsClosed_Variable) == 0x000139, "Member 'BP_UseItemComponent_C_ExecuteUbergraph_BP_UseItemComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_UseItemComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_UseItemComponent_C_ReceiveTick");
static_assert(sizeof(BP_UseItemComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_UseItemComponent_C_ReceiveTick");
static_assert(offsetof(BP_UseItemComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_UseItemComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.ItemApply
// 0x02E0 (0x02E0 - 0x0000)
struct BP_UseItemComponent_C_ItemApply final
{
public:
	bool                                          bRevive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbBadStatus;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F0[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPlayerID>                             LBrainTalkTarget;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          bRecoveryItem;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LRecoveryRate;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbRevive;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F2[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LTarget;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddHp;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89F3[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead;                             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F4[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsDead_self_CastInput_1;                  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_bDead_1;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F5[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBattleVoiceType                        Temp_byte_Variable;                                // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89F6[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_1;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBattleVoiceType                        Temp_byte_Variable_1;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip; // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F7[0x5];                                     // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetPlayerAccessoryExtendParameter_outParameter; // 0x0098(0x0010)(ReferenceParm, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F8[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89F9[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClearGetterManager*                    CallFunc_GetClearGetterManager_ClearGetterManager; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable_2;                      // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89FA[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABattleSimulatorManager*                CallFunc_GetBattleSimulatorManager_BattleSimulatorManager; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89FB[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsMainPlayer_self_CastInput;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMainPlayer_bMainPlayer;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89FC[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89FD[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager;     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_RecoveryAbToPL_ReturnValue;   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_RecoveryHpToPL_ReturnValue;   // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89FE[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsMainPlayer_self_CastInput_1;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMainPlayer_bMainPlayer_1;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89FF[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerInterface_C> CallFunc_IsMainPlayer_self_CastInput_2;            // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMainPlayer_bMainPlayer_2;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A00[0x3];                                     // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBattleVoiceType                        Temp_byte_Variable_2;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerID                                     CallFunc_Array_Get_Item_1;                         // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBattleVoiceType                        Temp_byte_Variable_3;                              // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A01[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_1;             // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_1;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A02[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater;      // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A03[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater_1;    // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusConfusion_bBadStatus;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusOil_bBadStatus;                // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A04[0x5];                                     // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater_2;    // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A05[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> K2Node_DynamicCast_AsBPI_Character_Paramater_3;    // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusFlooded_bBadStatus;            // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusFrame_bBadStatus;              // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A06[0x5];                                     // 0x01CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_IsBadStatusElectric_self_CastInput;       // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBadStatusElectric_bBadStatus;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI_1;                        // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A07[0x5];                                     // 0x01E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput_2;             // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue_2;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A08[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetHPPercent_self_CastInput;              // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHPPercent_Percent;                     // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsControlAI_bAI_2;                        // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_GetDebuggingManager_Manager;              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A09[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABrainTalkManager*                      CallFunc_GetBrainTalkManager_BrainTalkManager_1;   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BrainTalkBt_RecoveryItemZero_ReturnValue; // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A0A[0x6];                                     // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHaveRepairItem_ReturnValue;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A0B[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager_1;   // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CharacterParamater_C> CallFunc_GetMaxHP_self_CastInput;                  // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMaxHP_MaxHP;                           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A0C[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetItemName_name;                         // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemNum_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A0D[0x3];                                     // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetItemVitalityValue_value;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI_3;                        // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A0E[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ARSBattlePlayer_C*>              CallFunc_GetItemTargetList_TargetList;             // 0x02A8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A0F[0x3];                                     // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerBattleVoiceType                        K2Node_Select_Default;                             // 0x02C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A10[0x2];                                     // 0x02C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A11[0x3];                                     // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerBattleVoiceType                        K2Node_Select_Default_1;                           // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_ItemApply) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_ItemApply");
static_assert(sizeof(BP_UseItemComponent_C_ItemApply) == 0x0002E0, "Wrong size on BP_UseItemComponent_C_ItemApply");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, bRevive) == 0x000000, "Member 'BP_UseItemComponent_C_ItemApply::bRevive' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, LbBadStatus) == 0x000001, "Member 'BP_UseItemComponent_C_ItemApply::LbBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, LBrainTalkTarget) == 0x000008, "Member 'BP_UseItemComponent_C_ItemApply::LBrainTalkTarget' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, bRecoveryItem) == 0x000018, "Member 'BP_UseItemComponent_C_ItemApply::bRecoveryItem' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, LRecoveryRate) == 0x00001C, "Member 'BP_UseItemComponent_C_ItemApply::LRecoveryRate' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, LbRevive) == 0x000020, "Member 'BP_UseItemComponent_C_ItemApply::LbRevive' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, LTarget) == 0x000028, "Member 'BP_UseItemComponent_C_ItemApply::LTarget' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, AddHp) == 0x000030, "Member 'BP_UseItemComponent_C_ItemApply::AddHp' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsDead_self_CastInput) == 0x000038, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsDead_bDead) == 0x000048, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsDead_bDead' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsDead_self_CastInput_1) == 0x000050, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsDead_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsDead_bDead_1) == 0x000060, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsDead_bDead_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Num_Variable) == 0x000070, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_byte_Variable) == 0x000075, "Member 'BP_UseItemComponent_C_ItemApply::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Counter_Variable_2) == 0x000084, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Num_Variable_1) == 0x00008C, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Num_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_byte_Variable_1) == 0x000091, "Member 'BP_UseItemComponent_C_ItemApply::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip) == 0x000092, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerAccessoryExtendParameter_bOutEquip' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerAccessoryExtendParameter_outParameter) == 0x000098, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerAccessoryExtendParameter_outParameter' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsControlAI_bAI) == 0x0000AC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000B8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_FMin_ReturnValue) == 0x0000BC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetClearGetterManager_ClearGetterManager) == 0x0000C0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetClearGetterManager_ClearGetterManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Loop_Num_Variable_2) == 0x0000C8, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Loop_Num_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetBattleSimulatorManager_BattleSimulatorManager) == 0x0000D0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetBattleSimulatorManager_BattleSimulatorManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsPlayerStatus_Result) == 0x0000D8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_self_CastInput) == 0x0000E0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_bMainPlayer) == 0x0000F0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_bMainPlayer' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_self_CastInput) == 0x0000F8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_ReturnValue) == 0x000108, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetBrainTalkManager_BrainTalkManager) == 0x000110, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetBrainTalkManager_BrainTalkManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_bool_Variable) == 0x000118, "Member 'BP_UseItemComponent_C_ItemApply::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_BrainTalkBt_RecoveryAbToPL_ReturnValue) == 0x000119, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_BrainTalkBt_RecoveryAbToPL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_BrainTalkBt_RecoveryHpToPL_ReturnValue) == 0x00011A, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_BrainTalkBt_RecoveryHpToPL_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00011B, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_self_CastInput_1) == 0x000120, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_bMainPlayer_1) == 0x000130, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_bMainPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000131, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_BooleanOR_ReturnValue) == 0x000132, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000133, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_self_CastInput_2) == 0x000138, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsMainPlayer_bMainPlayer_2) == 0x000148, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsMainPlayer_bMainPlayer_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_int_Array_Index_Variable_2) == 0x00014C, "Member 'BP_UseItemComponent_C_ItemApply::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_byte_Variable_2) == 0x000150, "Member 'BP_UseItemComponent_C_ItemApply::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Get_Item_1) == 0x000151, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000152, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_byte_Variable_3) == 0x000153, "Member 'BP_UseItemComponent_C_ItemApply::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_self_CastInput_1) == 0x000158, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_ReturnValue_1) == 0x000168, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_AddUnique_ReturnValue) == 0x00016C, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_AsBPI_Character_Paramater) == 0x000170, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_AsBPI_Character_Paramater' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_AsBPI_Character_Paramater_1) == 0x000188, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_AsBPI_Character_Paramater_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusConfusion_bBadStatus) == 0x000199, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusConfusion_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusOil_bBadStatus) == 0x00019A, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusOil_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_AsBPI_Character_Paramater_2) == 0x0001A0, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_AsBPI_Character_Paramater_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_AsBPI_Character_Paramater_3) == 0x0001B8, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_AsBPI_Character_Paramater_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusFlooded_bBadStatus) == 0x0001C9, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusFlooded_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusFrame_bBadStatus) == 0x0001CA, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusFrame_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusElectric_self_CastInput) == 0x0001D0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusElectric_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsBadStatusElectric_bBadStatus) == 0x0001E0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsBadStatusElectric_bBadStatus' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsControlAI_bAI_1) == 0x0001E1, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsControlAI_bAI_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001E2, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_self_CastInput_2) == 0x0001E8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerID_ReturnValue_2) == 0x0001F8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001FC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetHPPercent_self_CastInput) == 0x000200, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetHPPercent_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetHPPercent_Percent) == 0x000210, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetHPPercent_Percent' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Less_FloatFloat_ReturnValue) == 0x000214, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsControlAI_bAI_2) == 0x000215, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsControlAI_bAI_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_bool_Variable_1) == 0x000216, "Member 'BP_UseItemComponent_C_ItemApply::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000217, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetDebuggingManager_Manager) == 0x000218, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetDebuggingManager_Manager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, Temp_bool_True_if_break_was_hit_Variable) == 0x000220, "Member 'BP_UseItemComponent_C_ItemApply::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsValid_ReturnValue) == 0x000221, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Not_PreBool_ReturnValue) == 0x000222, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_BooleanAND_ReturnValue) == 0x000223, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetBrainTalkManager_BrainTalkManager_1) == 0x000228, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetBrainTalkManager_BrainTalkManager_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_BrainTalkBt_RecoveryItemZero_ReturnValue) == 0x000231, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_BrainTalkBt_RecoveryItemZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetUserParamManager_UserParamManager) == 0x000238, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsHaveRepairItem_ReturnValue) == 0x000240, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsHaveRepairItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetUserParamManager_UserParamManager_1) == 0x000248, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetUserParamManager_UserParamManager_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetMaxHP_self_CastInput) == 0x000250, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetMaxHP_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetMaxHP_MaxHP) == 0x000260, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetMaxHP_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000268, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetPlayerManager_PlayerManager) == 0x000270, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetItemName_name) == 0x000278, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetItemName_name' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_AddItemNum_ReturnValue) == 0x000280, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_AddItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetItemVitalityValue_value) == 0x000284, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetItemVitalityValue_value' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000288, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_FMin_ReturnValue_1) == 0x00028C, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000290, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00029C, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_FTrunc_ReturnValue) == 0x0002A0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_IsControlAI_bAI_3) == 0x0002A4, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_IsControlAI_bAI_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_GetItemTargetList_TargetList) == 0x0002A8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_GetItemTargetList_TargetList' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_SwitchEnum_CmpSuccess) == 0x0002B8, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Length_ReturnValue) == 0x0002BC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Length_ReturnValue_1) == 0x0002C0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C4, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_Select_Default) == 0x0002C5, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Length_ReturnValue_2) == 0x0002C8, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Length_ReturnValue_3) == 0x0002CC, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002D0, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, CallFunc_Array_Length_ReturnValue_4) == 0x0002D4, "Member 'BP_UseItemComponent_C_ItemApply::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ItemApply, K2Node_Select_Default_1) == 0x0002D8, "Member 'BP_UseItemComponent_C_ItemApply::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.SetItemID
// 0x0003 (0x0003 - 0x0000)
struct BP_UseItemComponent_C_SetItemID final
{
public:
	EConsumeItemID                                InItemId;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInHelpPlayer;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bInReviveNpc;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_SetItemID) == 0x000001, "Wrong alignment on BP_UseItemComponent_C_SetItemID");
static_assert(sizeof(BP_UseItemComponent_C_SetItemID) == 0x000003, "Wrong size on BP_UseItemComponent_C_SetItemID");
static_assert(offsetof(BP_UseItemComponent_C_SetItemID, InItemId) == 0x000000, "Member 'BP_UseItemComponent_C_SetItemID::InItemId' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetItemID, bInHelpPlayer) == 0x000001, "Member 'BP_UseItemComponent_C_SetItemID::bInHelpPlayer' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetItemID, bInReviveNpc) == 0x000002, "Member 'BP_UseItemComponent_C_SetItemID::bInReviveNpc' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.SpawnItemUseParticle
// 0x0210 (0x0210 - 0x0000)
struct BP_UseItemComponent_C_SpawnItemUseParticle final
{
public:
	bool                                          bAttach;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A12[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SocketName;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRevive;                                           // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A13[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      LTargetPlayer;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        LParticle;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A14[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_25;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_26;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_27;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_28;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_29;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_30;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_31;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_32;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_33;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_34;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_35;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_36;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_37;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_38;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerStatus_Result;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A15[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundAtomCue*                          Temp_object_Variable_39;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable_1;                              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A16[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A17[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_1;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A18[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x01F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_SpawnItemUseParticle) == 0x000010, "Wrong alignment on BP_UseItemComponent_C_SpawnItemUseParticle");
static_assert(sizeof(BP_UseItemComponent_C_SpawnItemUseParticle) == 0x000210, "Wrong size on BP_UseItemComponent_C_SpawnItemUseParticle");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, bAttach) == 0x000000, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::bAttach' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, SocketName) == 0x000004, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::SocketName' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, bRevive) == 0x00000C, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::bRevive' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, LTargetPlayer) == 0x000010, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::LTargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, LParticle) == 0x000018, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::LParticle' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable) == 0x000020, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_1) == 0x000028, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_2) == 0x000030, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_3) == 0x000038, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_4) == 0x000040, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_5) == 0x000048, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_6) == 0x000050, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_7) == 0x000058, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_8) == 0x000060, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_9) == 0x000068, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_10) == 0x000070, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_11) == 0x000078, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_12) == 0x000080, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_13) == 0x000088, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_14) == 0x000090, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_15) == 0x000098, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_16) == 0x0000A0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_17) == 0x0000A8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_byte_Variable) == 0x0000B0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_18) == 0x0000B8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_19) == 0x0000C0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_20) == 0x0000C8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_21) == 0x0000D0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_22) == 0x0000D8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_23) == 0x0000E0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_24) == 0x0000E8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_25) == 0x0000F0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_26) == 0x0000F8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_27) == 0x000100, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_28) == 0x000108, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_29) == 0x000110, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_30) == 0x000118, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_31) == 0x000120, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_32) == 0x000128, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_33) == 0x000130, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_34) == 0x000138, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_35) == 0x000140, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_36) == 0x000148, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_37) == 0x000150, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_38) == 0x000158, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000160, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000161, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_BooleanOR_ReturnValue) == 0x000162, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000163, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_IsPlayerStatus_Result) == 0x000164, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_IsPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_object_Variable_39) == 0x000168, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, Temp_byte_Variable_1) == 0x000170, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000178, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, K2Node_Select_Default) == 0x000180, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, K2Node_Select_Default_1) == 0x000198, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_GetSocketTransform_ReturnValue) == 0x0001A0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_BreakTransform_Location) == 0x0001D0, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_BreakTransform_Rotation) == 0x0001DC, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_BreakTransform_Scale) == 0x0001E8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0001F8, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemUseParticle, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'BP_UseItemComponent_C_SpawnItemUseParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.SpawnItemEffectParticle
// 0x0280 (0x0280 - 0x0000)
struct BP_UseItemComponent_C_SpawnItemEffectParticle final
{
public:
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LbNotAttach;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LbReferrence;                                      // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A19[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LSocketName;                                       // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        LParticle;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_11;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_14;                             // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_15;                             // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_16;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_17;                             // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_18;                             // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_19;                             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_20;                             // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1B[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable_1;                            // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeItemID                                Temp_byte_Variable_1;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1C[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        Temp_object_Variable_19;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_20;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_21;                           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_22;                           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_23;                           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_24;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_25;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_26;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_27;                           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_28;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_29;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_30;                           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_31;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_32;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_33;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_34;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_35;                           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_36;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_37;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Temp_object_Variable_38;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable_2;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_22;                             // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_23;                             // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_24;                             // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_25;                             // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_26;                             // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_27;                             // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_28;                             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_29;                             // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_30;                             // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_31;                             // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_32;                             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_33;                             // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_34;                             // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_35;                             // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_36;                             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_37;                             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_38;                             // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_39;                             // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_40;                             // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_41;                             // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A1D[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          Temp_object_Variable_39;                           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1E[0xC];                                     // 0x01D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A1F[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A20[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default_2;                           // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_3;                           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A21[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        K2Node_Select_Default_4;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable_3;                              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A22[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URSParticleSystemComponentBase*         CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundAtomCue*                          K2Node_Select_Default_5;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_SpawnItemEffectParticle) == 0x000010, "Wrong alignment on BP_UseItemComponent_C_SpawnItemEffectParticle");
static_assert(sizeof(BP_UseItemComponent_C_SpawnItemEffectParticle) == 0x000280, "Wrong size on BP_UseItemComponent_C_SpawnItemEffectParticle");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, TargetMesh) == 0x000000, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, LbNotAttach) == 0x000008, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::LbNotAttach' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, LbReferrence) == 0x000009, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::LbReferrence' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, LSocketName) == 0x00000C, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::LSocketName' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, LParticle) == 0x000018, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::LParticle' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable) == 0x000020, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_1) == 0x000028, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_2) == 0x000030, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_3) == 0x000038, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_4) == 0x000040, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_5) == 0x000048, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_6) == 0x000050, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_7) == 0x000058, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_8) == 0x000060, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_9) == 0x000068, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_10) == 0x000070, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_11) == 0x000078, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_12) == 0x000080, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_13) == 0x000088, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_14) == 0x000090, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_15) == 0x000098, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_16) == 0x0000A0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_17) == 0x0000A8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_18) == 0x0000B0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_byte_Variable) == 0x0000B8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable) == 0x0000B9, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_1) == 0x0000BA, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_2) == 0x0000BB, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_3) == 0x0000BC, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_4) == 0x0000BD, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_5) == 0x0000BE, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_6) == 0x0000BF, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_7) == 0x0000C0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_8) == 0x0000C1, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_9) == 0x0000C2, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_10) == 0x0000C3, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_11) == 0x0000C4, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_12) == 0x0000C5, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_13) == 0x0000C6, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_14) == 0x0000C7, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_15) == 0x0000C8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_16) == 0x0000C9, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_17) == 0x0000CA, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_18) == 0x0000CB, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_19) == 0x0000CC, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_20) == 0x0000CD, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_struct_Variable) == 0x0000D0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_struct_Variable_1) == 0x0000DC, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_byte_Variable_1) == 0x0000E8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_19) == 0x0000F0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_20) == 0x0000F8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_21) == 0x000100, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_22) == 0x000108, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_23) == 0x000110, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_24) == 0x000118, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_25) == 0x000120, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_26) == 0x000128, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_27) == 0x000130, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_28) == 0x000138, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_29) == 0x000140, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_30) == 0x000148, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_31) == 0x000150, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_32) == 0x000158, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_33) == 0x000160, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_34) == 0x000168, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_35) == 0x000170, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_36) == 0x000178, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_37) == 0x000180, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_38) == 0x000188, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_byte_Variable_2) == 0x000190, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_21) == 0x000191, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_22) == 0x000192, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_23) == 0x000193, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_24) == 0x000194, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_25) == 0x000195, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_26) == 0x000196, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_27) == 0x000197, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_28) == 0x000198, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_29) == 0x000199, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_30) == 0x00019A, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_31) == 0x00019B, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_32) == 0x00019C, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_33) == 0x00019D, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_34) == 0x00019E, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_35) == 0x00019F, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_36) == 0x0001A0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_37) == 0x0001A1, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_38) == 0x0001A2, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_39) == 0x0001A3, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_40) == 0x0001A4, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_40' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_bool_Variable_41) == 0x0001A5, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_bool_Variable_41' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_name_Variable) == 0x0001A8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_name_Variable_1) == 0x0001B0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default) == 0x0001B8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_object_Variable_39) == 0x0001C0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001C8, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_GetSocketTransform_ReturnValue) == 0x0001E0, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_BreakTransform_Location) == 0x000210, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_BreakTransform_Rotation) == 0x00021C, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_BreakTransform_Scale) == 0x000228, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000238, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default_1) == 0x000240, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default_2) == 0x000244, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default_3) == 0x000251, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default_4) == 0x000258, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, Temp_byte_Variable_3) == 0x000260, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000268, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, K2Node_Select_Default_5) == 0x000270, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SpawnItemEffectParticle, CallFunc_IsValid_ReturnValue_1) == 0x000278, "Member 'BP_UseItemComponent_C_SpawnItemEffectParticle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemTargetList
// 0x00D0 (0x00D0 - 0x0000)
struct BP_UseItemComponent_C_GetItemTargetList final
{
public:
	TArray<class ARSBattlePlayer_C*>              TargetList;                                        // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               LPlayerList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	TArray<class ARSBattlePlayer_C*>              LTargetList;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A23[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPartyPlayerKind_self_CastInput;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ERSPartyPlayerKind                            CallFunc_GetPartyPlayerKind_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A24[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetRightPlayer_Player;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A25[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      CallFunc_GetLeftPlayer_Player;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARSCharacterBase*>               CallFunc_GetPlayerList_ReturnValue;                // 0x0078(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A26[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A27[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARSBattlePlayer_C*                      K2Node_DynamicCast_AsRSBattle_Player;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A28[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemTargetList) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemTargetList");
static_assert(sizeof(BP_UseItemComponent_C_GetItemTargetList) == 0x0000D0, "Wrong size on BP_UseItemComponent_C_GetItemTargetList");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, TargetList) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemTargetList::TargetList' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, LPlayerList) == 0x000010, "Member 'BP_UseItemComponent_C_GetItemTargetList::LPlayerList' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, LTargetList) == 0x000020, "Member 'BP_UseItemComponent_C_GetItemTargetList::LTargetList' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, Temp_int_Loop_Num_Variable) == 0x000030, "Member 'BP_UseItemComponent_C_GetItemTargetList::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetPartyPlayerKind_self_CastInput) == 0x000038, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetPartyPlayerKind_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetPartyPlayerKind_ReturnValue) == 0x000048, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetPartyPlayerKind_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetRightPlayer_Player) == 0x000050, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetRightPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_UseItemComponent_C_GetItemTargetList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetLeftPlayer_Player) == 0x000060, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetLeftPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Add_ReturnValue_1) == 0x00006C, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetPlayerManager_PlayerManager) == 0x000070, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetPlayerList_ReturnValue) == 0x000078, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetPlayerList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetPlayerManager_PlayerManager_1) == 0x000088, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetPlayerManager_PlayerManager_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_GetMainPlayer_Player) == 0x000090, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_UseItemComponent_C_GetItemTargetList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_UseItemComponent_C_GetItemTargetList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, K2Node_DynamicCast_AsRSBattle_Player) == 0x0000B0, "Member 'BP_UseItemComponent_C_GetItemTargetList::K2Node_DynamicCast_AsRSBattle_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_UseItemComponent_C_GetItemTargetList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Add_ReturnValue_2) == 0x0000BC, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Add_ReturnValue_3) == 0x0000C0, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, CallFunc_Array_Add_ReturnValue_4) == 0x0000C4, "Member 'BP_UseItemComponent_C_GetItemTargetList::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTargetList, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C8, "Member 'BP_UseItemComponent_C_GetItemTargetList::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.NpcItemCancelCheck
// 0x0030 (0x0030 - 0x0000)
struct BP_UseItemComponent_C_NpcItemCancelCheck final
{
public:
	class ARSBattlePlayer_C*                      TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCancel;                                           // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfRecovery_bRecovery;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseItemThink_return;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A29[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARSBattlePlayer_C*                      CallFunc_GetMainPlayer_Player;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                CallFunc_GetUseItemID_ItemID;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelfRecovery_bRecovery_1;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUseItemThink_return_1;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_NpcItemCancelCheck) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_NpcItemCancelCheck");
static_assert(sizeof(BP_UseItemComponent_C_NpcItemCancelCheck) == 0x000030, "Wrong size on BP_UseItemComponent_C_NpcItemCancelCheck");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, TargetPlayer) == 0x000000, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::TargetPlayer' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, bCancel) == 0x000008, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::bCancel' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_IsSelfRecovery_bRecovery) == 0x000009, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_IsSelfRecovery_bRecovery' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_IsUseItemThink_return) == 0x00000A, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_IsUseItemThink_return' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_GetPlayerManager_PlayerManager) == 0x000010, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_GetMainPlayer_Player) == 0x000018, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_GetMainPlayer_Player' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_GetUseItemID_ItemID) == 0x000020, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_GetUseItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, K2Node_SwitchEnum_CmpSuccess_1) == 0x000022, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_IsSelfRecovery_bRecovery_1) == 0x000023, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_IsSelfRecovery_bRecovery_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_IsUseItemThink_return_1) == 0x000024, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_IsUseItemThink_return_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000026, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, K2Node_SwitchEnum_CmpSuccess_2) == 0x000027, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, K2Node_SwitchEnum_CmpSuccess_3) == 0x000028, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_NpcItemCancelCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000029, "Member 'BP_UseItemComponent_C_NpcItemCancelCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemData
// 0x0090 (0x0090 - 0x0000)
struct BP_UseItemComponent_C_GetItemData final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A2A[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          Item_data;                                         // 0x0008(0x0080)(Parm, OutParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemData) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemData");
static_assert(sizeof(BP_UseItemComponent_C_GetItemData) == 0x000090, "Wrong size on BP_UseItemComponent_C_GetItemData");
static_assert(offsetof(BP_UseItemComponent_C_GetItemData, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemData::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemData, bFound) == 0x000001, "Member 'BP_UseItemComponent_C_GetItemData::bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemData, Item_data) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemData::Item_data' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemData, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000088, "Member 'BP_UseItemComponent_C_GetItemData::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00008C, "Member 'BP_UseItemComponent_C_GetItemData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemAttackValue
// 0x0098 (0x0098 - 0x0000)
struct BP_UseItemComponent_C_GetItemAttackValue final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A2B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_bFound;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A2C[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemData_item_data;                    // 0x0010(0x0080)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemAttackValue) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemAttackValue");
static_assert(sizeof(BP_UseItemComponent_C_GetItemAttackValue) == 0x000098, "Wrong size on BP_UseItemComponent_C_GetItemAttackValue");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemAttackValue::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, Value) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemAttackValue::Value' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, LValue) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemAttackValue::LValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, CallFunc_GetItemData_bFound) == 0x00000C, "Member 'BP_UseItemComponent_C_GetItemAttackValue::CallFunc_GetItemData_bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, CallFunc_GetItemData_item_data) == 0x000010, "Member 'BP_UseItemComponent_C_GetItemAttackValue::CallFunc_GetItemData_item_data' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemAttackValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_UseItemComponent_C_GetItemAttackValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemPsychicValue
// 0x0098 (0x0098 - 0x0000)
struct BP_UseItemComponent_C_GetItemPsychicValue final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A2D[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_bFound;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A2E[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemData_item_data;                    // 0x0010(0x0080)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemPsychicValue) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemPsychicValue");
static_assert(sizeof(BP_UseItemComponent_C_GetItemPsychicValue) == 0x000098, "Wrong size on BP_UseItemComponent_C_GetItemPsychicValue");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, Value) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::Value' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, LValue) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::LValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, CallFunc_GetItemData_bFound) == 0x00000C, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::CallFunc_GetItemData_bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, CallFunc_GetItemData_item_data) == 0x000010, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::CallFunc_GetItemData_item_data' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemPsychicValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_UseItemComponent_C_GetItemPsychicValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemVitalityValue
// 0x0098 (0x0098 - 0x0000)
struct BP_UseItemComponent_C_GetItemVitalityValue final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A2F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_bFound;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A30[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemData_item_data;                    // 0x0010(0x0080)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemVitalityValue) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemVitalityValue");
static_assert(sizeof(BP_UseItemComponent_C_GetItemVitalityValue) == 0x000098, "Wrong size on BP_UseItemComponent_C_GetItemVitalityValue");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, Value) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::Value' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, LValue) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::LValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, CallFunc_GetItemData_bFound) == 0x00000C, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::CallFunc_GetItemData_bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, CallFunc_GetItemData_item_data) == 0x000010, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::CallFunc_GetItemData_item_data' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemVitalityValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_UseItemComponent_C_GetItemVitalityValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemDefenceValue
// 0x0098 (0x0098 - 0x0000)
struct BP_UseItemComponent_C_GetItemDefenceValue final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A31[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LValue;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_bFound;                       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A32[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemData_item_data;                    // 0x0010(0x0080)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemDefenceValue) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemDefenceValue");
static_assert(sizeof(BP_UseItemComponent_C_GetItemDefenceValue) == 0x000098, "Wrong size on BP_UseItemComponent_C_GetItemDefenceValue");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, Value) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::Value' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, LValue) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::LValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, CallFunc_GetItemData_bFound) == 0x00000C, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::CallFunc_GetItemData_bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, CallFunc_GetItemData_item_data) == 0x000010, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::CallFunc_GetItemData_item_data' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemDefenceValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_UseItemComponent_C_GetItemDefenceValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemName
// 0x0098 (0x0098 - 0x0000)
struct BP_UseItemComponent_C_GetItemName final
{
public:
	EConsumeItemID                                Item_id_in;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A33[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Param_Name;                                        // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LValue;                                            // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemData_bFound;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A34[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FItemDataCell                          CallFunc_GetItemData_item_data;                    // 0x0018(0x0080)()
};
static_assert(alignof(BP_UseItemComponent_C_GetItemName) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_GetItemName");
static_assert(sizeof(BP_UseItemComponent_C_GetItemName) == 0x000098, "Wrong size on BP_UseItemComponent_C_GetItemName");
static_assert(offsetof(BP_UseItemComponent_C_GetItemName, Item_id_in) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemName::Item_id_in' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemName, Param_Name) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemName::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemName, LValue) == 0x00000C, "Member 'BP_UseItemComponent_C_GetItemName::LValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemName, CallFunc_GetItemData_bFound) == 0x000014, "Member 'BP_UseItemComponent_C_GetItemName::CallFunc_GetItemData_bFound' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemName, CallFunc_GetItemData_item_data) == 0x000018, "Member 'BP_UseItemComponent_C_GetItemName::CallFunc_GetItemData_item_data' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.SetRecastTimer
// 0x0048 (0x0048 - 0x0000)
struct BP_UseItemComponent_C_SetRecastTimer final
{
public:
	float                                         L_recast;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         L_typeNum;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A35[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeItemID_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeItemDataName_ReturnValue;             // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A36[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemTypeNum_itemTypeNum;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A37[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A38[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_SetRecastTimer) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_SetRecastTimer");
static_assert(sizeof(BP_UseItemComponent_C_SetRecastTimer) == 0x000048, "Wrong size on BP_UseItemComponent_C_SetRecastTimer");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, L_recast) == 0x000000, "Member 'BP_UseItemComponent_C_SetRecastTimer::L_recast' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, L_typeNum) == 0x000004, "Member 'BP_UseItemComponent_C_SetRecastTimer::L_typeNum' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_GetUserParamManager_UserParamManager) == 0x000008, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_IsControlAI_bAI) == 0x000014, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_MakeItemID_ReturnValue) == 0x000018, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_MakeItemDataName_ReturnValue) == 0x00001C, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_MakeItemDataName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_GetItemNum_ReturnValue) == 0x000024, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_GetItemTypeNum_itemTypeNum) == 0x000030, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_GetItemTypeNum_itemTypeNum' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000034, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x00003C, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetRecastTimer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000040, "Member 'BP_UseItemComponent_C_SetRecastTimer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.UpdateRecastTimer
// 0x0078 (0x0078 - 0x0000)
struct BP_UseItemComponent_C_UpdateRecastTimer final
{
public:
	bool                                          L_timerEnable;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A39[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeItemID_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A3A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeItemDataName_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A3B[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemTypeNum_itemTypeNum;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserParamManager*                      CallFunc_GetUserParamManager_UserParamManager;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemNum_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame_1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A3E[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameTimer                             CallFunc_Array_Get_Item;                           // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A3F[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRate_ReturnValue;                      // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOver_ReturnValue;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue_1;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A40[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_UpdateRecastTimer) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_UpdateRecastTimer");
static_assert(sizeof(BP_UseItemComponent_C_UpdateRecastTimer) == 0x000078, "Wrong size on BP_UseItemComponent_C_UpdateRecastTimer");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, L_timerEnable) == 0x000000, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::L_timerEnable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, L_index) == 0x000004, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::L_index' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, Temp_int_Loop_Num_Variable) == 0x00000C, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_MakeItemID_ReturnValue) == 0x000018, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_MakeItemID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_MakeItemDataName_ReturnValue) == 0x000020, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_MakeItemDataName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetItemTypeNum_itemTypeNum) == 0x000030, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetItemTypeNum_itemTypeNum' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000038, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetUserParamManager_UserParamManager) == 0x000040, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetUserParamManager_UserParamManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetItemNum_ReturnValue) == 0x000048, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetHUDMainGame_HUDMainGame_1) == 0x000050, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetHUDMainGame_HUDMainGame_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Array_Get_Item) == 0x00005C, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_GetRate_ReturnValue) == 0x00006C, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_GetRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_IsEnable_ReturnValue) == 0x000070, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_IsOver_ReturnValue) == 0x000071, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_IsOver_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_IsEnable_ReturnValue_1) == 0x000072, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_IsEnable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_UpdateRecastTimer, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_UseItemComponent_C_UpdateRecastTimer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.InitRecastTimeParameter
// 0x0060 (0x0060 - 0x0000)
struct BP_UseItemComponent_C_InitRecastTimeParameter final
{
public:
	float                                         L_rate;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A41[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPlayerInterface>      CallFunc_GetPlayerID_self_CastInput;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerID                                     CallFunc_GetPlayerID_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A42[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerManager_C*                    CallFunc_GetPlayerManager_PlayerManager;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLearnedSkillParameter_bLearned;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A43[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLearnedSkillParameter_Parameter;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLearnedSkillParameter_Parameter2;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A44[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A45[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerFixParamater_C*               CallFunc_GetPlayerFixParam_Param;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_InitRecastTimeParameter) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_InitRecastTimeParameter");
static_assert(sizeof(BP_UseItemComponent_C_InitRecastTimeParameter) == 0x000060, "Wrong size on BP_UseItemComponent_C_InitRecastTimeParameter");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, L_rate) == 0x000000, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::L_rate' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetPlayerID_self_CastInput) == 0x000018, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetPlayerID_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetPlayerID_ReturnValue) == 0x000028, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetPlayerID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetPlayerManager_PlayerManager) == 0x000030, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetPlayerManager_PlayerManager' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetLearnedSkillParameter_bLearned) == 0x000039, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetLearnedSkillParameter_bLearned' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetLearnedSkillParameter_Parameter) == 0x00003C, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetLearnedSkillParameter_Parameter' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetLearnedSkillParameter_Parameter2) == 0x000040, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetLearnedSkillParameter_Parameter2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_GetPlayerFixParam_Param) == 0x000050, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_GetPlayerFixParam_Param' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_InitRecastTimeParameter, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_UseItemComponent_C_InitRecastTimeParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.ResetRecastTime
// 0x0028 (0x0028 - 0x0000)
struct BP_UseItemComponent_C_ResetRecastTime final
{
public:
	int32                                         L_index;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Num_Variable;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlAI_bAI;                          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A46[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_ResetRecastTime) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_ResetRecastTime");
static_assert(sizeof(BP_UseItemComponent_C_ResetRecastTime) == 0x000028, "Wrong size on BP_UseItemComponent_C_ResetRecastTime");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, L_index) == 0x000000, "Member 'BP_UseItemComponent_C_ResetRecastTime::L_index' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_UseItemComponent_C_ResetRecastTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, Temp_int_Loop_Num_Variable) == 0x000008, "Member 'BP_UseItemComponent_C_ResetRecastTime::Temp_int_Loop_Num_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_UseItemComponent_C_ResetRecastTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_IsControlAI_bAI) == 0x000010, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_IsControlAI_bAI' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000018, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_ResetRecastTime, CallFunc_IsEnable_ReturnValue) == 0x000024, "Member 'BP_UseItemComponent_C_ResetRecastTime::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemTypeNum
// 0x000C (0x000C - 0x0000)
struct BP_UseItemComponent_C_GetItemTypeNum final
{
public:
	EConsumeItemID                                ItemIdIn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A47[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemTypeNum;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemTypeNum) == 0x000004, "Wrong alignment on BP_UseItemComponent_C_GetItemTypeNum");
static_assert(sizeof(BP_UseItemComponent_C_GetItemTypeNum) == 0x00000C, "Wrong size on BP_UseItemComponent_C_GetItemTypeNum");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTypeNum, ItemIdIn) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemTypeNum::ItemIdIn' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTypeNum, ItemTypeNum) == 0x000004, "Member 'BP_UseItemComponent_C_GetItemTypeNum::ItemTypeNum' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_GetItemTypeNum, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_UseItemComponent_C_GetItemTypeNum::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.SetCurrentItemID
// 0x01A0 (0x01A0 - 0x0000)
struct BP_UseItemComponent_C_SetCurrentItemID final
{
public:
	EConsumeItemID                                L_itemID;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A48[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_currentItemID;                                   // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A49[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_20;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable_1;                              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4A[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4B[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4C[0x1];                                     // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A4D[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A4E[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A4F[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ItemMenuGetCurrentItemID_ItemID;          // 0x0194(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_SetCurrentItemID) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_SetCurrentItemID");
static_assert(sizeof(BP_UseItemComponent_C_SetCurrentItemID) == 0x0001A0, "Wrong size on BP_UseItemComponent_C_SetCurrentItemID");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, L_itemID) == 0x000000, "Member 'BP_UseItemComponent_C_SetCurrentItemID::L_itemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, L_currentItemID) == 0x000004, "Member 'BP_UseItemComponent_C_SetCurrentItemID::L_currentItemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable) == 0x00000C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_1) == 0x000014, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_2) == 0x00001C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_3) == 0x000024, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_4) == 0x00002C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_5) == 0x000034, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_6) == 0x00003C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_7) == 0x000044, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_8) == 0x00004C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_9) == 0x000054, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_10) == 0x00005C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_11) == 0x000064, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_12) == 0x00006C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_13) == 0x000074, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_14) == 0x00007C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_15) == 0x000084, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_16) == 0x00008C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_17) == 0x000094, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_18) == 0x00009C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_19) == 0x0000A4, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_byte_Variable) == 0x0000AC, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_20) == 0x0000B0, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_21) == 0x0000B8, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_22) == 0x0000C0, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_23) == 0x0000C8, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_24) == 0x0000D0, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_25) == 0x0000D8, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_26) == 0x0000E0, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_27) == 0x0000E8, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_28) == 0x0000F0, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_29) == 0x0000F8, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_30) == 0x000100, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_31) == 0x000108, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_32) == 0x000110, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_33) == 0x000118, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_34) == 0x000120, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_35) == 0x000128, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_36) == 0x000130, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_37) == 0x000138, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_38) == 0x000140, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_name_Variable_39) == 0x000148, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_byte_Variable_1) == 0x000150, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_int_Variable) == 0x000154, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, Temp_int_Variable_1) == 0x000158, "Member 'BP_UseItemComponent_C_SetCurrentItemID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_Conv_IntToByte_ReturnValue) == 0x00015C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_GetValidValue_ReturnValue) == 0x000164, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000165, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000166, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000168, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_MakeLiteralInt_ReturnValue) == 0x00016C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, K2Node_Select_Default) == 0x000174, "Member 'BP_UseItemComponent_C_SetCurrentItemID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00017C, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, K2Node_Select_Default_1) == 0x000180, "Member 'BP_UseItemComponent_C_SetCurrentItemID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000188, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000190, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_SetCurrentItemID, CallFunc_ItemMenuGetCurrentItemID_ItemID) == 0x000194, "Member 'BP_UseItemComponent_C_SetCurrentItemID::CallFunc_ItemMenuGetCurrentItemID_ItemID' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.IsRecastItem
// 0x01C0 (0x01C0 - 0x0000)
struct BP_UseItemComponent_C_IsRecastItem final
{
public:
	bool                                          bRecast;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EConsumeItemID                                Param_ItemId;                                      // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A50[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_index;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                L_currentItemID;                                   // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                L_itemID;                                          // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A51[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   L_currentItemIDName;                               // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_find;                                            // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A52[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_19;                             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A53[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_20;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_21;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_22;                             // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_23;                             // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_24;                             // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_25;                             // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_26;                             // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_27;                             // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_28;                             // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_29;                             // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_30;                             // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_31;                             // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_32;                             // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_33;                             // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_34;                             // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_35;                             // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_36;                             // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_37;                             // 0x0144(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_38;                             // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_39;                             // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EConsumeItemID                                Temp_byte_Variable_1;                              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A54[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A55[0x3];                                     // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A56[0x1];                                     // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A57[0x2];                                     // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A58[0x3];                                     // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A59[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUDMainGame_C*                         CallFunc_GetHUDMainGame_HUDMainGame;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A5A[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ItemMenuGetCurrentItemID_ItemID;          // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A5B[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameTimer                             CallFunc_Array_Get_Item;                           // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UseItemComponent_C_IsRecastItem) == 0x000008, "Wrong alignment on BP_UseItemComponent_C_IsRecastItem");
static_assert(sizeof(BP_UseItemComponent_C_IsRecastItem) == 0x0001C0, "Wrong size on BP_UseItemComponent_C_IsRecastItem");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, bRecast) == 0x000000, "Member 'BP_UseItemComponent_C_IsRecastItem::bRecast' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Param_ItemId) == 0x000001, "Member 'BP_UseItemComponent_C_IsRecastItem::Param_ItemId' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, L_index) == 0x000004, "Member 'BP_UseItemComponent_C_IsRecastItem::L_index' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, L_currentItemID) == 0x000008, "Member 'BP_UseItemComponent_C_IsRecastItem::L_currentItemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, L_itemID) == 0x000009, "Member 'BP_UseItemComponent_C_IsRecastItem::L_itemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, L_currentItemIDName) == 0x00000C, "Member 'BP_UseItemComponent_C_IsRecastItem::L_currentItemIDName' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, L_find) == 0x000014, "Member 'BP_UseItemComponent_C_IsRecastItem::L_find' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable) == 0x000018, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_1) == 0x000020, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_2) == 0x000028, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_3) == 0x000030, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_4) == 0x000038, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_5) == 0x000040, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_6) == 0x000048, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_7) == 0x000050, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_8) == 0x000058, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_9) == 0x000060, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_10) == 0x000068, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_11) == 0x000070, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_12) == 0x000078, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_13) == 0x000080, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_14) == 0x000088, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_15) == 0x000090, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_16) == 0x000098, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_17) == 0x0000A0, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_18) == 0x0000A8, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_19) == 0x0000B0, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_byte_Variable) == 0x0000B8, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_20) == 0x0000BC, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_21) == 0x0000C4, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_22) == 0x0000CC, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_23) == 0x0000D4, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_24) == 0x0000DC, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_24' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_25) == 0x0000E4, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_25' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_26) == 0x0000EC, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_26' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_27) == 0x0000F4, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_27' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_28) == 0x0000FC, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_28' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_29) == 0x000104, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_29' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_30) == 0x00010C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_30' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_31) == 0x000114, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_31' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_32) == 0x00011C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_32' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_33) == 0x000124, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_33' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_34) == 0x00012C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_34' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_35) == 0x000134, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_35' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_36) == 0x00013C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_36' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_37) == 0x000144, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_37' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_38) == 0x00014C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_38' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_name_Variable_39) == 0x000154, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_name_Variable_39' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_byte_Variable_1) == 0x00015C, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_int_Variable) == 0x000160, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, Temp_int_Variable_1) == 0x000164, "Member 'BP_UseItemComponent_C_IsRecastItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Conv_IntToByte_ReturnValue) == 0x000168, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_GetValidValue_ReturnValue) == 0x000170, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000171, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000172, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000174, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_MakeLiteralInt_ReturnValue) == 0x000178, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Less_IntInt_ReturnValue) == 0x00017C, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, K2Node_SwitchEnum_CmpSuccess) == 0x00017D, "Member 'BP_UseItemComponent_C_IsRecastItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, K2Node_Select_Default) == 0x000180, "Member 'BP_UseItemComponent_C_IsRecastItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000188, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, K2Node_Select_Default_1) == 0x00018C, "Member 'BP_UseItemComponent_C_IsRecastItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_GetHUDMainGame_HUDMainGame) == 0x000198, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_GetHUDMainGame_HUDMainGame' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0001A0, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_ItemMenuGetCurrentItemID_ItemID) == 0x0001A4, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_ItemMenuGetCurrentItemID_ItemID' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001AC, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_UseItemComponent_C_IsRecastItem, CallFunc_IsEnable_ReturnValue) == 0x0001BC, "Member 'BP_UseItemComponent_C_IsRecastItem::CallFunc_IsEnable_ReturnValue' has a wrong offset!");

// Function BP_UseItemComponent.BP_UseItemComponent_C.GetItemID
// 0x0001 (0x0001 - 0x0000)
struct BP_UseItemComponent_C_GetItemID final
{
public:
	EConsumeItemID                                Item;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UseItemComponent_C_GetItemID) == 0x000001, "Wrong alignment on BP_UseItemComponent_C_GetItemID");
static_assert(sizeof(BP_UseItemComponent_C_GetItemID) == 0x000001, "Wrong size on BP_UseItemComponent_C_GetItemID");
static_assert(offsetof(BP_UseItemComponent_C_GetItemID, Item) == 0x000000, "Member 'BP_UseItemComponent_C_GetItemID::Item' has a wrong offset!");

}

