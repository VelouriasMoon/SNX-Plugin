#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_EnemyAbnormalState

#include "Basic.hpp"

#include "BPFL_EnemyAbnormalState_classes.hpp"
#include "BPFL_EnemyAbnormalState_parameters.hpp"


namespace SDK
{

// Function BPFL_EnemyAbnormalState.BPFL_EnemyAbnormalState_C.SetBadStateMaterial
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEnemyStateDataCell              SetState                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class USkeletalMeshComponent*           Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnemyAbnormalState_C::SetBadStateMaterial(const struct FEnemyStateDataCell& SetState, class USkeletalMeshComponent* Mesh, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnemyAbnormalState_C", "SetBadStateMaterial");

	Params::BPFL_EnemyAbnormalState_C_SetBadStateMaterial Parms{};

	Parms.SetState = std::move(SetState);
	Parms.Mesh = Mesh;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_EnemyAbnormalState.BPFL_EnemyAbnormalState_C.LoadEnemyBadState
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<EHCSkillAttribute, struct FEnemyStateDataCell>RCells                                                 (Parm, OutParm)

void UBPFL_EnemyAbnormalState_C::LoadEnemyBadState(class UObject* __WorldContext, TMap<EHCSkillAttribute, struct FEnemyStateDataCell>* RCells)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnemyAbnormalState_C", "LoadEnemyBadState");

	Params::BPFL_EnemyAbnormalState_C_LoadEnemyBadState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RCells != nullptr)
		*RCells = std::move(Parms.RCells);
}


// Function BPFL_EnemyAbnormalState.BPFL_EnemyAbnormalState_C.BadStateMaterialUseSwitch
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Use                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class USkeletalMeshComponent*           Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_EnemyAbnormalState_C::BadStateMaterialUseSwitch(bool Use, class USkeletalMeshComponent* Mesh, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnemyAbnormalState_C", "BadStateMaterialUseSwitch");

	Params::BPFL_EnemyAbnormalState_C_BadStateMaterialUseSwitch Parms{};

	Parms.Use = Use;
	Parms.Mesh = Mesh;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BPFL_EnemyAbnormalState.BPFL_EnemyAbnormalState_C.UpdateBadStateStart
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UCurveFloat*                      StartCurve                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CurveTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsStarting                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBPFL_EnemyAbnormalState_C::UpdateBadStateStart(class USkeletalMeshComponent* Mesh, class UCurveFloat* StartCurve, float CurveTime, class UObject* __WorldContext, bool* IsStarting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_EnemyAbnormalState_C", "UpdateBadStateStart");

	Params::BPFL_EnemyAbnormalState_C_UpdateBadStateStart Parms{};

	Parms.Mesh = Mesh;
	Parms.StartCurve = StartCurve;
	Parms.CurveTime = CurveTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsStarting != nullptr)
		*IsStarting = Parms.IsStarting;
}

}

